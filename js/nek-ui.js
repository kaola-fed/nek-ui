(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("regularjs"));
	else if(typeof define === 'function' && define.amd)
		define(["Regular"], factory);
	else if(typeof exports === 'object')
		exports["NEKUI"] = factory(require("regularjs"));
	else
		root["NEKUI"] = factory(root["Regular"]);
})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_11__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 251);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var require;//! moment.js

;(function (global, factory) {
     true ? module.exports = factory() :
    typeof define === 'function' && define.amd ? define(factory) :
    global.moment = factory()
}(this, (function () { 'use strict';

    var hookCallback;

    function hooks () {
        return hookCallback.apply(null, arguments);
    }

    // This is done to register the method called with moment()
    // without creating circular dependencies.
    function setHookCallback (callback) {
        hookCallback = callback;
    }

    function isArray(input) {
        return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';
    }

    function isObject(input) {
        // IE8 will treat undefined and null as object if it wasn't for
        // input != null
        return input != null && Object.prototype.toString.call(input) === '[object Object]';
    }

    function isObjectEmpty(obj) {
        if (Object.getOwnPropertyNames) {
            return (Object.getOwnPropertyNames(obj).length === 0);
        } else {
            var k;
            for (k in obj) {
                if (obj.hasOwnProperty(k)) {
                    return false;
                }
            }
            return true;
        }
    }

    function isUndefined(input) {
        return input === void 0;
    }

    function isNumber(input) {
        return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';
    }

    function isDate(input) {
        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';
    }

    function map(arr, fn) {
        var res = [], i;
        for (i = 0; i < arr.length; ++i) {
            res.push(fn(arr[i], i));
        }
        return res;
    }

    function hasOwnProp(a, b) {
        return Object.prototype.hasOwnProperty.call(a, b);
    }

    function extend(a, b) {
        for (var i in b) {
            if (hasOwnProp(b, i)) {
                a[i] = b[i];
            }
        }

        if (hasOwnProp(b, 'toString')) {
            a.toString = b.toString;
        }

        if (hasOwnProp(b, 'valueOf')) {
            a.valueOf = b.valueOf;
        }

        return a;
    }

    function createUTC (input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, true).utc();
    }

    function defaultParsingFlags() {
        // We need to deep clone this object.
        return {
            empty           : false,
            unusedTokens    : [],
            unusedInput     : [],
            overflow        : -2,
            charsLeftOver   : 0,
            nullInput       : false,
            invalidMonth    : null,
            invalidFormat   : false,
            userInvalidated : false,
            iso             : false,
            parsedDateParts : [],
            meridiem        : null,
            rfc2822         : false,
            weekdayMismatch : false
        };
    }

    function getParsingFlags(m) {
        if (m._pf == null) {
            m._pf = defaultParsingFlags();
        }
        return m._pf;
    }

    var some;
    if (Array.prototype.some) {
        some = Array.prototype.some;
    } else {
        some = function (fun) {
            var t = Object(this);
            var len = t.length >>> 0;

            for (var i = 0; i < len; i++) {
                if (i in t && fun.call(this, t[i], i, t)) {
                    return true;
                }
            }

            return false;
        };
    }

    function isValid(m) {
        if (m._isValid == null) {
            var flags = getParsingFlags(m);
            var parsedParts = some.call(flags.parsedDateParts, function (i) {
                return i != null;
            });
            var isNowValid = !isNaN(m._d.getTime()) &&
                flags.overflow < 0 &&
                !flags.empty &&
                !flags.invalidMonth &&
                !flags.invalidWeekday &&
                !flags.weekdayMismatch &&
                !flags.nullInput &&
                !flags.invalidFormat &&
                !flags.userInvalidated &&
                (!flags.meridiem || (flags.meridiem && parsedParts));

            if (m._strict) {
                isNowValid = isNowValid &&
                    flags.charsLeftOver === 0 &&
                    flags.unusedTokens.length === 0 &&
                    flags.bigHour === undefined;
            }

            if (Object.isFrozen == null || !Object.isFrozen(m)) {
                m._isValid = isNowValid;
            }
            else {
                return isNowValid;
            }
        }
        return m._isValid;
    }

    function createInvalid (flags) {
        var m = createUTC(NaN);
        if (flags != null) {
            extend(getParsingFlags(m), flags);
        }
        else {
            getParsingFlags(m).userInvalidated = true;
        }

        return m;
    }

    // Plugins that add properties should also add the key here (null value),
    // so we can properly clone ourselves.
    var momentProperties = hooks.momentProperties = [];

    function copyConfig(to, from) {
        var i, prop, val;

        if (!isUndefined(from._isAMomentObject)) {
            to._isAMomentObject = from._isAMomentObject;
        }
        if (!isUndefined(from._i)) {
            to._i = from._i;
        }
        if (!isUndefined(from._f)) {
            to._f = from._f;
        }
        if (!isUndefined(from._l)) {
            to._l = from._l;
        }
        if (!isUndefined(from._strict)) {
            to._strict = from._strict;
        }
        if (!isUndefined(from._tzm)) {
            to._tzm = from._tzm;
        }
        if (!isUndefined(from._isUTC)) {
            to._isUTC = from._isUTC;
        }
        if (!isUndefined(from._offset)) {
            to._offset = from._offset;
        }
        if (!isUndefined(from._pf)) {
            to._pf = getParsingFlags(from);
        }
        if (!isUndefined(from._locale)) {
            to._locale = from._locale;
        }

        if (momentProperties.length > 0) {
            for (i = 0; i < momentProperties.length; i++) {
                prop = momentProperties[i];
                val = from[prop];
                if (!isUndefined(val)) {
                    to[prop] = val;
                }
            }
        }

        return to;
    }

    var updateInProgress = false;

    // Moment prototype object
    function Moment(config) {
        copyConfig(this, config);
        this._d = new Date(config._d != null ? config._d.getTime() : NaN);
        if (!this.isValid()) {
            this._d = new Date(NaN);
        }
        // Prevent infinite loop in case updateOffset creates new moment
        // objects.
        if (updateInProgress === false) {
            updateInProgress = true;
            hooks.updateOffset(this);
            updateInProgress = false;
        }
    }

    function isMoment (obj) {
        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);
    }

    function absFloor (number) {
        if (number < 0) {
            // -0 -> 0
            return Math.ceil(number) || 0;
        } else {
            return Math.floor(number);
        }
    }

    function toInt(argumentForCoercion) {
        var coercedNumber = +argumentForCoercion,
            value = 0;

        if (coercedNumber !== 0 && isFinite(coercedNumber)) {
            value = absFloor(coercedNumber);
        }

        return value;
    }

    // compare two arrays, return the number of differences
    function compareArrays(array1, array2, dontConvert) {
        var len = Math.min(array1.length, array2.length),
            lengthDiff = Math.abs(array1.length - array2.length),
            diffs = 0,
            i;
        for (i = 0; i < len; i++) {
            if ((dontConvert && array1[i] !== array2[i]) ||
                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {
                diffs++;
            }
        }
        return diffs + lengthDiff;
    }

    function warn(msg) {
        if (hooks.suppressDeprecationWarnings === false &&
                (typeof console !==  'undefined') && console.warn) {
            console.warn('Deprecation warning: ' + msg);
        }
    }

    function deprecate(msg, fn) {
        var firstTime = true;

        return extend(function () {
            if (hooks.deprecationHandler != null) {
                hooks.deprecationHandler(null, msg);
            }
            if (firstTime) {
                var args = [];
                var arg;
                for (var i = 0; i < arguments.length; i++) {
                    arg = '';
                    if (typeof arguments[i] === 'object') {
                        arg += '\n[' + i + '] ';
                        for (var key in arguments[0]) {
                            arg += key + ': ' + arguments[0][key] + ', ';
                        }
                        arg = arg.slice(0, -2); // Remove trailing comma and space
                    } else {
                        arg = arguments[i];
                    }
                    args.push(arg);
                }
                warn(msg + '\nArguments: ' + Array.prototype.slice.call(args).join('') + '\n' + (new Error()).stack);
                firstTime = false;
            }
            return fn.apply(this, arguments);
        }, fn);
    }

    var deprecations = {};

    function deprecateSimple(name, msg) {
        if (hooks.deprecationHandler != null) {
            hooks.deprecationHandler(name, msg);
        }
        if (!deprecations[name]) {
            warn(msg);
            deprecations[name] = true;
        }
    }

    hooks.suppressDeprecationWarnings = false;
    hooks.deprecationHandler = null;

    function isFunction(input) {
        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
    }

    function set (config) {
        var prop, i;
        for (i in config) {
            prop = config[i];
            if (isFunction(prop)) {
                this[i] = prop;
            } else {
                this['_' + i] = prop;
            }
        }
        this._config = config;
        // Lenient ordinal parsing accepts just a number in addition to
        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.
        // TODO: Remove "ordinalParse" fallback in next major release.
        this._dayOfMonthOrdinalParseLenient = new RegExp(
            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +
                '|' + (/\d{1,2}/).source);
    }

    function mergeConfigs(parentConfig, childConfig) {
        var res = extend({}, parentConfig), prop;
        for (prop in childConfig) {
            if (hasOwnProp(childConfig, prop)) {
                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
                    res[prop] = {};
                    extend(res[prop], parentConfig[prop]);
                    extend(res[prop], childConfig[prop]);
                } else if (childConfig[prop] != null) {
                    res[prop] = childConfig[prop];
                } else {
                    delete res[prop];
                }
            }
        }
        for (prop in parentConfig) {
            if (hasOwnProp(parentConfig, prop) &&
                    !hasOwnProp(childConfig, prop) &&
                    isObject(parentConfig[prop])) {
                // make sure changes to properties don't modify parent config
                res[prop] = extend({}, res[prop]);
            }
        }
        return res;
    }

    function Locale(config) {
        if (config != null) {
            this.set(config);
        }
    }

    var keys;

    if (Object.keys) {
        keys = Object.keys;
    } else {
        keys = function (obj) {
            var i, res = [];
            for (i in obj) {
                if (hasOwnProp(obj, i)) {
                    res.push(i);
                }
            }
            return res;
        };
    }

    var defaultCalendar = {
        sameDay : '[Today at] LT',
        nextDay : '[Tomorrow at] LT',
        nextWeek : 'dddd [at] LT',
        lastDay : '[Yesterday at] LT',
        lastWeek : '[Last] dddd [at] LT',
        sameElse : 'L'
    };

    function calendar (key, mom, now) {
        var output = this._calendar[key] || this._calendar['sameElse'];
        return isFunction(output) ? output.call(mom, now) : output;
    }

    var defaultLongDateFormat = {
        LTS  : 'h:mm:ss A',
        LT   : 'h:mm A',
        L    : 'MM/DD/YYYY',
        LL   : 'MMMM D, YYYY',
        LLL  : 'MMMM D, YYYY h:mm A',
        LLLL : 'dddd, MMMM D, YYYY h:mm A'
    };

    function longDateFormat (key) {
        var format = this._longDateFormat[key],
            formatUpper = this._longDateFormat[key.toUpperCase()];

        if (format || !formatUpper) {
            return format;
        }

        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {
            return val.slice(1);
        });

        return this._longDateFormat[key];
    }

    var defaultInvalidDate = 'Invalid date';

    function invalidDate () {
        return this._invalidDate;
    }

    var defaultOrdinal = '%d';
    var defaultDayOfMonthOrdinalParse = /\d{1,2}/;

    function ordinal (number) {
        return this._ordinal.replace('%d', number);
    }

    var defaultRelativeTime = {
        future : 'in %s',
        past   : '%s ago',
        s  : 'a few seconds',
        ss : '%d seconds',
        m  : 'a minute',
        mm : '%d minutes',
        h  : 'an hour',
        hh : '%d hours',
        d  : 'a day',
        dd : '%d days',
        M  : 'a month',
        MM : '%d months',
        y  : 'a year',
        yy : '%d years'
    };

    function relativeTime (number, withoutSuffix, string, isFuture) {
        var output = this._relativeTime[string];
        return (isFunction(output)) ?
            output(number, withoutSuffix, string, isFuture) :
            output.replace(/%d/i, number);
    }

    function pastFuture (diff, output) {
        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
        return isFunction(format) ? format(output) : format.replace(/%s/i, output);
    }

    var aliases = {};

    function addUnitAlias (unit, shorthand) {
        var lowerCase = unit.toLowerCase();
        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
    }

    function normalizeUnits(units) {
        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;
    }

    function normalizeObjectUnits(inputObject) {
        var normalizedInput = {},
            normalizedProp,
            prop;

        for (prop in inputObject) {
            if (hasOwnProp(inputObject, prop)) {
                normalizedProp = normalizeUnits(prop);
                if (normalizedProp) {
                    normalizedInput[normalizedProp] = inputObject[prop];
                }
            }
        }

        return normalizedInput;
    }

    var priorities = {};

    function addUnitPriority(unit, priority) {
        priorities[unit] = priority;
    }

    function getPrioritizedUnits(unitsObj) {
        var units = [];
        for (var u in unitsObj) {
            units.push({unit: u, priority: priorities[u]});
        }
        units.sort(function (a, b) {
            return a.priority - b.priority;
        });
        return units;
    }

    function zeroFill(number, targetLength, forceSign) {
        var absNumber = '' + Math.abs(number),
            zerosToFill = targetLength - absNumber.length,
            sign = number >= 0;
        return (sign ? (forceSign ? '+' : '') : '-') +
            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;
    }

    var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;

    var localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;

    var formatFunctions = {};

    var formatTokenFunctions = {};

    // token:    'M'
    // padded:   ['MM', 2]
    // ordinal:  'Mo'
    // callback: function () { this.month() + 1 }
    function addFormatToken (token, padded, ordinal, callback) {
        var func = callback;
        if (typeof callback === 'string') {
            func = function () {
                return this[callback]();
            };
        }
        if (token) {
            formatTokenFunctions[token] = func;
        }
        if (padded) {
            formatTokenFunctions[padded[0]] = function () {
                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
            };
        }
        if (ordinal) {
            formatTokenFunctions[ordinal] = function () {
                return this.localeData().ordinal(func.apply(this, arguments), token);
            };
        }
    }

    function removeFormattingTokens(input) {
        if (input.match(/\[[\s\S]/)) {
            return input.replace(/^\[|\]$/g, '');
        }
        return input.replace(/\\/g, '');
    }

    function makeFormatFunction(format) {
        var array = format.match(formattingTokens), i, length;

        for (i = 0, length = array.length; i < length; i++) {
            if (formatTokenFunctions[array[i]]) {
                array[i] = formatTokenFunctions[array[i]];
            } else {
                array[i] = removeFormattingTokens(array[i]);
            }
        }

        return function (mom) {
            var output = '', i;
            for (i = 0; i < length; i++) {
                output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];
            }
            return output;
        };
    }

    // format date using native date object
    function formatMoment(m, format) {
        if (!m.isValid()) {
            return m.localeData().invalidDate();
        }

        format = expandFormat(format, m.localeData());
        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);

        return formatFunctions[format](m);
    }

    function expandFormat(format, locale) {
        var i = 5;

        function replaceLongDateFormatTokens(input) {
            return locale.longDateFormat(input) || input;
        }

        localFormattingTokens.lastIndex = 0;
        while (i >= 0 && localFormattingTokens.test(format)) {
            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);
            localFormattingTokens.lastIndex = 0;
            i -= 1;
        }

        return format;
    }

    var match1         = /\d/;            //       0 - 9
    var match2         = /\d\d/;          //      00 - 99
    var match3         = /\d{3}/;         //     000 - 999
    var match4         = /\d{4}/;         //    0000 - 9999
    var match6         = /[+-]?\d{6}/;    // -999999 - 999999
    var match1to2      = /\d\d?/;         //       0 - 99
    var match3to4      = /\d\d\d\d?/;     //     999 - 9999
    var match5to6      = /\d\d\d\d\d\d?/; //   99999 - 999999
    var match1to3      = /\d{1,3}/;       //       0 - 999
    var match1to4      = /\d{1,4}/;       //       0 - 9999
    var match1to6      = /[+-]?\d{1,6}/;  // -999999 - 999999

    var matchUnsigned  = /\d+/;           //       0 - inf
    var matchSigned    = /[+-]?\d+/;      //    -inf - inf

    var matchOffset    = /Z|[+-]\d\d:?\d\d/gi; // +00:00 -00:00 +0000 -0000 or Z
    var matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z

    var matchTimestamp = /[+-]?\d+(\.\d{1,3})?/; // 123456789 123456789.123

    // any word (or two) characters or numbers including two/three word month in arabic.
    // includes scottish gaelic two word and hyphenated months
    var matchWord = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i;

    var regexes = {};

    function addRegexToken (token, regex, strictRegex) {
        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {
            return (isStrict && strictRegex) ? strictRegex : regex;
        };
    }

    function getParseRegexForToken (token, config) {
        if (!hasOwnProp(regexes, token)) {
            return new RegExp(unescapeFormat(token));
        }

        return regexes[token](config._strict, config._locale);
    }

    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
    function unescapeFormat(s) {
        return regexEscape(s.replace('\\', '').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (matched, p1, p2, p3, p4) {
            return p1 || p2 || p3 || p4;
        }));
    }

    function regexEscape(s) {
        return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
    }

    var tokens = {};

    function addParseToken (token, callback) {
        var i, func = callback;
        if (typeof token === 'string') {
            token = [token];
        }
        if (isNumber(callback)) {
            func = function (input, array) {
                array[callback] = toInt(input);
            };
        }
        for (i = 0; i < token.length; i++) {
            tokens[token[i]] = func;
        }
    }

    function addWeekParseToken (token, callback) {
        addParseToken(token, function (input, array, config, token) {
            config._w = config._w || {};
            callback(input, config._w, config, token);
        });
    }

    function addTimeToArrayFromToken(token, input, config) {
        if (input != null && hasOwnProp(tokens, token)) {
            tokens[token](input, config._a, config, token);
        }
    }

    var YEAR = 0;
    var MONTH = 1;
    var DATE = 2;
    var HOUR = 3;
    var MINUTE = 4;
    var SECOND = 5;
    var MILLISECOND = 6;
    var WEEK = 7;
    var WEEKDAY = 8;

    // FORMATTING

    addFormatToken('Y', 0, 0, function () {
        var y = this.year();
        return y <= 9999 ? '' + y : '+' + y;
    });

    addFormatToken(0, ['YY', 2], 0, function () {
        return this.year() % 100;
    });

    addFormatToken(0, ['YYYY',   4],       0, 'year');
    addFormatToken(0, ['YYYYY',  5],       0, 'year');
    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');

    // ALIASES

    addUnitAlias('year', 'y');

    // PRIORITIES

    addUnitPriority('year', 1);

    // PARSING

    addRegexToken('Y',      matchSigned);
    addRegexToken('YY',     match1to2, match2);
    addRegexToken('YYYY',   match1to4, match4);
    addRegexToken('YYYYY',  match1to6, match6);
    addRegexToken('YYYYYY', match1to6, match6);

    addParseToken(['YYYYY', 'YYYYYY'], YEAR);
    addParseToken('YYYY', function (input, array) {
        array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
    });
    addParseToken('YY', function (input, array) {
        array[YEAR] = hooks.parseTwoDigitYear(input);
    });
    addParseToken('Y', function (input, array) {
        array[YEAR] = parseInt(input, 10);
    });

    // HELPERS

    function daysInYear(year) {
        return isLeapYear(year) ? 366 : 365;
    }

    function isLeapYear(year) {
        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
    }

    // HOOKS

    hooks.parseTwoDigitYear = function (input) {
        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
    };

    // MOMENTS

    var getSetYear = makeGetSet('FullYear', true);

    function getIsLeapYear () {
        return isLeapYear(this.year());
    }

    function makeGetSet (unit, keepTime) {
        return function (value) {
            if (value != null) {
                set$1(this, unit, value);
                hooks.updateOffset(this, keepTime);
                return this;
            } else {
                return get(this, unit);
            }
        };
    }

    function get (mom, unit) {
        return mom.isValid() ?
            mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;
    }

    function set$1 (mom, unit, value) {
        if (mom.isValid() && !isNaN(value)) {
            if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {
                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));
            }
            else {
                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
            }
        }
    }

    // MOMENTS

    function stringGet (units) {
        units = normalizeUnits(units);
        if (isFunction(this[units])) {
            return this[units]();
        }
        return this;
    }


    function stringSet (units, value) {
        if (typeof units === 'object') {
            units = normalizeObjectUnits(units);
            var prioritized = getPrioritizedUnits(units);
            for (var i = 0; i < prioritized.length; i++) {
                this[prioritized[i].unit](units[prioritized[i].unit]);
            }
        } else {
            units = normalizeUnits(units);
            if (isFunction(this[units])) {
                return this[units](value);
            }
        }
        return this;
    }

    function mod(n, x) {
        return ((n % x) + x) % x;
    }

    var indexOf;

    if (Array.prototype.indexOf) {
        indexOf = Array.prototype.indexOf;
    } else {
        indexOf = function (o) {
            // I know
            var i;
            for (i = 0; i < this.length; ++i) {
                if (this[i] === o) {
                    return i;
                }
            }
            return -1;
        };
    }

    function daysInMonth(year, month) {
        if (isNaN(year) || isNaN(month)) {
            return NaN;
        }
        var modMonth = mod(month, 12);
        year += (month - modMonth) / 12;
        return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);
    }

    // FORMATTING

    addFormatToken('M', ['MM', 2], 'Mo', function () {
        return this.month() + 1;
    });

    addFormatToken('MMM', 0, 0, function (format) {
        return this.localeData().monthsShort(this, format);
    });

    addFormatToken('MMMM', 0, 0, function (format) {
        return this.localeData().months(this, format);
    });

    // ALIASES

    addUnitAlias('month', 'M');

    // PRIORITY

    addUnitPriority('month', 8);

    // PARSING

    addRegexToken('M',    match1to2);
    addRegexToken('MM',   match1to2, match2);
    addRegexToken('MMM',  function (isStrict, locale) {
        return locale.monthsShortRegex(isStrict);
    });
    addRegexToken('MMMM', function (isStrict, locale) {
        return locale.monthsRegex(isStrict);
    });

    addParseToken(['M', 'MM'], function (input, array) {
        array[MONTH] = toInt(input) - 1;
    });

    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
        var month = config._locale.monthsParse(input, token, config._strict);
        // if we didn't find a month name, mark the date as invalid.
        if (month != null) {
            array[MONTH] = month;
        } else {
            getParsingFlags(config).invalidMonth = input;
        }
    });

    // LOCALES

    var MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/;
    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');
    function localeMonths (m, format) {
        if (!m) {
            return isArray(this._months) ? this._months :
                this._months['standalone'];
        }
        return isArray(this._months) ? this._months[m.month()] :
            this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];
    }

    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');
    function localeMonthsShort (m, format) {
        if (!m) {
            return isArray(this._monthsShort) ? this._monthsShort :
                this._monthsShort['standalone'];
        }
        return isArray(this._monthsShort) ? this._monthsShort[m.month()] :
            this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];
    }

    function handleStrictParse(monthName, format, strict) {
        var i, ii, mom, llc = monthName.toLocaleLowerCase();
        if (!this._monthsParse) {
            // this is not used
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = [];
            for (i = 0; i < 12; ++i) {
                mom = createUTC([2000, i]);
                this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();
                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();
            }
        }

        if (strict) {
            if (format === 'MMM') {
                ii = indexOf.call(this._shortMonthsParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._longMonthsParse, llc);
                return ii !== -1 ? ii : null;
            }
        } else {
            if (format === 'MMM') {
                ii = indexOf.call(this._shortMonthsParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._longMonthsParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._longMonthsParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortMonthsParse, llc);
                return ii !== -1 ? ii : null;
            }
        }
    }

    function localeMonthsParse (monthName, format, strict) {
        var i, mom, regex;

        if (this._monthsParseExact) {
            return handleStrictParse.call(this, monthName, format, strict);
        }

        if (!this._monthsParse) {
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = [];
        }

        // TODO: add sorting
        // Sorting makes sure if one month (or abbr) is a prefix of another
        // see sorting in computeMonthsParse
        for (i = 0; i < 12; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, i]);
            if (strict && !this._longMonthsParse[i]) {
                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');
                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');
            }
            if (!strict && !this._monthsParse[i]) {
                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
            }
            // test the regex
            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {
                return i;
            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {
                return i;
            } else if (!strict && this._monthsParse[i].test(monthName)) {
                return i;
            }
        }
    }

    // MOMENTS

    function setMonth (mom, value) {
        var dayOfMonth;

        if (!mom.isValid()) {
            // No op
            return mom;
        }

        if (typeof value === 'string') {
            if (/^\d+$/.test(value)) {
                value = toInt(value);
            } else {
                value = mom.localeData().monthsParse(value);
                // TODO: Another silent failure?
                if (!isNumber(value)) {
                    return mom;
                }
            }
        }

        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
        return mom;
    }

    function getSetMonth (value) {
        if (value != null) {
            setMonth(this, value);
            hooks.updateOffset(this, true);
            return this;
        } else {
            return get(this, 'Month');
        }
    }

    function getDaysInMonth () {
        return daysInMonth(this.year(), this.month());
    }

    var defaultMonthsShortRegex = matchWord;
    function monthsShortRegex (isStrict) {
        if (this._monthsParseExact) {
            if (!hasOwnProp(this, '_monthsRegex')) {
                computeMonthsParse.call(this);
            }
            if (isStrict) {
                return this._monthsShortStrictRegex;
            } else {
                return this._monthsShortRegex;
            }
        } else {
            if (!hasOwnProp(this, '_monthsShortRegex')) {
                this._monthsShortRegex = defaultMonthsShortRegex;
            }
            return this._monthsShortStrictRegex && isStrict ?
                this._monthsShortStrictRegex : this._monthsShortRegex;
        }
    }

    var defaultMonthsRegex = matchWord;
    function monthsRegex (isStrict) {
        if (this._monthsParseExact) {
            if (!hasOwnProp(this, '_monthsRegex')) {
                computeMonthsParse.call(this);
            }
            if (isStrict) {
                return this._monthsStrictRegex;
            } else {
                return this._monthsRegex;
            }
        } else {
            if (!hasOwnProp(this, '_monthsRegex')) {
                this._monthsRegex = defaultMonthsRegex;
            }
            return this._monthsStrictRegex && isStrict ?
                this._monthsStrictRegex : this._monthsRegex;
        }
    }

    function computeMonthsParse () {
        function cmpLenRev(a, b) {
            return b.length - a.length;
        }

        var shortPieces = [], longPieces = [], mixedPieces = [],
            i, mom;
        for (i = 0; i < 12; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, i]);
            shortPieces.push(this.monthsShort(mom, ''));
            longPieces.push(this.months(mom, ''));
            mixedPieces.push(this.months(mom, ''));
            mixedPieces.push(this.monthsShort(mom, ''));
        }
        // Sorting makes sure if one month (or abbr) is a prefix of another it
        // will match the longer piece.
        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);
        for (i = 0; i < 12; i++) {
            shortPieces[i] = regexEscape(shortPieces[i]);
            longPieces[i] = regexEscape(longPieces[i]);
        }
        for (i = 0; i < 24; i++) {
            mixedPieces[i] = regexEscape(mixedPieces[i]);
        }

        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._monthsShortRegex = this._monthsRegex;
        this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
        this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
    }

    function createDate (y, m, d, h, M, s, ms) {
        // can't just apply() to create a date:
        // https://stackoverflow.com/q/181348
        var date = new Date(y, m, d, h, M, s, ms);

        // the date constructor remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {
            date.setFullYear(y);
        }
        return date;
    }

    function createUTCDate (y) {
        var date = new Date(Date.UTC.apply(null, arguments));

        // the Date.UTC function remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {
            date.setUTCFullYear(y);
        }
        return date;
    }

    // start-of-first-week - start-of-year
    function firstWeekOffset(year, dow, doy) {
        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)
            fwd = 7 + dow - doy,
            // first-week day local weekday -- which local weekday is fwd
            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;

        return -fwdlw + fwd - 1;
    }

    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
        var localWeekday = (7 + weekday - dow) % 7,
            weekOffset = firstWeekOffset(year, dow, doy),
            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
            resYear, resDayOfYear;

        if (dayOfYear <= 0) {
            resYear = year - 1;
            resDayOfYear = daysInYear(resYear) + dayOfYear;
        } else if (dayOfYear > daysInYear(year)) {
            resYear = year + 1;
            resDayOfYear = dayOfYear - daysInYear(year);
        } else {
            resYear = year;
            resDayOfYear = dayOfYear;
        }

        return {
            year: resYear,
            dayOfYear: resDayOfYear
        };
    }

    function weekOfYear(mom, dow, doy) {
        var weekOffset = firstWeekOffset(mom.year(), dow, doy),
            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
            resWeek, resYear;

        if (week < 1) {
            resYear = mom.year() - 1;
            resWeek = week + weeksInYear(resYear, dow, doy);
        } else if (week > weeksInYear(mom.year(), dow, doy)) {
            resWeek = week - weeksInYear(mom.year(), dow, doy);
            resYear = mom.year() + 1;
        } else {
            resYear = mom.year();
            resWeek = week;
        }

        return {
            week: resWeek,
            year: resYear
        };
    }

    function weeksInYear(year, dow, doy) {
        var weekOffset = firstWeekOffset(year, dow, doy),
            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
    }

    // FORMATTING

    addFormatToken('w', ['ww', 2], 'wo', 'week');
    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');

    // ALIASES

    addUnitAlias('week', 'w');
    addUnitAlias('isoWeek', 'W');

    // PRIORITIES

    addUnitPriority('week', 5);
    addUnitPriority('isoWeek', 5);

    // PARSING

    addRegexToken('w',  match1to2);
    addRegexToken('ww', match1to2, match2);
    addRegexToken('W',  match1to2);
    addRegexToken('WW', match1to2, match2);

    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {
        week[token.substr(0, 1)] = toInt(input);
    });

    // HELPERS

    // LOCALES

    function localeWeek (mom) {
        return weekOfYear(mom, this._week.dow, this._week.doy).week;
    }

    var defaultLocaleWeek = {
        dow : 0, // Sunday is the first day of the week.
        doy : 6  // The week that contains Jan 1st is the first week of the year.
    };

    function localeFirstDayOfWeek () {
        return this._week.dow;
    }

    function localeFirstDayOfYear () {
        return this._week.doy;
    }

    // MOMENTS

    function getSetWeek (input) {
        var week = this.localeData().week(this);
        return input == null ? week : this.add((input - week) * 7, 'd');
    }

    function getSetISOWeek (input) {
        var week = weekOfYear(this, 1, 4).week;
        return input == null ? week : this.add((input - week) * 7, 'd');
    }

    // FORMATTING

    addFormatToken('d', 0, 'do', 'day');

    addFormatToken('dd', 0, 0, function (format) {
        return this.localeData().weekdaysMin(this, format);
    });

    addFormatToken('ddd', 0, 0, function (format) {
        return this.localeData().weekdaysShort(this, format);
    });

    addFormatToken('dddd', 0, 0, function (format) {
        return this.localeData().weekdays(this, format);
    });

    addFormatToken('e', 0, 0, 'weekday');
    addFormatToken('E', 0, 0, 'isoWeekday');

    // ALIASES

    addUnitAlias('day', 'd');
    addUnitAlias('weekday', 'e');
    addUnitAlias('isoWeekday', 'E');

    // PRIORITY
    addUnitPriority('day', 11);
    addUnitPriority('weekday', 11);
    addUnitPriority('isoWeekday', 11);

    // PARSING

    addRegexToken('d',    match1to2);
    addRegexToken('e',    match1to2);
    addRegexToken('E',    match1to2);
    addRegexToken('dd',   function (isStrict, locale) {
        return locale.weekdaysMinRegex(isStrict);
    });
    addRegexToken('ddd',   function (isStrict, locale) {
        return locale.weekdaysShortRegex(isStrict);
    });
    addRegexToken('dddd',   function (isStrict, locale) {
        return locale.weekdaysRegex(isStrict);
    });

    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {
        var weekday = config._locale.weekdaysParse(input, token, config._strict);
        // if we didn't get a weekday name, mark the date as invalid
        if (weekday != null) {
            week.d = weekday;
        } else {
            getParsingFlags(config).invalidWeekday = input;
        }
    });

    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
        week[token] = toInt(input);
    });

    // HELPERS

    function parseWeekday(input, locale) {
        if (typeof input !== 'string') {
            return input;
        }

        if (!isNaN(input)) {
            return parseInt(input, 10);
        }

        input = locale.weekdaysParse(input);
        if (typeof input === 'number') {
            return input;
        }

        return null;
    }

    function parseIsoWeekday(input, locale) {
        if (typeof input === 'string') {
            return locale.weekdaysParse(input) % 7 || 7;
        }
        return isNaN(input) ? null : input;
    }

    // LOCALES

    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');
    function localeWeekdays (m, format) {
        if (!m) {
            return isArray(this._weekdays) ? this._weekdays :
                this._weekdays['standalone'];
        }
        return isArray(this._weekdays) ? this._weekdays[m.day()] :
            this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];
    }

    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');
    function localeWeekdaysShort (m) {
        return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;
    }

    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');
    function localeWeekdaysMin (m) {
        return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;
    }

    function handleStrictParse$1(weekdayName, format, strict) {
        var i, ii, mom, llc = weekdayName.toLocaleLowerCase();
        if (!this._weekdaysParse) {
            this._weekdaysParse = [];
            this._shortWeekdaysParse = [];
            this._minWeekdaysParse = [];

            for (i = 0; i < 7; ++i) {
                mom = createUTC([2000, 1]).day(i);
                this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();
                this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();
                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();
            }
        }

        if (strict) {
            if (format === 'dddd') {
                ii = indexOf.call(this._weekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else if (format === 'ddd') {
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            }
        } else {
            if (format === 'dddd') {
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else if (format === 'ddd') {
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._minWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            }
        }
    }

    function localeWeekdaysParse (weekdayName, format, strict) {
        var i, mom, regex;

        if (this._weekdaysParseExact) {
            return handleStrictParse$1.call(this, weekdayName, format, strict);
        }

        if (!this._weekdaysParse) {
            this._weekdaysParse = [];
            this._minWeekdaysParse = [];
            this._shortWeekdaysParse = [];
            this._fullWeekdaysParse = [];
        }

        for (i = 0; i < 7; i++) {
            // make the regex if we don't have it already

            mom = createUTC([2000, 1]).day(i);
            if (strict && !this._fullWeekdaysParse[i]) {
                this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\.?') + '$', 'i');
                this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$', 'i');
                this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$', 'i');
            }
            if (!this._weekdaysParse[i]) {
                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');
                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
            }
            // test the regex
            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {
                return i;
            } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {
                return i;
            } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {
                return i;
            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
                return i;
            }
        }
    }

    // MOMENTS

    function getSetDayOfWeek (input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
        if (input != null) {
            input = parseWeekday(input, this.localeData());
            return this.add(input - day, 'd');
        } else {
            return day;
        }
    }

    function getSetLocaleDayOfWeek (input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
        return input == null ? weekday : this.add(input - weekday, 'd');
    }

    function getSetISODayOfWeek (input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }

        // behaves the same as moment#day except
        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
        // as a setter, sunday should belong to the previous week.

        if (input != null) {
            var weekday = parseIsoWeekday(input, this.localeData());
            return this.day(this.day() % 7 ? weekday : weekday - 7);
        } else {
            return this.day() || 7;
        }
    }

    var defaultWeekdaysRegex = matchWord;
    function weekdaysRegex (isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysStrictRegex;
            } else {
                return this._weekdaysRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                this._weekdaysRegex = defaultWeekdaysRegex;
            }
            return this._weekdaysStrictRegex && isStrict ?
                this._weekdaysStrictRegex : this._weekdaysRegex;
        }
    }

    var defaultWeekdaysShortRegex = matchWord;
    function weekdaysShortRegex (isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysShortStrictRegex;
            } else {
                return this._weekdaysShortRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysShortRegex')) {
                this._weekdaysShortRegex = defaultWeekdaysShortRegex;
            }
            return this._weekdaysShortStrictRegex && isStrict ?
                this._weekdaysShortStrictRegex : this._weekdaysShortRegex;
        }
    }

    var defaultWeekdaysMinRegex = matchWord;
    function weekdaysMinRegex (isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysMinStrictRegex;
            } else {
                return this._weekdaysMinRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysMinRegex')) {
                this._weekdaysMinRegex = defaultWeekdaysMinRegex;
            }
            return this._weekdaysMinStrictRegex && isStrict ?
                this._weekdaysMinStrictRegex : this._weekdaysMinRegex;
        }
    }


    function computeWeekdaysParse () {
        function cmpLenRev(a, b) {
            return b.length - a.length;
        }

        var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],
            i, mom, minp, shortp, longp;
        for (i = 0; i < 7; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, 1]).day(i);
            minp = this.weekdaysMin(mom, '');
            shortp = this.weekdaysShort(mom, '');
            longp = this.weekdays(mom, '');
            minPieces.push(minp);
            shortPieces.push(shortp);
            longPieces.push(longp);
            mixedPieces.push(minp);
            mixedPieces.push(shortp);
            mixedPieces.push(longp);
        }
        // Sorting makes sure if one weekday (or abbr) is a prefix of another it
        // will match the longer piece.
        minPieces.sort(cmpLenRev);
        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);
        for (i = 0; i < 7; i++) {
            shortPieces[i] = regexEscape(shortPieces[i]);
            longPieces[i] = regexEscape(longPieces[i]);
            mixedPieces[i] = regexEscape(mixedPieces[i]);
        }

        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._weekdaysShortRegex = this._weekdaysRegex;
        this._weekdaysMinRegex = this._weekdaysRegex;

        this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
        this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
        this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');
    }

    // FORMATTING

    function hFormat() {
        return this.hours() % 12 || 12;
    }

    function kFormat() {
        return this.hours() || 24;
    }

    addFormatToken('H', ['HH', 2], 0, 'hour');
    addFormatToken('h', ['hh', 2], 0, hFormat);
    addFormatToken('k', ['kk', 2], 0, kFormat);

    addFormatToken('hmm', 0, 0, function () {
        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);
    });

    addFormatToken('hmmss', 0, 0, function () {
        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +
            zeroFill(this.seconds(), 2);
    });

    addFormatToken('Hmm', 0, 0, function () {
        return '' + this.hours() + zeroFill(this.minutes(), 2);
    });

    addFormatToken('Hmmss', 0, 0, function () {
        return '' + this.hours() + zeroFill(this.minutes(), 2) +
            zeroFill(this.seconds(), 2);
    });

    function meridiem (token, lowercase) {
        addFormatToken(token, 0, 0, function () {
            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);
        });
    }

    meridiem('a', true);
    meridiem('A', false);

    // ALIASES

    addUnitAlias('hour', 'h');

    // PRIORITY
    addUnitPriority('hour', 13);

    // PARSING

    function matchMeridiem (isStrict, locale) {
        return locale._meridiemParse;
    }

    addRegexToken('a',  matchMeridiem);
    addRegexToken('A',  matchMeridiem);
    addRegexToken('H',  match1to2);
    addRegexToken('h',  match1to2);
    addRegexToken('k',  match1to2);
    addRegexToken('HH', match1to2, match2);
    addRegexToken('hh', match1to2, match2);
    addRegexToken('kk', match1to2, match2);

    addRegexToken('hmm', match3to4);
    addRegexToken('hmmss', match5to6);
    addRegexToken('Hmm', match3to4);
    addRegexToken('Hmmss', match5to6);

    addParseToken(['H', 'HH'], HOUR);
    addParseToken(['k', 'kk'], function (input, array, config) {
        var kInput = toInt(input);
        array[HOUR] = kInput === 24 ? 0 : kInput;
    });
    addParseToken(['a', 'A'], function (input, array, config) {
        config._isPm = config._locale.isPM(input);
        config._meridiem = input;
    });
    addParseToken(['h', 'hh'], function (input, array, config) {
        array[HOUR] = toInt(input);
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('hmm', function (input, array, config) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('hmmss', function (input, array, config) {
        var pos1 = input.length - 4;
        var pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('Hmm', function (input, array, config) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
    });
    addParseToken('Hmmss', function (input, array, config) {
        var pos1 = input.length - 4;
        var pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
    });

    // LOCALES

    function localeIsPM (input) {
        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
        // Using charAt should be more compatible.
        return ((input + '').toLowerCase().charAt(0) === 'p');
    }

    var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i;
    function localeMeridiem (hours, minutes, isLower) {
        if (hours > 11) {
            return isLower ? 'pm' : 'PM';
        } else {
            return isLower ? 'am' : 'AM';
        }
    }


    // MOMENTS

    // Setting the hour should keep the time, because the user explicitly
    // specified which hour they want. So trying to maintain the same hour (in
    // a new timezone) makes sense. Adding/subtracting hours does not follow
    // this rule.
    var getSetHour = makeGetSet('Hours', true);

    var baseConfig = {
        calendar: defaultCalendar,
        longDateFormat: defaultLongDateFormat,
        invalidDate: defaultInvalidDate,
        ordinal: defaultOrdinal,
        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
        relativeTime: defaultRelativeTime,

        months: defaultLocaleMonths,
        monthsShort: defaultLocaleMonthsShort,

        week: defaultLocaleWeek,

        weekdays: defaultLocaleWeekdays,
        weekdaysMin: defaultLocaleWeekdaysMin,
        weekdaysShort: defaultLocaleWeekdaysShort,

        meridiemParse: defaultLocaleMeridiemParse
    };

    // internal storage for locale config files
    var locales = {};
    var localeFamilies = {};
    var globalLocale;

    function normalizeLocale(key) {
        return key ? key.toLowerCase().replace('_', '-') : key;
    }

    // pick the locale from the array
    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
    function chooseLocale(names) {
        var i = 0, j, next, locale, split;

        while (i < names.length) {
            split = normalizeLocale(names[i]).split('-');
            j = split.length;
            next = normalizeLocale(names[i + 1]);
            next = next ? next.split('-') : null;
            while (j > 0) {
                locale = loadLocale(split.slice(0, j).join('-'));
                if (locale) {
                    return locale;
                }
                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {
                    //the next array item is better than a shallower substring of this one
                    break;
                }
                j--;
            }
            i++;
        }
        return globalLocale;
    }

    function loadLocale(name) {
        var oldLocale = null;
        // TODO: Find a better way to register and load all the locales in Node
        if (!locales[name] && (typeof module !== 'undefined') &&
                module && module.exports) {
            try {
                oldLocale = globalLocale._abbr;
                var aliasedRequire = require;
                __webpack_require__(394)("./" + name);
                getSetGlobalLocale(oldLocale);
            } catch (e) {}
        }
        return locales[name];
    }

    // This function will load locale and then set the global locale.  If
    // no arguments are passed in, it will simply return the current global
    // locale key.
    function getSetGlobalLocale (key, values) {
        var data;
        if (key) {
            if (isUndefined(values)) {
                data = getLocale(key);
            }
            else {
                data = defineLocale(key, values);
            }

            if (data) {
                // moment.duration._locale = moment._locale = data;
                globalLocale = data;
            }
            else {
                if ((typeof console !==  'undefined') && console.warn) {
                    //warn user if arguments are passed but the locale could not be set
                    console.warn('Locale ' + key +  ' not found. Did you forget to load it?');
                }
            }
        }

        return globalLocale._abbr;
    }

    function defineLocale (name, config) {
        if (config !== null) {
            var locale, parentConfig = baseConfig;
            config.abbr = name;
            if (locales[name] != null) {
                deprecateSimple('defineLocaleOverride',
                        'use moment.updateLocale(localeName, config) to change ' +
                        'an existing locale. moment.defineLocale(localeName, ' +
                        'config) should only be used for creating a new locale ' +
                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');
                parentConfig = locales[name]._config;
            } else if (config.parentLocale != null) {
                if (locales[config.parentLocale] != null) {
                    parentConfig = locales[config.parentLocale]._config;
                } else {
                    locale = loadLocale(config.parentLocale);
                    if (locale != null) {
                        parentConfig = locale._config;
                    } else {
                        if (!localeFamilies[config.parentLocale]) {
                            localeFamilies[config.parentLocale] = [];
                        }
                        localeFamilies[config.parentLocale].push({
                            name: name,
                            config: config
                        });
                        return null;
                    }
                }
            }
            locales[name] = new Locale(mergeConfigs(parentConfig, config));

            if (localeFamilies[name]) {
                localeFamilies[name].forEach(function (x) {
                    defineLocale(x.name, x.config);
                });
            }

            // backwards compat for now: also set the locale
            // make sure we set the locale AFTER all child locales have been
            // created, so we won't end up with the child locale set.
            getSetGlobalLocale(name);


            return locales[name];
        } else {
            // useful for testing
            delete locales[name];
            return null;
        }
    }

    function updateLocale(name, config) {
        if (config != null) {
            var locale, tmpLocale, parentConfig = baseConfig;
            // MERGE
            tmpLocale = loadLocale(name);
            if (tmpLocale != null) {
                parentConfig = tmpLocale._config;
            }
            config = mergeConfigs(parentConfig, config);
            locale = new Locale(config);
            locale.parentLocale = locales[name];
            locales[name] = locale;

            // backwards compat for now: also set the locale
            getSetGlobalLocale(name);
        } else {
            // pass null for config to unupdate, useful for tests
            if (locales[name] != null) {
                if (locales[name].parentLocale != null) {
                    locales[name] = locales[name].parentLocale;
                } else if (locales[name] != null) {
                    delete locales[name];
                }
            }
        }
        return locales[name];
    }

    // returns locale data
    function getLocale (key) {
        var locale;

        if (key && key._locale && key._locale._abbr) {
            key = key._locale._abbr;
        }

        if (!key) {
            return globalLocale;
        }

        if (!isArray(key)) {
            //short-circuit everything else
            locale = loadLocale(key);
            if (locale) {
                return locale;
            }
            key = [key];
        }

        return chooseLocale(key);
    }

    function listLocales() {
        return keys(locales);
    }

    function checkOverflow (m) {
        var overflow;
        var a = m._a;

        if (a && getParsingFlags(m).overflow === -2) {
            overflow =
                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :
                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :
                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :
                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :
                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :
                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :
                -1;

            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
                overflow = DATE;
            }
            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
                overflow = WEEK;
            }
            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
                overflow = WEEKDAY;
            }

            getParsingFlags(m).overflow = overflow;
        }

        return m;
    }

    // Pick the first defined of two or three arguments.
    function defaults(a, b, c) {
        if (a != null) {
            return a;
        }
        if (b != null) {
            return b;
        }
        return c;
    }

    function currentDateArray(config) {
        // hooks is actually the exported moment object
        var nowValue = new Date(hooks.now());
        if (config._useUTC) {
            return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];
        }
        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
    }

    // convert an array to a date.
    // the array should mirror the parameters below
    // note: all values past the year are optional and will default to the lowest possible value.
    // [year, month, day , hour, minute, second, millisecond]
    function configFromArray (config) {
        var i, date, input = [], currentDate, expectedWeekday, yearToUse;

        if (config._d) {
            return;
        }

        currentDate = currentDateArray(config);

        //compute day of the year from weeks and weekdays
        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
            dayOfYearFromWeekInfo(config);
        }

        //if the day of the year is set, figure out what it is
        if (config._dayOfYear != null) {
            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);

            if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {
                getParsingFlags(config)._overflowDayOfYear = true;
            }

            date = createUTCDate(yearToUse, 0, config._dayOfYear);
            config._a[MONTH] = date.getUTCMonth();
            config._a[DATE] = date.getUTCDate();
        }

        // Default to current date.
        // * if no year, month, day of month are given, default to today
        // * if day of month is given, default month and year
        // * if month is given, default only year
        // * if year is given, don't default anything
        for (i = 0; i < 3 && config._a[i] == null; ++i) {
            config._a[i] = input[i] = currentDate[i];
        }

        // Zero out whatever was not defaulted, including time
        for (; i < 7; i++) {
            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];
        }

        // Check for 24:00:00.000
        if (config._a[HOUR] === 24 &&
                config._a[MINUTE] === 0 &&
                config._a[SECOND] === 0 &&
                config._a[MILLISECOND] === 0) {
            config._nextDay = true;
            config._a[HOUR] = 0;
        }

        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);
        expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();

        // Apply timezone offset from input. The actual utcOffset can be changed
        // with parseZone.
        if (config._tzm != null) {
            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
        }

        if (config._nextDay) {
            config._a[HOUR] = 24;
        }

        // check for mismatching day of week
        if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {
            getParsingFlags(config).weekdayMismatch = true;
        }
    }

    function dayOfYearFromWeekInfo(config) {
        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;

        w = config._w;
        if (w.GG != null || w.W != null || w.E != null) {
            dow = 1;
            doy = 4;

            // TODO: We need to take the current isoWeekYear, but that depends on
            // how we interpret now (local, utc, fixed offset). So create
            // a now version of current config (take local/utc/offset flags, and
            // create now).
            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);
            week = defaults(w.W, 1);
            weekday = defaults(w.E, 1);
            if (weekday < 1 || weekday > 7) {
                weekdayOverflow = true;
            }
        } else {
            dow = config._locale._week.dow;
            doy = config._locale._week.doy;

            var curWeek = weekOfYear(createLocal(), dow, doy);

            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);

            // Default to current week.
            week = defaults(w.w, curWeek.week);

            if (w.d != null) {
                // weekday -- low day numbers are considered next week
                weekday = w.d;
                if (weekday < 0 || weekday > 6) {
                    weekdayOverflow = true;
                }
            } else if (w.e != null) {
                // local weekday -- counting starts from begining of week
                weekday = w.e + dow;
                if (w.e < 0 || w.e > 6) {
                    weekdayOverflow = true;
                }
            } else {
                // default to begining of week
                weekday = dow;
            }
        }
        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
            getParsingFlags(config)._overflowWeeks = true;
        } else if (weekdayOverflow != null) {
            getParsingFlags(config)._overflowWeekday = true;
        } else {
            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
            config._a[YEAR] = temp.year;
            config._dayOfYear = temp.dayOfYear;
        }
    }

    // iso 8601 regex
    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
    var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
    var basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;

    var tzRegex = /Z|[+-]\d\d(?::?\d\d)?/;

    var isoDates = [
        ['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/],
        ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/],
        ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/],
        ['GGGG-[W]WW', /\d{4}-W\d\d/, false],
        ['YYYY-DDD', /\d{4}-\d{3}/],
        ['YYYY-MM', /\d{4}-\d\d/, false],
        ['YYYYYYMMDD', /[+-]\d{10}/],
        ['YYYYMMDD', /\d{8}/],
        // YYYYMM is NOT allowed by the standard
        ['GGGG[W]WWE', /\d{4}W\d{3}/],
        ['GGGG[W]WW', /\d{4}W\d{2}/, false],
        ['YYYYDDD', /\d{7}/]
    ];

    // iso time formats and regexes
    var isoTimes = [
        ['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/],
        ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/],
        ['HH:mm:ss', /\d\d:\d\d:\d\d/],
        ['HH:mm', /\d\d:\d\d/],
        ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/],
        ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/],
        ['HHmmss', /\d\d\d\d\d\d/],
        ['HHmm', /\d\d\d\d/],
        ['HH', /\d\d/]
    ];

    var aspNetJsonRegex = /^\/?Date\((\-?\d+)/i;

    // date from iso format
    function configFromISO(config) {
        var i, l,
            string = config._i,
            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
            allowTime, dateFormat, timeFormat, tzFormat;

        if (match) {
            getParsingFlags(config).iso = true;

            for (i = 0, l = isoDates.length; i < l; i++) {
                if (isoDates[i][1].exec(match[1])) {
                    dateFormat = isoDates[i][0];
                    allowTime = isoDates[i][2] !== false;
                    break;
                }
            }
            if (dateFormat == null) {
                config._isValid = false;
                return;
            }
            if (match[3]) {
                for (i = 0, l = isoTimes.length; i < l; i++) {
                    if (isoTimes[i][1].exec(match[3])) {
                        // match[2] should be 'T' or space
                        timeFormat = (match[2] || ' ') + isoTimes[i][0];
                        break;
                    }
                }
                if (timeFormat == null) {
                    config._isValid = false;
                    return;
                }
            }
            if (!allowTime && timeFormat != null) {
                config._isValid = false;
                return;
            }
            if (match[4]) {
                if (tzRegex.exec(match[4])) {
                    tzFormat = 'Z';
                } else {
                    config._isValid = false;
                    return;
                }
            }
            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');
            configFromStringAndFormat(config);
        } else {
            config._isValid = false;
        }
    }

    // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3
    var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/;

    function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {
        var result = [
            untruncateYear(yearStr),
            defaultLocaleMonthsShort.indexOf(monthStr),
            parseInt(dayStr, 10),
            parseInt(hourStr, 10),
            parseInt(minuteStr, 10)
        ];

        if (secondStr) {
            result.push(parseInt(secondStr, 10));
        }

        return result;
    }

    function untruncateYear(yearStr) {
        var year = parseInt(yearStr, 10);
        if (year <= 49) {
            return 2000 + year;
        } else if (year <= 999) {
            return 1900 + year;
        }
        return year;
    }

    function preprocessRFC2822(s) {
        // Remove comments and folding whitespace and replace multiple-spaces with a single space
        return s.replace(/\([^)]*\)|[\n\t]/g, ' ').replace(/(\s\s+)/g, ' ').replace(/^\s\s*/, '').replace(/\s\s*$/, '');
    }

    function checkWeekday(weekdayStr, parsedInput, config) {
        if (weekdayStr) {
            // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.
            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),
                weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();
            if (weekdayProvided !== weekdayActual) {
                getParsingFlags(config).weekdayMismatch = true;
                config._isValid = false;
                return false;
            }
        }
        return true;
    }

    var obsOffsets = {
        UT: 0,
        GMT: 0,
        EDT: -4 * 60,
        EST: -5 * 60,
        CDT: -5 * 60,
        CST: -6 * 60,
        MDT: -6 * 60,
        MST: -7 * 60,
        PDT: -7 * 60,
        PST: -8 * 60
    };

    function calculateOffset(obsOffset, militaryOffset, numOffset) {
        if (obsOffset) {
            return obsOffsets[obsOffset];
        } else if (militaryOffset) {
            // the only allowed military tz is Z
            return 0;
        } else {
            var hm = parseInt(numOffset, 10);
            var m = hm % 100, h = (hm - m) / 100;
            return h * 60 + m;
        }
    }

    // date and time from ref 2822 format
    function configFromRFC2822(config) {
        var match = rfc2822.exec(preprocessRFC2822(config._i));
        if (match) {
            var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);
            if (!checkWeekday(match[1], parsedArray, config)) {
                return;
            }

            config._a = parsedArray;
            config._tzm = calculateOffset(match[8], match[9], match[10]);

            config._d = createUTCDate.apply(null, config._a);
            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);

            getParsingFlags(config).rfc2822 = true;
        } else {
            config._isValid = false;
        }
    }

    // date from iso format or fallback
    function configFromString(config) {
        var matched = aspNetJsonRegex.exec(config._i);

        if (matched !== null) {
            config._d = new Date(+matched[1]);
            return;
        }

        configFromISO(config);
        if (config._isValid === false) {
            delete config._isValid;
        } else {
            return;
        }

        configFromRFC2822(config);
        if (config._isValid === false) {
            delete config._isValid;
        } else {
            return;
        }

        // Final attempt, use Input Fallback
        hooks.createFromInputFallback(config);
    }

    hooks.createFromInputFallback = deprecate(
        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +
        'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +
        'discouraged and will be removed in an upcoming major release. Please refer to ' +
        'http://momentjs.com/guides/#/warnings/js-date/ for more info.',
        function (config) {
            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
        }
    );

    // constant that refers to the ISO standard
    hooks.ISO_8601 = function () {};

    // constant that refers to the RFC 2822 form
    hooks.RFC_2822 = function () {};

    // date from string and format string
    function configFromStringAndFormat(config) {
        // TODO: Move this to another part of the creation flow to prevent circular deps
        if (config._f === hooks.ISO_8601) {
            configFromISO(config);
            return;
        }
        if (config._f === hooks.RFC_2822) {
            configFromRFC2822(config);
            return;
        }
        config._a = [];
        getParsingFlags(config).empty = true;

        // This array is used to make a Date, either with `new Date` or `Date.UTC`
        var string = '' + config._i,
            i, parsedInput, tokens, token, skipped,
            stringLength = string.length,
            totalParsedInputLength = 0;

        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];

        for (i = 0; i < tokens.length; i++) {
            token = tokens[i];
            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];
            // console.log('token', token, 'parsedInput', parsedInput,
            //         'regex', getParseRegexForToken(token, config));
            if (parsedInput) {
                skipped = string.substr(0, string.indexOf(parsedInput));
                if (skipped.length > 0) {
                    getParsingFlags(config).unusedInput.push(skipped);
                }
                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
                totalParsedInputLength += parsedInput.length;
            }
            // don't parse if it's not a known token
            if (formatTokenFunctions[token]) {
                if (parsedInput) {
                    getParsingFlags(config).empty = false;
                }
                else {
                    getParsingFlags(config).unusedTokens.push(token);
                }
                addTimeToArrayFromToken(token, parsedInput, config);
            }
            else if (config._strict && !parsedInput) {
                getParsingFlags(config).unusedTokens.push(token);
            }
        }

        // add remaining unparsed input length to the string
        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;
        if (string.length > 0) {
            getParsingFlags(config).unusedInput.push(string);
        }

        // clear _12h flag if hour is <= 12
        if (config._a[HOUR] <= 12 &&
            getParsingFlags(config).bigHour === true &&
            config._a[HOUR] > 0) {
            getParsingFlags(config).bigHour = undefined;
        }

        getParsingFlags(config).parsedDateParts = config._a.slice(0);
        getParsingFlags(config).meridiem = config._meridiem;
        // handle meridiem
        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);

        configFromArray(config);
        checkOverflow(config);
    }


    function meridiemFixWrap (locale, hour, meridiem) {
        var isPm;

        if (meridiem == null) {
            // nothing to do
            return hour;
        }
        if (locale.meridiemHour != null) {
            return locale.meridiemHour(hour, meridiem);
        } else if (locale.isPM != null) {
            // Fallback
            isPm = locale.isPM(meridiem);
            if (isPm && hour < 12) {
                hour += 12;
            }
            if (!isPm && hour === 12) {
                hour = 0;
            }
            return hour;
        } else {
            // this is not supposed to happen
            return hour;
        }
    }

    // date from string and array of format strings
    function configFromStringAndArray(config) {
        var tempConfig,
            bestMoment,

            scoreToBeat,
            i,
            currentScore;

        if (config._f.length === 0) {
            getParsingFlags(config).invalidFormat = true;
            config._d = new Date(NaN);
            return;
        }

        for (i = 0; i < config._f.length; i++) {
            currentScore = 0;
            tempConfig = copyConfig({}, config);
            if (config._useUTC != null) {
                tempConfig._useUTC = config._useUTC;
            }
            tempConfig._f = config._f[i];
            configFromStringAndFormat(tempConfig);

            if (!isValid(tempConfig)) {
                continue;
            }

            // if there is any input that was not parsed add a penalty for that format
            currentScore += getParsingFlags(tempConfig).charsLeftOver;

            //or tokens
            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;

            getParsingFlags(tempConfig).score = currentScore;

            if (scoreToBeat == null || currentScore < scoreToBeat) {
                scoreToBeat = currentScore;
                bestMoment = tempConfig;
            }
        }

        extend(config, bestMoment || tempConfig);
    }

    function configFromObject(config) {
        if (config._d) {
            return;
        }

        var i = normalizeObjectUnits(config._i);
        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {
            return obj && parseInt(obj, 10);
        });

        configFromArray(config);
    }

    function createFromConfig (config) {
        var res = new Moment(checkOverflow(prepareConfig(config)));
        if (res._nextDay) {
            // Adding is smart enough around DST
            res.add(1, 'd');
            res._nextDay = undefined;
        }

        return res;
    }

    function prepareConfig (config) {
        var input = config._i,
            format = config._f;

        config._locale = config._locale || getLocale(config._l);

        if (input === null || (format === undefined && input === '')) {
            return createInvalid({nullInput: true});
        }

        if (typeof input === 'string') {
            config._i = input = config._locale.preparse(input);
        }

        if (isMoment(input)) {
            return new Moment(checkOverflow(input));
        } else if (isDate(input)) {
            config._d = input;
        } else if (isArray(format)) {
            configFromStringAndArray(config);
        } else if (format) {
            configFromStringAndFormat(config);
        }  else {
            configFromInput(config);
        }

        if (!isValid(config)) {
            config._d = null;
        }

        return config;
    }

    function configFromInput(config) {
        var input = config._i;
        if (isUndefined(input)) {
            config._d = new Date(hooks.now());
        } else if (isDate(input)) {
            config._d = new Date(input.valueOf());
        } else if (typeof input === 'string') {
            configFromString(config);
        } else if (isArray(input)) {
            config._a = map(input.slice(0), function (obj) {
                return parseInt(obj, 10);
            });
            configFromArray(config);
        } else if (isObject(input)) {
            configFromObject(config);
        } else if (isNumber(input)) {
            // from milliseconds
            config._d = new Date(input);
        } else {
            hooks.createFromInputFallback(config);
        }
    }

    function createLocalOrUTC (input, format, locale, strict, isUTC) {
        var c = {};

        if (locale === true || locale === false) {
            strict = locale;
            locale = undefined;
        }

        if ((isObject(input) && isObjectEmpty(input)) ||
                (isArray(input) && input.length === 0)) {
            input = undefined;
        }
        // object construction must be done this way.
        // https://github.com/moment/moment/issues/1423
        c._isAMomentObject = true;
        c._useUTC = c._isUTC = isUTC;
        c._l = locale;
        c._i = input;
        c._f = format;
        c._strict = strict;

        return createFromConfig(c);
    }

    function createLocal (input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, false);
    }

    var prototypeMin = deprecate(
        'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',
        function () {
            var other = createLocal.apply(null, arguments);
            if (this.isValid() && other.isValid()) {
                return other < this ? this : other;
            } else {
                return createInvalid();
            }
        }
    );

    var prototypeMax = deprecate(
        'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',
        function () {
            var other = createLocal.apply(null, arguments);
            if (this.isValid() && other.isValid()) {
                return other > this ? this : other;
            } else {
                return createInvalid();
            }
        }
    );

    // Pick a moment m from moments so that m[fn](other) is true for all
    // other. This relies on the function fn to be transitive.
    //
    // moments should either be an array of moment objects or an array, whose
    // first element is an array of moment objects.
    function pickBy(fn, moments) {
        var res, i;
        if (moments.length === 1 && isArray(moments[0])) {
            moments = moments[0];
        }
        if (!moments.length) {
            return createLocal();
        }
        res = moments[0];
        for (i = 1; i < moments.length; ++i) {
            if (!moments[i].isValid() || moments[i][fn](res)) {
                res = moments[i];
            }
        }
        return res;
    }

    // TODO: Use [].sort instead?
    function min () {
        var args = [].slice.call(arguments, 0);

        return pickBy('isBefore', args);
    }

    function max () {
        var args = [].slice.call(arguments, 0);

        return pickBy('isAfter', args);
    }

    var now = function () {
        return Date.now ? Date.now() : +(new Date());
    };

    var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];

    function isDurationValid(m) {
        for (var key in m) {
            if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {
                return false;
            }
        }

        var unitHasDecimal = false;
        for (var i = 0; i < ordering.length; ++i) {
            if (m[ordering[i]]) {
                if (unitHasDecimal) {
                    return false; // only allow non-integers for smallest unit
                }
                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {
                    unitHasDecimal = true;
                }
            }
        }

        return true;
    }

    function isValid$1() {
        return this._isValid;
    }

    function createInvalid$1() {
        return createDuration(NaN);
    }

    function Duration (duration) {
        var normalizedInput = normalizeObjectUnits(duration),
            years = normalizedInput.year || 0,
            quarters = normalizedInput.quarter || 0,
            months = normalizedInput.month || 0,
            weeks = normalizedInput.week || 0,
            days = normalizedInput.day || 0,
            hours = normalizedInput.hour || 0,
            minutes = normalizedInput.minute || 0,
            seconds = normalizedInput.second || 0,
            milliseconds = normalizedInput.millisecond || 0;

        this._isValid = isDurationValid(normalizedInput);

        // representation for dateAddRemove
        this._milliseconds = +milliseconds +
            seconds * 1e3 + // 1000
            minutes * 6e4 + // 1000 * 60
            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
        // Because of dateAddRemove treats 24 hours as different from a
        // day when working around DST, we need to store them separately
        this._days = +days +
            weeks * 7;
        // It is impossible to translate months into days without knowing
        // which months you are are talking about, so we have to store
        // it separately.
        this._months = +months +
            quarters * 3 +
            years * 12;

        this._data = {};

        this._locale = getLocale();

        this._bubble();
    }

    function isDuration (obj) {
        return obj instanceof Duration;
    }

    function absRound (number) {
        if (number < 0) {
            return Math.round(-1 * number) * -1;
        } else {
            return Math.round(number);
        }
    }

    // FORMATTING

    function offset (token, separator) {
        addFormatToken(token, 0, 0, function () {
            var offset = this.utcOffset();
            var sign = '+';
            if (offset < 0) {
                offset = -offset;
                sign = '-';
            }
            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);
        });
    }

    offset('Z', ':');
    offset('ZZ', '');

    // PARSING

    addRegexToken('Z',  matchShortOffset);
    addRegexToken('ZZ', matchShortOffset);
    addParseToken(['Z', 'ZZ'], function (input, array, config) {
        config._useUTC = true;
        config._tzm = offsetFromString(matchShortOffset, input);
    });

    // HELPERS

    // timezone chunker
    // '+10:00' > ['10',  '00']
    // '-1530'  > ['-15', '30']
    var chunkOffset = /([\+\-]|\d\d)/gi;

    function offsetFromString(matcher, string) {
        var matches = (string || '').match(matcher);

        if (matches === null) {
            return null;
        }

        var chunk   = matches[matches.length - 1] || [];
        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];
        var minutes = +(parts[1] * 60) + toInt(parts[2]);

        return minutes === 0 ?
          0 :
          parts[0] === '+' ? minutes : -minutes;
    }

    // Return a moment from input, that is local/utc/zone equivalent to model.
    function cloneWithOffset(input, model) {
        var res, diff;
        if (model._isUTC) {
            res = model.clone();
            diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();
            // Use low-level api, because this fn is low-level api.
            res._d.setTime(res._d.valueOf() + diff);
            hooks.updateOffset(res, false);
            return res;
        } else {
            return createLocal(input).local();
        }
    }

    function getDateOffset (m) {
        // On Firefox.24 Date#getTimezoneOffset returns a floating point.
        // https://github.com/moment/moment/pull/1871
        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;
    }

    // HOOKS

    // This function will be called whenever a moment is mutated.
    // It is intended to keep the offset in sync with the timezone.
    hooks.updateOffset = function () {};

    // MOMENTS

    // keepLocalTime = true means only change the timezone, without
    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
    // +0200, so we adjust the time as needed, to be valid.
    //
    // Keeping the time actually adds/subtracts (one hour)
    // from the actual represented time. That is why we call updateOffset
    // a second time. In case it wants us to change the offset again
    // _changeInProgress == true case, then we have to adjust, because
    // there is no such time in the given timezone.
    function getSetOffset (input, keepLocalTime, keepMinutes) {
        var offset = this._offset || 0,
            localAdjust;
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        if (input != null) {
            if (typeof input === 'string') {
                input = offsetFromString(matchShortOffset, input);
                if (input === null) {
                    return this;
                }
            } else if (Math.abs(input) < 16 && !keepMinutes) {
                input = input * 60;
            }
            if (!this._isUTC && keepLocalTime) {
                localAdjust = getDateOffset(this);
            }
            this._offset = input;
            this._isUTC = true;
            if (localAdjust != null) {
                this.add(localAdjust, 'm');
            }
            if (offset !== input) {
                if (!keepLocalTime || this._changeInProgress) {
                    addSubtract(this, createDuration(input - offset, 'm'), 1, false);
                } else if (!this._changeInProgress) {
                    this._changeInProgress = true;
                    hooks.updateOffset(this, true);
                    this._changeInProgress = null;
                }
            }
            return this;
        } else {
            return this._isUTC ? offset : getDateOffset(this);
        }
    }

    function getSetZone (input, keepLocalTime) {
        if (input != null) {
            if (typeof input !== 'string') {
                input = -input;
            }

            this.utcOffset(input, keepLocalTime);

            return this;
        } else {
            return -this.utcOffset();
        }
    }

    function setOffsetToUTC (keepLocalTime) {
        return this.utcOffset(0, keepLocalTime);
    }

    function setOffsetToLocal (keepLocalTime) {
        if (this._isUTC) {
            this.utcOffset(0, keepLocalTime);
            this._isUTC = false;

            if (keepLocalTime) {
                this.subtract(getDateOffset(this), 'm');
            }
        }
        return this;
    }

    function setOffsetToParsedOffset () {
        if (this._tzm != null) {
            this.utcOffset(this._tzm, false, true);
        } else if (typeof this._i === 'string') {
            var tZone = offsetFromString(matchOffset, this._i);
            if (tZone != null) {
                this.utcOffset(tZone);
            }
            else {
                this.utcOffset(0, true);
            }
        }
        return this;
    }

    function hasAlignedHourOffset (input) {
        if (!this.isValid()) {
            return false;
        }
        input = input ? createLocal(input).utcOffset() : 0;

        return (this.utcOffset() - input) % 60 === 0;
    }

    function isDaylightSavingTime () {
        return (
            this.utcOffset() > this.clone().month(0).utcOffset() ||
            this.utcOffset() > this.clone().month(5).utcOffset()
        );
    }

    function isDaylightSavingTimeShifted () {
        if (!isUndefined(this._isDSTShifted)) {
            return this._isDSTShifted;
        }

        var c = {};

        copyConfig(c, this);
        c = prepareConfig(c);

        if (c._a) {
            var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
            this._isDSTShifted = this.isValid() &&
                compareArrays(c._a, other.toArray()) > 0;
        } else {
            this._isDSTShifted = false;
        }

        return this._isDSTShifted;
    }

    function isLocal () {
        return this.isValid() ? !this._isUTC : false;
    }

    function isUtcOffset () {
        return this.isValid() ? this._isUTC : false;
    }

    function isUtc () {
        return this.isValid() ? this._isUTC && this._offset === 0 : false;
    }

    // ASP.NET json date format regex
    var aspNetRegex = /^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/;

    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
    // and further modified to allow for strings containing both week and day
    var isoRegex = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;

    function createDuration (input, key) {
        var duration = input,
            // matching against regexp is expensive, do it on demand
            match = null,
            sign,
            ret,
            diffRes;

        if (isDuration(input)) {
            duration = {
                ms : input._milliseconds,
                d  : input._days,
                M  : input._months
            };
        } else if (isNumber(input)) {
            duration = {};
            if (key) {
                duration[key] = input;
            } else {
                duration.milliseconds = input;
            }
        } else if (!!(match = aspNetRegex.exec(input))) {
            sign = (match[1] === '-') ? -1 : 1;
            duration = {
                y  : 0,
                d  : toInt(match[DATE])                         * sign,
                h  : toInt(match[HOUR])                         * sign,
                m  : toInt(match[MINUTE])                       * sign,
                s  : toInt(match[SECOND])                       * sign,
                ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match
            };
        } else if (!!(match = isoRegex.exec(input))) {
            sign = (match[1] === '-') ? -1 : (match[1] === '+') ? 1 : 1;
            duration = {
                y : parseIso(match[2], sign),
                M : parseIso(match[3], sign),
                w : parseIso(match[4], sign),
                d : parseIso(match[5], sign),
                h : parseIso(match[6], sign),
                m : parseIso(match[7], sign),
                s : parseIso(match[8], sign)
            };
        } else if (duration == null) {// checks for null or undefined
            duration = {};
        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {
            diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));

            duration = {};
            duration.ms = diffRes.milliseconds;
            duration.M = diffRes.months;
        }

        ret = new Duration(duration);

        if (isDuration(input) && hasOwnProp(input, '_locale')) {
            ret._locale = input._locale;
        }

        return ret;
    }

    createDuration.fn = Duration.prototype;
    createDuration.invalid = createInvalid$1;

    function parseIso (inp, sign) {
        // We'd normally use ~~inp for this, but unfortunately it also
        // converts floats to ints.
        // inp may be undefined, so careful calling replace on it.
        var res = inp && parseFloat(inp.replace(',', '.'));
        // apply sign while we're at it
        return (isNaN(res) ? 0 : res) * sign;
    }

    function positiveMomentsDifference(base, other) {
        var res = {milliseconds: 0, months: 0};

        res.months = other.month() - base.month() +
            (other.year() - base.year()) * 12;
        if (base.clone().add(res.months, 'M').isAfter(other)) {
            --res.months;
        }

        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));

        return res;
    }

    function momentsDifference(base, other) {
        var res;
        if (!(base.isValid() && other.isValid())) {
            return {milliseconds: 0, months: 0};
        }

        other = cloneWithOffset(other, base);
        if (base.isBefore(other)) {
            res = positiveMomentsDifference(base, other);
        } else {
            res = positiveMomentsDifference(other, base);
            res.milliseconds = -res.milliseconds;
            res.months = -res.months;
        }

        return res;
    }

    // TODO: remove 'name' arg after deprecation is removed
    function createAdder(direction, name) {
        return function (val, period) {
            var dur, tmp;
            //invert the arguments, but complain about it
            if (period !== null && !isNaN(+period)) {
                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +
                'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');
                tmp = val; val = period; period = tmp;
            }

            val = typeof val === 'string' ? +val : val;
            dur = createDuration(val, period);
            addSubtract(this, dur, direction);
            return this;
        };
    }

    function addSubtract (mom, duration, isAdding, updateOffset) {
        var milliseconds = duration._milliseconds,
            days = absRound(duration._days),
            months = absRound(duration._months);

        if (!mom.isValid()) {
            // No op
            return;
        }

        updateOffset = updateOffset == null ? true : updateOffset;

        if (months) {
            setMonth(mom, get(mom, 'Month') + months * isAdding);
        }
        if (days) {
            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);
        }
        if (milliseconds) {
            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
        }
        if (updateOffset) {
            hooks.updateOffset(mom, days || months);
        }
    }

    var add      = createAdder(1, 'add');
    var subtract = createAdder(-1, 'subtract');

    function getCalendarFormat(myMoment, now) {
        var diff = myMoment.diff(now, 'days', true);
        return diff < -6 ? 'sameElse' :
                diff < -1 ? 'lastWeek' :
                diff < 0 ? 'lastDay' :
                diff < 1 ? 'sameDay' :
                diff < 2 ? 'nextDay' :
                diff < 7 ? 'nextWeek' : 'sameElse';
    }

    function calendar$1 (time, formats) {
        // We want to compare the start of today, vs this.
        // Getting start-of-today depends on whether we're local/utc/offset or not.
        var now = time || createLocal(),
            sod = cloneWithOffset(now, this).startOf('day'),
            format = hooks.calendarFormat(this, sod) || 'sameElse';

        var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);

        return this.format(output || this.localeData().calendar(format, this, createLocal(now)));
    }

    function clone () {
        return new Moment(this);
    }

    function isAfter (input, units) {
        var localInput = isMoment(input) ? input : createLocal(input);
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');
        if (units === 'millisecond') {
            return this.valueOf() > localInput.valueOf();
        } else {
            return localInput.valueOf() < this.clone().startOf(units).valueOf();
        }
    }

    function isBefore (input, units) {
        var localInput = isMoment(input) ? input : createLocal(input);
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');
        if (units === 'millisecond') {
            return this.valueOf() < localInput.valueOf();
        } else {
            return this.clone().endOf(units).valueOf() < localInput.valueOf();
        }
    }

    function isBetween (from, to, units, inclusivity) {
        inclusivity = inclusivity || '()';
        return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&
            (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));
    }

    function isSame (input, units) {
        var localInput = isMoment(input) ? input : createLocal(input),
            inputMs;
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units || 'millisecond');
        if (units === 'millisecond') {
            return this.valueOf() === localInput.valueOf();
        } else {
            inputMs = localInput.valueOf();
            return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();
        }
    }

    function isSameOrAfter (input, units) {
        return this.isSame(input, units) || this.isAfter(input,units);
    }

    function isSameOrBefore (input, units) {
        return this.isSame(input, units) || this.isBefore(input,units);
    }

    function diff (input, units, asFloat) {
        var that,
            zoneDelta,
            output;

        if (!this.isValid()) {
            return NaN;
        }

        that = cloneWithOffset(input, this);

        if (!that.isValid()) {
            return NaN;
        }

        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;

        units = normalizeUnits(units);

        switch (units) {
            case 'year': output = monthDiff(this, that) / 12; break;
            case 'month': output = monthDiff(this, that); break;
            case 'quarter': output = monthDiff(this, that) / 3; break;
            case 'second': output = (this - that) / 1e3; break; // 1000
            case 'minute': output = (this - that) / 6e4; break; // 1000 * 60
            case 'hour': output = (this - that) / 36e5; break; // 1000 * 60 * 60
            case 'day': output = (this - that - zoneDelta) / 864e5; break; // 1000 * 60 * 60 * 24, negate dst
            case 'week': output = (this - that - zoneDelta) / 6048e5; break; // 1000 * 60 * 60 * 24 * 7, negate dst
            default: output = this - that;
        }

        return asFloat ? output : absFloor(output);
    }

    function monthDiff (a, b) {
        // difference in months
        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),
            // b is in (anchor - 1 month, anchor + 1 month)
            anchor = a.clone().add(wholeMonthDiff, 'months'),
            anchor2, adjust;

        if (b - anchor < 0) {
            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
            // linear across the month
            adjust = (b - anchor) / (anchor - anchor2);
        } else {
            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
            // linear across the month
            adjust = (b - anchor) / (anchor2 - anchor);
        }

        //check for negative zero, return zero if negative zero
        return -(wholeMonthDiff + adjust) || 0;
    }

    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';
    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';

    function toString () {
        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
    }

    function toISOString(keepOffset) {
        if (!this.isValid()) {
            return null;
        }
        var utc = keepOffset !== true;
        var m = utc ? this.clone().utc() : this;
        if (m.year() < 0 || m.year() > 9999) {
            return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');
        }
        if (isFunction(Date.prototype.toISOString)) {
            // native implementation is ~50x faster, use it when we can
            if (utc) {
                return this.toDate().toISOString();
            } else {
                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));
            }
        }
        return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');
    }

    /**
     * Return a human readable representation of a moment that can
     * also be evaluated to get a new moment which is the same
     *
     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects
     */
    function inspect () {
        if (!this.isValid()) {
            return 'moment.invalid(/* ' + this._i + ' */)';
        }
        var func = 'moment';
        var zone = '';
        if (!this.isLocal()) {
            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';
            zone = 'Z';
        }
        var prefix = '[' + func + '("]';
        var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';
        var datetime = '-MM-DD[T]HH:mm:ss.SSS';
        var suffix = zone + '[")]';

        return this.format(prefix + year + datetime + suffix);
    }

    function format (inputString) {
        if (!inputString) {
            inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;
        }
        var output = formatMoment(this, inputString);
        return this.localeData().postformat(output);
    }

    function from (time, withoutSuffix) {
        if (this.isValid() &&
                ((isMoment(time) && time.isValid()) ||
                 createLocal(time).isValid())) {
            return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);
        } else {
            return this.localeData().invalidDate();
        }
    }

    function fromNow (withoutSuffix) {
        return this.from(createLocal(), withoutSuffix);
    }

    function to (time, withoutSuffix) {
        if (this.isValid() &&
                ((isMoment(time) && time.isValid()) ||
                 createLocal(time).isValid())) {
            return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);
        } else {
            return this.localeData().invalidDate();
        }
    }

    function toNow (withoutSuffix) {
        return this.to(createLocal(), withoutSuffix);
    }

    // If passed a locale key, it will set the locale for this
    // instance.  Otherwise, it will return the locale configuration
    // variables for this instance.
    function locale (key) {
        var newLocaleData;

        if (key === undefined) {
            return this._locale._abbr;
        } else {
            newLocaleData = getLocale(key);
            if (newLocaleData != null) {
                this._locale = newLocaleData;
            }
            return this;
        }
    }

    var lang = deprecate(
        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
        function (key) {
            if (key === undefined) {
                return this.localeData();
            } else {
                return this.locale(key);
            }
        }
    );

    function localeData () {
        return this._locale;
    }

    function startOf (units) {
        units = normalizeUnits(units);
        // the following switch intentionally omits break keywords
        // to utilize falling through the cases.
        switch (units) {
            case 'year':
                this.month(0);
                /* falls through */
            case 'quarter':
            case 'month':
                this.date(1);
                /* falls through */
            case 'week':
            case 'isoWeek':
            case 'day':
            case 'date':
                this.hours(0);
                /* falls through */
            case 'hour':
                this.minutes(0);
                /* falls through */
            case 'minute':
                this.seconds(0);
                /* falls through */
            case 'second':
                this.milliseconds(0);
        }

        // weeks are a special case
        if (units === 'week') {
            this.weekday(0);
        }
        if (units === 'isoWeek') {
            this.isoWeekday(1);
        }

        // quarters are also special
        if (units === 'quarter') {
            this.month(Math.floor(this.month() / 3) * 3);
        }

        return this;
    }

    function endOf (units) {
        units = normalizeUnits(units);
        if (units === undefined || units === 'millisecond') {
            return this;
        }

        // 'date' is an alias for 'day', so it should be considered as such.
        if (units === 'date') {
            units = 'day';
        }

        return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');
    }

    function valueOf () {
        return this._d.valueOf() - ((this._offset || 0) * 60000);
    }

    function unix () {
        return Math.floor(this.valueOf() / 1000);
    }

    function toDate () {
        return new Date(this.valueOf());
    }

    function toArray () {
        var m = this;
        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];
    }

    function toObject () {
        var m = this;
        return {
            years: m.year(),
            months: m.month(),
            date: m.date(),
            hours: m.hours(),
            minutes: m.minutes(),
            seconds: m.seconds(),
            milliseconds: m.milliseconds()
        };
    }

    function toJSON () {
        // new Date(NaN).toJSON() === null
        return this.isValid() ? this.toISOString() : null;
    }

    function isValid$2 () {
        return isValid(this);
    }

    function parsingFlags () {
        return extend({}, getParsingFlags(this));
    }

    function invalidAt () {
        return getParsingFlags(this).overflow;
    }

    function creationData() {
        return {
            input: this._i,
            format: this._f,
            locale: this._locale,
            isUTC: this._isUTC,
            strict: this._strict
        };
    }

    // FORMATTING

    addFormatToken(0, ['gg', 2], 0, function () {
        return this.weekYear() % 100;
    });

    addFormatToken(0, ['GG', 2], 0, function () {
        return this.isoWeekYear() % 100;
    });

    function addWeekYearFormatToken (token, getter) {
        addFormatToken(0, [token, token.length], 0, getter);
    }

    addWeekYearFormatToken('gggg',     'weekYear');
    addWeekYearFormatToken('ggggg',    'weekYear');
    addWeekYearFormatToken('GGGG',  'isoWeekYear');
    addWeekYearFormatToken('GGGGG', 'isoWeekYear');

    // ALIASES

    addUnitAlias('weekYear', 'gg');
    addUnitAlias('isoWeekYear', 'GG');

    // PRIORITY

    addUnitPriority('weekYear', 1);
    addUnitPriority('isoWeekYear', 1);


    // PARSING

    addRegexToken('G',      matchSigned);
    addRegexToken('g',      matchSigned);
    addRegexToken('GG',     match1to2, match2);
    addRegexToken('gg',     match1to2, match2);
    addRegexToken('GGGG',   match1to4, match4);
    addRegexToken('gggg',   match1to4, match4);
    addRegexToken('GGGGG',  match1to6, match6);
    addRegexToken('ggggg',  match1to6, match6);

    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {
        week[token.substr(0, 2)] = toInt(input);
    });

    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
        week[token] = hooks.parseTwoDigitYear(input);
    });

    // MOMENTS

    function getSetWeekYear (input) {
        return getSetWeekYearHelper.call(this,
                input,
                this.week(),
                this.weekday(),
                this.localeData()._week.dow,
                this.localeData()._week.doy);
    }

    function getSetISOWeekYear (input) {
        return getSetWeekYearHelper.call(this,
                input, this.isoWeek(), this.isoWeekday(), 1, 4);
    }

    function getISOWeeksInYear () {
        return weeksInYear(this.year(), 1, 4);
    }

    function getWeeksInYear () {
        var weekInfo = this.localeData()._week;
        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
    }

    function getSetWeekYearHelper(input, week, weekday, dow, doy) {
        var weeksTarget;
        if (input == null) {
            return weekOfYear(this, dow, doy).year;
        } else {
            weeksTarget = weeksInYear(input, dow, doy);
            if (week > weeksTarget) {
                week = weeksTarget;
            }
            return setWeekAll.call(this, input, week, weekday, dow, doy);
        }
    }

    function setWeekAll(weekYear, week, weekday, dow, doy) {
        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);

        this.year(date.getUTCFullYear());
        this.month(date.getUTCMonth());
        this.date(date.getUTCDate());
        return this;
    }

    // FORMATTING

    addFormatToken('Q', 0, 'Qo', 'quarter');

    // ALIASES

    addUnitAlias('quarter', 'Q');

    // PRIORITY

    addUnitPriority('quarter', 7);

    // PARSING

    addRegexToken('Q', match1);
    addParseToken('Q', function (input, array) {
        array[MONTH] = (toInt(input) - 1) * 3;
    });

    // MOMENTS

    function getSetQuarter (input) {
        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
    }

    // FORMATTING

    addFormatToken('D', ['DD', 2], 'Do', 'date');

    // ALIASES

    addUnitAlias('date', 'D');

    // PRIORITY
    addUnitPriority('date', 9);

    // PARSING

    addRegexToken('D',  match1to2);
    addRegexToken('DD', match1to2, match2);
    addRegexToken('Do', function (isStrict, locale) {
        // TODO: Remove "ordinalParse" fallback in next major release.
        return isStrict ?
          (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :
          locale._dayOfMonthOrdinalParseLenient;
    });

    addParseToken(['D', 'DD'], DATE);
    addParseToken('Do', function (input, array) {
        array[DATE] = toInt(input.match(match1to2)[0]);
    });

    // MOMENTS

    var getSetDayOfMonth = makeGetSet('Date', true);

    // FORMATTING

    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');

    // ALIASES

    addUnitAlias('dayOfYear', 'DDD');

    // PRIORITY
    addUnitPriority('dayOfYear', 4);

    // PARSING

    addRegexToken('DDD',  match1to3);
    addRegexToken('DDDD', match3);
    addParseToken(['DDD', 'DDDD'], function (input, array, config) {
        config._dayOfYear = toInt(input);
    });

    // HELPERS

    // MOMENTS

    function getSetDayOfYear (input) {
        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;
        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');
    }

    // FORMATTING

    addFormatToken('m', ['mm', 2], 0, 'minute');

    // ALIASES

    addUnitAlias('minute', 'm');

    // PRIORITY

    addUnitPriority('minute', 14);

    // PARSING

    addRegexToken('m',  match1to2);
    addRegexToken('mm', match1to2, match2);
    addParseToken(['m', 'mm'], MINUTE);

    // MOMENTS

    var getSetMinute = makeGetSet('Minutes', false);

    // FORMATTING

    addFormatToken('s', ['ss', 2], 0, 'second');

    // ALIASES

    addUnitAlias('second', 's');

    // PRIORITY

    addUnitPriority('second', 15);

    // PARSING

    addRegexToken('s',  match1to2);
    addRegexToken('ss', match1to2, match2);
    addParseToken(['s', 'ss'], SECOND);

    // MOMENTS

    var getSetSecond = makeGetSet('Seconds', false);

    // FORMATTING

    addFormatToken('S', 0, 0, function () {
        return ~~(this.millisecond() / 100);
    });

    addFormatToken(0, ['SS', 2], 0, function () {
        return ~~(this.millisecond() / 10);
    });

    addFormatToken(0, ['SSS', 3], 0, 'millisecond');
    addFormatToken(0, ['SSSS', 4], 0, function () {
        return this.millisecond() * 10;
    });
    addFormatToken(0, ['SSSSS', 5], 0, function () {
        return this.millisecond() * 100;
    });
    addFormatToken(0, ['SSSSSS', 6], 0, function () {
        return this.millisecond() * 1000;
    });
    addFormatToken(0, ['SSSSSSS', 7], 0, function () {
        return this.millisecond() * 10000;
    });
    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
        return this.millisecond() * 100000;
    });
    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
        return this.millisecond() * 1000000;
    });


    // ALIASES

    addUnitAlias('millisecond', 'ms');

    // PRIORITY

    addUnitPriority('millisecond', 16);

    // PARSING

    addRegexToken('S',    match1to3, match1);
    addRegexToken('SS',   match1to3, match2);
    addRegexToken('SSS',  match1to3, match3);

    var token;
    for (token = 'SSSS'; token.length <= 9; token += 'S') {
        addRegexToken(token, matchUnsigned);
    }

    function parseMs(input, array) {
        array[MILLISECOND] = toInt(('0.' + input) * 1000);
    }

    for (token = 'S'; token.length <= 9; token += 'S') {
        addParseToken(token, parseMs);
    }
    // MOMENTS

    var getSetMillisecond = makeGetSet('Milliseconds', false);

    // FORMATTING

    addFormatToken('z',  0, 0, 'zoneAbbr');
    addFormatToken('zz', 0, 0, 'zoneName');

    // MOMENTS

    function getZoneAbbr () {
        return this._isUTC ? 'UTC' : '';
    }

    function getZoneName () {
        return this._isUTC ? 'Coordinated Universal Time' : '';
    }

    var proto = Moment.prototype;

    proto.add               = add;
    proto.calendar          = calendar$1;
    proto.clone             = clone;
    proto.diff              = diff;
    proto.endOf             = endOf;
    proto.format            = format;
    proto.from              = from;
    proto.fromNow           = fromNow;
    proto.to                = to;
    proto.toNow             = toNow;
    proto.get               = stringGet;
    proto.invalidAt         = invalidAt;
    proto.isAfter           = isAfter;
    proto.isBefore          = isBefore;
    proto.isBetween         = isBetween;
    proto.isSame            = isSame;
    proto.isSameOrAfter     = isSameOrAfter;
    proto.isSameOrBefore    = isSameOrBefore;
    proto.isValid           = isValid$2;
    proto.lang              = lang;
    proto.locale            = locale;
    proto.localeData        = localeData;
    proto.max               = prototypeMax;
    proto.min               = prototypeMin;
    proto.parsingFlags      = parsingFlags;
    proto.set               = stringSet;
    proto.startOf           = startOf;
    proto.subtract          = subtract;
    proto.toArray           = toArray;
    proto.toObject          = toObject;
    proto.toDate            = toDate;
    proto.toISOString       = toISOString;
    proto.inspect           = inspect;
    proto.toJSON            = toJSON;
    proto.toString          = toString;
    proto.unix              = unix;
    proto.valueOf           = valueOf;
    proto.creationData      = creationData;
    proto.year       = getSetYear;
    proto.isLeapYear = getIsLeapYear;
    proto.weekYear    = getSetWeekYear;
    proto.isoWeekYear = getSetISOWeekYear;
    proto.quarter = proto.quarters = getSetQuarter;
    proto.month       = getSetMonth;
    proto.daysInMonth = getDaysInMonth;
    proto.week           = proto.weeks        = getSetWeek;
    proto.isoWeek        = proto.isoWeeks     = getSetISOWeek;
    proto.weeksInYear    = getWeeksInYear;
    proto.isoWeeksInYear = getISOWeeksInYear;
    proto.date       = getSetDayOfMonth;
    proto.day        = proto.days             = getSetDayOfWeek;
    proto.weekday    = getSetLocaleDayOfWeek;
    proto.isoWeekday = getSetISODayOfWeek;
    proto.dayOfYear  = getSetDayOfYear;
    proto.hour = proto.hours = getSetHour;
    proto.minute = proto.minutes = getSetMinute;
    proto.second = proto.seconds = getSetSecond;
    proto.millisecond = proto.milliseconds = getSetMillisecond;
    proto.utcOffset            = getSetOffset;
    proto.utc                  = setOffsetToUTC;
    proto.local                = setOffsetToLocal;
    proto.parseZone            = setOffsetToParsedOffset;
    proto.hasAlignedHourOffset = hasAlignedHourOffset;
    proto.isDST                = isDaylightSavingTime;
    proto.isLocal              = isLocal;
    proto.isUtcOffset          = isUtcOffset;
    proto.isUtc                = isUtc;
    proto.isUTC                = isUtc;
    proto.zoneAbbr = getZoneAbbr;
    proto.zoneName = getZoneName;
    proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);
    proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);
    proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);
    proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);
    proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);

    function createUnix (input) {
        return createLocal(input * 1000);
    }

    function createInZone () {
        return createLocal.apply(null, arguments).parseZone();
    }

    function preParsePostFormat (string) {
        return string;
    }

    var proto$1 = Locale.prototype;

    proto$1.calendar        = calendar;
    proto$1.longDateFormat  = longDateFormat;
    proto$1.invalidDate     = invalidDate;
    proto$1.ordinal         = ordinal;
    proto$1.preparse        = preParsePostFormat;
    proto$1.postformat      = preParsePostFormat;
    proto$1.relativeTime    = relativeTime;
    proto$1.pastFuture      = pastFuture;
    proto$1.set             = set;

    proto$1.months            =        localeMonths;
    proto$1.monthsShort       =        localeMonthsShort;
    proto$1.monthsParse       =        localeMonthsParse;
    proto$1.monthsRegex       = monthsRegex;
    proto$1.monthsShortRegex  = monthsShortRegex;
    proto$1.week = localeWeek;
    proto$1.firstDayOfYear = localeFirstDayOfYear;
    proto$1.firstDayOfWeek = localeFirstDayOfWeek;

    proto$1.weekdays       =        localeWeekdays;
    proto$1.weekdaysMin    =        localeWeekdaysMin;
    proto$1.weekdaysShort  =        localeWeekdaysShort;
    proto$1.weekdaysParse  =        localeWeekdaysParse;

    proto$1.weekdaysRegex       =        weekdaysRegex;
    proto$1.weekdaysShortRegex  =        weekdaysShortRegex;
    proto$1.weekdaysMinRegex    =        weekdaysMinRegex;

    proto$1.isPM = localeIsPM;
    proto$1.meridiem = localeMeridiem;

    function get$1 (format, index, field, setter) {
        var locale = getLocale();
        var utc = createUTC().set(setter, index);
        return locale[field](utc, format);
    }

    function listMonthsImpl (format, index, field) {
        if (isNumber(format)) {
            index = format;
            format = undefined;
        }

        format = format || '';

        if (index != null) {
            return get$1(format, index, field, 'month');
        }

        var i;
        var out = [];
        for (i = 0; i < 12; i++) {
            out[i] = get$1(format, i, field, 'month');
        }
        return out;
    }

    // ()
    // (5)
    // (fmt, 5)
    // (fmt)
    // (true)
    // (true, 5)
    // (true, fmt, 5)
    // (true, fmt)
    function listWeekdaysImpl (localeSorted, format, index, field) {
        if (typeof localeSorted === 'boolean') {
            if (isNumber(format)) {
                index = format;
                format = undefined;
            }

            format = format || '';
        } else {
            format = localeSorted;
            index = format;
            localeSorted = false;

            if (isNumber(format)) {
                index = format;
                format = undefined;
            }

            format = format || '';
        }

        var locale = getLocale(),
            shift = localeSorted ? locale._week.dow : 0;

        if (index != null) {
            return get$1(format, (index + shift) % 7, field, 'day');
        }

        var i;
        var out = [];
        for (i = 0; i < 7; i++) {
            out[i] = get$1(format, (i + shift) % 7, field, 'day');
        }
        return out;
    }

    function listMonths (format, index) {
        return listMonthsImpl(format, index, 'months');
    }

    function listMonthsShort (format, index) {
        return listMonthsImpl(format, index, 'monthsShort');
    }

    function listWeekdays (localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');
    }

    function listWeekdaysShort (localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');
    }

    function listWeekdaysMin (localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');
    }

    getSetGlobalLocale('en', {
        dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (toInt(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        }
    });

    // Side effect imports

    hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);
    hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);

    var mathAbs = Math.abs;

    function abs () {
        var data           = this._data;

        this._milliseconds = mathAbs(this._milliseconds);
        this._days         = mathAbs(this._days);
        this._months       = mathAbs(this._months);

        data.milliseconds  = mathAbs(data.milliseconds);
        data.seconds       = mathAbs(data.seconds);
        data.minutes       = mathAbs(data.minutes);
        data.hours         = mathAbs(data.hours);
        data.months        = mathAbs(data.months);
        data.years         = mathAbs(data.years);

        return this;
    }

    function addSubtract$1 (duration, input, value, direction) {
        var other = createDuration(input, value);

        duration._milliseconds += direction * other._milliseconds;
        duration._days         += direction * other._days;
        duration._months       += direction * other._months;

        return duration._bubble();
    }

    // supports only 2.0-style add(1, 's') or add(duration)
    function add$1 (input, value) {
        return addSubtract$1(this, input, value, 1);
    }

    // supports only 2.0-style subtract(1, 's') or subtract(duration)
    function subtract$1 (input, value) {
        return addSubtract$1(this, input, value, -1);
    }

    function absCeil (number) {
        if (number < 0) {
            return Math.floor(number);
        } else {
            return Math.ceil(number);
        }
    }

    function bubble () {
        var milliseconds = this._milliseconds;
        var days         = this._days;
        var months       = this._months;
        var data         = this._data;
        var seconds, minutes, hours, years, monthsFromDays;

        // if we have a mix of positive and negative values, bubble down first
        // check: https://github.com/moment/moment/issues/2166
        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||
                (milliseconds <= 0 && days <= 0 && months <= 0))) {
            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
            days = 0;
            months = 0;
        }

        // The following code bubbles up values, see the tests for
        // examples of what that means.
        data.milliseconds = milliseconds % 1000;

        seconds           = absFloor(milliseconds / 1000);
        data.seconds      = seconds % 60;

        minutes           = absFloor(seconds / 60);
        data.minutes      = minutes % 60;

        hours             = absFloor(minutes / 60);
        data.hours        = hours % 24;

        days += absFloor(hours / 24);

        // convert days to months
        monthsFromDays = absFloor(daysToMonths(days));
        months += monthsFromDays;
        days -= absCeil(monthsToDays(monthsFromDays));

        // 12 months -> 1 year
        years = absFloor(months / 12);
        months %= 12;

        data.days   = days;
        data.months = months;
        data.years  = years;

        return this;
    }

    function daysToMonths (days) {
        // 400 years have 146097 days (taking into account leap year rules)
        // 400 years have 12 months === 4800
        return days * 4800 / 146097;
    }

    function monthsToDays (months) {
        // the reverse of daysToMonths
        return months * 146097 / 4800;
    }

    function as (units) {
        if (!this.isValid()) {
            return NaN;
        }
        var days;
        var months;
        var milliseconds = this._milliseconds;

        units = normalizeUnits(units);

        if (units === 'month' || units === 'year') {
            days   = this._days   + milliseconds / 864e5;
            months = this._months + daysToMonths(days);
            return units === 'month' ? months : months / 12;
        } else {
            // handle milliseconds separately because of floating point math errors (issue #1867)
            days = this._days + Math.round(monthsToDays(this._months));
            switch (units) {
                case 'week'   : return days / 7     + milliseconds / 6048e5;
                case 'day'    : return days         + milliseconds / 864e5;
                case 'hour'   : return days * 24    + milliseconds / 36e5;
                case 'minute' : return days * 1440  + milliseconds / 6e4;
                case 'second' : return days * 86400 + milliseconds / 1000;
                // Math.floor prevents floating point math errors here
                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;
                default: throw new Error('Unknown unit ' + units);
            }
        }
    }

    // TODO: Use this.as('ms')?
    function valueOf$1 () {
        if (!this.isValid()) {
            return NaN;
        }
        return (
            this._milliseconds +
            this._days * 864e5 +
            (this._months % 12) * 2592e6 +
            toInt(this._months / 12) * 31536e6
        );
    }

    function makeAs (alias) {
        return function () {
            return this.as(alias);
        };
    }

    var asMilliseconds = makeAs('ms');
    var asSeconds      = makeAs('s');
    var asMinutes      = makeAs('m');
    var asHours        = makeAs('h');
    var asDays         = makeAs('d');
    var asWeeks        = makeAs('w');
    var asMonths       = makeAs('M');
    var asYears        = makeAs('y');

    function clone$1 () {
        return createDuration(this);
    }

    function get$2 (units) {
        units = normalizeUnits(units);
        return this.isValid() ? this[units + 's']() : NaN;
    }

    function makeGetter(name) {
        return function () {
            return this.isValid() ? this._data[name] : NaN;
        };
    }

    var milliseconds = makeGetter('milliseconds');
    var seconds      = makeGetter('seconds');
    var minutes      = makeGetter('minutes');
    var hours        = makeGetter('hours');
    var days         = makeGetter('days');
    var months       = makeGetter('months');
    var years        = makeGetter('years');

    function weeks () {
        return absFloor(this.days() / 7);
    }

    var round = Math.round;
    var thresholds = {
        ss: 44,         // a few seconds to seconds
        s : 45,         // seconds to minute
        m : 45,         // minutes to hour
        h : 22,         // hours to day
        d : 26,         // days to month
        M : 11          // months to year
    };

    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
    }

    function relativeTime$1 (posNegDuration, withoutSuffix, locale) {
        var duration = createDuration(posNegDuration).abs();
        var seconds  = round(duration.as('s'));
        var minutes  = round(duration.as('m'));
        var hours    = round(duration.as('h'));
        var days     = round(duration.as('d'));
        var months   = round(duration.as('M'));
        var years    = round(duration.as('y'));

        var a = seconds <= thresholds.ss && ['s', seconds]  ||
                seconds < thresholds.s   && ['ss', seconds] ||
                minutes <= 1             && ['m']           ||
                minutes < thresholds.m   && ['mm', minutes] ||
                hours   <= 1             && ['h']           ||
                hours   < thresholds.h   && ['hh', hours]   ||
                days    <= 1             && ['d']           ||
                days    < thresholds.d   && ['dd', days]    ||
                months  <= 1             && ['M']           ||
                months  < thresholds.M   && ['MM', months]  ||
                years   <= 1             && ['y']           || ['yy', years];

        a[2] = withoutSuffix;
        a[3] = +posNegDuration > 0;
        a[4] = locale;
        return substituteTimeAgo.apply(null, a);
    }

    // This function allows you to set the rounding function for relative time strings
    function getSetRelativeTimeRounding (roundingFunction) {
        if (roundingFunction === undefined) {
            return round;
        }
        if (typeof(roundingFunction) === 'function') {
            round = roundingFunction;
            return true;
        }
        return false;
    }

    // This function allows you to set a threshold for relative time strings
    function getSetRelativeTimeThreshold (threshold, limit) {
        if (thresholds[threshold] === undefined) {
            return false;
        }
        if (limit === undefined) {
            return thresholds[threshold];
        }
        thresholds[threshold] = limit;
        if (threshold === 's') {
            thresholds.ss = limit - 1;
        }
        return true;
    }

    function humanize (withSuffix) {
        if (!this.isValid()) {
            return this.localeData().invalidDate();
        }

        var locale = this.localeData();
        var output = relativeTime$1(this, !withSuffix, locale);

        if (withSuffix) {
            output = locale.pastFuture(+this, output);
        }

        return locale.postformat(output);
    }

    var abs$1 = Math.abs;

    function sign(x) {
        return ((x > 0) - (x < 0)) || +x;
    }

    function toISOString$1() {
        // for ISO strings we do not use the normal bubbling rules:
        //  * milliseconds bubble up until they become hours
        //  * days do not bubble at all
        //  * months bubble up until they become years
        // This is because there is no context-free conversion between hours and days
        // (think of clock changes)
        // and also not between days and months (28-31 days per month)
        if (!this.isValid()) {
            return this.localeData().invalidDate();
        }

        var seconds = abs$1(this._milliseconds) / 1000;
        var days         = abs$1(this._days);
        var months       = abs$1(this._months);
        var minutes, hours, years;

        // 3600 seconds -> 60 minutes -> 1 hour
        minutes           = absFloor(seconds / 60);
        hours             = absFloor(minutes / 60);
        seconds %= 60;
        minutes %= 60;

        // 12 months -> 1 year
        years  = absFloor(months / 12);
        months %= 12;


        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
        var Y = years;
        var M = months;
        var D = days;
        var h = hours;
        var m = minutes;
        var s = seconds ? seconds.toFixed(3).replace(/\.?0+$/, '') : '';
        var total = this.asSeconds();

        if (!total) {
            // this is the same as C#'s (Noda) and python (isodate)...
            // but not other JS (goog.date)
            return 'P0D';
        }

        var totalSign = total < 0 ? '-' : '';
        var ymSign = sign(this._months) !== sign(total) ? '-' : '';
        var daysSign = sign(this._days) !== sign(total) ? '-' : '';
        var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';

        return totalSign + 'P' +
            (Y ? ymSign + Y + 'Y' : '') +
            (M ? ymSign + M + 'M' : '') +
            (D ? daysSign + D + 'D' : '') +
            ((h || m || s) ? 'T' : '') +
            (h ? hmsSign + h + 'H' : '') +
            (m ? hmsSign + m + 'M' : '') +
            (s ? hmsSign + s + 'S' : '');
    }

    var proto$2 = Duration.prototype;

    proto$2.isValid        = isValid$1;
    proto$2.abs            = abs;
    proto$2.add            = add$1;
    proto$2.subtract       = subtract$1;
    proto$2.as             = as;
    proto$2.asMilliseconds = asMilliseconds;
    proto$2.asSeconds      = asSeconds;
    proto$2.asMinutes      = asMinutes;
    proto$2.asHours        = asHours;
    proto$2.asDays         = asDays;
    proto$2.asWeeks        = asWeeks;
    proto$2.asMonths       = asMonths;
    proto$2.asYears        = asYears;
    proto$2.valueOf        = valueOf$1;
    proto$2._bubble        = bubble;
    proto$2.clone          = clone$1;
    proto$2.get            = get$2;
    proto$2.milliseconds   = milliseconds;
    proto$2.seconds        = seconds;
    proto$2.minutes        = minutes;
    proto$2.hours          = hours;
    proto$2.days           = days;
    proto$2.weeks          = weeks;
    proto$2.months         = months;
    proto$2.years          = years;
    proto$2.humanize       = humanize;
    proto$2.toISOString    = toISOString$1;
    proto$2.toString       = toISOString$1;
    proto$2.toJSON         = toISOString$1;
    proto$2.locale         = locale;
    proto$2.localeData     = localeData;

    proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);
    proto$2.lang = lang;

    // Side effect imports

    // FORMATTING

    addFormatToken('X', 0, 0, 'unix');
    addFormatToken('x', 0, 0, 'valueOf');

    // PARSING

    addRegexToken('x', matchSigned);
    addRegexToken('X', matchTimestamp);
    addParseToken('X', function (input, array, config) {
        config._d = new Date(parseFloat(input, 10) * 1000);
    });
    addParseToken('x', function (input, array, config) {
        config._d = new Date(toInt(input));
    });

    // Side effect imports


    hooks.version = '2.22.2';

    setHookCallback(createLocal);

    hooks.fn                    = proto;
    hooks.min                   = min;
    hooks.max                   = max;
    hooks.now                   = now;
    hooks.utc                   = createUTC;
    hooks.unix                  = createUnix;
    hooks.months                = listMonths;
    hooks.isDate                = isDate;
    hooks.locale                = getSetGlobalLocale;
    hooks.invalid               = createInvalid;
    hooks.duration              = createDuration;
    hooks.isMoment              = isMoment;
    hooks.weekdays              = listWeekdays;
    hooks.parseZone             = createInZone;
    hooks.localeData            = getLocale;
    hooks.isDuration            = isDuration;
    hooks.monthsShort           = listMonthsShort;
    hooks.weekdaysMin           = listWeekdaysMin;
    hooks.defineLocale          = defineLocale;
    hooks.updateLocale          = updateLocale;
    hooks.locales               = listLocales;
    hooks.weekdaysShort         = listWeekdaysShort;
    hooks.normalizeUnits        = normalizeUnits;
    hooks.relativeTimeRounding  = getSetRelativeTimeRounding;
    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
    hooks.calendarFormat        = getCalendarFormat;
    hooks.prototype             = proto;

    // currently HTML5 input type only supports 24-hour formats
    hooks.HTML5_FMT = {
        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',             // <input type="datetime-local" />
        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',  // <input type="datetime-local" step="1" />
        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',   // <input type="datetime-local" step="0.001" />
        DATE: 'YYYY-MM-DD',                             // <input type="date" />
        TIME: 'HH:mm',                                  // <input type="time" />
        TIME_SECONDS: 'HH:mm:ss',                       // <input type="time" step="1" />
        TIME_MS: 'HH:mm:ss.SSS',                        // <input type="time" step="0.001" />
        WEEK: 'YYYY-[W]WW',                             // <input type="week" />
        MONTH: 'YYYY-MM'                                // <input type="month" />
    };

    return hooks;

})));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(393)(module)))

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _assign = __webpack_require__(32);

var _assign2 = _interopRequireDefault(_assign);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * ------------------------------------------------------------
 * Component 组件基类
 * @author   sensen(rainforest92@126.com)
 * ------------------------------------------------------------
 */

var Regular = __webpack_require__(11);
var _ = __webpack_require__(2);
var filter = __webpack_require__(80);
var directive = __webpack_require__(278);
var animation = __webpack_require__(292);

/**
 * @class Component
 * @extend Regular
 * @param {boolean}       [options.data.readonly=false]     => 是否只读
 * @param {boolean}       [options.data.disabled=false]     => 是否禁用
 * @param {boolean}       [options.data.visible=true]       => 是否显示
 * @param {string}        [options.data.class]              => 补充class
 */
var Component = Regular.extend({
  /**
     * @protected
     */
  config: function config() {
    _.extend(this.data, {
      readonly: false,
      disabled: false,
      visible: true,
      // zh-CN, en-US
      lang: 'zh-CN',
      class: '',
      console: typeof console === 'undefined' ? undefined : console
    });
    this.supr();
  },

  /**
     * @protected
     */
  defaults: function defaults(data) {
    this.data = (0, _assign2.default)(data, this.data);
  },

  /**
     * @protected
     */
  rules: function rules(attris) {
    this.data = (0, _assign2.default)(attris, this.data);
  },

  /**
     * @protected
     */
  reset: function reset() {
    this.data = {};
    this.config();
  },
  $trans: function $trans(key) {
    return _.$trans(key, this);
  }
}).filter(filter).directive(directive);

animation.install(Regular);

module.exports = Component;

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _stringify = __webpack_require__(44);

var _stringify2 = _interopRequireDefault(_stringify);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable */
var Regular = __webpack_require__(11);
var language = __webpack_require__(272);

Regular.prototype.$once = function (event, fn) {
  var call = function call() {
    fn && fn.apply(this, arguments);
    this.$off(event, call);
  };
  this.$on(event, call);
};

var _ = {
  noop: Regular.util.noop,
  dom: Regular.dom,
  isNil: function isNil(val) {
    return val == null || val == undefined;
  },

  /**
     * Check whether the object has the property.
     *
     * @param {Object} obj
     * @param {String} key
     * @return {Boolean}
     */
  hasOwn: function hasOwn(obj, key) {
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    return hasOwnProperty.call(obj, key);
  },
  multiline: function multiline(func) {
    var reg = /^function\s*\(\)\s*\{\s*\/\*+\s*([\s\S]*)\s*\*+\/\s*\}$/;
    return reg.exec(func)[1];
  },
  clone: function clone(obj) {
    return JSON.parse((0, _stringify2.default)(obj));
  }
};

_.throttle = function (fn, delay) {
  var timer = null;

  return function () {
    clearTimeout(timer);
    timer = setTimeout(function () {
      fn();
    }, delay);
  };
};

/**
 * 空闲控制 返回函数连续调用时，空闲时间必须大于或等于 wait，func 才会执行
 *
 * @param  {function} func        传入函数
 * @param  {number}   wait        表示时间窗口的间隔
 * @param  {boolean}  immediate   设置为ture时，调用触发于开始边界而不是结束边界
 * @return {function}             返回客户调用函数
 */
_.debounce = function (func, wait, immediate) {
  var timeout = void 0,
      args = void 0,
      context = void 0,
      timestamp = void 0,
      result = void 0;

  var later = function later() {
    // 据上一次触发时间间隔
    var last = +new Date() - timestamp;

    // 上次被包装函数被调用时间间隔last小于设定时间间隔wait
    if (last < wait && last > 0) {
      timeout = setTimeout(later, wait - last);
    } else {
      timeout = null;
      // 如果设定为immediate===true，因为开始边界已经调用过了此处无需调用
      if (!immediate) {
        result = func.apply(context, args);
        if (!timeout) context = args = null;
      }
    }
  };

  return function () {
    context = this;
    args = arguments;
    timestamp = +new Date();
    var callNow = immediate && !timeout;
    // 如果延时不存在，重新设定延时
    if (!timeout) timeout = setTimeout(later, wait);
    if (callNow) {
      result = func.apply(context, args);
      context = args = null;
    }

    return result;
  };
};

/**
 * 压缩regular模版
 * @param htmlstr
 * @returns {XML|string}
 * add by xuejimiao 2016/02/25
 */
_.compressHtml = function (htmlstr) {
  // 防止nej打包模版后报错
  if (typeof htmlstr !== 'string') {
    return htmlstr;
  }
  var htmlStrArrs = void 0,
      onHTML = false,
      onRegularExpression = false;
  htmlStrArrs = htmlstr.split('');
  return htmlStrArrs.map(function (item) {
    if (item == '<') {
      onHTML = true;
    } else if (item == '>') {
      onHTML = false;
      return item;
    } else if (item == '{') {
      onRegularExpression = true;
    } else if (item == '}') {
      onRegularExpression = false;
      return item;
    }

    if (onHTML || onRegularExpression || !/[\n\s]/g.test(item)) {
      return item;
    }
  }).join('');
};

_.extend = function (o1, o2, override, hasOwnProperty) {
  for (var i in o2) {
    if ((!hasOwnProperty || o2.hasOwnProperty(i)) && (override || o1[i] === undefined)) {
      o1[i] = o2[i];
    }
  }
  return o1;
};

_.dom.emit = function (elem, eventName) {
  if (elem.dispatchEvent) {
    var event = new CustomEvent(eventName);
    elem.dispatchEvent(event);
  } else {
    var event = document.createEventObject();
    elem.fireEvent('on' + eventName, event);
  }
};

_.dom.getPosition = function (elem) {
  var doc = elem && elem.ownerDocument,
      docElem = doc.documentElement,
      body = doc.body;

  var box = elem.getBoundingClientRect ? elem.getBoundingClientRect() : { top: 0, left: 0 };

  var clientTop = docElem.clientTop || body.clientTop || 0,
      clientLeft = docElem.clientLeft || body.clientLeft || 0;

  return { top: box.top - clientTop, left: box.left - clientLeft };

  // var scrollTop = window.pageYOffset || docElem.scrollTop,
  //     scrollLeft = window.pageXOffset || docElem.scrollLeft;

  // return {top: box.top + scrollTop - clientTop, left: box.left + scrollLeft - clientLeft}
};

_.dom.getOffset = function (elem) {
  return { width: elem.clientWidth, height: elem.clientHeight };
};

_.dom.getDimension = function (elem, fixed) {
  return _.extend(_.dom.getOffset(elem), _.dom.getPosition(elem, fixed));
};

_.dom.isInRect = function (position, dimension) {
  if (!position || !dimension) return false;

  return position.left > dimension.left && position.left < dimension.left + dimension.width && position.top > dimension.top && position.top < dimension.top + dimension.height;
};

_.dom.once = function (elem, ev, handle) {
  function real() {
    handle.apply(this, arguments);
    _.dom.off(elem, ev, real);
  }
  _.dom.on(elem, ev, real);
};

_.dom.contains = function (root, n) {
  var node = n;
  while (node) {
    if (node === root) {
      return true;
    }
    node = node.parentNode;
  }

  return false;
};

// Ref: http://jsfiddle.net/mendesjuan/rHMCy/4/
_.dom.fireEvent = function (node, eventName) {
  // Make sure we use the ownerDocument from the provided node to avoid cross-window problems
  var doc = void 0;
  if (node.ownerDocument) {
    doc = node.ownerDocument;
  } else if (node.nodeType == 9) {
    // the node may be the document itself, nodeType 9 = DOCUMENT_NODE
    doc = node;
  } else {
    throw new Error('Invalid node passed to fireEvent: ' + node.id);
  }

  if (node.dispatchEvent) {
    // Gecko-style approach (now the standard) takes more work
    var eventClass = '';

    // Different events have different event classes.
    // If this switch statement can't map an eventName to an eventClass,
    // the event firing is going to fail.
    switch (eventName) {
      case 'click': // Dispatching of 'click' appears to not work correctly in Safari. Use 'mousedown' or 'mouseup' instead.
      case 'mousedown':
      case 'mouseup':
        eventClass = 'MouseEvents';
        break;

      case 'focus':
      case 'change':
      case 'blur':
      case 'select':
        eventClass = 'HTMLEvents';
        break;

      default:
        throw 'fireEvent: Couldn\'t find an event class for event \'' + eventName + '\'.';
        break;
    }
    var event = doc.createEvent(eventClass);

    var bubbles = eventName != 'change';
    event.initEvent(eventName, bubbles, true); // All events created as bubbling and cancelable.

    event.synthetic = true; // allow detection of synthetic events
    node.dispatchEvent(event, true);
  } else if (node.fireEvent) {
    // IE-old school style
    var event = doc.createEventObject();
    event.synthetic = true; // allow detection of synthetic events
    node.fireEvent('on' + eventName, event);
  }
};

_.$trans = function (key, self) {
  var $NEKUI = window.$NEKUI || {};
  return language[$NEKUI.lang || (self ? self.data.lang : '') || 'zh-CN'][key] || '';
};

module.exports = _;

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = assertString;
function assertString(input) {
  if (typeof input !== 'string') {
    throw new TypeError('This library (validator.js) validates strings only');
  }
}
module.exports = exports['default'];

/***/ }),
/* 4 */
/***/ (function(module, exports) {

var core = module.exports = {version: '2.4.0'};
if(typeof __e == 'number')__e = core; // eslint-disable-line no-undef

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.parseValue = exports.TYPE_VALUE_RESOLVER_MAP = exports.RANGE_SEPARATOR = exports.DEFAULT_FORMATS = exports.formatDateLabels = exports.initTimeDate = exports.nextMonth = exports.prevMonth = exports.siblingMonth = exports.getFirstDayOfMonth = exports.getDayCountOfMonth = exports.parseDate = exports.formatDate = exports.isInRange = exports.clearHours = exports.toDate = exports.firstUpperCase = exports.deepCopy = exports.dateSorter = undefined;

var _slicedToArray2 = __webpack_require__(25);

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _toConsumableArray2 = __webpack_require__(451);

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

exports.scrollTop = scrollTop;

var _date2 = __webpack_require__(456);

var _date3 = _interopRequireDefault(_date2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function typeOf(obj) {
    var toString = Object.prototype.toString;
    var map = {
        '[object Boolean]': 'boolean',
        '[object Number]': 'number',
        '[object String]': 'string',
        '[object Function]': 'function',
        '[object Array]': 'array',
        '[object Date]': 'date',
        '[object RegExp]': 'regExp',
        '[object Undefined]': 'undefined',
        '[object Null]': 'null',
        '[object Object]': 'object'
    };
    return map[toString.call(obj)];
} /* eslint-disable */

var dateSorter = exports.dateSorter = function dateSorter(a, b) {
    if (!a || !b) return 0;
    return a.getTime() - b.getTime();
};

var deepCopy = exports.deepCopy = function deepCopy(data) {
    var t = typeOf(data);
    var o = void 0;

    if (t === 'array') {
        o = [];
    } else if (t === 'object') {
        o = {};
    } else {
        return data;
    }

    if (t === 'array') {
        for (var i = 0; i < data.length; i++) {
            o.push(deepCopy(data[i]));
        }
    } else if (t === 'object') {
        for (var _i in data) {
            o[_i] = deepCopy(data[_i]);
        }
    }
    return o;
};

// scrollTop animation
function scrollTop(el) {
    var from = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
    var to = arguments[2];
    var duration = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 500;
    var endCallback = arguments[4];

    if (!window.requestAnimationFrame) {
        window.requestAnimationFrame = window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {
            return window.setTimeout(callback, 1000 / 60);
        };
    }
    var difference = Math.abs(from - to);
    var step = Math.ceil(difference / duration * 50);

    function scroll(start, end, step) {
        if (start === end) {
            endCallback && endCallback();
            return;
        }

        var d = start + step > end ? end : start + step;
        if (start > end) {
            d = start - step < end ? end : start - step;
        }

        if (el === window) {
            window.scrollTo(d, d);
        } else {
            el.scrollTop = d;
        }
        window.requestAnimationFrame(function () {
            return scroll(d, end, step);
        });
    }

    scroll(from, to, step);
}

// firstUpperCase
var firstUpperCase = exports.firstUpperCase = function firstUpperCase(str) {
    return str.toString()[0].toUpperCase() + str.toString().slice(1);
};

var toDate = exports.toDate = function toDate(date) {
    var _date = new Date(date);
    // IE patch start (#1422)
    if (isNaN(_date.getTime()) && typeof date === 'string') {
        _date = date.split('-').map(Number);
        _date[1] += 1;
        _date = new (Function.prototype.bind.apply(Date, [null].concat((0, _toConsumableArray3.default)(_date))))();
    }
    // IE patch end

    if (isNaN(_date.getTime())) return null;
    return _date;
};

var clearHours = exports.clearHours = function clearHours(time) {
    var cloneDate = new Date(time);
    cloneDate.setHours(0, 0, 0, 0);
    return cloneDate.getTime();
};

var isInRange = exports.isInRange = function isInRange(time, a, b) {
    if (!a || !b) return false;

    var _sort = [a, b].sort(),
        _sort2 = (0, _slicedToArray3.default)(_sort, 2),
        start = _sort2[0],
        end = _sort2[1];

    return time >= start && time <= end;
};

var formatDate = exports.formatDate = function formatDate(date, format) {
    date = toDate(date);
    if (!date) return '';
    return _date3.default.format(date, format || 'yyyy-MM-dd');
};

var parseDate = exports.parseDate = function parseDate(string, format) {
    return _date3.default.parse(string, format || 'yyyy-MM-dd');
};

var getDayCountOfMonth = exports.getDayCountOfMonth = function getDayCountOfMonth(year, month) {
    return new Date(year, month + 1, 0).getDate();
};

var getFirstDayOfMonth = exports.getFirstDayOfMonth = function getFirstDayOfMonth(date) {
    var temp = new Date(date.getTime());
    temp.setDate(1);
    return temp.getDay();
};

var siblingMonth = exports.siblingMonth = function siblingMonth(src, diff) {
    var temp = new Date(src); // lets copy it so we don't change the original
    var newMonth = temp.getMonth() + diff;

    // 防止月数设置错误
    var newMonthDayCount = getDayCountOfMonth(temp.getFullYear(), newMonth);
    if (newMonthDayCount < temp.getDate()) {
        temp.setDate(newMonthDayCount);
    }

    temp.setMonth(newMonth);

    return temp;
};

var prevMonth = exports.prevMonth = function prevMonth(src) {
    return siblingMonth(src, -1);
};

var nextMonth = exports.nextMonth = function nextMonth(src) {
    return siblingMonth(src, 1);
};

var initTimeDate = exports.initTimeDate = function initTimeDate() {
    var date = new Date();
    date.setHours(0);
    date.setMinutes(0);
    date.setSeconds(0);
    return date;
};

var formatDateLabels = exports.formatDateLabels = function () {
    /*
      Formats:
      yyyy - 4 digit year
      m - month, numeric, 1 - 12
      mm - month, numeric, 01 - 12
      mmm - month, 3 letters, as in `toLocaleDateString`
      Mmm - month, 3 letters, capitalize the return from `toLocaleDateString`
      mmmm - month, full name, as in `toLocaleDateString`
      Mmmm - month, full name, capitalize the return from `toLocaleDateString`
    */

    var formats = {
        yyyy: function yyyy(date) {
            return date.getFullYear();
        },
        m: function m(date) {
            return date.getMonth() + 1;
        },
        mm: function mm(date) {
            return ('0' + (date.getMonth() + 1)).slice(-2);
        },
        mmm: function mmm(date, locale) {
            var monthName = date.toLocaleDateString(locale, {
                month: 'long'
            });
            return monthName.slice(0, 3);
        },
        Mmm: function Mmm(date, locale) {
            var monthName = date.toLocaleDateString(locale, {
                month: 'long'
            });
            return (monthName[0].toUpperCase() + monthName.slice(1).toLowerCase()).slice(0, 3);
        },
        mmmm: function mmmm(date, locale) {
            return date.toLocaleDateString(locale, {
                month: 'long'
            });
        },
        Mmmm: function Mmmm(date, locale) {
            var monthName = date.toLocaleDateString(locale, {
                month: 'long'
            });
            return monthName[0].toUpperCase() + monthName.slice(1).toLowerCase();
        }
    };
    var formatRegex = new RegExp(['yyyy', 'Mmmm', 'mmmm', 'Mmm', 'mmm', 'mm', 'm'].join('|'), 'g');

    return function (locale, format, date) {
        var componetsRegex = /(\[[^\]]+\])([^\[\]]+)(\[[^\]]+\])/;
        var components = format.match(componetsRegex).slice(1);
        var separator = components[1];
        var labels = [components[0], components[2]].map(function (component) {
            var label = component.replace(/\[[^\]]+\]/, function (str) {
                return str.slice(1, -1).replace(formatRegex, function (match) {
                    return formats[match](date, locale);
                });
            });
            return {
                label: label,
                type: component.indexOf('yy') != -1 ? 'year' : 'month'
            };
        });
        return {
            separator: separator,
            labels: labels
        };
    };
}();

// Parsers and Formaters
var DEFAULT_FORMATS = exports.DEFAULT_FORMATS = {
    date: 'yyyy-MM-dd',
    month: 'yyyy-MM',
    year: 'yyyy',
    datetime: 'yyyy-MM-dd HH:mm:ss',
    time: 'HH:mm:ss',
    timerange: 'HH:mm:ss',
    daterange: 'yyyy-MM-dd',
    datetimerange: 'yyyy-MM-dd HH:mm:ss'
};

var RANGE_SEPARATOR = exports.RANGE_SEPARATOR = ' - ';

var DATE_FORMATTER = function DATE_FORMATTER(value, format) {
    return formatDate(value, format);
};
var DATE_PARSER = function DATE_PARSER(text, format) {
    return parseDate(text, format);
};
var RANGE_FORMATTER = function RANGE_FORMATTER(value, format) {
    if (Array.isArray(value) && value.length === 2) {
        var start = value[0];
        var end = value[1];

        if (start && end) {
            return formatDate(start, format) + RANGE_SEPARATOR + formatDate(end, format);
        }
    } else if (!Array.isArray(value) && value instanceof Date) {
        return formatDate(value, format);
    }
    return '';
};
var RANGE_PARSER = function RANGE_PARSER(text, format) {
    var array = Array.isArray(text) ? text : text.split(RANGE_SEPARATOR);
    if (array.length === 2) {
        var range1 = array[0];
        var range2 = array[1];

        return [parseDate(range1, format), parseDate(range2, format)];
    }
    return [];
};

var TYPE_VALUE_RESOLVER_MAP = exports.TYPE_VALUE_RESOLVER_MAP = {
    default: {
        formatter: function formatter(value) {
            if (!value) return '';
            return '' + value;
        },
        parser: function parser(text) {
            if (text === undefined || text === '') return null;
            return text;
        }
    },
    date: {
        formatter: DATE_FORMATTER,
        parser: DATE_PARSER
    },
    datetime: {
        formatter: DATE_FORMATTER,
        parser: DATE_PARSER
    },
    daterange: {
        formatter: RANGE_FORMATTER,
        parser: RANGE_PARSER
    },
    datetimerange: {
        formatter: RANGE_FORMATTER,
        parser: RANGE_PARSER
    },
    timerange: {
        formatter: RANGE_FORMATTER,
        parser: RANGE_PARSER
    },
    time: {
        formatter: DATE_FORMATTER,
        parser: DATE_PARSER
    },
    month: {
        formatter: DATE_FORMATTER,
        parser: DATE_PARSER
    },
    year: {
        formatter: DATE_FORMATTER,
        parser: DATE_PARSER
    },
    multiple: {
        formatter: function formatter(value, format) {
            return value.filter(Boolean).map(function (date) {
                return formatDate(date, format);
            }).join(',');
        },
        parser: function parser(value, format) {
            var values = typeof value === 'string' ? value.split(',') : value;
            return values.map(function (value) {
                if (value instanceof Date) return value;
                if (typeof value === 'string') value = value.trim();else if (typeof value !== 'number' && !value) value = '';
                return parseDate(value, format);
            });
        }
    },
    number: {
        formatter: function formatter(value) {
            if (!value) return '';
            return '' + value;
        },
        parser: function parser(text) {
            var result = Number(text);

            if (!isNaN(text)) {
                return result;
            }
            return null;
        }
    }
};

var parseValue = exports.parseValue = function parseValue(val, type, format, multiple) {
    // const { multiple, type, format } = this.data;

    var isRange = type.includes('range');
    var parser = (TYPE_VALUE_RESOLVER_MAP[type] || TYPE_VALUE_RESOLVER_MAP.default).parser;
    var formatType = format || DEFAULT_FORMATS[type];
    var multipleParser = TYPE_VALUE_RESOLVER_MAP.multiple.parser;

    if (val && type === 'time' && !(val instanceof Date)) {
        val = parser(val, formatType);
    } else if (multiple && val) {
        val = multipleParser(val, formatType);
    } else if (isRange) {
        if (!val) {
            val = [null, null];
        } else if (typeof val === 'string') {
            val = parser(val, formatType);
        } else if (type === 'timerange') {
            val = parser(val, formatType).map(function (v) {
                return v || '';
            });
        } else {
            var _val = val,
                _val2 = (0, _slicedToArray3.default)(_val, 2),
                start = _val2[0],
                end = _val2[1];

            if (start instanceof Date && end instanceof Date) {
                val = val.map(function (date) {
                    return new Date(date);
                });
            } else if (typeof start === 'string' && typeof end === 'string') {
                val = parser(val.join(RANGE_SEPARATOR), formatType);
            } else if (!start || !end) {
                val = [null, null];
            }
        }
    } else if (typeof val === 'string' && type.indexOf('time') !== 0) {
        val = parser(val, formatType) || null;
    }
    return isRange || multiple ? val || [] : [val];
};

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Validation = __webpack_require__(9);

module.exports = function (Component) {
  Component.implement({
    initValidation: function initValidation() {
      var $outer = this;
      do {
        if ($outer.$outer) {
          $outer = $outer.$outer;
        } else if ($outer.$parent) {
          $outer = $outer.$parent;
        }
      } while (!($outer instanceof Validation) && ($outer.$outer || $outer.$parent));

      if ($outer && $outer instanceof Validation) {
        $outer.controls.push(this);
        /* eslint no-underscore-dangle: ["error", { "allowAfterThis": true }] */
        this._parentValidator = $outer;

        this.$on('destroy', function () {
          var index = $outer.controls.indexOf(this);
          if (index !== -1) {
            $outer.controls.splice(index, 1);
          }
        });
      }
    }
  });
};

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

var store      = __webpack_require__(56)('wks')
  , uid        = __webpack_require__(37)
  , Symbol     = __webpack_require__(8).Symbol
  , USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function(name){
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;

/***/ }),
/* 8 */
/***/ (function(module, exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();
if(typeof __g == 'number')__g = global; // eslint-disable-line no-undef

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _keys = __webpack_require__(20);

var _keys2 = _interopRequireDefault(_keys);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * ------------------------------------------------------------
 * Validation  表单验证
 * @author   sensen(rainforest92@126.com)
 * ------------------------------------------------------------
 */

var Component = __webpack_require__(1);
var _ = __webpack_require__(2);
var validator = __webpack_require__(83);

/**
 * @class Validation
 * @extend Component
 * @param {object}            [options.data]                      = 绑定属性
 * @param {boolean}           [options.data.disabled=false]       => 是否禁用。当禁用时验证始终通过。
 */
var Validation = Component.extend({
  name: 'validation',
  template: '{#inc this.$body}',
  /**
     * @protected
     */
  config: function config() {
    this.controls = [];

    _.extend(this.data, {});
    this.supr();
  },

  /**
     * @method validate() 验证所有表单组件
     * @public
     * @return {object} conclusion 结论
     */
  validate: function validate() {
    if (this.data.disabled) {
      return {
        success: true,
        message: 'Validation is disabled.'
      };
    }

    var conclusion = {
      results: [],
      success: true,
      message: ''
    };

    this.controls.forEach(function (control) {
      if (!control) {
        return;
      }

      var result = control.validate();
      conclusion.results.push(result);
      if (!result.success) {
        conclusion.success = false;
        conclusion.message = conclusion.message || result.message;
      }
    });

    return conclusion;
  }
});

Validation.validate = function (value, rules) {
  var result = {
    success: true,
    message: ''
  };

  rules.forEach(function (rule) {
    rule.success = true;

    // 为了兼容
    if (rule.type === 'is') {
      rule.success = (rule.options || rule.reg).test(value);
    } else if (rule.type === 'isNot') {
      rule.success = !(rule.options || rule.reg).test(value);
    } else if (rule.type === 'isRequired' || rule.type === 'isFilled') {
      rule.success = !!validator.toString(value).trim();
    } else if (rule.type === 'method' || rule.method) {
      rule.success = (rule.options || rule.method)(value, rule);
    } else rule.success = !value || validator[rule.type](value, rule.options);

    rule.callback && rule.callback(value, rule);

    if (!rule.success && result.success) {
      result.success = false;
      result.firstRule = rule;
      // @deprecated
      result.message = rule.message;
    }
  });

  return result;
};

// Patch for validator, ref: https://302.at/0wy3Z
(0, _keys2.default)(validator).forEach(function (d) {
  if (/^is/.test(d)) {
    validator['_' + d] = function (str, isRequired) {
      if (!isRequired && !str) {
        return function () {
          return true;
        };
      }
      return validator[d].bind(null, str);
    };
  }
});
Validation.validator = validator;

module.exports = Validation;

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

var global    = __webpack_require__(8)
  , core      = __webpack_require__(4)
  , ctx       = __webpack_require__(26)
  , hide      = __webpack_require__(17)
  , PROTOTYPE = 'prototype';

var $export = function(type, name, source){
  var IS_FORCED = type & $export.F
    , IS_GLOBAL = type & $export.G
    , IS_STATIC = type & $export.S
    , IS_PROTO  = type & $export.P
    , IS_BIND   = type & $export.B
    , IS_WRAP   = type & $export.W
    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})
    , expProto  = exports[PROTOTYPE]
    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]
    , key, own, out;
  if(IS_GLOBAL)source = name;
  for(key in source){
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    if(own && key in exports)continue;
    // export native or passed
    out = own ? target[key] : source[key];
    // prevent global pollution for namespaces
    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
    // bind timers to global for call from export context
    : IS_BIND && own ? ctx(out, global)
    // wrap global constructors for prevent change them in library
    : IS_WRAP && target[key] == out ? (function(C){
      var F = function(a, b, c){
        if(this instanceof C){
          switch(arguments.length){
            case 0: return new C;
            case 1: return new C(a);
            case 2: return new C(a, b);
          } return new C(a, b, c);
        } return C.apply(this, arguments);
      };
      F[PROTOTYPE] = C[PROTOTYPE];
      return F;
    // make static versions for prototype methods
    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
    if(IS_PROTO){
      (exports.virtual || (exports.virtual = {}))[key] = out;
      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
      if(type & $export.R && expProto && !expProto[key])hide(expProto, key, out);
    }
  }
};
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library` 
module.exports = $export;

/***/ }),
/* 11 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_11__;

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

var anObject       = __webpack_require__(13)
  , IE8_DOM_DEFINE = __webpack_require__(71)
  , toPrimitive    = __webpack_require__(51)
  , dP             = Object.defineProperty;

exports.f = __webpack_require__(14) ? Object.defineProperty : function defineProperty(O, P, Attributes){
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if(IE8_DOM_DEFINE)try {
    return dP(O, P, Attributes);
  } catch(e){ /* empty */ }
  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');
  if('value' in Attributes)O[P] = Attributes.value;
  return O;
};

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(27);
module.exports = function(it){
  if(!isObject(it))throw TypeError(it + ' is not an object!');
  return it;
};

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

// Thank's IE8 for his funny defineProperty
module.exports = !__webpack_require__(21)(function(){
  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;
});

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = __webpack_require__(74)
  , defined = __webpack_require__(52);
module.exports = function(it){
  return IObject(defined(it));
};

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * ------------------------------------------------------------
 * SourceComponent 数据组件基类
 * @author   sensen(rainforest92@126.com)
 * ------------------------------------------------------------
 */

var Component = __webpack_require__(1);
var _ = __webpack_require__(2);
var Ajax = __webpack_require__(46);

/**
 * @class SourceComponent
 * @extend Component
 * @deprecated
 * @param {object[]}        [options.data.source=[]]              =  数据源
 * @param {boolean}         [options.data.updateAuto=true]          => 当有service时，是否自动加载
 * @param {boolean}         [options.data.readonly=false]            => 是否只读
 * @param {boolean}         [options.data.disabled=false]            => 是否禁用
 * @param {boolean}         [options.data.visible=true]             => 是否显示
 * @param {string}          [options.data.class]               => 补充class
 * @param {object}          [options.service]                 @=> 数据服务
 */
var SourceComponent = Component.extend({
  service: null,
  /**
     * @protected
     */
  config: function config() {
    _.extend(this.data, {
      source: [],
      updateAuto: true
    });

    if (this.data.service) this.service = this.data.service;

    if (this.service && this.data.updateAuto) this.$updateSource();

    this.supr();
  },
  request: function request(options) {
    var self = this;
    var data = this.data;
    var oldError = options.error,
        oldSuccess = options.success,
        oldComplete = options.complete;


    data.loading = true;

    options.success = function (_data) {
      oldSuccess && oldSuccess(_data);
      self.$update('loading', false);
    };
    options.error = function (_data) {
      oldError && oldError(_data);
      self.$update('loading', false);
    };

    options.complete = function (_data) {
      oldComplete && oldComplete(_data);
      self.$update('loading', false);
    };
    Ajax.request(options);
  },

  /**
     * @method getParams 返回请求时需要的参数
     * @protected
     * @deprecated
     * @return {object} object
     */
  getParams: function getParams() {
    return {};
  },

  /**
     * @method $updateSource() 从service中更新数据源
     * @public
     * @deprecated
     * @return {SourceComponent} this
     */
  $updateSource: function $updateSource() {
    var self = this;
    this.service.getList.call(this, this.getParams(), function (result) {
      self.$update('source', result);
    });
    return this;
  }
});

module.exports = SourceComponent;

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

var dP         = __webpack_require__(12)
  , createDesc = __webpack_require__(28);
module.exports = __webpack_require__(14) ? function(object, key, value){
  return dP.f(object, key, createDesc(1, value));
} : function(object, key, value){
  object[key] = value;
  return object;
};

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys       = __webpack_require__(73)
  , enumBugKeys = __webpack_require__(57);

module.exports = Object.keys || function keys(O){
  return $keys(O, enumBugKeys);
};

/***/ }),
/* 19 */
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;
module.exports = function(it, key){
  return hasOwnProperty.call(it, key);
};

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(275), __esModule: true };

/***/ }),
/* 21 */
/***/ (function(module, exports) {

module.exports = function(exec){
  try {
    return !!exec();
  } catch(e){
    return true;
  }
};

/***/ }),
/* 22 */
/***/ (function(module, exports) {

module.exports = {};

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

/*!
 * Bowser - a browser detector
 * https://github.com/ded/bowser
 * MIT License | (c) Dustin Diaz 2015
 */

!function (root, name, definition) {
  if (typeof module != 'undefined' && module.exports) module.exports = definition()
  else if (true) __webpack_require__(343)(name, definition)
  else root[name] = definition()
}(this, 'bowser', function () {
  /**
    * See useragents.js for examples of navigator.userAgent
    */

  var t = true

  function detect(ua) {

    function getFirstMatch(regex) {
      var match = ua.match(regex);
      return (match && match.length > 1 && match[1]) || '';
    }

    function getSecondMatch(regex) {
      var match = ua.match(regex);
      return (match && match.length > 1 && match[2]) || '';
    }

    var iosdevice = getFirstMatch(/(ipod|iphone|ipad)/i).toLowerCase()
      , likeAndroid = /like android/i.test(ua)
      , android = !likeAndroid && /android/i.test(ua)
      , nexusMobile = /nexus\s*[0-6]\s*/i.test(ua)
      , nexusTablet = !nexusMobile && /nexus\s*[0-9]+/i.test(ua)
      , chromeos = /CrOS/.test(ua)
      , silk = /silk/i.test(ua)
      , sailfish = /sailfish/i.test(ua)
      , tizen = /tizen/i.test(ua)
      , webos = /(web|hpw)os/i.test(ua)
      , windowsphone = /windows phone/i.test(ua)
      , samsungBrowser = /SamsungBrowser/i.test(ua)
      , windows = !windowsphone && /windows/i.test(ua)
      , mac = !iosdevice && !silk && /macintosh/i.test(ua)
      , linux = !android && !sailfish && !tizen && !webos && /linux/i.test(ua)
      , edgeVersion = getFirstMatch(/edge\/(\d+(\.\d+)?)/i)
      , versionIdentifier = getFirstMatch(/version\/(\d+(\.\d+)?)/i)
      , tablet = /tablet/i.test(ua)
      , mobile = !tablet && /[^-]mobi/i.test(ua)
      , xbox = /xbox/i.test(ua)
      , result

    if (/opera/i.test(ua)) {
      //  an old Opera
      result = {
        name: 'Opera'
      , opera: t
      , version: versionIdentifier || getFirstMatch(/(?:opera|opr|opios)[\s\/](\d+(\.\d+)?)/i)
      }
    } else if (/opr|opios/i.test(ua)) {
      // a new Opera
      result = {
        name: 'Opera'
        , opera: t
        , version: getFirstMatch(/(?:opr|opios)[\s\/](\d+(\.\d+)?)/i) || versionIdentifier
      }
    }
    else if (/SamsungBrowser/i.test(ua)) {
      result = {
        name: 'Samsung Internet for Android'
        , samsungBrowser: t
        , version: versionIdentifier || getFirstMatch(/(?:SamsungBrowser)[\s\/](\d+(\.\d+)?)/i)
      }
    }
    else if (/coast/i.test(ua)) {
      result = {
        name: 'Opera Coast'
        , coast: t
        , version: versionIdentifier || getFirstMatch(/(?:coast)[\s\/](\d+(\.\d+)?)/i)
      }
    }
    else if (/yabrowser/i.test(ua)) {
      result = {
        name: 'Yandex Browser'
      , yandexbrowser: t
      , version: versionIdentifier || getFirstMatch(/(?:yabrowser)[\s\/](\d+(\.\d+)?)/i)
      }
    }
    else if (/ucbrowser/i.test(ua)) {
      result = {
          name: 'UC Browser'
        , ucbrowser: t
        , version: getFirstMatch(/(?:ucbrowser)[\s\/](\d+(?:\.\d+)+)/i)
      }
    }
    else if (/mxios/i.test(ua)) {
      result = {
        name: 'Maxthon'
        , maxthon: t
        , version: getFirstMatch(/(?:mxios)[\s\/](\d+(?:\.\d+)+)/i)
      }
    }
    else if (/epiphany/i.test(ua)) {
      result = {
        name: 'Epiphany'
        , epiphany: t
        , version: getFirstMatch(/(?:epiphany)[\s\/](\d+(?:\.\d+)+)/i)
      }
    }
    else if (/puffin/i.test(ua)) {
      result = {
        name: 'Puffin'
        , puffin: t
        , version: getFirstMatch(/(?:puffin)[\s\/](\d+(?:\.\d+)?)/i)
      }
    }
    else if (/sleipnir/i.test(ua)) {
      result = {
        name: 'Sleipnir'
        , sleipnir: t
        , version: getFirstMatch(/(?:sleipnir)[\s\/](\d+(?:\.\d+)+)/i)
      }
    }
    else if (/k-meleon/i.test(ua)) {
      result = {
        name: 'K-Meleon'
        , kMeleon: t
        , version: getFirstMatch(/(?:k-meleon)[\s\/](\d+(?:\.\d+)+)/i)
      }
    }
    else if (windowsphone) {
      result = {
        name: 'Windows Phone'
      , windowsphone: t
      }
      if (edgeVersion) {
        result.msedge = t
        result.version = edgeVersion
      }
      else {
        result.msie = t
        result.version = getFirstMatch(/iemobile\/(\d+(\.\d+)?)/i)
      }
    }
    else if (/msie|trident/i.test(ua)) {
      result = {
        name: 'Internet Explorer'
      , msie: t
      , version: getFirstMatch(/(?:msie |rv:)(\d+(\.\d+)?)/i)
      }
    } else if (chromeos) {
      result = {
        name: 'Chrome'
      , chromeos: t
      , chromeBook: t
      , chrome: t
      , version: getFirstMatch(/(?:chrome|crios|crmo)\/(\d+(\.\d+)?)/i)
      }
    } else if (/chrome.+? edge/i.test(ua)) {
      result = {
        name: 'Microsoft Edge'
      , msedge: t
      , version: edgeVersion
      }
    }
    else if (/vivaldi/i.test(ua)) {
      result = {
        name: 'Vivaldi'
        , vivaldi: t
        , version: getFirstMatch(/vivaldi\/(\d+(\.\d+)?)/i) || versionIdentifier
      }
    }
    else if (sailfish) {
      result = {
        name: 'Sailfish'
      , sailfish: t
      , version: getFirstMatch(/sailfish\s?browser\/(\d+(\.\d+)?)/i)
      }
    }
    else if (/seamonkey\//i.test(ua)) {
      result = {
        name: 'SeaMonkey'
      , seamonkey: t
      , version: getFirstMatch(/seamonkey\/(\d+(\.\d+)?)/i)
      }
    }
    else if (/firefox|iceweasel|fxios/i.test(ua)) {
      result = {
        name: 'Firefox'
      , firefox: t
      , version: getFirstMatch(/(?:firefox|iceweasel|fxios)[ \/](\d+(\.\d+)?)/i)
      }
      if (/\((mobile|tablet);[^\)]*rv:[\d\.]+\)/i.test(ua)) {
        result.firefoxos = t
      }
    }
    else if (silk) {
      result =  {
        name: 'Amazon Silk'
      , silk: t
      , version : getFirstMatch(/silk\/(\d+(\.\d+)?)/i)
      }
    }
    else if (/phantom/i.test(ua)) {
      result = {
        name: 'PhantomJS'
      , phantom: t
      , version: getFirstMatch(/phantomjs\/(\d+(\.\d+)?)/i)
      }
    }
    else if (/slimerjs/i.test(ua)) {
      result = {
        name: 'SlimerJS'
        , slimer: t
        , version: getFirstMatch(/slimerjs\/(\d+(\.\d+)?)/i)
      }
    }
    else if (/blackberry|\bbb\d+/i.test(ua) || /rim\stablet/i.test(ua)) {
      result = {
        name: 'BlackBerry'
      , blackberry: t
      , version: versionIdentifier || getFirstMatch(/blackberry[\d]+\/(\d+(\.\d+)?)/i)
      }
    }
    else if (webos) {
      result = {
        name: 'WebOS'
      , webos: t
      , version: versionIdentifier || getFirstMatch(/w(?:eb)?osbrowser\/(\d+(\.\d+)?)/i)
      };
      /touchpad\//i.test(ua) && (result.touchpad = t)
    }
    else if (/bada/i.test(ua)) {
      result = {
        name: 'Bada'
      , bada: t
      , version: getFirstMatch(/dolfin\/(\d+(\.\d+)?)/i)
      };
    }
    else if (tizen) {
      result = {
        name: 'Tizen'
      , tizen: t
      , version: getFirstMatch(/(?:tizen\s?)?browser\/(\d+(\.\d+)?)/i) || versionIdentifier
      };
    }
    else if (/qupzilla/i.test(ua)) {
      result = {
        name: 'QupZilla'
        , qupzilla: t
        , version: getFirstMatch(/(?:qupzilla)[\s\/](\d+(?:\.\d+)+)/i) || versionIdentifier
      }
    }
    else if (/chromium/i.test(ua)) {
      result = {
        name: 'Chromium'
        , chromium: t
        , version: getFirstMatch(/(?:chromium)[\s\/](\d+(?:\.\d+)?)/i) || versionIdentifier
      }
    }
    else if (/chrome|crios|crmo/i.test(ua)) {
      result = {
        name: 'Chrome'
        , chrome: t
        , version: getFirstMatch(/(?:chrome|crios|crmo)\/(\d+(\.\d+)?)/i)
      }
    }
    else if (android) {
      result = {
        name: 'Android'
        , version: versionIdentifier
      }
    }
    else if (/safari|applewebkit/i.test(ua)) {
      result = {
        name: 'Safari'
      , safari: t
      }
      if (versionIdentifier) {
        result.version = versionIdentifier
      }
    }
    else if (iosdevice) {
      result = {
        name : iosdevice == 'iphone' ? 'iPhone' : iosdevice == 'ipad' ? 'iPad' : 'iPod'
      }
      // WTF: version is not part of user agent in web apps
      if (versionIdentifier) {
        result.version = versionIdentifier
      }
    }
    else if(/googlebot/i.test(ua)) {
      result = {
        name: 'Googlebot'
      , googlebot: t
      , version: getFirstMatch(/googlebot\/(\d+(\.\d+))/i) || versionIdentifier
      }
    }
    else {
      result = {
        name: getFirstMatch(/^(.*)\/(.*) /),
        version: getSecondMatch(/^(.*)\/(.*) /)
     };
   }

    // set webkit or gecko flag for browsers based on these engines
    if (!result.msedge && /(apple)?webkit/i.test(ua)) {
      if (/(apple)?webkit\/537\.36/i.test(ua)) {
        result.name = result.name || "Blink"
        result.blink = t
      } else {
        result.name = result.name || "Webkit"
        result.webkit = t
      }
      if (!result.version && versionIdentifier) {
        result.version = versionIdentifier
      }
    } else if (!result.opera && /gecko\//i.test(ua)) {
      result.name = result.name || "Gecko"
      result.gecko = t
      result.version = result.version || getFirstMatch(/gecko\/(\d+(\.\d+)?)/i)
    }

    // set OS flags for platforms that have multiple browsers
    if (!result.windowsphone && !result.msedge && (android || result.silk)) {
      result.android = t
    } else if (!result.windowsphone && !result.msedge && iosdevice) {
      result[iosdevice] = t
      result.ios = t
    } else if (mac) {
      result.mac = t
    } else if (xbox) {
      result.xbox = t
    } else if (windows) {
      result.windows = t
    } else if (linux) {
      result.linux = t
    }

    function getWindowsVersion (s) {
      switch (s) {
        case 'NT': return 'NT'
        case 'XP': return 'XP'
        case 'NT 5.0': return '2000'
        case 'NT 5.1': return 'XP'
        case 'NT 5.2': return '2003'
        case 'NT 6.0': return 'Vista'
        case 'NT 6.1': return '7'
        case 'NT 6.2': return '8'
        case 'NT 6.3': return '8.1'
        case 'NT 10.0': return '10'
        default: return undefined
      }
    }
    
    // OS version extraction
    var osVersion = '';
    if (result.windows) {
      osVersion = getWindowsVersion(getFirstMatch(/Windows ((NT|XP)( \d\d?.\d)?)/i))
    } else if (result.windowsphone) {
      osVersion = getFirstMatch(/windows phone (?:os)?\s?(\d+(\.\d+)*)/i);
    } else if (result.mac) {
      osVersion = getFirstMatch(/Mac OS X (\d+([_\.\s]\d+)*)/i);
      osVersion = osVersion.replace(/[_\s]/g, '.');
    } else if (iosdevice) {
      osVersion = getFirstMatch(/os (\d+([_\s]\d+)*) like mac os x/i);
      osVersion = osVersion.replace(/[_\s]/g, '.');
    } else if (android) {
      osVersion = getFirstMatch(/android[ \/-](\d+(\.\d+)*)/i);
    } else if (result.webos) {
      osVersion = getFirstMatch(/(?:web|hpw)os\/(\d+(\.\d+)*)/i);
    } else if (result.blackberry) {
      osVersion = getFirstMatch(/rim\stablet\sos\s(\d+(\.\d+)*)/i);
    } else if (result.bada) {
      osVersion = getFirstMatch(/bada\/(\d+(\.\d+)*)/i);
    } else if (result.tizen) {
      osVersion = getFirstMatch(/tizen[\/\s](\d+(\.\d+)*)/i);
    }
    if (osVersion) {
      result.osversion = osVersion;
    }

    // device type extraction
    var osMajorVersion = !result.windows && osVersion.split('.')[0];
    if (
         tablet
      || nexusTablet
      || iosdevice == 'ipad'
      || (android && (osMajorVersion == 3 || (osMajorVersion >= 4 && !mobile)))
      || result.silk
    ) {
      result.tablet = t
    } else if (
         mobile
      || iosdevice == 'iphone'
      || iosdevice == 'ipod'
      || android
      || nexusMobile
      || result.blackberry
      || result.webos
      || result.bada
    ) {
      result.mobile = t
    }

    // Graded Browser Support
    // http://developer.yahoo.com/yui/articles/gbs
    if (result.msedge ||
        (result.msie && result.version >= 10) ||
        (result.yandexbrowser && result.version >= 15) ||
		    (result.vivaldi && result.version >= 1.0) ||
        (result.chrome && result.version >= 20) ||
        (result.samsungBrowser && result.version >= 4) ||
        (result.firefox && result.version >= 20.0) ||
        (result.safari && result.version >= 6) ||
        (result.opera && result.version >= 10.0) ||
        (result.ios && result.osversion && result.osversion.split(".")[0] >= 6) ||
        (result.blackberry && result.version >= 10.1)
        || (result.chromium && result.version >= 20)
        ) {
      result.a = t;
    }
    else if ((result.msie && result.version < 10) ||
        (result.chrome && result.version < 20) ||
        (result.firefox && result.version < 20.0) ||
        (result.safari && result.version < 6) ||
        (result.opera && result.version < 10.0) ||
        (result.ios && result.osversion && result.osversion.split(".")[0] < 6)
        || (result.chromium && result.version < 20)
        ) {
      result.c = t
    } else result.x = t

    return result
  }

  var bowser = detect(typeof navigator !== 'undefined' ? navigator.userAgent || '' : '')

  bowser.test = function (browserList) {
    for (var i = 0; i < browserList.length; ++i) {
      var browserItem = browserList[i];
      if (typeof browserItem=== 'string') {
        if (browserItem in bowser) {
          return true;
        }
      }
    }
    return false;
  }

  /**
   * Get version precisions count
   *
   * @example
   *   getVersionPrecision("1.10.3") // 3
   *
   * @param  {string} version
   * @return {number}
   */
  function getVersionPrecision(version) {
    return version.split(".").length;
  }

  /**
   * Array::map polyfill
   *
   * @param  {Array} arr
   * @param  {Function} iterator
   * @return {Array}
   */
  function map(arr, iterator) {
    var result = [], i;
    if (Array.prototype.map) {
      return Array.prototype.map.call(arr, iterator);
    }
    for (i = 0; i < arr.length; i++) {
      result.push(iterator(arr[i]));
    }
    return result;
  }

  /**
   * Calculate browser version weight
   *
   * @example
   *   compareVersions(['1.10.2.1',  '1.8.2.1.90'])    // 1
   *   compareVersions(['1.010.2.1', '1.09.2.1.90']);  // 1
   *   compareVersions(['1.10.2.1',  '1.10.2.1']);     // 0
   *   compareVersions(['1.10.2.1',  '1.0800.2']);     // -1
   *
   * @param  {Array<String>} versions versions to compare
   * @return {Number} comparison result
   */
  function compareVersions(versions) {
    // 1) get common precision for both versions, for example for "10.0" and "9" it should be 2
    var precision = Math.max(getVersionPrecision(versions[0]), getVersionPrecision(versions[1]));
    var chunks = map(versions, function (version) {
      var delta = precision - getVersionPrecision(version);

      // 2) "9" -> "9.0" (for precision = 2)
      version = version + new Array(delta + 1).join(".0");

      // 3) "9.0" -> ["000000000"", "000000009"]
      return map(version.split("."), function (chunk) {
        return new Array(20 - chunk.length).join("0") + chunk;
      }).reverse();
    });

    // iterate in reverse order by reversed chunks array
    while (--precision >= 0) {
      // 4) compare: "000000009" > "000000010" = false (but "9" > "10" = true)
      if (chunks[0][precision] > chunks[1][precision]) {
        return 1;
      }
      else if (chunks[0][precision] === chunks[1][precision]) {
        if (precision === 0) {
          // all version chunks are same
          return 0;
        }
      }
      else {
        return -1;
      }
    }
  }

  /**
   * Check if browser is unsupported
   *
   * @example
   *   bowser.isUnsupportedBrowser({
   *     msie: "10",
   *     firefox: "23",
   *     chrome: "29",
   *     safari: "5.1",
   *     opera: "16",
   *     phantom: "534"
   *   });
   *
   * @param  {Object}  minVersions map of minimal version to browser
   * @param  {Boolean} [strictMode = false] flag to return false if browser wasn't found in map
   * @param  {String}  [ua] user agent string
   * @return {Boolean}
   */
  function isUnsupportedBrowser(minVersions, strictMode, ua) {
    var _bowser = bowser;

    // make strictMode param optional with ua param usage
    if (typeof strictMode === 'string') {
      ua = strictMode;
      strictMode = void(0);
    }

    if (strictMode === void(0)) {
      strictMode = false;
    }
    if (ua) {
      _bowser = detect(ua);
    }

    var version = "" + _bowser.version;
    for (var browser in minVersions) {
      if (minVersions.hasOwnProperty(browser)) {
        if (_bowser[browser]) {
          if (typeof minVersions[browser] !== 'string') {
            throw new Error('Browser version in the minVersion map should be a string: ' + browser + ': ' + String(minVersions));
          }

          // browser version and min supported version.
          return compareVersions([version, minVersions[browser]]) < 0;
        }
      }
    }

    return strictMode; // not found
  }

  /**
   * Check if browser is supported
   *
   * @param  {Object} minVersions map of minimal version to browser
   * @param  {Boolean} [strictMode = false] flag to return false if browser wasn't found in map
   * @param  {String}  [ua] user agent string
   * @return {Boolean}
   */
  function check(minVersions, strictMode, ua) {
    return !isUnsupportedBrowser(minVersions, strictMode, ua);
  }

  bowser.isUnsupportedBrowser = isUnsupportedBrowser;
  bowser.compareVersions = compareVersions;
  bowser.check = check;

  /*
   * Set our detect method to the main bowser object so we can
   * reuse it to test other user agents.
   * This is needed to implement future tests.
   */
  bowser._detect = detect;

  return bowser
});


/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _index = __webpack_require__(221);

var _index2 = _interopRequireDefault(_index);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Component = __webpack_require__(16); /* eslint no-unused-vars: 0 */

var template = __webpack_require__(403);
var _ = __webpack_require__(2);

var KLDrop = Component.extend({
  name: 'kl-drop',
  template: template,
  $header: null,
  config: function config() {
    _.extend(this.data, {
      appendToBody: false,
      placement: 'bottom',
      isShow: false,
      headerClass: '',
      disabled: false
    });
    this.supr();
  },
  onClick: function onClick(event) {
    if (this.data.disabled) {
      return;
    }
    this.data.isShow = !this.data.isShow;
    if (this.data.isShow) {
      this.$emit('click', {
        isShow: this.data.isShow,
        event: event
      });
    }
  }
});

module.exports = KLDrop;

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _isIterable2 = __webpack_require__(413);

var _isIterable3 = _interopRequireDefault(_isIterable2);

var _getIterator2 = __webpack_require__(38);

var _getIterator3 = _interopRequireDefault(_getIterator2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  function sliceIterator(arr, i) {
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;

    try {
      for (var _i = (0, _getIterator3.default)(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);

        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"]) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }

    return _arr;
  }

  return function (arr, i) {
    if (Array.isArray(arr)) {
      return arr;
    } else if ((0, _isIterable3.default)(Object(arr))) {
      return sliceIterator(arr, i);
    } else {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    }
  };
}();

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

// optional / simple context binding
var aFunction = __webpack_require__(49);
module.exports = function(fn, that, length){
  aFunction(fn);
  if(that === undefined)return fn;
  switch(length){
    case 1: return function(a){
      return fn.call(that, a);
    };
    case 2: return function(a, b){
      return fn.call(that, a, b);
    };
    case 3: return function(a, b, c){
      return fn.call(that, a, b, c);
    };
  }
  return function(/* ...args */){
    return fn.apply(that, arguments);
  };
};

/***/ }),
/* 27 */
/***/ (function(module, exports) {

module.exports = function(it){
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};

/***/ }),
/* 28 */
/***/ (function(module, exports) {

module.exports = function(bitmap, value){
  return {
    enumerable  : !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable    : !(bitmap & 4),
    value       : value
  };
};

/***/ }),
/* 29 */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function(it){
  return toString.call(it).slice(8, -1);
};

/***/ }),
/* 30 */
/***/ (function(module, exports) {

exports.f = {}.propertyIsEnumerable;

/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $at  = __webpack_require__(263)(true);

// 21.1.3.27 String.prototype[@@iterator]()
__webpack_require__(75)(String, 'String', function(iterated){
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function(){
  var O     = this._t
    , index = this._i
    , point;
  if(index >= O.length)return {value: undefined, done: true};
  point = $at(O, index);
  this._i += point.length;
  return {value: point, done: false};
});

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(265), __esModule: true };

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = merge;
function merge() {
  var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var defaults = arguments[1];

  for (var key in defaults) {
    if (typeof obj[key] === 'undefined') {
      obj[key] = defaults[key];
    }
  }
  return obj;
}
module.exports = exports['default'];

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * ------------------------------------------------------------
 * Dropdown  下拉菜单
 * @author   sensen(rainforest92@126.com)
 * ------------------------------------------------------------
 */

var SourceComponent = __webpack_require__(16);
var template = __webpack_require__(349);
var _ = __webpack_require__(2);

/**
 * @class Dropdown
 * @extend SourceComponent
 * @param {object}            [options.data]                          = 绑定属性
 * @param {string}            [options.data.title]                    => 按钮文字
 * @param {object[]}          [options.data.source=[]]                <=> 数据源
 * @param {string}            [options.data.source[].name]            => 每项的内容
 * @param {boolean}           [options.data.source[].disabled=false]  => 禁用此项
 * @param {boolean}           [options.data.source[].divider=false]   => 设置此项为分隔线
 * @param {string}            [options.data.itemTemplate=null]        @=> 单项模板
 * @param {boolean}           [options.data.open=false]               <=> 当前为展开/收起状态
 * @param {boolean}           [options.data.disabled=false]           => 是否禁用
 * @param {boolean}           [options.data.visible=true]             => 是否显示
 * @param {string}            [options.data.class]                    => 补充class
 * @param {object}            [options.service]                       @=> 数据服务
 */
var Dropdown = SourceComponent.extend({
  name: 'dropdown',
  template: template,
  /**
     * @protected
     */
  config: function config() {
    _.extend(this.data, {
      // @inherited source: [],
      itemTemplate: null,
      open: false
    });
    this.supr();
  },

  /**
     * @method toggle(open) 展开/收起
     * @public
     * @param  {boolean} open 展开/收起状态。如果无此参数，则在两种状态之间切换。
     * @return {void}
     */
  toggle: function toggle(_open) {
    if (this.data.disabled) return;

    var open = _open;
    if (open === undefined) open = !this.data.open;
    this.data.open = open;

    // 根据状态在Dropdown.opens列表中添加/删除管理项
    var index = Dropdown.opens.indexOf(this);
    if (open && index < 0) Dropdown.opens.push(this);else if (!open && index >= 0) Dropdown.opens.splice(index, 1);

    /**
         * @event toggle  展开/收起时触发
         * @property {object} sender 事件发送对象
         * @property {object} open 展开/收起状态
         */
    this.$emit('toggle', {
      sender: this,
      open: open
    });
  },

  /**
     * @method select(item) 选择某一项
     * @public
     * @param  {object} item 选择项
     * @return {void}
     */
  select: function select(item) {
    if (this.data.disabled || item.disabled || item.divider) return;

    /**
         * @event select 选择某一项时触发
         * @property {object} sender 事件发送对象
         * @property {object} selected 当前选择项
         */
    this.$emit('select', {
      sender: this,
      selected: item
    });

    this.toggle(false);
  },
  destroy: function destroy() {
    var index = Dropdown.opens.indexOf(this);
    index >= 0 && Dropdown.opens.splice(index, 1);
    this.supr();
  }
});

// 处理点击dropdown之外的地方后的收起事件。
Dropdown.opens = [];

_.dom.on(document, 'click', function (e) {
  var opens = Dropdown.opens.map(function (d) {
    return d;
  });
  opens.forEach(function (dropdown) {
    // 这个地方不能用stopPropagation来处理，因为展开一个dropdown的同时要收起其他dropdown
    var element = dropdown.$refs.element;
    var element2 = e.target;
    while (element2) {
      if (element === element2) return;
      element2 = element2.parentElement;
    }
    dropdown.toggle(false);
    dropdown.$update();
  });
});

module.exports = Dropdown;

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Component = __webpack_require__(1);
var _ = __webpack_require__(2);
var KLDrop = __webpack_require__(24);

var KLDropHeader = Component.extend({
  name: 'kl-drop-header',
  /**
     * @protected
     */
  config: function config() {
    _.extend(this.data, {});
    this.supr();

    if (this.$outer && this.$outer instanceof KLDrop) {
      this.$outer.$header = this;
      this.$outer.$update();
    }
  }
});

module.exports = KLDropHeader;

/***/ }),
/* 36 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__propertyUtils__ = __webpack_require__(510);
var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };



var RE_NUM = /[\-+]?(?:\d*\.|)\d+(?:[eE][\-+]?\d+|)/.source;

var getComputedStyleX = void 0;

function force(x, y) {
  return x + y;
}

function css(el, name, v) {
  var value = v;
  if ((typeof name === 'undefined' ? 'undefined' : _typeof(name)) === 'object') {
    for (var i in name) {
      if (name.hasOwnProperty(i)) {
        css(el, i, name[i]);
      }
    }
    return undefined;
  }
  if (typeof value !== 'undefined') {
    if (typeof value === 'number') {
      value = value + 'px';
    }
    el.style[name] = value;
    return undefined;
  }
  return getComputedStyleX(el, name);
}

function getClientPosition(elem) {
  var box = void 0;
  var x = void 0;
  var y = void 0;
  var doc = elem.ownerDocument;
  var body = doc.body;
  var docElem = doc && doc.documentElement;
  // 根据 GBS 最新数据，A-Grade Browsers 都已支持 getBoundingClientRect 方法，不用再考虑传统的实现方式
  box = elem.getBoundingClientRect();

  // 注：jQuery 还考虑减去 docElem.clientLeft/clientTop
  // 但测试发现，这样反而会导致当 html 和 body 有边距/边框样式时，获取的值不正确
  // 此外，ie6 会忽略 html 的 margin 值，幸运地是没有谁会去设置 html 的 margin

  x = box.left;
  y = box.top;

  // In IE, most of the time, 2 extra pixels are added to the top and left
  // due to the implicit 2-pixel inset border.  In IE6/7 quirks mode and
  // IE6 standards mode, this border can be overridden by setting the
  // document element's border to zero -- thus, we cannot rely on the
  // offset always being 2 pixels.

  // In quirks mode, the offset can be determined by querying the body's
  // clientLeft/clientTop, but in standards mode, it is found by querying
  // the document element's clientLeft/clientTop.  Since we already called
  // getClientBoundingRect we have already forced a reflow, so it is not
  // too expensive just to query them all.

  // ie 下应该减去窗口的边框吧，毕竟默认 absolute 都是相对窗口定位的
  // 窗口边框标准是设 documentElement ,quirks 时设置 body
  // 最好禁止在 body 和 html 上边框 ，但 ie < 9 html 默认有 2px ，减去
  // 但是非 ie 不可能设置窗口边框，body html 也不是窗口 ,ie 可以通过 html,body 设置
  // 标准 ie 下 docElem.clientTop 就是 border-top
  // ie7 html 即窗口边框改变不了。永远为 2
  // 但标准 firefox/chrome/ie9 下 docElem.clientTop 是窗口边框，即使设了 border-top 也为 0

  x -= docElem.clientLeft || body.clientLeft || 0;
  y -= docElem.clientTop || body.clientTop || 0;

  return {
    left: x,
    top: y
  };
}

function getScroll(w, top) {
  var ret = w['page' + (top ? 'Y' : 'X') + 'Offset'];
  var method = 'scroll' + (top ? 'Top' : 'Left');
  if (typeof ret !== 'number') {
    var d = w.document;
    // ie6,7,8 standard mode
    ret = d.documentElement[method];
    if (typeof ret !== 'number') {
      // quirks mode
      ret = d.body[method];
    }
  }
  return ret;
}

function getScrollLeft(w) {
  return getScroll(w);
}

function getScrollTop(w) {
  return getScroll(w, true);
}

function getOffset(el) {
  var pos = getClientPosition(el);
  var doc = el.ownerDocument;
  var w = doc.defaultView || doc.parentWindow;
  pos.left += getScrollLeft(w);
  pos.top += getScrollTop(w);
  return pos;
}

/**
 * A crude way of determining if an object is a window
 * @member util
 */
function isWindow(obj) {
  // must use == for ie8
  /* eslint eqeqeq:0 */
  return obj !== null && obj !== undefined && obj == obj.window;
}

function getDocument(node) {
  if (isWindow(node)) {
    return node.document;
  }
  if (node.nodeType === 9) {
    return node;
  }
  return node.ownerDocument;
}

function _getComputedStyle(elem, name, cs) {
  var computedStyle = cs;
  var val = '';
  var d = getDocument(elem);
  computedStyle = computedStyle || d.defaultView.getComputedStyle(elem, null);

  // https://github.com/kissyteam/kissy/issues/61
  if (computedStyle) {
    val = computedStyle.getPropertyValue(name) || computedStyle[name];
  }

  return val;
}

var _RE_NUM_NO_PX = new RegExp('^(' + RE_NUM + ')(?!px)[a-z%]+$', 'i');
var RE_POS = /^(top|right|bottom|left)$/;
var CURRENT_STYLE = 'currentStyle';
var RUNTIME_STYLE = 'runtimeStyle';
var LEFT = 'left';
var PX = 'px';

function _getComputedStyleIE(elem, name) {
  // currentStyle maybe null
  // http://msdn.microsoft.com/en-us/library/ms535231.aspx
  var ret = elem[CURRENT_STYLE] && elem[CURRENT_STYLE][name];

  // 当 width/height 设置为百分比时，通过 pixelLeft 方式转换的 width/height 值
  // 一开始就处理了! CUSTOM_STYLE.height,CUSTOM_STYLE.width ,cssHook 解决@2011-08-19
  // 在 ie 下不对，需要直接用 offset 方式
  // borderWidth 等值也有问题，但考虑到 borderWidth 设为百分比的概率很小，这里就不考虑了

  // From the awesome hack by Dean Edwards
  // http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291
  // If we're not dealing with a regular pixel number
  // but a number that has a weird ending, we need to convert it to pixels
  // exclude left right for relativity
  if (_RE_NUM_NO_PX.test(ret) && !RE_POS.test(name)) {
    // Remember the original values
    var style = elem.style;
    var left = style[LEFT];
    var rsLeft = elem[RUNTIME_STYLE][LEFT];

    // prevent flashing of content
    elem[RUNTIME_STYLE][LEFT] = elem[CURRENT_STYLE][LEFT];

    // Put in the new values to get a computed value out
    style[LEFT] = name === 'fontSize' ? '1em' : ret || 0;
    ret = style.pixelLeft + PX;

    // Revert the changed values
    style[LEFT] = left;

    elem[RUNTIME_STYLE][LEFT] = rsLeft;
  }
  return ret === '' ? 'auto' : ret;
}

if (typeof window !== 'undefined') {
  getComputedStyleX = window.getComputedStyle ? _getComputedStyle : _getComputedStyleIE;
}

function getOffsetDirection(dir, option) {
  if (dir === 'left') {
    return option.useCssRight ? 'right' : dir;
  }
  return option.useCssBottom ? 'bottom' : dir;
}

function oppositeOffsetDirection(dir) {
  if (dir === 'left') {
    return 'right';
  } else if (dir === 'right') {
    return 'left';
  } else if (dir === 'top') {
    return 'bottom';
  } else if (dir === 'bottom') {
    return 'top';
  }
}

// 设置 elem 相对 elem.ownerDocument 的坐标
function setLeftTop(elem, offset, option) {
  // set position first, in-case top/left are set even on static elem
  if (css(elem, 'position') === 'static') {
    elem.style.position = 'relative';
  }
  var presetH = -999;
  var presetV = -999;
  var horizontalProperty = getOffsetDirection('left', option);
  var verticalProperty = getOffsetDirection('top', option);
  var oppositeHorizontalProperty = oppositeOffsetDirection(horizontalProperty);
  var oppositeVerticalProperty = oppositeOffsetDirection(verticalProperty);

  if (horizontalProperty !== 'left') {
    presetH = 999;
  }

  if (verticalProperty !== 'top') {
    presetV = 999;
  }
  var originalTransition = '';
  var originalOffset = getOffset(elem);
  if ('left' in offset || 'top' in offset) {
    originalTransition = Object(__WEBPACK_IMPORTED_MODULE_0__propertyUtils__["c" /* getTransitionProperty */])(elem) || '';
    Object(__WEBPACK_IMPORTED_MODULE_0__propertyUtils__["e" /* setTransitionProperty */])(elem, 'none');
  }
  if ('left' in offset) {
    elem.style[oppositeHorizontalProperty] = '';
    elem.style[horizontalProperty] = presetH + 'px';
  }
  if ('top' in offset) {
    elem.style[oppositeVerticalProperty] = '';
    elem.style[verticalProperty] = presetV + 'px';
  }
  var old = getOffset(elem);
  var originalStyle = {};
  for (var key in offset) {
    if (offset.hasOwnProperty(key)) {
      var dir = getOffsetDirection(key, option);
      var preset = key === 'left' ? presetH : presetV;
      var off = originalOffset[key] - old[key];
      if (dir === key) {
        originalStyle[dir] = preset + off;
      } else {
        originalStyle[dir] = preset - off;
      }
    }
  }
  css(elem, originalStyle);
  // force relayout
  force(elem.offsetTop, elem.offsetLeft);
  if ('left' in offset || 'top' in offset) {
    Object(__WEBPACK_IMPORTED_MODULE_0__propertyUtils__["e" /* setTransitionProperty */])(elem, originalTransition);
  }
  var ret = {};
  for (var _key in offset) {
    if (offset.hasOwnProperty(_key)) {
      var _dir = getOffsetDirection(_key, option);
      var _off = offset[_key] - originalOffset[_key];
      if (_key === _dir) {
        ret[_dir] = originalStyle[_dir] + _off;
      } else {
        ret[_dir] = originalStyle[_dir] - _off;
      }
    }
  }
  css(elem, ret);
}

function setTransform(elem, offset) {
  var originalOffset = getOffset(elem);
  var originalXY = Object(__WEBPACK_IMPORTED_MODULE_0__propertyUtils__["b" /* getTransformXY */])(elem);
  var resultXY = { x: originalXY.x, y: originalXY.y };
  if ('left' in offset) {
    resultXY.x = originalXY.x + offset.left - originalOffset.left;
  }
  if ('top' in offset) {
    resultXY.y = originalXY.y + offset.top - originalOffset.top;
  }
  Object(__WEBPACK_IMPORTED_MODULE_0__propertyUtils__["d" /* setTransformXY */])(elem, resultXY);
}

function setOffset(elem, offset, option) {
  if (option.useCssRight || option.useCssBottom) {
    setLeftTop(elem, offset, option);
  } else if (option.useCssTransform && Object(__WEBPACK_IMPORTED_MODULE_0__propertyUtils__["a" /* getTransformName */])() in document.body.style) {
    setTransform(elem, offset, option);
  } else {
    setLeftTop(elem, offset, option);
  }
}

function each(arr, fn) {
  for (var i = 0; i < arr.length; i++) {
    fn(arr[i]);
  }
}

function isBorderBoxFn(elem) {
  return getComputedStyleX(elem, 'boxSizing') === 'border-box';
}

var BOX_MODELS = ['margin', 'border', 'padding'];
var CONTENT_INDEX = -1;
var PADDING_INDEX = 2;
var BORDER_INDEX = 1;
var MARGIN_INDEX = 0;

function swap(elem, options, callback) {
  var old = {};
  var style = elem.style;
  var name = void 0;

  // Remember the old values, and insert the new ones
  for (name in options) {
    if (options.hasOwnProperty(name)) {
      old[name] = style[name];
      style[name] = options[name];
    }
  }

  callback.call(elem);

  // Revert the old values
  for (name in options) {
    if (options.hasOwnProperty(name)) {
      style[name] = old[name];
    }
  }
}

function getPBMWidth(elem, props, which) {
  var value = 0;
  var prop = void 0;
  var j = void 0;
  var i = void 0;
  for (j = 0; j < props.length; j++) {
    prop = props[j];
    if (prop) {
      for (i = 0; i < which.length; i++) {
        var cssProp = void 0;
        if (prop === 'border') {
          cssProp = '' + prop + which[i] + 'Width';
        } else {
          cssProp = prop + which[i];
        }
        value += parseFloat(getComputedStyleX(elem, cssProp)) || 0;
      }
    }
  }
  return value;
}

var domUtils = {};

each(['Width', 'Height'], function (name) {
  domUtils['doc' + name] = function (refWin) {
    var d = refWin.document;
    return Math.max(
    // firefox chrome documentElement.scrollHeight< body.scrollHeight
    // ie standard mode : documentElement.scrollHeight> body.scrollHeight
    d.documentElement['scroll' + name],
    // quirks : documentElement.scrollHeight 最大等于可视窗口多一点？
    d.body['scroll' + name], domUtils['viewport' + name](d));
  };

  domUtils['viewport' + name] = function (win) {
    // pc browser includes scrollbar in window.innerWidth
    var prop = 'client' + name;
    var doc = win.document;
    var body = doc.body;
    var documentElement = doc.documentElement;
    var documentElementProp = documentElement[prop];
    // 标准模式取 documentElement
    // backcompat 取 body
    return doc.compatMode === 'CSS1Compat' && documentElementProp || body && body[prop] || documentElementProp;
  };
});

/*
 得到元素的大小信息
 @param elem
 @param name
 @param {String} [extra]  'padding' : (css width) + padding
 'border' : (css width) + padding + border
 'margin' : (css width) + padding + border + margin
 */
function getWH(elem, name, ex) {
  var extra = ex;
  if (isWindow(elem)) {
    return name === 'width' ? domUtils.viewportWidth(elem) : domUtils.viewportHeight(elem);
  } else if (elem.nodeType === 9) {
    return name === 'width' ? domUtils.docWidth(elem) : domUtils.docHeight(elem);
  }
  var which = name === 'width' ? ['Left', 'Right'] : ['Top', 'Bottom'];
  var borderBoxValue = name === 'width' ? elem.offsetWidth : elem.offsetHeight;
  var computedStyle = getComputedStyleX(elem);
  var isBorderBox = isBorderBoxFn(elem, computedStyle);
  var cssBoxValue = 0;
  if (borderBoxValue === null || borderBoxValue === undefined || borderBoxValue <= 0) {
    borderBoxValue = undefined;
    // Fall back to computed then un computed css if necessary
    cssBoxValue = getComputedStyleX(elem, name);
    if (cssBoxValue === null || cssBoxValue === undefined || Number(cssBoxValue) < 0) {
      cssBoxValue = elem.style[name] || 0;
    }
    // Normalize '', auto, and prepare for extra
    cssBoxValue = parseFloat(cssBoxValue) || 0;
  }
  if (extra === undefined) {
    extra = isBorderBox ? BORDER_INDEX : CONTENT_INDEX;
  }
  var borderBoxValueOrIsBorderBox = borderBoxValue !== undefined || isBorderBox;
  var val = borderBoxValue || cssBoxValue;
  if (extra === CONTENT_INDEX) {
    if (borderBoxValueOrIsBorderBox) {
      return val - getPBMWidth(elem, ['border', 'padding'], which, computedStyle);
    }
    return cssBoxValue;
  } else if (borderBoxValueOrIsBorderBox) {
    if (extra === BORDER_INDEX) {
      return val;
    }
    return val + (extra === PADDING_INDEX ? -getPBMWidth(elem, ['border'], which, computedStyle) : getPBMWidth(elem, ['margin'], which, computedStyle));
  }
  return cssBoxValue + getPBMWidth(elem, BOX_MODELS.slice(extra), which, computedStyle);
}

var cssShow = {
  position: 'absolute',
  visibility: 'hidden',
  display: 'block'
};

// fix #119 : https://github.com/kissyteam/kissy/issues/119
function getWHIgnoreDisplay() {
  for (var _len = arguments.length, args = Array(_len), _key2 = 0; _key2 < _len; _key2++) {
    args[_key2] = arguments[_key2];
  }

  var val = void 0;
  var elem = args[0];
  // in case elem is window
  // elem.offsetWidth === undefined
  if (elem.offsetWidth !== 0) {
    val = getWH.apply(undefined, args);
  } else {
    swap(elem, cssShow, function () {
      val = getWH.apply(undefined, args);
    });
  }
  return val;
}

each(['width', 'height'], function (name) {
  var first = name.charAt(0).toUpperCase() + name.slice(1);
  domUtils['outer' + first] = function (el, includeMargin) {
    return el && getWHIgnoreDisplay(el, name, includeMargin ? MARGIN_INDEX : BORDER_INDEX);
  };
  var which = name === 'width' ? ['Left', 'Right'] : ['Top', 'Bottom'];

  domUtils[name] = function (elem, v) {
    var val = v;
    if (val !== undefined) {
      if (elem) {
        var computedStyle = getComputedStyleX(elem);
        var isBorderBox = isBorderBoxFn(elem);
        if (isBorderBox) {
          val += getPBMWidth(elem, ['padding', 'border'], which, computedStyle);
        }
        return css(elem, name, val);
      }
      return undefined;
    }
    return elem && getWHIgnoreDisplay(elem, name, CONTENT_INDEX);
  };
});

function mix(to, from) {
  for (var i in from) {
    if (from.hasOwnProperty(i)) {
      to[i] = from[i];
    }
  }
  return to;
}

var utils = {
  getWindow: function getWindow(node) {
    if (node && node.document && node.setTimeout) {
      return node;
    }
    var doc = node.ownerDocument || node;
    return doc.defaultView || doc.parentWindow;
  },

  getDocument: getDocument,
  offset: function offset(el, value, option) {
    if (typeof value !== 'undefined') {
      setOffset(el, value, option || {});
    } else {
      return getOffset(el);
    }
  },

  isWindow: isWindow,
  each: each,
  css: css,
  clone: function clone(obj) {
    var i = void 0;
    var ret = {};
    for (i in obj) {
      if (obj.hasOwnProperty(i)) {
        ret[i] = obj[i];
      }
    }
    var overflow = obj.overflow;
    if (overflow) {
      for (i in obj) {
        if (obj.hasOwnProperty(i)) {
          ret.overflow[i] = obj.overflow[i];
        }
      }
    }
    return ret;
  },

  mix: mix,
  getWindowScrollLeft: function getWindowScrollLeft(w) {
    return getScrollLeft(w);
  },
  getWindowScrollTop: function getWindowScrollTop(w) {
    return getScrollTop(w);
  },
  merge: function merge() {
    var ret = {};

    for (var _len2 = arguments.length, args = Array(_len2), _key3 = 0; _key3 < _len2; _key3++) {
      args[_key3] = arguments[_key3];
    }

    for (var i = 0; i < args.length; i++) {
      utils.mix(ret, args[i]);
    }
    return ret;
  },

  viewportWidth: 0,
  viewportHeight: 0
};

mix(utils, domUtils);

/* harmony default export */ __webpack_exports__["a"] = (utils);

/***/ }),
/* 37 */
/***/ (function(module, exports) {

var id = 0
  , px = Math.random();
module.exports = function(key){
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};

/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(256), __esModule: true };

/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(257);
var global        = __webpack_require__(8)
  , hide          = __webpack_require__(17)
  , Iterators     = __webpack_require__(22)
  , TO_STRING_TAG = __webpack_require__(7)('toStringTag');

for(var collections = ['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], i = 0; i < 5; i++){
  var NAME       = collections[i]
    , Collection = global[NAME]
    , proto      = Collection && Collection.prototype;
  if(proto && !proto[TO_STRING_TAG])hide(proto, TO_STRING_TAG, NAME);
  Iterators[NAME] = Iterators.Array;
}

/***/ }),
/* 40 */
/***/ (function(module, exports) {

module.exports = true;

/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

var def = __webpack_require__(12).f
  , has = __webpack_require__(19)
  , TAG = __webpack_require__(7)('toStringTag');

module.exports = function(it, tag, stat){
  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});
};

/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.13 ToObject(argument)
var defined = __webpack_require__(52);
module.exports = function(it){
  return Object(defined(it));
};

/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(269), __esModule: true };

/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(271), __esModule: true };

/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _iterator = __webpack_require__(279);

var _iterator2 = _interopRequireDefault(_iterator);

var _symbol = __webpack_require__(281);

var _symbol2 = _interopRequireDefault(_symbol);

var _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {
  return typeof obj === "undefined" ? "undefined" : _typeof(obj);
} : function (obj) {
  return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
};

/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _stringify = __webpack_require__(44);

var _stringify2 = _interopRequireDefault(_stringify);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var reqwest = __webpack_require__(347);

var ajax = {};

ajax.request = function (opt) {
  var oldError = opt.error,
      oldSuccess = opt.success,
      oldComplete = opt.complete;


  opt.data = opt.data || {};

  opt.type = opt.type || 'json';

  if (!opt.contentType && opt.method && opt.method.toLowerCase() !== 'get') {
    opt.contentType = 'application/json';
  }

  if (opt.contentType === 'application/json') {
    opt.data = (0, _stringify2.default)(opt.data);
  }

  // ajax.$emit('start', opt);
  opt.success = function (data) {
    // ajax.$emit('success', data);
    if (data.code || data.success) {
      if (data.code !== 200 && !data.success) {
        if (oldError) oldError(data.error, data.message, data.code);else ; // Notify.error(data.message);
      } else oldSuccess && oldSuccess(data, data.message, data.code);
    } else oldSuccess && oldSuccess(data);
  };

  opt.error = function (data) {
    // ajax.$emit('error', data);
    oldError && oldError(data.result, data);
  };

  opt.complete = function (data) {
    // ajax.$emit('complete', data);
    oldComplete && oldComplete(data.result, data);
  };

  reqwest(opt);
};

ajax.get = function (url, success, error) {
  ajax.request({
    url: url,
    method: 'get',
    success: success,
    error: error
  });
};

ajax.post = function (url, data, success, error) {
  ajax.request({
    url: url,
    method: 'post',
    type: 'json',
    success: success,
    error: error
  });
};

module.exports = ajax;

/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _slicedToArray2 = __webpack_require__(25);

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _entries = __webpack_require__(416);

var _entries2 = _interopRequireDefault(_entries);

var _getIterator2 = __webpack_require__(38);

var _getIterator3 = _interopRequireDefault(_getIterator2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _ = __webpack_require__(2);

function genUid() {
  function s4() {
    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);
  }
  return '' + s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();
}

function camelize(str) {
  return str.charAt(0).toUpperCase() + str.slice(1);
}

var defaults = {
  type: 'POST',
  async: true
};

function upload(url, rawFile, options) {
  var data = createFormData(rawFile, options);
  _.extend(options, { url: url, data: data }, true);

  return ajax(_.extend(defaults, options, true));
}

function createFormData(rawFile) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  var fd = new FormData();
  var data = rawFile;
  var name = options.name;
  if (rawFile instanceof File) {
    data = {};
    data[name] = rawFile;
  }
  _.extend(data, options.data);
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = (0, _getIterator3.default)((0, _entries2.default)(data)), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var _step$value = (0, _slicedToArray3.default)(_step.value, 2),
          key = _step$value[0],
          value = _step$value[1];

      fd.append(key, value);
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  return fd;
}

function ajax(options) {
  var xhr = new XMLHttpRequest();
  var headers = options.headers || {};
  _.extend(headers, { 'X-Requested-With': 'XMLHttpRequest' });

  xhr.open(options.type, options.url, options.async);

  var key = void 0;
  for (key in headers) {
    if (headers.hasOwnProperty(key)) {
      xhr.setRequestHeader(key, headers[key]);
    }
  }

  xhr.withCredentials = options.withCredentials;

  var noop = function noop() {};
  var onerror = options.onerror || noop;
  var onDownloadLoad = options.onload || noop;
  var onDownloadProgress = options.onprogress || noop;

  xhr.addEventListener('load', onDownloadLoad);
  xhr.addEventListener('error', onerror);
  xhr.addEventListener('progress', onDownloadProgress);

  if (options.upload) {
    var onUploadLoad = options.upload.onload || noop;
    var onUploadProgress = options.upload.onprogress || noop;

    xhr.upload.addEventListener('load', onUploadLoad);
    xhr.upload.addEventListener('progress', onUploadProgress);
  }

  xhr.send(options.data);
}

module.exports = {
  upload: upload,
  genUid: genUid,
  camelize: camelize,
  createFormData: createFormData
};

/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _component = __webpack_require__(1);

var _component2 = _interopRequireDefault(_component);

var _index = __webpack_require__(457);

var _index2 = _interopRequireDefault(_index);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable */
var KLDateConfirm = _component2.default.extend({
    name: 'kl-date-confirm',
    template: _index2.default,
    config: function config() {
        this.defaults({
            prefixCls: 'kl-picker-confirm',
            showTime: false,
            timeDisabled: false,
            isTime: false
        });
        this.supr();
    },
    onSuccess: function onSuccess() {
        this.$emit('pick-success');
    },
    onToggleTime: function onToggleTime() {
        if (this.data.timeDisabled) return;
        this.$emit('pick-toggle-time');
    }
});

module.exports = KLDateConfirm;

/***/ }),
/* 49 */
/***/ (function(module, exports) {

module.exports = function(it){
  if(typeof it != 'function')throw TypeError(it + ' is not a function!');
  return it;
};

/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(27)
  , document = __webpack_require__(8).document
  // in old IE typeof document.createElement is 'object'
  , is = isObject(document) && isObject(document.createElement);
module.exports = function(it){
  return is ? document.createElement(it) : {};
};

/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = __webpack_require__(27);
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function(it, S){
  if(!isObject(it))return it;
  var fn, val;
  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;
  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
  throw TypeError("Can't convert object to primitive value");
};

/***/ }),
/* 52 */
/***/ (function(module, exports) {

// 7.2.1 RequireObjectCoercible(argument)
module.exports = function(it){
  if(it == undefined)throw TypeError("Can't call method on  " + it);
  return it;
};

/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.15 ToLength
var toInteger = __webpack_require__(54)
  , min       = Math.min;
module.exports = function(it){
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};

/***/ }),
/* 54 */
/***/ (function(module, exports) {

// 7.1.4 ToInteger
var ceil  = Math.ceil
  , floor = Math.floor;
module.exports = function(it){
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};

/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__(56)('keys')
  , uid    = __webpack_require__(37);
module.exports = function(key){
  return shared[key] || (shared[key] = uid(key));
};

/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(8)
  , SHARED = '__core-js_shared__'
  , store  = global[SHARED] || (global[SHARED] = {});
module.exports = function(key){
  return store[key] || (store[key] = {});
};

/***/ }),
/* 57 */
/***/ (function(module, exports) {

// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');

/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject    = __webpack_require__(13)
  , dPs         = __webpack_require__(261)
  , enumBugKeys = __webpack_require__(57)
  , IE_PROTO    = __webpack_require__(55)('IE_PROTO')
  , Empty       = function(){ /* empty */ }
  , PROTOTYPE   = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function(){
  // Thrash, waste and sodomy: IE GC bug
  var iframe = __webpack_require__(50)('iframe')
    , i      = enumBugKeys.length
    , lt     = '<'
    , gt     = '>'
    , iframeDocument;
  iframe.style.display = 'none';
  __webpack_require__(77).appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while(i--)delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties){
  var result;
  if(O !== null){
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty;
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};


/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

var classof   = __webpack_require__(60)
  , ITERATOR  = __webpack_require__(7)('iterator')
  , Iterators = __webpack_require__(22);
module.exports = __webpack_require__(4).getIteratorMethod = function(it){
  if(it != undefined)return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};

/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

// getting tag from 19.1.3.6 Object.prototype.toString()
var cof = __webpack_require__(29)
  , TAG = __webpack_require__(7)('toStringTag')
  // ES3 wrong here
  , ARG = cof(function(){ return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function(it, key){
  try {
    return it[key];
  } catch(e){ /* empty */ }
};

module.exports = function(it){
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};

/***/ }),
/* 61 */
/***/ (function(module, exports) {

exports.f = Object.getOwnPropertySymbols;

/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

exports.f = __webpack_require__(7);

/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

var global         = __webpack_require__(8)
  , core           = __webpack_require__(4)
  , LIBRARY        = __webpack_require__(40)
  , wksExt         = __webpack_require__(62)
  , defineProperty = __webpack_require__(12).f;
module.exports = function(name){
  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
  if(name.charAt(0) != '_' && !(name in $Symbol))defineProperty($Symbol, name, {value: wksExt.f(name)});
};

/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = toDate;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function toDate(date) {
  (0, _assertString2.default)(date);
  date = Date.parse(date);
  return !isNaN(date) ? new Date(date) : null;
}
module.exports = exports['default'];

/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports.default = toString;
function toString(input) {
  if ((typeof input === 'undefined' ? 'undefined' : _typeof(input)) === 'object' && input !== null) {
    if (typeof input.toString === 'function') {
      input = input.toString();
    } else {
      input = '[object Object]';
    }
  } else if (input === null || typeof input === 'undefined' || isNaN(input) && !input.length) {
    input = '';
  }
  return String(input);
}
module.exports = exports['default'];

/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isFDQN;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

var _merge = __webpack_require__(33);

var _merge2 = _interopRequireDefault(_merge);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var default_fqdn_options = {
  require_tld: true,
  allow_underscores: false,
  allow_trailing_dot: false
};

function isFDQN(str, options) {
  (0, _assertString2.default)(str);
  options = (0, _merge2.default)(options, default_fqdn_options);

  /* Remove the optional trailing dot before checking validity */
  if (options.allow_trailing_dot && str[str.length - 1] === '.') {
    str = str.substring(0, str.length - 1);
  }
  var parts = str.split('.');
  if (options.require_tld) {
    var tld = parts.pop();
    if (!parts.length || !/^([a-z\u00a1-\uffff]{2,}|xn[a-z0-9-]{2,})$/i.test(tld)) {
      return false;
    }
  }
  for (var part, i = 0; i < parts.length; i++) {
    part = parts[i];
    if (options.allow_underscores) {
      part = part.replace(/_/g, '');
    }
    if (!/^[a-z\u00a1-\uffff0-9-]+$/i.test(part)) {
      return false;
    }
    if (/[\uff01-\uff5e]/.test(part)) {
      // disallow full-width chars
      return false;
    }
    if (part[0] === '-' || part[part.length - 1] === '-') {
      return false;
    }
  }
  return true;
}
module.exports = exports['default'];

/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * ------------------------------------------------------------
 * Panel     面板
 * @author   sensen(rainforest92@126.com)
 * ------------------------------------------------------------
 */

var Component = __webpack_require__(1);
var template = __webpack_require__(364);
var _ = __webpack_require__(2);

/**
 * @class Panel
 * @extend Component
 * @param {object}          [options.data]                    = 绑定属性
 * @param {boolean}         [options.data.disabled=false]     => 是否禁用
 * @param {boolean}         [options.data.visible=true]       => 是否显示
 * @param {string}          [options.data.class]              => 补充class
 */
var Panel = Component.extend({
  name: 'panel',
  template: template,
  $tools: null,
  $foot: null,
  /**
     * @protected
     */
  config: function config() {
    _.extend(this.data, {
      title: '',
      open: true
    });
    this.supr();

    if (this.$outer && this.$outer.data.panels) {
      this.$outer.data.panels.push(this);
    }
  },

  /**
     * @method toggle(open) 展开/收起
     * @public
     * @param  {boolean} open 展开/收起状态。如果无此参数，则在两种状态之间切换。
     * @return {void}
     */
  toggle: function toggle(open) {
    if (this.data.disabled) return;

    if (open === undefined) open = !this.data.open;

    if (open && this.$outer && this.$outer.data.panels && this.$outer.data.accordion) {
      this.$outer.data.panels.forEach(function (panel) {
        panel.data.open = false;
      });
    }

    this.data.open = open;
  },
  stopPropagation: function stopPropagation(e) {
    e.stopPropagation();
  }
});

module.exports = Panel;

/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * common config
 */

var sizeMap = {
  K: '1024',
  KB: '1024',
  M: '1048576', // 1024 * 1024
  MB: '1048576', // 1024 * 1024
  G: '1073741824', // 1024 * 1024 * 1024
  GB: '1073741824' // 1024 * 1024 * 1024
};

var typeMap = {
  'image/*': 'image',
  '.jpg': 'image',
  '.jpeg': 'image',
  '.gif': 'image',
  '.png': 'image',
  '.zip': 'zip',
  '.rar': 'rar',
  '.gz': 'gz',
  document: 'doc',
  sheet: 'excel',
  powerpoint: 'ppt',
  msword: 'doc',
  '.doc': 'doc',
  '.xlsx': 'excel',
  '.xls': 'excel',
  '.ppt': 'ppt',
  '.pptx': 'ppt',
  'video/*': 'video',
  '.mp4': 'video',
  '.mkv': 'video',
  '.rmvb': 'video',
  '.avi': 'video',
  'audio/*': 'audio',
  '.mp3': 'audio',
  'application/pdf': 'pdf',
  '.pdf': 'pdf',
  'application/javascript': 'js',
  '.js': 'js',
  '.html': 'html',
  '.txt': 'text',
  'text/plain': 'text',
  '.json': 'json'
};

var flagMap = {
  ADDED: 0,
  ORIGINAL: 1,
  DELETED: 2
};

module.exports = {
  sizeMap: sizeMap,
  typeMap: typeMap,
  flagMap: flagMap
};

/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Regular = __webpack_require__(11);

var _ = {};

_.isType = function (target, type) {
  return Object.prototype.toString.call(target).toLowerCase() === '[object ' + type + ']';
};
['String', 'Object', 'Array', 'Number', 'Null', 'Undefined'].forEach(function (item) {
  _['is' + item] = function (target) {
    return _.isType(target, item.toLowerCase());
  };
});

_.fillWithZero = function (val, len) {
  var valLen = val.toString().length;
  if (valLen < len) {
    return (Array(len).join(0) + val).slice(-len);
  }
  return '' + val;
};

_.throttle = function (fn, _delay) {
  var self = this;
  var last = null;
  var timer = null;
  var delay = _delay || 100;
  return function () {
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var now = +new Date();

    clearTimeout(timer);
    if (now - last > delay) {
      last = now;
      fn.apply(self, args);
    } else {
      // run at last time
      timer = setTimeout(function () {
        fn.apply(self, args);
      }, delay);
    }
  };
};

/*eslint-disable*/
_.debounce = function (func, wait, immediate) {
  var timeout = void 0,
      args = void 0,
      context = void 0,
      timestamp = void 0,
      result = void 0;

  var later = function later() {
    // 据上一次触发时间间隔
    var last = +new Date() - timestamp;

    // 上次被包装函数被调用时间间隔last小于设定时间间隔wait
    if (last < wait && last > 0) {
      timeout = setTimeout(later, wait - last);
    } else {
      timeout = null;
      // 如果设定为immediate===true，因为开始边界已经调用过了此处无需调用
      if (!immediate) {
        result = func.apply(context, args);
        if (!timeout) {
          context = args = null;
        }
      }
    }
  };

  return function () {
    context = this;
    args = arguments; // eslint-disable-line
    timestamp = +new Date();
    var callNow = immediate && !timeout;
    // 如果延时不存在，重新设定延时
    if (!timeout) {
      timeout = setTimeout(later, wait);
    }
    if (callNow) {
      result = func.apply(context, args);
      context = args = null;
    }

    return result;
  };
};
/*eslint-enable*/

_.convertBeginEnd = function (_str) {
  var BEGIN = Regular._BEGIN_;
  var END = Regular._END_;
  var str = '' + _str;
  if (BEGIN && BEGIN !== '{') {
    str = str.replace(/{/g, BEGIN);
  }
  if (END && END !== '}') {
    str = str.replace(/}/g, END);
  }
  return str;
};

var hasChildren = function hasChildren(root) {
  return root.children && root.children.length > 0;
};

var updateHeaderSpan = function updateHeaderSpan(headers) {
  var len = headers.length;
  headers.forEach(function (row, rowIndex) {
    row.forEach(function (header) {
      header._headerColSpan = header._nodeWidth;
      header._headerRowSpan = len - rowIndex - (header._nodeDepth - 1);
    });
  });
  return headers;
};

_.getHeaders = function (_columns) {
  var headers = [];
  var extractHeaders = function extractHeaders(columns, depth) {
    columns.forEach(function (column) {
      if (hasChildren(column)) {
        column._dataColumn = extractHeaders(column.children, depth + 1);
      }
      if (!headers[depth]) {
        headers[depth] = [];
      }
      // 计算深度和宽度
      if (hasChildren(column)) {
        column._nodeDepth = 1 + column.children.reduce(function (previous, current) {
          return current._nodeDepth > previous ? current._nodeDepth : previous;
        }, 0);
        column._nodeWidth = column.children.reduce(function (previous, current) {
          return previous + (current._nodeWidth || 0);
        }, 0);
      } else {
        column._nodeDepth = 1;
        column._nodeWidth = 1;
      }
      headers[depth].push(column);
    });
  };
  extractHeaders(_columns, 0);
  return updateHeaderSpan(headers);
};

_.getLeaves = function (tree) {
  var res = [];
  var extractLeaves = function extractLeaves(root) {
    if (root.forEach) {
      return root.forEach(function (item) {
        if (hasChildren(item)) {
          extractLeaves(item.children);
        } else {
          res.push(item);
        }
      });
    }
  };
  extractLeaves(tree);
  return res;
};

var getNum = function getNum(str) {
  return +('' + str).split('px')[0];
};

_.getNum = getNum;

_.setElementValue = function (ele, prop, val) {
  if (ele) {
    ele[prop] = val;
  }
};

_.getElementHeight = function (ele) {
  var computedStyle = window.getComputedStyle(ele);
  var height = getNum(computedStyle.marginTop) + getNum(computedStyle.borderTopWidth) + getNum(ele.offsetHeight) + getNum(computedStyle.borderBottomWidth) + getNum(computedStyle.marginBottom);
  return height;
};

/*eslint-disable*/
_.browser = {
  versions: function () {
    var u = navigator.userAgent;
    return { //移动终端浏览器版本信息
      trident: u.indexOf("Trident") > -1, //IE内核
      presto: u.indexOf("Presto") > -1, //opera内核
      webKit: u.indexOf("AppleWebKit") > -1, //苹果、谷歌内核
      gecko: u.indexOf("Gecko") > -1 && u.indexOf("KHTML") == -1, //火狐内核
      mobile: !!u.match(/AppleWebKit.*Mobile.*/), //是否为移动终端
      ios: !!u.match(/\(i[^;]+;( U;)? CPU.+Mac OS X/), //ios终端
      android: u.indexOf("Android") > -1 || u.indexOf("Linux") > -1, //android终端或者uc浏览器
      iPhone: u.indexOf("iPhone") > -1, //是否为iPhone或者QQHD浏览器
      iPad: u.indexOf("iPad") > -1, //是否iPad
      webApp: u.indexOf("Safari") == -1 //是否web应该程序，没有头部与底部
    };
  }(),
  language: (navigator.browserLanguage || navigator.language).toLowerCase()
};
/*eslint-enable*/

module.exports = _;

/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(252), __esModule: true };

/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = !__webpack_require__(14) && !__webpack_require__(21)(function(){
  return Object.defineProperty(__webpack_require__(50)('div'), 'a', {get: function(){ return 7; }}).a != 7;
});

/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

var getKeys   = __webpack_require__(18)
  , toIObject = __webpack_require__(15)
  , isEnum    = __webpack_require__(30).f;
module.exports = function(isEntries){
  return function(it){
    var O      = toIObject(it)
      , keys   = getKeys(O)
      , length = keys.length
      , i      = 0
      , result = []
      , key;
    while(length > i)if(isEnum.call(O, key = keys[i++])){
      result.push(isEntries ? [key, O[key]] : O[key]);
    } return result;
  };
};

/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

var has          = __webpack_require__(19)
  , toIObject    = __webpack_require__(15)
  , arrayIndexOf = __webpack_require__(254)(false)
  , IE_PROTO     = __webpack_require__(55)('IE_PROTO');

module.exports = function(object, names){
  var O      = toIObject(object)
    , i      = 0
    , result = []
    , key;
  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while(names.length > i)if(has(O, key = names[i++])){
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};

/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = __webpack_require__(29);
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){
  return cof(it) == 'String' ? it.split('') : Object(it);
};

/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY        = __webpack_require__(40)
  , $export        = __webpack_require__(10)
  , redefine       = __webpack_require__(76)
  , hide           = __webpack_require__(17)
  , has            = __webpack_require__(19)
  , Iterators      = __webpack_require__(22)
  , $iterCreate    = __webpack_require__(260)
  , setToStringTag = __webpack_require__(41)
  , getPrototypeOf = __webpack_require__(262)
  , ITERATOR       = __webpack_require__(7)('iterator')
  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`
  , FF_ITERATOR    = '@@iterator'
  , KEYS           = 'keys'
  , VALUES         = 'values';

var returnThis = function(){ return this; };

module.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){
  $iterCreate(Constructor, NAME, next);
  var getMethod = function(kind){
    if(!BUGGY && kind in proto)return proto[kind];
    switch(kind){
      case KEYS: return function keys(){ return new Constructor(this, kind); };
      case VALUES: return function values(){ return new Constructor(this, kind); };
    } return function entries(){ return new Constructor(this, kind); };
  };
  var TAG        = NAME + ' Iterator'
    , DEF_VALUES = DEFAULT == VALUES
    , VALUES_BUG = false
    , proto      = Base.prototype
    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]
    , $default   = $native || getMethod(DEFAULT)
    , $entries   = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined
    , $anyNative = NAME == 'Array' ? proto.entries || $native : $native
    , methods, key, IteratorPrototype;
  // Fix native
  if($anyNative){
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base));
    if(IteratorPrototype !== Object.prototype){
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if(!LIBRARY && !has(IteratorPrototype, ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if(DEF_VALUES && $native && $native.name !== VALUES){
    VALUES_BUG = true;
    $default = function values(){ return $native.call(this); };
  }
  // Define iterator
  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG]  = returnThis;
  if(DEFAULT){
    methods = {
      values:  DEF_VALUES ? $default : getMethod(VALUES),
      keys:    IS_SET     ? $default : getMethod(KEYS),
      entries: $entries
    };
    if(FORCED)for(key in methods){
      if(!(key in proto))redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};

/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(17);

/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(8).document && document.documentElement;

/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _create = __webpack_require__(43);

var _create2 = _interopRequireDefault(_create);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * ------------------------------------------------------------
 * NumberInput 输入扩展
 * @author   sensen(rainforest92@126.com)
 * ------------------------------------------------------------
 */
var KLInput = __webpack_require__(79);
var template = __webpack_require__(344);
var _ = __webpack_require__(2);

/**
 * @class NumberInput
 * @extend KLInput
 * @param {object}        [options.data]                  = 绑定属性
 * @param {string}        [options.data.value=0]          <=> 文本框的值
 * @param {string}        [options.data.state]            <=> 文本框的状态
 * @param {number}        [options.data.min]              => 最小值
 * @param {number}        [options.data.max]              => 最大值
 * @param {boolean}       [options.data.hideTip=false]    => 是否显示校验错误信息
 * @param {boolean}       [options.data.autofocus=false]  => 是否自动获得焦点
 * @param {boolean}       [options.data.readonly=false]   => 是否只读
 * @param {boolean}       [options.data.disabled=false]   => 是否禁用
 * @param {boolean}       [options.data.visible=true]     => 是否显示
 * @param {string}        [options.data.class]            => 补充class
 */
var NumberInput = KLInput.extend({
  name: 'number-input',
  template: _.compressHtml(template),
  /**
     * @protected
     */
  config: function config() {
    _.extend(this.data, {
      value: 0,
      // @inherited state: '',
      // @inherited placeholder: '',
      hideTip: false,
      min: undefined,
      max: undefined,
      autofocus: false
    });
    this.supr();

    this.$watch('value', function (newValue) {
      // 字符类型自动转为数字类型
      if (typeof newValue === 'string') return this.data.value = +newValue;

      // 如果超出数值范围，则设置为范围边界的数值
      var isOutOfRange = this.isOutOfRange(newValue);
      if (isOutOfRange !== false) return this.data.value = isOutOfRange;

      /**
             * @event change 数值改变时触发
             * @property {object} sender 事件发送对象
             * @property {number} value 改变后的数值
             */
      this.$emit('change', {
        sender: this,
        value: newValue
      });
    });

    this.$watch(['min', 'max'], function (min, max) {
      if (!isNaN(min) && !isNaN(max) && min - max > 0) {
        throw new NumberInput.NumberRangeError(min, max);
      }

      // 如果超出数值范围，则设置为范围边界的数值
      var isOutOfRange = this.isOutOfRange(this.data.value);
      if (isOutOfRange !== false) return this.data.value = isOutOfRange;
    });
  },

  /**
     * @method add(value) 调整数值
     * @public
     * @param  {number} [value=0] 加/减的值
     * @return {number} value 计算后的值
     */
  add: function add(value) {
    if (this.data.readonly || this.data.disabled || !value) return;

    if (isNaN(value)) throw new TypeError(value + ' is not a number!');

    return this.data.value += value;
  },

  /**
     * @method isOutOfRange(value) 是否超出规定的数值范围
     * @public
     * @param {number} value 待测的值
     * @return {boolean|number} number 如果没有超出数值范围，则返回false；如果超出数值范围，则返回范围边界的数值
     */
  isOutOfRange: function isOutOfRange(value) {
    var min = +this.data.min;
    var max = +this.data.max;

    // min && value < min && min，先判断是否为空，再判断是否超出数值范围，如果超出则返回范围边界的数值
    if (!isNaN(min) && value < min) return min;else if (!isNaN(max) && value > max) return max;
    return false;
  }
}).filter({
  number: {
    get: function get(_value) {
      var value = '' + (_value || 0);
      if (this.data.format) {
        return this.data.format.replace(new RegExp('\\d{0,' + value.length + '}$'), value);
      }
      return value;
    },
    set: function set(value) {
      // return (value.replace(/[^0-9\-\.]/g, ''));
      return +value;
      // return +(value.replace(/[^\d\.\-]/g, '')) || 0;
    }
  }
});

var NumberRangeError = function NumberRangeError(min, max) {
  this.type = 'NumberRangeError';
  this.message = 'Wrong Number Range where `min` is ' + min + ' and `max` is ' + max + '!';
};
NumberRangeError.prototype = (0, _create2.default)(RangeError.prototype);
NumberRangeError.prototype.constructor = NumberRangeError;
NumberInput.NumberRangeError = NumberRangeError.prototype.constructor;

module.exports = NumberInput;

/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * @file KLInput   输入扩展
 * @author   sensen<rainforest92@126.com>
 * ------------------------------------------------------------
 */

var Component = __webpack_require__(1);
var template = __webpack_require__(293);
var _ = __webpack_require__(2);
var Validation = __webpack_require__(9);
var validationMixin = __webpack_require__(6);
var inputRules = __webpack_require__(341);
var inputFilters = __webpack_require__(342);

var bowser = __webpack_require__(23);

/**
 * @class KLInput
 * @extend Component
 * @param {object}          [options.data]                    = 绑定属性
 * @param {string}          [options.data.value]              <=> 文本框的值
 * @param {string}          [options.data.type]               => 文本框的类型, 6种类型：int, float, char，password （email, url暂未实现），
 * @param {string}          [options.data.placeholder]        => 占位符
 * @param {number}          [options.data.maxlength]          => 文本框的最大长度
 * @param {string}          [options.data.unit]               => 单位
 * @param {boolean}         [options.data.clearable=false]    => 是否显示清空图标
 * @param {object[]}        [options.data.rules=[]]           => 验证规则
 * @param {boolean}         [options.data.autofocus=false]    => 是否自动获得焦点
 * @param {boolean}         [options.data.readonly=false]     => 是否只读
 * @param {boolean}         [options.data.disabled=false]     => 是否禁用
 * @param {boolean}         [options.data.visible=true]       => 是否显示
 * @param {string}          [options.data.class]              => 补充class
 * @param {number}          [options.data.decimalDigits]      => type=float时,最多输入几位小数的filter
 * @param {boolean}         [options.data.required]           => 【验证规则】是否必填
 * @param {boolean}         [options.data.hideTip=false]      => 是否显示校验错误信息
 * @param {number}          [options.data.min]                => 【验证规则】type=int/float时的最小值, type=char时，最小长度
 * @param {number}          [options.data.max]                => 【验证规则】type=int/float时的最大值, type=char时，最大长度
 * @param {string}          [options.data.message]            => 【验证规则】验证失败时，提示的消息
 * @param {string}          [options.data.size]               => 组件大小, sm/lg控制整体尺寸，smw/mdw/lgw控制宽度大小
 * @param {number}          [options.data.width]              => 组件宽度
 */
var KLInput = Component.extend({
  name: 'kl-input',
  template: template,
  config: function config() {
    _.extend(this.data, {
      hideTip: false,
      value: '',
      type: 'char',
      placeholder: '',
      state: '',
      maxlength: undefined,
      unit: '',
      rules: [],
      autofocus: false,
      _eltIE9: bowser.msie && bowser.version <= 9,
      clearable: false
    });
    this.rules({
      required: false,
      byteLen: this.data.type === 'char',
      isEmail: this.data.type === 'email',
      isURL: this.data.type === 'url',
      isInt: this.data.type === 'int',
      isFloat: this.data.type === 'float',
      message: ''
    });

    this.supr();

    this.initValidation();
  },
  init: function init() {
    this.$watch('required', function (value) {
      if (value) {
        this.addRule('required');
      } else {
        this.data.rules = this.data.rules.filter(function (rule) {
          return rule.type !== 'isRequired';
        });
      }
    });
  },
  rules: function rules(ruleAttris) {
    this.supr(ruleAttris);
    var self = this;
    ['required', 'isEmail', 'isURL', 'isFloat', 'isInt', 'byteLen'].forEach(function (name) {
      self.addRule(name);
    });
  },
  addRule: function addRule(name) {
    var _data = this.data,
        min = _data.min,
        max = _data.max,
        _message = _data.message,
        rules = _data.rules;


    var message = _message;
    if (name === 'required') {
      message = message || this.$trans('PLEASE_INPUT');
    }

    if (!this.data[name]) {
      return;
    }
    var rule = inputRules[name];
    if (typeof rule === 'function') {
      rules.push(rule(min, max, message));
    } else {
      var ruleCopy = _.extend({}, rule);
      message && (ruleCopy.message = message);
      rules.push(ruleCopy);
    }
  },
  validate: function validate() {
    var on = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
    var _data2 = this.data,
        readonly = _data2.readonly,
        disabled = _data2.disabled;
    // 如果是readonly或者disabled状态, 无需验证

    if (readonly || disabled) {
      return {
        success: true
      };
    }

    var value = this.data.value || this.data.value === 0 ? '' + this.data.value : '';
    var rules = this.data.rules;

    rules = rules.filter(function (rule) {
      return (rule.on || '').indexOf(on) >= 0;
    });
    if (!rules.length) {
      return { success: true };
    }
    var result = Validation.validate(value, rules);
    if (result.firstRule && !(result.firstRule.silentOn === true || typeof result.firstRule.silentOn === 'string' && result.firstRule.silentOn.indexOf(on) >= 0)) {
      this.data.tip = result.firstRule.message;
    } else this.data.tip = '';

    // @TODO
    if (!result.success) this.data.state = 'error';else {
      this.data.state = '';
    }

    this.$emit('validate', {
      sender: this,
      on: on,
      result: result
    });

    return result;
  },
  clear: function clear() {
    this.$update('value', '');
  },

  /* 1. type=char时,去除前后的空格; 2. type=int/float时, 只能输入对应类型的数字; */
  __valueFilter: function __valueFilter(_value) {
    var type = this.data.type;

    var value = _value;
    if (type !== 'char') value = ('' + value).trim();
    value = (inputFilters[type] || inputFilters.default)(value, this.data.decimalDigits);
    return value;
  },

  /**
    * @method KLInput#focus 原生focus方法
    * @param {method} 无 使 input 获取焦点
  */
  focus: function focus() {
    this.$refs.input.focus();
  },

  /**
    * @method KLInput#blur 原生blur方法
    * @param {method} 无 使 input 失去焦点
  */
  blur: function blur() {
    this.$refs.input.blur();
  },

  /**
    * @method KLInput#select 原生select方法
    * @param {method} 无 使 input 选中
  */
  select: function select() {
    this.$refs.input.select();
  },
  _onKeyUp: function _onKeyUp($event) {
    this.validate('keyup');
    /**
     * @event KLInput#keyup 原生keyup事件
     * @param {event} MouseEvent 点击的鼠标事件
     */
    this.$emit('keyup', $event);
  },
  _onBlur: function _onBlur($event) {
    this.validate('blur');
    /**
     * @event KLInput#blur 原生blur事件
     * @param {event} MouseEvent 点击的鼠标事件
     */
    this.$emit('blur', $event);
  },
  _onFocus: function _onFocus($event) {
    /**
     * @event KLInput#focus 原生focus事件
     * @param {event} MouseEvent 点击的鼠标事件
     */
    this.$emit('focus', $event);
  },
  _onChange: function _onChange($event) {
    this.validate('change');
    /**
     * @event KLInput#change 原生change事件
     * @param {event} KeyBoardEvent 点击的鼠标事件
     */
    this.$emit('change', $event);
  },
  _onInput: function _onInput($event) {
    this.validate('input');
    /**
     * @event KLInput#input 原生input事件
     * @param {event} KeyBoardEvent 点击的鼠标事件
     */
    this.$emit('input', $event);
  },
  _onSearch: function _onSearch($event) {
    /**
     * @event KLInput#search 点击搜索图标时触发
     * @param {event} MouseEvent 点击的鼠标事件
     */
    this.$emit('search', $event);
  }
});

KLInput.filter('type', function (val) {
  if (['int', 'float'].indexOf(val) !== -1) {
    /* 这里不能是number, 因为number的话, 输入++++123这种获取到的值是空 */
    return 'text';
  } else if (val === 'password') {
    return 'password';
  }
  return 'text';
});

KLInput.filter({
  valueFilter: {
    get: function get(val) {
      return this.__valueFilter(val);
    },
    set: function set(val) {
      return this.__valueFilter(val);
    }
  }
});

KLInput.use(validationMixin);
module.exports = KLInput;

/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _keys = __webpack_require__(20);

var _keys2 = _interopRequireDefault(_keys);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.format = function () {
  function fix(_str) {
    var str = '' + (String(_str) || '');
    return str.length <= 1 ? '0' + str : str;
  }
  var maps = {
    yyyy: function yyyy(date) {
      return date.getFullYear();
    },
    MM: function MM(date) {
      return fix(date.getMonth() + 1);
    },
    dd: function dd(date) {
      return fix(date.getDate());
    },
    HH: function HH(date) {
      return fix(date.getHours());
    },
    mm: function mm(date) {
      return fix(date.getMinutes());
    },
    ss: function ss(date) {
      return fix(date.getSeconds());
    }
  };

  var trunk = new RegExp((0, _keys2.default)(maps).join('|'), 'g');
  return function (_value, _format) {
    if (!_value) {
      return '';
    }
    var format = _format || 'yyyy-MM-dd HH:mm';
    var value = new Date(_value);

    return format.replace(trunk, function (capture) {
      return maps[capture] ? maps[capture](value) : '';
    });
  };
}();

exports.average = function (_array, key) {
  var array = _array || [];
  return array.length ? exports.total(array, key) / array.length : 0;
};
exports.total = function (array, key) {
  var total = 0;
  if (!array) return undefined;
  array.forEach(function (item) {
    total += key ? item[key] : item;
  });
  return total;
};

exports.filter = function (array, filterFn) {
  if (!array || !array.length) return undefined;
  return array.filter(function (item, index) {
    return filterFn(item, index);
  });
};

/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
var $keys      = __webpack_require__(73)
  , hiddenKeys = __webpack_require__(57).concat('length', 'prototype');

exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O){
  return $keys(O, hiddenKeys);
};

/***/ }),
/* 82 */
/***/ (function(module, exports) {



/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _toDate = __webpack_require__(64);

var _toDate2 = _interopRequireDefault(_toDate);

var _toFloat = __webpack_require__(84);

var _toFloat2 = _interopRequireDefault(_toFloat);

var _toInt = __webpack_require__(294);

var _toInt2 = _interopRequireDefault(_toInt);

var _toBoolean = __webpack_require__(295);

var _toBoolean2 = _interopRequireDefault(_toBoolean);

var _equals = __webpack_require__(296);

var _equals2 = _interopRequireDefault(_equals);

var _contains = __webpack_require__(297);

var _contains2 = _interopRequireDefault(_contains);

var _matches = __webpack_require__(298);

var _matches2 = _interopRequireDefault(_matches);

var _isEmail = __webpack_require__(85);

var _isEmail2 = _interopRequireDefault(_isEmail);

var _isURL = __webpack_require__(299);

var _isURL2 = _interopRequireDefault(_isURL);

var _isMACAddress = __webpack_require__(300);

var _isMACAddress2 = _interopRequireDefault(_isMACAddress);

var _isIP = __webpack_require__(87);

var _isIP2 = _interopRequireDefault(_isIP);

var _isFQDN = __webpack_require__(66);

var _isFQDN2 = _interopRequireDefault(_isFQDN);

var _isBoolean = __webpack_require__(301);

var _isBoolean2 = _interopRequireDefault(_isBoolean);

var _isAlpha = __webpack_require__(302);

var _isAlpha2 = _interopRequireDefault(_isAlpha);

var _isAlphanumeric = __webpack_require__(303);

var _isAlphanumeric2 = _interopRequireDefault(_isAlphanumeric);

var _isNumeric = __webpack_require__(304);

var _isNumeric2 = _interopRequireDefault(_isNumeric);

var _isLowercase = __webpack_require__(305);

var _isLowercase2 = _interopRequireDefault(_isLowercase);

var _isUppercase = __webpack_require__(306);

var _isUppercase2 = _interopRequireDefault(_isUppercase);

var _isAscii = __webpack_require__(307);

var _isAscii2 = _interopRequireDefault(_isAscii);

var _isFullWidth = __webpack_require__(89);

var _isFullWidth2 = _interopRequireDefault(_isFullWidth);

var _isHalfWidth = __webpack_require__(90);

var _isHalfWidth2 = _interopRequireDefault(_isHalfWidth);

var _isVariableWidth = __webpack_require__(308);

var _isVariableWidth2 = _interopRequireDefault(_isVariableWidth);

var _isMultibyte = __webpack_require__(309);

var _isMultibyte2 = _interopRequireDefault(_isMultibyte);

var _isSurrogatePair = __webpack_require__(310);

var _isSurrogatePair2 = _interopRequireDefault(_isSurrogatePair);

var _isInt = __webpack_require__(311);

var _isInt2 = _interopRequireDefault(_isInt);

var _isFloat = __webpack_require__(312);

var _isFloat2 = _interopRequireDefault(_isFloat);

var _isDecimal = __webpack_require__(313);

var _isDecimal2 = _interopRequireDefault(_isDecimal);

var _isHexadecimal = __webpack_require__(91);

var _isHexadecimal2 = _interopRequireDefault(_isHexadecimal);

var _isDivisibleBy = __webpack_require__(314);

var _isDivisibleBy2 = _interopRequireDefault(_isDivisibleBy);

var _isHexColor = __webpack_require__(315);

var _isHexColor2 = _interopRequireDefault(_isHexColor);

var _isMD = __webpack_require__(316);

var _isMD2 = _interopRequireDefault(_isMD);

var _isJSON = __webpack_require__(317);

var _isJSON2 = _interopRequireDefault(_isJSON);

var _isEmpty = __webpack_require__(318);

var _isEmpty2 = _interopRequireDefault(_isEmpty);

var _isLength = __webpack_require__(319);

var _isLength2 = _interopRequireDefault(_isLength);

var _isByteLength = __webpack_require__(86);

var _isByteLength2 = _interopRequireDefault(_isByteLength);

var _isUUID = __webpack_require__(320);

var _isUUID2 = _interopRequireDefault(_isUUID);

var _isMongoId = __webpack_require__(321);

var _isMongoId2 = _interopRequireDefault(_isMongoId);

var _isDate = __webpack_require__(322);

var _isDate2 = _interopRequireDefault(_isDate);

var _isAfter = __webpack_require__(323);

var _isAfter2 = _interopRequireDefault(_isAfter);

var _isBefore = __webpack_require__(324);

var _isBefore2 = _interopRequireDefault(_isBefore);

var _isIn = __webpack_require__(325);

var _isIn2 = _interopRequireDefault(_isIn);

var _isCreditCard = __webpack_require__(326);

var _isCreditCard2 = _interopRequireDefault(_isCreditCard);

var _isISIN = __webpack_require__(327);

var _isISIN2 = _interopRequireDefault(_isISIN);

var _isISBN = __webpack_require__(328);

var _isISBN2 = _interopRequireDefault(_isISBN);

var _isISSN = __webpack_require__(329);

var _isISSN2 = _interopRequireDefault(_isISSN);

var _isMobilePhone = __webpack_require__(330);

var _isMobilePhone2 = _interopRequireDefault(_isMobilePhone);

var _isCurrency = __webpack_require__(331);

var _isCurrency2 = _interopRequireDefault(_isCurrency);

var _isISO = __webpack_require__(92);

var _isISO2 = _interopRequireDefault(_isISO);

var _isBase = __webpack_require__(332);

var _isBase2 = _interopRequireDefault(_isBase);

var _isDataURI = __webpack_require__(333);

var _isDataURI2 = _interopRequireDefault(_isDataURI);

var _ltrim = __webpack_require__(93);

var _ltrim2 = _interopRequireDefault(_ltrim);

var _rtrim = __webpack_require__(94);

var _rtrim2 = _interopRequireDefault(_rtrim);

var _trim = __webpack_require__(334);

var _trim2 = _interopRequireDefault(_trim);

var _escape = __webpack_require__(335);

var _escape2 = _interopRequireDefault(_escape);

var _unescape = __webpack_require__(336);

var _unescape2 = _interopRequireDefault(_unescape);

var _stripLow = __webpack_require__(337);

var _stripLow2 = _interopRequireDefault(_stripLow);

var _whitelist = __webpack_require__(338);

var _whitelist2 = _interopRequireDefault(_whitelist);

var _blacklist = __webpack_require__(95);

var _blacklist2 = _interopRequireDefault(_blacklist);

var _isWhitelisted = __webpack_require__(339);

var _isWhitelisted2 = _interopRequireDefault(_isWhitelisted);

var _normalizeEmail = __webpack_require__(340);

var _normalizeEmail2 = _interopRequireDefault(_normalizeEmail);

var _toString = __webpack_require__(65);

var _toString2 = _interopRequireDefault(_toString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var version = '6.3.0';

var validator = {
  version: version,
  toDate: _toDate2.default,
  toFloat: _toFloat2.default,
  toInt: _toInt2.default,
  toBoolean: _toBoolean2.default,
  equals: _equals2.default,
  contains: _contains2.default,
  matches: _matches2.default,
  isEmail: _isEmail2.default,
  isURL: _isURL2.default,
  isMACAddress: _isMACAddress2.default,
  isIP: _isIP2.default,
  isFQDN: _isFQDN2.default,
  isBoolean: _isBoolean2.default,
  isAlpha: _isAlpha2.default,
  isAlphanumeric: _isAlphanumeric2.default,
  isNumeric: _isNumeric2.default,
  isLowercase: _isLowercase2.default,
  isUppercase: _isUppercase2.default,
  isAscii: _isAscii2.default,
  isFullWidth: _isFullWidth2.default,
  isHalfWidth: _isHalfWidth2.default,
  isVariableWidth: _isVariableWidth2.default,
  isMultibyte: _isMultibyte2.default,
  isSurrogatePair: _isSurrogatePair2.default,
  isInt: _isInt2.default,
  isFloat: _isFloat2.default,
  isDecimal: _isDecimal2.default,
  isHexadecimal: _isHexadecimal2.default,
  isDivisibleBy: _isDivisibleBy2.default,
  isHexColor: _isHexColor2.default,
  isMD5: _isMD2.default,
  isJSON: _isJSON2.default,
  isEmpty: _isEmpty2.default,
  isLength: _isLength2.default,
  isByteLength: _isByteLength2.default,
  isUUID: _isUUID2.default,
  isMongoId: _isMongoId2.default,
  isDate: _isDate2.default,
  isAfter: _isAfter2.default,
  isBefore: _isBefore2.default,
  isIn: _isIn2.default,
  isCreditCard: _isCreditCard2.default,
  isISIN: _isISIN2.default,
  isISBN: _isISBN2.default,
  isISSN: _isISSN2.default,
  isMobilePhone: _isMobilePhone2.default,
  isCurrency: _isCurrency2.default,
  isISO8601: _isISO2.default,
  isBase64: _isBase2.default,
  isDataURI: _isDataURI2.default,
  ltrim: _ltrim2.default,
  rtrim: _rtrim2.default,
  trim: _trim2.default,
  escape: _escape2.default,
  unescape: _unescape2.default,
  stripLow: _stripLow2.default,
  whitelist: _whitelist2.default,
  blacklist: _blacklist2.default,
  isWhitelisted: _isWhitelisted2.default,
  normalizeEmail: _normalizeEmail2.default,
  toString: _toString2.default
};

exports.default = validator;
module.exports = exports['default'];

/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = toFloat;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function toFloat(str) {
  (0, _assertString2.default)(str);
  return parseFloat(str);
}
module.exports = exports['default'];

/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isEmail;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

var _merge = __webpack_require__(33);

var _merge2 = _interopRequireDefault(_merge);

var _isByteLength = __webpack_require__(86);

var _isByteLength2 = _interopRequireDefault(_isByteLength);

var _isFQDN = __webpack_require__(66);

var _isFQDN2 = _interopRequireDefault(_isFQDN);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var default_email_options = {
  allow_display_name: false,
  require_display_name: false,
  allow_utf8_local_part: true,
  require_tld: true
};

/* eslint-disable max-len */
/* eslint-disable no-control-regex */
var displayName = /^[a-z\d!#\$%&'\*\+\-\/=\?\^_`{\|}~\.\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+[a-z\d!#\$%&'\*\+\-\/=\?\^_`{\|}~\.\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF\s]*<(.+)>$/i;
var emailUserPart = /^[a-z\d!#\$%&'\*\+\-\/=\?\^_`{\|}~]+$/i;
var quotedEmailUser = /^([\s\x01-\x08\x0b\x0c\x0e-\x1f\x7f\x21\x23-\x5b\x5d-\x7e]|(\\[\x01-\x09\x0b\x0c\x0d-\x7f]))*$/i;
var emailUserUtf8Part = /^[a-z\d!#\$%&'\*\+\-\/=\?\^_`{\|}~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+$/i;
var quotedEmailUserUtf8 = /^([\s\x01-\x08\x0b\x0c\x0e-\x1f\x7f\x21\x23-\x5b\x5d-\x7e\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|(\\[\x01-\x09\x0b\x0c\x0d-\x7f\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))*$/i;
/* eslint-enable max-len */
/* eslint-enable no-control-regex */

function isEmail(str, options) {
  (0, _assertString2.default)(str);
  options = (0, _merge2.default)(options, default_email_options);

  if (options.require_display_name || options.allow_display_name) {
    var display_email = str.match(displayName);
    if (display_email) {
      str = display_email[1];
    } else if (options.require_display_name) {
      return false;
    }
  }

  var parts = str.split('@');
  var domain = parts.pop();
  var user = parts.join('@');

  var lower_domain = domain.toLowerCase();
  if (lower_domain === 'gmail.com' || lower_domain === 'googlemail.com') {
    user = user.replace(/\./g, '').toLowerCase();
  }

  if (!(0, _isByteLength2.default)(user, { max: 64 }) || !(0, _isByteLength2.default)(domain, { max: 256 })) {
    return false;
  }

  if (!(0, _isFQDN2.default)(domain, { require_tld: options.require_tld })) {
    return false;
  }

  if (user[0] === '"') {
    user = user.slice(1, user.length - 1);
    return options.allow_utf8_local_part ? quotedEmailUserUtf8.test(user) : quotedEmailUser.test(user);
  }

  var pattern = options.allow_utf8_local_part ? emailUserUtf8Part : emailUserPart;

  var user_parts = user.split('.');
  for (var i = 0; i < user_parts.length; i++) {
    if (!pattern.test(user_parts[i])) {
      return false;
    }
  }

  return true;
}
module.exports = exports['default'];

/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports.default = isByteLength;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable prefer-rest-params */
function isByteLength(str, options) {
  (0, _assertString2.default)(str);
  var min = void 0;
  var max = void 0;
  if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {
    min = options.min || 0;
    max = options.max;
  } else {
    // backwards compatibility: isByteLength(str, min [, max])
    min = arguments[1];
    max = arguments[2];
  }
  var len = encodeURI(str).split(/%..|./).length - 1;
  return len >= min && (typeof max === 'undefined' || len <= max);
}
module.exports = exports['default'];

/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isIP;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ipv4Maybe = /^(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})$/;
var ipv6Block = /^[0-9A-F]{1,4}$/i;

function isIP(str) {
  var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';

  (0, _assertString2.default)(str);
  version = String(version);
  if (!version) {
    return isIP(str, 4) || isIP(str, 6);
  } else if (version === '4') {
    if (!ipv4Maybe.test(str)) {
      return false;
    }
    var parts = str.split('.').sort(function (a, b) {
      return a - b;
    });
    return parts[3] <= 255;
  } else if (version === '6') {
    var blocks = str.split(':');
    var foundOmissionBlock = false; // marker to indicate ::

    // At least some OS accept the last 32 bits of an IPv6 address
    // (i.e. 2 of the blocks) in IPv4 notation, and RFC 3493 says
    // that '::ffff:a.b.c.d' is valid for IPv4-mapped IPv6 addresses,
    // and '::a.b.c.d' is deprecated, but also valid.
    var foundIPv4TransitionBlock = isIP(blocks[blocks.length - 1], 4);
    var expectedNumberOfBlocks = foundIPv4TransitionBlock ? 7 : 8;

    if (blocks.length > expectedNumberOfBlocks) {
      return false;
    }
    // initial or final ::
    if (str === '::') {
      return true;
    } else if (str.substr(0, 2) === '::') {
      blocks.shift();
      blocks.shift();
      foundOmissionBlock = true;
    } else if (str.substr(str.length - 2) === '::') {
      blocks.pop();
      blocks.pop();
      foundOmissionBlock = true;
    }

    for (var i = 0; i < blocks.length; ++i) {
      // test for a :: which can not be at the string start/end
      // since those cases have been handled above
      if (blocks[i] === '' && i > 0 && i < blocks.length - 1) {
        if (foundOmissionBlock) {
          return false; // multiple :: in address
        }
        foundOmissionBlock = true;
      } else if (foundIPv4TransitionBlock && i === blocks.length - 1) {
        // it has been checked before that the last
        // block is a valid IPv4 address
      } else if (!ipv6Block.test(blocks[i])) {
        return false;
      }
    }
    if (foundOmissionBlock) {
      return blocks.length >= 1;
    }
    return blocks.length === expectedNumberOfBlocks;
  }
  return false;
}
module.exports = exports['default'];

/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var alpha = exports.alpha = {
  'en-US': /^[A-Z]+$/i,
  'cs-CZ': /^[A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]+$/i,
  'da-DK': /^[A-ZÆØÅ]+$/i,
  'de-DE': /^[A-ZÄÖÜß]+$/i,
  'es-ES': /^[A-ZÁÉÍÑÓÚÜ]+$/i,
  'fr-FR': /^[A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]+$/i,
  'nl-NL': /^[A-ZÉËÏÓÖÜ]+$/i,
  'hu-HU': /^[A-ZÁÉÍÓÖŐÚÜŰ]+$/i,
  'pl-PL': /^[A-ZĄĆĘŚŁŃÓŻŹ]+$/i,
  'pt-PT': /^[A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ]+$/i,
  'ru-RU': /^[А-ЯЁ]+$/i,
  'sr-RS@latin': /^[A-ZČĆŽŠĐ]+$/i,
  'sr-RS': /^[А-ЯЂЈЉЊЋЏ]+$/i,
  'tr-TR': /^[A-ZÇĞİıÖŞÜ]+$/i,
  'uk-UA': /^[А-ЯЄIЇҐ]+$/i,
  ar: /^[ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]+$/
};

var alphanumeric = exports.alphanumeric = {
  'en-US': /^[0-9A-Z]+$/i,
  'cs-CZ': /^[0-9A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]+$/i,
  'da-DK': /^[0-9A-ZÆØÅ]$/i,
  'de-DE': /^[0-9A-ZÄÖÜß]+$/i,
  'es-ES': /^[0-9A-ZÁÉÍÑÓÚÜ]+$/i,
  'fr-FR': /^[0-9A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]+$/i,
  'hu-HU': /^[0-9A-ZÁÉÍÓÖŐÚÜŰ]+$/i,
  'nl-NL': /^[0-9A-ZÉËÏÓÖÜ]+$/i,
  'pl-PL': /^[0-9A-ZĄĆĘŚŁŃÓŻŹ]+$/i,
  'pt-PT': /^[0-9A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ]+$/i,
  'ru-RU': /^[0-9А-ЯЁ]+$/i,
  'sr-RS@latin': /^[0-9A-ZČĆŽŠĐ]+$/i,
  'sr-RS': /^[0-9А-ЯЂЈЉЊЋЏ]+$/i,
  'tr-TR': /^[0-9A-ZÇĞİıÖŞÜ]+$/i,
  'uk-UA': /^[0-9А-ЯЄIЇҐ]+$/i,
  ar: /^[٠١٢٣٤٥٦٧٨٩0-9ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]+$/
};

var englishLocales = exports.englishLocales = ['AU', 'GB', 'HK', 'IN', 'NZ', 'ZA', 'ZM'];

for (var locale, i = 0; i < englishLocales.length; i++) {
  locale = 'en-' + englishLocales[i];
  alpha[locale] = alpha['en-US'];
  alphanumeric[locale] = alphanumeric['en-US'];
}

alpha['pt-BR'] = alpha['pt-PT'];
alphanumeric['pt-BR'] = alphanumeric['pt-PT'];

// Source: http://www.localeplanet.com/java/
var arabicLocales = exports.arabicLocales = ['AE', 'BH', 'DZ', 'EG', 'IQ', 'JO', 'KW', 'LB', 'LY', 'MA', 'QM', 'QA', 'SA', 'SD', 'SY', 'TN', 'YE'];

for (var _locale, _i = 0; _i < arabicLocales.length; _i++) {
  _locale = 'ar-' + arabicLocales[_i];
  alpha[_locale] = alpha.ar;
  alphanumeric[_locale] = alphanumeric.ar;
}

/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fullWidth = undefined;
exports.default = isFullWidth;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var fullWidth = exports.fullWidth = /[^\u0020-\u007E\uFF61-\uFF9F\uFFA0-\uFFDC\uFFE8-\uFFEE0-9a-zA-Z]/;

function isFullWidth(str) {
  (0, _assertString2.default)(str);
  return fullWidth.test(str);
}

/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.halfWidth = undefined;
exports.default = isHalfWidth;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var halfWidth = exports.halfWidth = /[\u0020-\u007E\uFF61-\uFF9F\uFFA0-\uFFDC\uFFE8-\uFFEE0-9a-zA-Z]/;

function isHalfWidth(str) {
  (0, _assertString2.default)(str);
  return halfWidth.test(str);
}

/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isHexadecimal;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var hexadecimal = /^[0-9A-F]+$/i;

function isHexadecimal(str) {
  (0, _assertString2.default)(str);
  return hexadecimal.test(str);
}
module.exports = exports['default'];

/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.iso8601 = undefined;

exports.default = function (str) {
  (0, _assertString2.default)(str);
  return iso8601.test(str);
};

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable max-len */
// from http://goo.gl/0ejHHW
var iso8601 = exports.iso8601 = /^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$/;
/* eslint-enable max-len */

/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ltrim;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ltrim(str, chars) {
  (0, _assertString2.default)(str);
  var pattern = chars ? new RegExp('^[' + chars + ']+', 'g') : /^\s+/g;
  return str.replace(pattern, '');
}
module.exports = exports['default'];

/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = rtrim;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function rtrim(str, chars) {
  (0, _assertString2.default)(str);
  var pattern = chars ? new RegExp('[' + chars + ']') : /\s/;

  var idx = str.length - 1;
  while (idx >= 0 && pattern.test(str[idx])) {
    idx--;
  }

  return idx < str.length ? str.substr(0, idx + 1) : str;
}
module.exports = exports['default'];

/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = blacklist;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function blacklist(str, chars) {
  (0, _assertString2.default)(str);
  return str.replace(new RegExp('[' + chars + ']+', 'g'), '');
}
module.exports = exports['default'];

/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * @file TreeView  树型视图
 * @author   sensen(rainforest92@126.com)
 */

var SourceComponent = __webpack_require__(16);
var KLTree = __webpack_require__(356);
var template = __webpack_require__(358);
var _ = __webpack_require__(2);

/**
 * @class KLTreeView
 * @param {object}    [options.data]                          = 绑定属性
 * @param {object[]}  [options.data.source=[]]                <=> 数据源
 * @param {string}    [options.data.source[].name]            => 每项的内容
 * @param {string}    [options.data.key=id]                   => 数据项的键
 * @param {string}    [options.data.nameKey=name]             => 数据项的显示值
 * @param {string}    [options.data.childKey=children]        => 数据子项的键
 * @param {boolean}   [options.data.source[].open=false]      => 此项为展开/收起状态
 * @param {boolean}   [options.data.source[].checked=false]   => 选中此项
 * @param {boolean}   [options.data.source[].disabled=false]  => 禁用此项
 * @param {string}    [options.data.value=null]               <=> 当前选择值
 * @param {string}    [options.data.separator=,]              => 多选时value分隔符
 * @param {boolean}   [options.data.multiple=false]           => 是否多选
 * @param {boolean}   [options.data.readonly=false]           => 是否只读
 * @param {boolean}   [options.data.disabled=false]           => 是否禁用
 * @param {boolean}   [options.data.visible=true]             => 是否显示
 * @param {string}    [options.data.class]                    => 补充class
 */
var KLTreeView = SourceComponent.extend({
  name: 'kl-tree-view',
  template: template,
  config: function config() {
    _.extend(this.data, {
      // @inherited source: [],
      key: 'id',
      nameKey: 'name',
      childKey: 'children',
      separator: ',',
      value: null,
      selected: null,
      multiple: false,
      hierarchical: false
    });
    this.supr();
    this.$ancestor = this;
    this.$watch('selected', function (newVal) {
      var _data = this.data,
          key = _data.key,
          nameKey = _data.nameKey,
          separator = _data.separator;

      if (!newVal) return;
      if (Array.isArray(newVal)) {
        return this.data.value = newVal.map(function (d) {
          return d[key] || d[nameKey];
        }).join(separator);
      }
      this.data.value = newVal[key] || newVal[nameKey];
    });
  },
  select: function select(item) {
    if (!this.data.multiple && (this.data.readonly || this.data.disabled || item.disabled)) {
      return;
    }

    this.toggle(item);
    if (this.data.multiple) return item.selected = !item.selected;

    this.data.selected = item;
    /**
       * @event KLTreeView#select 选择某一项时触发
       * @property {object} sender 事件发送对象
       * @property {object} selected 当前选择项
       */
    this.$emit('select', {
      sender: this,
      selected: item
    });
  },
  toggle: function toggle(item, _open) {
    if (!this.data.multiple && (this.data.readonly || this.data.disabled || item.disabled)) {
      return;
    }

    var open = _open;
    if (open === undefined) open = !item.open;
    item.open = open;

    /**
       * @event KLTreeView#toggle 展开或收起某一项时触发
       * @property {object} sender 事件发送对象
       * @property {object} item 处理项
       * @property {boolean} open 展开/收起状态
       */
    this.$emit('toggle', {
      sender: this,
      item: item,
      open: open
    });
  },
  _getSelected: function _getSelected(source) {
    var self = this;
    if (!source) return [];
    var arr = [];
    source.forEach(function (d) {
      var child = d[self.data.childKey];
      if (child && child.length) {
        arr = arr.concat(self._getSelected(d[self.data.childKey]));
      } else if (d.checked) {
        arr = arr.concat(d);
      }
    });
    return arr;
  },
  setSelected: function setSelected() {
    this.data.selected = this._getSelected(this.data.source);
  }
});

KLTreeView.component('kl-tree', KLTree);
module.exports = KLTreeView;

/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var af = moment.defineLocale('af', {
        months : 'Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember'.split('_'),
        monthsShort : 'Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des'.split('_'),
        weekdays : 'Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag'.split('_'),
        weekdaysShort : 'Son_Maa_Din_Woe_Don_Vry_Sat'.split('_'),
        weekdaysMin : 'So_Ma_Di_Wo_Do_Vr_Sa'.split('_'),
        meridiemParse: /vm|nm/i,
        isPM : function (input) {
            return /^nm$/i.test(input);
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours < 12) {
                return isLower ? 'vm' : 'VM';
            } else {
                return isLower ? 'nm' : 'NM';
            }
        },
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Vandag om] LT',
            nextDay : '[Môre om] LT',
            nextWeek : 'dddd [om] LT',
            lastDay : '[Gister om] LT',
            lastWeek : '[Laas] dddd [om] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'oor %s',
            past : '%s gelede',
            s : '\'n paar sekondes',
            ss : '%d sekondes',
            m : '\'n minuut',
            mm : '%d minute',
            h : '\'n uur',
            hh : '%d ure',
            d : '\'n dag',
            dd : '%d dae',
            M : '\'n maand',
            MM : '%d maande',
            y : '\'n jaar',
            yy : '%d jaar'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
        ordinal : function (number) {
            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de'); // Thanks to Joris Röling : https://github.com/jjupiter
        },
        week : {
            dow : 1, // Maandag is die eerste dag van die week.
            doy : 4  // Die week wat die 4de Januarie bevat is die eerste week van die jaar.
        }
    });

    return af;

})));


/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '١',
        '2': '٢',
        '3': '٣',
        '4': '٤',
        '5': '٥',
        '6': '٦',
        '7': '٧',
        '8': '٨',
        '9': '٩',
        '0': '٠'
    }, numberMap = {
        '١': '1',
        '٢': '2',
        '٣': '3',
        '٤': '4',
        '٥': '5',
        '٦': '6',
        '٧': '7',
        '٨': '8',
        '٩': '9',
        '٠': '0'
    }, pluralForm = function (n) {
        return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;
    }, plurals = {
        s : ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],
        m : ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],
        h : ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],
        d : ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],
        M : ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],
        y : ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']
    }, pluralize = function (u) {
        return function (number, withoutSuffix, string, isFuture) {
            var f = pluralForm(number),
                str = plurals[u][pluralForm(number)];
            if (f === 2) {
                str = str[withoutSuffix ? 0 : 1];
            }
            return str.replace(/%d/i, number);
        };
    }, months = [
        'يناير',
        'فبراير',
        'مارس',
        'أبريل',
        'مايو',
        'يونيو',
        'يوليو',
        'أغسطس',
        'سبتمبر',
        'أكتوبر',
        'نوفمبر',
        'ديسمبر'
    ];

    var ar = moment.defineLocale('ar', {
        months : months,
        monthsShort : months,
        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'D/\u200FM/\u200FYYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        meridiemParse: /ص|م/,
        isPM : function (input) {
            return 'م' === input;
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ص';
            } else {
                return 'م';
            }
        },
        calendar : {
            sameDay: '[اليوم عند الساعة] LT',
            nextDay: '[غدًا عند الساعة] LT',
            nextWeek: 'dddd [عند الساعة] LT',
            lastDay: '[أمس عند الساعة] LT',
            lastWeek: 'dddd [عند الساعة] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'بعد %s',
            past : 'منذ %s',
            s : pluralize('s'),
            ss : pluralize('s'),
            m : pluralize('m'),
            mm : pluralize('m'),
            h : pluralize('h'),
            hh : pluralize('h'),
            d : pluralize('d'),
            dd : pluralize('d'),
            M : pluralize('M'),
            MM : pluralize('M'),
            y : pluralize('y'),
            yy : pluralize('y')
        },
        preparse: function (string) {
            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
                return numberMap[match];
            }).replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            }).replace(/,/g, '،');
        },
        week : {
            dow : 6, // Saturday is the first day of the week.
            doy : 12  // The week that contains Jan 1st is the first week of the year.
        }
    });

    return ar;

})));


/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var arDz = moment.defineLocale('ar-dz', {
        months : 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
        monthsShort : 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort : 'احد_اثنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin : 'أح_إث_ثلا_أر_خم_جم_سب'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[اليوم على الساعة] LT',
            nextDay: '[غدا على الساعة] LT',
            nextWeek: 'dddd [على الساعة] LT',
            lastDay: '[أمس على الساعة] LT',
            lastWeek: 'dddd [على الساعة] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'في %s',
            past : 'منذ %s',
            s : 'ثوان',
            ss : '%d ثانية',
            m : 'دقيقة',
            mm : '%d دقائق',
            h : 'ساعة',
            hh : '%d ساعات',
            d : 'يوم',
            dd : '%d أيام',
            M : 'شهر',
            MM : '%d أشهر',
            y : 'سنة',
            yy : '%d سنوات'
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 4  // The week that contains Jan 1st is the first week of the year.
        }
    });

    return arDz;

})));


/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var arKw = moment.defineLocale('ar-kw', {
        months : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
        monthsShort : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
        weekdays : 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort : 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[اليوم على الساعة] LT',
            nextDay: '[غدا على الساعة] LT',
            nextWeek: 'dddd [على الساعة] LT',
            lastDay: '[أمس على الساعة] LT',
            lastWeek: 'dddd [على الساعة] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'في %s',
            past : 'منذ %s',
            s : 'ثوان',
            ss : '%d ثانية',
            m : 'دقيقة',
            mm : '%d دقائق',
            h : 'ساعة',
            hh : '%d ساعات',
            d : 'يوم',
            dd : '%d أيام',
            M : 'شهر',
            MM : '%d أشهر',
            y : 'سنة',
            yy : '%d سنوات'
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 12  // The week that contains Jan 1st is the first week of the year.
        }
    });

    return arKw;

})));


/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '1',
        '2': '2',
        '3': '3',
        '4': '4',
        '5': '5',
        '6': '6',
        '7': '7',
        '8': '8',
        '9': '9',
        '0': '0'
    }, pluralForm = function (n) {
        return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;
    }, plurals = {
        s : ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],
        m : ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],
        h : ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],
        d : ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],
        M : ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],
        y : ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']
    }, pluralize = function (u) {
        return function (number, withoutSuffix, string, isFuture) {
            var f = pluralForm(number),
                str = plurals[u][pluralForm(number)];
            if (f === 2) {
                str = str[withoutSuffix ? 0 : 1];
            }
            return str.replace(/%d/i, number);
        };
    }, months = [
        'يناير',
        'فبراير',
        'مارس',
        'أبريل',
        'مايو',
        'يونيو',
        'يوليو',
        'أغسطس',
        'سبتمبر',
        'أكتوبر',
        'نوفمبر',
        'ديسمبر'
    ];

    var arLy = moment.defineLocale('ar-ly', {
        months : months,
        monthsShort : months,
        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'D/\u200FM/\u200FYYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        meridiemParse: /ص|م/,
        isPM : function (input) {
            return 'م' === input;
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ص';
            } else {
                return 'م';
            }
        },
        calendar : {
            sameDay: '[اليوم عند الساعة] LT',
            nextDay: '[غدًا عند الساعة] LT',
            nextWeek: 'dddd [عند الساعة] LT',
            lastDay: '[أمس عند الساعة] LT',
            lastWeek: 'dddd [عند الساعة] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'بعد %s',
            past : 'منذ %s',
            s : pluralize('s'),
            ss : pluralize('s'),
            m : pluralize('m'),
            mm : pluralize('m'),
            h : pluralize('h'),
            hh : pluralize('h'),
            d : pluralize('d'),
            dd : pluralize('d'),
            M : pluralize('M'),
            MM : pluralize('M'),
            y : pluralize('y'),
            yy : pluralize('y')
        },
        preparse: function (string) {
            return string.replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            }).replace(/,/g, '،');
        },
        week : {
            dow : 6, // Saturday is the first day of the week.
            doy : 12  // The week that contains Jan 1st is the first week of the year.
        }
    });

    return arLy;

})));


/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var arMa = moment.defineLocale('ar-ma', {
        months : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
        monthsShort : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
        weekdays : 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort : 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[اليوم على الساعة] LT',
            nextDay: '[غدا على الساعة] LT',
            nextWeek: 'dddd [على الساعة] LT',
            lastDay: '[أمس على الساعة] LT',
            lastWeek: 'dddd [على الساعة] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'في %s',
            past : 'منذ %s',
            s : 'ثوان',
            ss : '%d ثانية',
            m : 'دقيقة',
            mm : '%d دقائق',
            h : 'ساعة',
            hh : '%d ساعات',
            d : 'يوم',
            dd : '%d أيام',
            M : 'شهر',
            MM : '%d أشهر',
            y : 'سنة',
            yy : '%d سنوات'
        },
        week : {
            dow : 6, // Saturday is the first day of the week.
            doy : 12  // The week that contains Jan 1st is the first week of the year.
        }
    });

    return arMa;

})));


/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '١',
        '2': '٢',
        '3': '٣',
        '4': '٤',
        '5': '٥',
        '6': '٦',
        '7': '٧',
        '8': '٨',
        '9': '٩',
        '0': '٠'
    }, numberMap = {
        '١': '1',
        '٢': '2',
        '٣': '3',
        '٤': '4',
        '٥': '5',
        '٦': '6',
        '٧': '7',
        '٨': '8',
        '٩': '9',
        '٠': '0'
    };

    var arSa = moment.defineLocale('ar-sa', {
        months : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
        monthsShort : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        meridiemParse: /ص|م/,
        isPM : function (input) {
            return 'م' === input;
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ص';
            } else {
                return 'م';
            }
        },
        calendar : {
            sameDay: '[اليوم على الساعة] LT',
            nextDay: '[غدا على الساعة] LT',
            nextWeek: 'dddd [على الساعة] LT',
            lastDay: '[أمس على الساعة] LT',
            lastWeek: 'dddd [على الساعة] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'في %s',
            past : 'منذ %s',
            s : 'ثوان',
            ss : '%d ثانية',
            m : 'دقيقة',
            mm : '%d دقائق',
            h : 'ساعة',
            hh : '%d ساعات',
            d : 'يوم',
            dd : '%d أيام',
            M : 'شهر',
            MM : '%d أشهر',
            y : 'سنة',
            yy : '%d سنوات'
        },
        preparse: function (string) {
            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
                return numberMap[match];
            }).replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            }).replace(/,/g, '،');
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 1st is the first week of the year.
        }
    });

    return arSa;

})));


/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var arTn = moment.defineLocale('ar-tn', {
        months: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
        monthsShort: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact : true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[اليوم على الساعة] LT',
            nextDay: '[غدا على الساعة] LT',
            nextWeek: 'dddd [على الساعة] LT',
            lastDay: '[أمس على الساعة] LT',
            lastWeek: 'dddd [على الساعة] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'في %s',
            past: 'منذ %s',
            s: 'ثوان',
            ss : '%d ثانية',
            m: 'دقيقة',
            mm: '%d دقائق',
            h: 'ساعة',
            hh: '%d ساعات',
            d: 'يوم',
            dd: '%d أيام',
            M: 'شهر',
            MM: '%d أشهر',
            y: 'سنة',
            yy: '%d سنوات'
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
        }
    });

    return arTn;

})));


/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var suffixes = {
        1: '-inci',
        5: '-inci',
        8: '-inci',
        70: '-inci',
        80: '-inci',
        2: '-nci',
        7: '-nci',
        20: '-nci',
        50: '-nci',
        3: '-üncü',
        4: '-üncü',
        100: '-üncü',
        6: '-ncı',
        9: '-uncu',
        10: '-uncu',
        30: '-uncu',
        60: '-ıncı',
        90: '-ıncı'
    };

    var az = moment.defineLocale('az', {
        months : 'yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr'.split('_'),
        monthsShort : 'yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek'.split('_'),
        weekdays : 'Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə'.split('_'),
        weekdaysShort : 'Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən'.split('_'),
        weekdaysMin : 'Bz_BE_ÇA_Çə_CA_Cü_Şə'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[bugün saat] LT',
            nextDay : '[sabah saat] LT',
            nextWeek : '[gələn həftə] dddd [saat] LT',
            lastDay : '[dünən] LT',
            lastWeek : '[keçən həftə] dddd [saat] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s sonra',
            past : '%s əvvəl',
            s : 'birneçə saniyə',
            ss : '%d saniyə',
            m : 'bir dəqiqə',
            mm : '%d dəqiqə',
            h : 'bir saat',
            hh : '%d saat',
            d : 'bir gün',
            dd : '%d gün',
            M : 'bir ay',
            MM : '%d ay',
            y : 'bir il',
            yy : '%d il'
        },
        meridiemParse: /gecə|səhər|gündüz|axşam/,
        isPM : function (input) {
            return /^(gündüz|axşam)$/.test(input);
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'gecə';
            } else if (hour < 12) {
                return 'səhər';
            } else if (hour < 17) {
                return 'gündüz';
            } else {
                return 'axşam';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,
        ordinal : function (number) {
            if (number === 0) {  // special case for zero
                return number + '-ıncı';
            }
            var a = number % 10,
                b = number % 100 - a,
                c = number >= 100 ? 100 : null;
            return number + (suffixes[a] || suffixes[b] || suffixes[c]);
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1st is the first week of the year.
        }
    });

    return az;

})));


/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function plural(word, num) {
        var forms = word.split('_');
        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
    }
    function relativeTimeWithPlural(number, withoutSuffix, key) {
        var format = {
            'ss': withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',
            'mm': withoutSuffix ? 'хвіліна_хвіліны_хвілін' : 'хвіліну_хвіліны_хвілін',
            'hh': withoutSuffix ? 'гадзіна_гадзіны_гадзін' : 'гадзіну_гадзіны_гадзін',
            'dd': 'дзень_дні_дзён',
            'MM': 'месяц_месяцы_месяцаў',
            'yy': 'год_гады_гадоў'
        };
        if (key === 'm') {
            return withoutSuffix ? 'хвіліна' : 'хвіліну';
        }
        else if (key === 'h') {
            return withoutSuffix ? 'гадзіна' : 'гадзіну';
        }
        else {
            return number + ' ' + plural(format[key], +number);
        }
    }

    var be = moment.defineLocale('be', {
        months : {
            format: 'студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня'.split('_'),
            standalone: 'студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань'.split('_')
        },
        monthsShort : 'студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж'.split('_'),
        weekdays : {
            format: 'нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу'.split('_'),
            standalone: 'нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота'.split('_'),
            isFormat: /\[ ?[Ууў] ?(?:мінулую|наступную)? ?\] ?dddd/
        },
        weekdaysShort : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
        weekdaysMin : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY г.',
            LLL : 'D MMMM YYYY г., HH:mm',
            LLLL : 'dddd, D MMMM YYYY г., HH:mm'
        },
        calendar : {
            sameDay: '[Сёння ў] LT',
            nextDay: '[Заўтра ў] LT',
            lastDay: '[Учора ў] LT',
            nextWeek: function () {
                return '[У] dddd [ў] LT';
            },
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                    case 3:
                    case 5:
                    case 6:
                        return '[У мінулую] dddd [ў] LT';
                    case 1:
                    case 2:
                    case 4:
                        return '[У мінулы] dddd [ў] LT';
                }
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : 'праз %s',
            past : '%s таму',
            s : 'некалькі секунд',
            m : relativeTimeWithPlural,
            mm : relativeTimeWithPlural,
            h : relativeTimeWithPlural,
            hh : relativeTimeWithPlural,
            d : 'дзень',
            dd : relativeTimeWithPlural,
            M : 'месяц',
            MM : relativeTimeWithPlural,
            y : 'год',
            yy : relativeTimeWithPlural
        },
        meridiemParse: /ночы|раніцы|дня|вечара/,
        isPM : function (input) {
            return /^(дня|вечара)$/.test(input);
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'ночы';
            } else if (hour < 12) {
                return 'раніцы';
            } else if (hour < 17) {
                return 'дня';
            } else {
                return 'вечара';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(і|ы|га)/,
        ordinal: function (number, period) {
            switch (period) {
                case 'M':
                case 'd':
                case 'DDD':
                case 'w':
                case 'W':
                    return (number % 10 === 2 || number % 10 === 3) && (number % 100 !== 12 && number % 100 !== 13) ? number + '-і' : number + '-ы';
                case 'D':
                    return number + '-га';
                default:
                    return number;
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1st is the first week of the year.
        }
    });

    return be;

})));


/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var bg = moment.defineLocale('bg', {
        months : 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split('_'),
        monthsShort : 'янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),
        weekdays : 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split('_'),
        weekdaysShort : 'нед_пон_вто_сря_чет_пет_съб'.split('_'),
        weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'D.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY H:mm',
            LLLL : 'dddd, D MMMM YYYY H:mm'
        },
        calendar : {
            sameDay : '[Днес в] LT',
            nextDay : '[Утре в] LT',
            nextWeek : 'dddd [в] LT',
            lastDay : '[Вчера в] LT',
            lastWeek : function () {
                switch (this.day()) {
                    case 0:
                    case 3:
                    case 6:
                        return '[В изминалата] dddd [в] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[В изминалия] dddd [в] LT';
                }
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'след %s',
            past : 'преди %s',
            s : 'няколко секунди',
            ss : '%d секунди',
            m : 'минута',
            mm : '%d минути',
            h : 'час',
            hh : '%d часа',
            d : 'ден',
            dd : '%d дни',
            M : 'месец',
            MM : '%d месеца',
            y : 'година',
            yy : '%d години'
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
        ordinal : function (number) {
            var lastDigit = number % 10,
                last2Digits = number % 100;
            if (number === 0) {
                return number + '-ев';
            } else if (last2Digits === 0) {
                return number + '-ен';
            } else if (last2Digits > 10 && last2Digits < 20) {
                return number + '-ти';
            } else if (lastDigit === 1) {
                return number + '-ви';
            } else if (lastDigit === 2) {
                return number + '-ри';
            } else if (lastDigit === 7 || lastDigit === 8) {
                return number + '-ми';
            } else {
                return number + '-ти';
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1st is the first week of the year.
        }
    });

    return bg;

})));


/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var bm = moment.defineLocale('bm', {
        months : 'Zanwuyekalo_Fewuruyekalo_Marisikalo_Awirilikalo_Mɛkalo_Zuwɛnkalo_Zuluyekalo_Utikalo_Sɛtanburukalo_ɔkutɔburukalo_Nowanburukalo_Desanburukalo'.split('_'),
        monthsShort : 'Zan_Few_Mar_Awi_Mɛ_Zuw_Zul_Uti_Sɛt_ɔku_Now_Des'.split('_'),
        weekdays : 'Kari_Ntɛnɛn_Tarata_Araba_Alamisa_Juma_Sibiri'.split('_'),
        weekdaysShort : 'Kar_Ntɛ_Tar_Ara_Ala_Jum_Sib'.split('_'),
        weekdaysMin : 'Ka_Nt_Ta_Ar_Al_Ju_Si'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'MMMM [tile] D [san] YYYY',
            LLL : 'MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm',
            LLLL : 'dddd MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm'
        },
        calendar : {
            sameDay : '[Bi lɛrɛ] LT',
            nextDay : '[Sini lɛrɛ] LT',
            nextWeek : 'dddd [don lɛrɛ] LT',
            lastDay : '[Kunu lɛrɛ] LT',
            lastWeek : 'dddd [tɛmɛnen lɛrɛ] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s kɔnɔ',
            past : 'a bɛ %s bɔ',
            s : 'sanga dama dama',
            ss : 'sekondi %d',
            m : 'miniti kelen',
            mm : 'miniti %d',
            h : 'lɛrɛ kelen',
            hh : 'lɛrɛ %d',
            d : 'tile kelen',
            dd : 'tile %d',
            M : 'kalo kelen',
            MM : 'kalo %d',
            y : 'san kelen',
            yy : 'san %d'
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return bm;

})));


/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '১',
        '2': '২',
        '3': '৩',
        '4': '৪',
        '5': '৫',
        '6': '৬',
        '7': '৭',
        '8': '৮',
        '9': '৯',
        '0': '০'
    },
    numberMap = {
        '১': '1',
        '২': '2',
        '৩': '3',
        '৪': '4',
        '৫': '5',
        '৬': '6',
        '৭': '7',
        '৮': '8',
        '৯': '9',
        '০': '0'
    };

    var bn = moment.defineLocale('bn', {
        months : 'জানুয়ারী_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split('_'),
        monthsShort : 'জানু_ফেব_মার্চ_এপ্র_মে_জুন_জুল_আগ_সেপ্ট_অক্টো_নভে_ডিসে'.split('_'),
        weekdays : 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার'.split('_'),
        weekdaysShort : 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি'.split('_'),
        weekdaysMin : 'রবি_সোম_মঙ্গ_বুধ_বৃহঃ_শুক্র_শনি'.split('_'),
        longDateFormat : {
            LT : 'A h:mm সময়',
            LTS : 'A h:mm:ss সময়',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, A h:mm সময়',
            LLLL : 'dddd, D MMMM YYYY, A h:mm সময়'
        },
        calendar : {
            sameDay : '[আজ] LT',
            nextDay : '[আগামীকাল] LT',
            nextWeek : 'dddd, LT',
            lastDay : '[গতকাল] LT',
            lastWeek : '[গত] dddd, LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s পরে',
            past : '%s আগে',
            s : 'কয়েক সেকেন্ড',
            ss : '%d সেকেন্ড',
            m : 'এক মিনিট',
            mm : '%d মিনিট',
            h : 'এক ঘন্টা',
            hh : '%d ঘন্টা',
            d : 'এক দিন',
            dd : '%d দিন',
            M : 'এক মাস',
            MM : '%d মাস',
            y : 'এক বছর',
            yy : '%d বছর'
        },
        preparse: function (string) {
            return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        meridiemParse: /রাত|সকাল|দুপুর|বিকাল|রাত/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if ((meridiem === 'রাত' && hour >= 4) ||
                    (meridiem === 'দুপুর' && hour < 5) ||
                    meridiem === 'বিকাল') {
                return hour + 12;
            } else {
                return hour;
            }
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'রাত';
            } else if (hour < 10) {
                return 'সকাল';
            } else if (hour < 17) {
                return 'দুপুর';
            } else if (hour < 20) {
                return 'বিকাল';
            } else {
                return 'রাত';
            }
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 1st is the first week of the year.
        }
    });

    return bn;

})));


/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '༡',
        '2': '༢',
        '3': '༣',
        '4': '༤',
        '5': '༥',
        '6': '༦',
        '7': '༧',
        '8': '༨',
        '9': '༩',
        '0': '༠'
    },
    numberMap = {
        '༡': '1',
        '༢': '2',
        '༣': '3',
        '༤': '4',
        '༥': '5',
        '༦': '6',
        '༧': '7',
        '༨': '8',
        '༩': '9',
        '༠': '0'
    };

    var bo = moment.defineLocale('bo', {
        months : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),
        monthsShort : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),
        weekdays : 'གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་'.split('_'),
        weekdaysShort : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),
        weekdaysMin : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),
        longDateFormat : {
            LT : 'A h:mm',
            LTS : 'A h:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, A h:mm',
            LLLL : 'dddd, D MMMM YYYY, A h:mm'
        },
        calendar : {
            sameDay : '[དི་རིང] LT',
            nextDay : '[སང་ཉིན] LT',
            nextWeek : '[བདུན་ཕྲག་རྗེས་མ], LT',
            lastDay : '[ཁ་སང] LT',
            lastWeek : '[བདུན་ཕྲག་མཐའ་མ] dddd, LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s ལ་',
            past : '%s སྔན་ལ',
            s : 'ལམ་སང',
            ss : '%d སྐར་ཆ།',
            m : 'སྐར་མ་གཅིག',
            mm : '%d སྐར་མ',
            h : 'ཆུ་ཚོད་གཅིག',
            hh : '%d ཆུ་ཚོད',
            d : 'ཉིན་གཅིག',
            dd : '%d ཉིན་',
            M : 'ཟླ་བ་གཅིག',
            MM : '%d ཟླ་བ',
            y : 'ལོ་གཅིག',
            yy : '%d ལོ'
        },
        preparse: function (string) {
            return string.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        meridiemParse: /མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if ((meridiem === 'མཚན་མོ' && hour >= 4) ||
                    (meridiem === 'ཉིན་གུང' && hour < 5) ||
                    meridiem === 'དགོང་དག') {
                return hour + 12;
            } else {
                return hour;
            }
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'མཚན་མོ';
            } else if (hour < 10) {
                return 'ཞོགས་ཀས';
            } else if (hour < 17) {
                return 'ཉིན་གུང';
            } else if (hour < 20) {
                return 'དགོང་དག';
            } else {
                return 'མཚན་མོ';
            }
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 1st is the first week of the year.
        }
    });

    return bo;

})));


/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function relativeTimeWithMutation(number, withoutSuffix, key) {
        var format = {
            'mm': 'munutenn',
            'MM': 'miz',
            'dd': 'devezh'
        };
        return number + ' ' + mutation(format[key], number);
    }
    function specialMutationForYears(number) {
        switch (lastNumber(number)) {
            case 1:
            case 3:
            case 4:
            case 5:
            case 9:
                return number + ' bloaz';
            default:
                return number + ' vloaz';
        }
    }
    function lastNumber(number) {
        if (number > 9) {
            return lastNumber(number % 10);
        }
        return number;
    }
    function mutation(text, number) {
        if (number === 2) {
            return softMutation(text);
        }
        return text;
    }
    function softMutation(text) {
        var mutationTable = {
            'm': 'v',
            'b': 'v',
            'd': 'z'
        };
        if (mutationTable[text.charAt(0)] === undefined) {
            return text;
        }
        return mutationTable[text.charAt(0)] + text.substring(1);
    }

    var br = moment.defineLocale('br', {
        months : 'Genver_C\'hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu'.split('_'),
        monthsShort : 'Gen_C\'hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker'.split('_'),
        weekdays : 'Sul_Lun_Meurzh_Merc\'her_Yaou_Gwener_Sadorn'.split('_'),
        weekdaysShort : 'Sul_Lun_Meu_Mer_Yao_Gwe_Sad'.split('_'),
        weekdaysMin : 'Su_Lu_Me_Mer_Ya_Gw_Sa'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'h[e]mm A',
            LTS : 'h[e]mm:ss A',
            L : 'DD/MM/YYYY',
            LL : 'D [a viz] MMMM YYYY',
            LLL : 'D [a viz] MMMM YYYY h[e]mm A',
            LLLL : 'dddd, D [a viz] MMMM YYYY h[e]mm A'
        },
        calendar : {
            sameDay : '[Hiziv da] LT',
            nextDay : '[Warc\'hoazh da] LT',
            nextWeek : 'dddd [da] LT',
            lastDay : '[Dec\'h da] LT',
            lastWeek : 'dddd [paset da] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'a-benn %s',
            past : '%s \'zo',
            s : 'un nebeud segondennoù',
            ss : '%d eilenn',
            m : 'ur vunutenn',
            mm : relativeTimeWithMutation,
            h : 'un eur',
            hh : '%d eur',
            d : 'un devezh',
            dd : relativeTimeWithMutation,
            M : 'ur miz',
            MM : relativeTimeWithMutation,
            y : 'ur bloaz',
            yy : specialMutationForYears
        },
        dayOfMonthOrdinalParse: /\d{1,2}(añ|vet)/,
        ordinal : function (number) {
            var output = (number === 1) ? 'añ' : 'vet';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return br;

})));


/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function translate(number, withoutSuffix, key) {
        var result = number + ' ';
        switch (key) {
            case 'ss':
                if (number === 1) {
                    result += 'sekunda';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'sekunde';
                } else {
                    result += 'sekundi';
                }
                return result;
            case 'm':
                return withoutSuffix ? 'jedna minuta' : 'jedne minute';
            case 'mm':
                if (number === 1) {
                    result += 'minuta';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'minute';
                } else {
                    result += 'minuta';
                }
                return result;
            case 'h':
                return withoutSuffix ? 'jedan sat' : 'jednog sata';
            case 'hh':
                if (number === 1) {
                    result += 'sat';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'sata';
                } else {
                    result += 'sati';
                }
                return result;
            case 'dd':
                if (number === 1) {
                    result += 'dan';
                } else {
                    result += 'dana';
                }
                return result;
            case 'MM':
                if (number === 1) {
                    result += 'mjesec';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'mjeseca';
                } else {
                    result += 'mjeseci';
                }
                return result;
            case 'yy':
                if (number === 1) {
                    result += 'godina';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'godine';
                } else {
                    result += 'godina';
                }
                return result;
        }
    }

    var bs = moment.defineLocale('bs', {
        months : 'januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar'.split('_'),
        monthsShort : 'jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.'.split('_'),
        monthsParseExact: true,
        weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
        weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
        weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY H:mm',
            LLLL : 'dddd, D. MMMM YYYY H:mm'
        },
        calendar : {
            sameDay  : '[danas u] LT',
            nextDay  : '[sutra u] LT',
            nextWeek : function () {
                switch (this.day()) {
                    case 0:
                        return '[u] [nedjelju] [u] LT';
                    case 3:
                        return '[u] [srijedu] [u] LT';
                    case 6:
                        return '[u] [subotu] [u] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[u] dddd [u] LT';
                }
            },
            lastDay  : '[jučer u] LT',
            lastWeek : function () {
                switch (this.day()) {
                    case 0:
                    case 3:
                        return '[prošlu] dddd [u] LT';
                    case 6:
                        return '[prošle] [subote] [u] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[prošli] dddd [u] LT';
                }
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'za %s',
            past   : 'prije %s',
            s      : 'par sekundi',
            ss     : translate,
            m      : translate,
            mm     : translate,
            h      : translate,
            hh     : translate,
            d      : 'dan',
            dd     : translate,
            M      : 'mjesec',
            MM     : translate,
            y      : 'godinu',
            yy     : translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1st is the first week of the year.
        }
    });

    return bs;

})));


/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var ca = moment.defineLocale('ca', {
        months : {
            standalone: 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split('_'),
            format: 'de gener_de febrer_de març_d\'abril_de maig_de juny_de juliol_d\'agost_de setembre_d\'octubre_de novembre_de desembre'.split('_'),
            isFormat: /D[oD]?(\s)+MMMM/
        },
        monthsShort : 'gen._febr._març_abr._maig_juny_jul._ag._set._oct._nov._des.'.split('_'),
        monthsParseExact : true,
        weekdays : 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split('_'),
        weekdaysShort : 'dg._dl._dt._dc._dj._dv._ds.'.split('_'),
        weekdaysMin : 'dg_dl_dt_dc_dj_dv_ds'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM [de] YYYY',
            ll : 'D MMM YYYY',
            LLL : 'D MMMM [de] YYYY [a les] H:mm',
            lll : 'D MMM YYYY, H:mm',
            LLLL : 'dddd D MMMM [de] YYYY [a les] H:mm',
            llll : 'ddd D MMM YYYY, H:mm'
        },
        calendar : {
            sameDay : function () {
                return '[avui a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
            },
            nextDay : function () {
                return '[demà a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
            },
            nextWeek : function () {
                return 'dddd [a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
            },
            lastDay : function () {
                return '[ahir a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
            },
            lastWeek : function () {
                return '[el] dddd [passat a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'd\'aquí %s',
            past : 'fa %s',
            s : 'uns segons',
            ss : '%d segons',
            m : 'un minut',
            mm : '%d minuts',
            h : 'una hora',
            hh : '%d hores',
            d : 'un dia',
            dd : '%d dies',
            M : 'un mes',
            MM : '%d mesos',
            y : 'un any',
            yy : '%d anys'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(r|n|t|è|a)/,
        ordinal : function (number, period) {
            var output = (number === 1) ? 'r' :
                (number === 2) ? 'n' :
                (number === 3) ? 'r' :
                (number === 4) ? 't' : 'è';
            if (period === 'w' || period === 'W') {
                output = 'a';
            }
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return ca;

})));


/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var months = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split('_'),
        monthsShort = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_');
    function plural(n) {
        return (n > 1) && (n < 5) && (~~(n / 10) !== 1);
    }
    function translate(number, withoutSuffix, key, isFuture) {
        var result = number + ' ';
        switch (key) {
            case 's':  // a few seconds / in a few seconds / a few seconds ago
                return (withoutSuffix || isFuture) ? 'pár sekund' : 'pár sekundami';
            case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'sekundy' : 'sekund');
                } else {
                    return result + 'sekundami';
                }
                break;
            case 'm':  // a minute / in a minute / a minute ago
                return withoutSuffix ? 'minuta' : (isFuture ? 'minutu' : 'minutou');
            case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'minuty' : 'minut');
                } else {
                    return result + 'minutami';
                }
                break;
            case 'h':  // an hour / in an hour / an hour ago
                return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');
            case 'hh': // 9 hours / in 9 hours / 9 hours ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'hodiny' : 'hodin');
                } else {
                    return result + 'hodinami';
                }
                break;
            case 'd':  // a day / in a day / a day ago
                return (withoutSuffix || isFuture) ? 'den' : 'dnem';
            case 'dd': // 9 days / in 9 days / 9 days ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'dny' : 'dní');
                } else {
                    return result + 'dny';
                }
                break;
            case 'M':  // a month / in a month / a month ago
                return (withoutSuffix || isFuture) ? 'měsíc' : 'měsícem';
            case 'MM': // 9 months / in 9 months / 9 months ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'měsíce' : 'měsíců');
                } else {
                    return result + 'měsíci';
                }
                break;
            case 'y':  // a year / in a year / a year ago
                return (withoutSuffix || isFuture) ? 'rok' : 'rokem';
            case 'yy': // 9 years / in 9 years / 9 years ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'roky' : 'let');
                } else {
                    return result + 'lety';
                }
                break;
        }
    }

    var cs = moment.defineLocale('cs', {
        months : months,
        monthsShort : monthsShort,
        monthsParse : (function (months, monthsShort) {
            var i, _monthsParse = [];
            for (i = 0; i < 12; i++) {
                // use custom parser to solve problem with July (červenec)
                _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');
            }
            return _monthsParse;
        }(months, monthsShort)),
        shortMonthsParse : (function (monthsShort) {
            var i, _shortMonthsParse = [];
            for (i = 0; i < 12; i++) {
                _shortMonthsParse[i] = new RegExp('^' + monthsShort[i] + '$', 'i');
            }
            return _shortMonthsParse;
        }(monthsShort)),
        longMonthsParse : (function (months) {
            var i, _longMonthsParse = [];
            for (i = 0; i < 12; i++) {
                _longMonthsParse[i] = new RegExp('^' + months[i] + '$', 'i');
            }
            return _longMonthsParse;
        }(months)),
        weekdays : 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),
        weekdaysShort : 'ne_po_út_st_čt_pá_so'.split('_'),
        weekdaysMin : 'ne_po_út_st_čt_pá_so'.split('_'),
        longDateFormat : {
            LT: 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY H:mm',
            LLLL : 'dddd D. MMMM YYYY H:mm',
            l : 'D. M. YYYY'
        },
        calendar : {
            sameDay: '[dnes v] LT',
            nextDay: '[zítra v] LT',
            nextWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[v neděli v] LT';
                    case 1:
                    case 2:
                        return '[v] dddd [v] LT';
                    case 3:
                        return '[ve středu v] LT';
                    case 4:
                        return '[ve čtvrtek v] LT';
                    case 5:
                        return '[v pátek v] LT';
                    case 6:
                        return '[v sobotu v] LT';
                }
            },
            lastDay: '[včera v] LT',
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[minulou neděli v] LT';
                    case 1:
                    case 2:
                        return '[minulé] dddd [v] LT';
                    case 3:
                        return '[minulou středu v] LT';
                    case 4:
                    case 5:
                        return '[minulý] dddd [v] LT';
                    case 6:
                        return '[minulou sobotu v] LT';
                }
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : 'za %s',
            past : 'před %s',
            s : translate,
            ss : translate,
            m : translate,
            mm : translate,
            h : translate,
            hh : translate,
            d : translate,
            dd : translate,
            M : translate,
            MM : translate,
            y : translate,
            yy : translate
        },
        dayOfMonthOrdinalParse : /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return cs;

})));


/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var cv = moment.defineLocale('cv', {
        months : 'кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав'.split('_'),
        monthsShort : 'кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш'.split('_'),
        weekdays : 'вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун'.split('_'),
        weekdaysShort : 'выр_тун_ытл_юн_кӗҫ_эрн_шӑм'.split('_'),
        weekdaysMin : 'вр_тн_ыт_юн_кҫ_эр_шм'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD-MM-YYYY',
            LL : 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]',
            LLL : 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',
            LLLL : 'dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm'
        },
        calendar : {
            sameDay: '[Паян] LT [сехетре]',
            nextDay: '[Ыран] LT [сехетре]',
            lastDay: '[Ӗнер] LT [сехетре]',
            nextWeek: '[Ҫитес] dddd LT [сехетре]',
            lastWeek: '[Иртнӗ] dddd LT [сехетре]',
            sameElse: 'L'
        },
        relativeTime : {
            future : function (output) {
                var affix = /сехет$/i.exec(output) ? 'рен' : /ҫул$/i.exec(output) ? 'тан' : 'ран';
                return output + affix;
            },
            past : '%s каялла',
            s : 'пӗр-ик ҫеккунт',
            ss : '%d ҫеккунт',
            m : 'пӗр минут',
            mm : '%d минут',
            h : 'пӗр сехет',
            hh : '%d сехет',
            d : 'пӗр кун',
            dd : '%d кун',
            M : 'пӗр уйӑх',
            MM : '%d уйӑх',
            y : 'пӗр ҫул',
            yy : '%d ҫул'
        },
        dayOfMonthOrdinalParse: /\d{1,2}-мӗш/,
        ordinal : '%d-мӗш',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1st is the first week of the year.
        }
    });

    return cv;

})));


/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var cy = moment.defineLocale('cy', {
        months: 'Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr'.split('_'),
        monthsShort: 'Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag'.split('_'),
        weekdays: 'Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn'.split('_'),
        weekdaysShort: 'Sul_Llun_Maw_Mer_Iau_Gwe_Sad'.split('_'),
        weekdaysMin: 'Su_Ll_Ma_Me_Ia_Gw_Sa'.split('_'),
        weekdaysParseExact : true,
        // time formats are the same as en-gb
        longDateFormat: {
            LT: 'HH:mm',
            LTS : 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[Heddiw am] LT',
            nextDay: '[Yfory am] LT',
            nextWeek: 'dddd [am] LT',
            lastDay: '[Ddoe am] LT',
            lastWeek: 'dddd [diwethaf am] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'mewn %s',
            past: '%s yn ôl',
            s: 'ychydig eiliadau',
            ss: '%d eiliad',
            m: 'munud',
            mm: '%d munud',
            h: 'awr',
            hh: '%d awr',
            d: 'diwrnod',
            dd: '%d diwrnod',
            M: 'mis',
            MM: '%d mis',
            y: 'blwyddyn',
            yy: '%d flynedd'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,
        // traditional ordinal numbers above 31 are not commonly used in colloquial Welsh
        ordinal: function (number) {
            var b = number,
                output = '',
                lookup = [
                    '', 'af', 'il', 'ydd', 'ydd', 'ed', 'ed', 'ed', 'fed', 'fed', 'fed', // 1af to 10fed
                    'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'fed' // 11eg to 20fed
                ];
            if (b > 20) {
                if (b === 40 || b === 50 || b === 60 || b === 80 || b === 100) {
                    output = 'fed'; // not 30ain, 70ain or 90ain
                } else {
                    output = 'ain';
                }
            } else if (b > 0) {
                output = lookup[b];
            }
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return cy;

})));


/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var da = moment.defineLocale('da', {
        months : 'januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december'.split('_'),
        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
        weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
        weekdaysShort : 'søn_man_tir_ons_tor_fre_lør'.split('_'),
        weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY HH:mm',
            LLLL : 'dddd [d.] D. MMMM YYYY [kl.] HH:mm'
        },
        calendar : {
            sameDay : '[i dag kl.] LT',
            nextDay : '[i morgen kl.] LT',
            nextWeek : 'på dddd [kl.] LT',
            lastDay : '[i går kl.] LT',
            lastWeek : '[i] dddd[s kl.] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'om %s',
            past : '%s siden',
            s : 'få sekunder',
            ss : '%d sekunder',
            m : 'et minut',
            mm : '%d minutter',
            h : 'en time',
            hh : '%d timer',
            d : 'en dag',
            dd : '%d dage',
            M : 'en måned',
            MM : '%d måneder',
            y : 'et år',
            yy : '%d år'
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return da;

})));


/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            'm': ['eine Minute', 'einer Minute'],
            'h': ['eine Stunde', 'einer Stunde'],
            'd': ['ein Tag', 'einem Tag'],
            'dd': [number + ' Tage', number + ' Tagen'],
            'M': ['ein Monat', 'einem Monat'],
            'MM': [number + ' Monate', number + ' Monaten'],
            'y': ['ein Jahr', 'einem Jahr'],
            'yy': [number + ' Jahre', number + ' Jahren']
        };
        return withoutSuffix ? format[key][0] : format[key][1];
    }

    var de = moment.defineLocale('de', {
        months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
        monthsShort : 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),
        monthsParseExact : true,
        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
        weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY HH:mm',
            LLLL : 'dddd, D. MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[heute um] LT [Uhr]',
            sameElse: 'L',
            nextDay: '[morgen um] LT [Uhr]',
            nextWeek: 'dddd [um] LT [Uhr]',
            lastDay: '[gestern um] LT [Uhr]',
            lastWeek: '[letzten] dddd [um] LT [Uhr]'
        },
        relativeTime : {
            future : 'in %s',
            past : 'vor %s',
            s : 'ein paar Sekunden',
            ss : '%d Sekunden',
            m : processRelativeTime,
            mm : '%d Minuten',
            h : processRelativeTime,
            hh : '%d Stunden',
            d : processRelativeTime,
            dd : processRelativeTime,
            M : processRelativeTime,
            MM : processRelativeTime,
            y : processRelativeTime,
            yy : processRelativeTime
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return de;

})));


/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            'm': ['eine Minute', 'einer Minute'],
            'h': ['eine Stunde', 'einer Stunde'],
            'd': ['ein Tag', 'einem Tag'],
            'dd': [number + ' Tage', number + ' Tagen'],
            'M': ['ein Monat', 'einem Monat'],
            'MM': [number + ' Monate', number + ' Monaten'],
            'y': ['ein Jahr', 'einem Jahr'],
            'yy': [number + ' Jahre', number + ' Jahren']
        };
        return withoutSuffix ? format[key][0] : format[key][1];
    }

    var deAt = moment.defineLocale('de-at', {
        months : 'Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
        monthsShort : 'Jän._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),
        monthsParseExact : true,
        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
        weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY HH:mm',
            LLLL : 'dddd, D. MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[heute um] LT [Uhr]',
            sameElse: 'L',
            nextDay: '[morgen um] LT [Uhr]',
            nextWeek: 'dddd [um] LT [Uhr]',
            lastDay: '[gestern um] LT [Uhr]',
            lastWeek: '[letzten] dddd [um] LT [Uhr]'
        },
        relativeTime : {
            future : 'in %s',
            past : 'vor %s',
            s : 'ein paar Sekunden',
            ss : '%d Sekunden',
            m : processRelativeTime,
            mm : '%d Minuten',
            h : processRelativeTime,
            hh : '%d Stunden',
            d : processRelativeTime,
            dd : processRelativeTime,
            M : processRelativeTime,
            MM : processRelativeTime,
            y : processRelativeTime,
            yy : processRelativeTime
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return deAt;

})));


/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            'm': ['eine Minute', 'einer Minute'],
            'h': ['eine Stunde', 'einer Stunde'],
            'd': ['ein Tag', 'einem Tag'],
            'dd': [number + ' Tage', number + ' Tagen'],
            'M': ['ein Monat', 'einem Monat'],
            'MM': [number + ' Monate', number + ' Monaten'],
            'y': ['ein Jahr', 'einem Jahr'],
            'yy': [number + ' Jahre', number + ' Jahren']
        };
        return withoutSuffix ? format[key][0] : format[key][1];
    }

    var deCh = moment.defineLocale('de-ch', {
        months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
        monthsShort : 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),
        monthsParseExact : true,
        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
        weekdaysShort : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY HH:mm',
            LLLL : 'dddd, D. MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[heute um] LT [Uhr]',
            sameElse: 'L',
            nextDay: '[morgen um] LT [Uhr]',
            nextWeek: 'dddd [um] LT [Uhr]',
            lastDay: '[gestern um] LT [Uhr]',
            lastWeek: '[letzten] dddd [um] LT [Uhr]'
        },
        relativeTime : {
            future : 'in %s',
            past : 'vor %s',
            s : 'ein paar Sekunden',
            ss : '%d Sekunden',
            m : processRelativeTime,
            mm : '%d Minuten',
            h : processRelativeTime,
            hh : '%d Stunden',
            d : processRelativeTime,
            dd : processRelativeTime,
            M : processRelativeTime,
            MM : processRelativeTime,
            y : processRelativeTime,
            yy : processRelativeTime
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return deCh;

})));


/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var months = [
        'ޖެނުއަރީ',
        'ފެބްރުއަރީ',
        'މާރިޗު',
        'އޭޕްރީލު',
        'މޭ',
        'ޖޫން',
        'ޖުލައި',
        'އޯގަސްޓު',
        'ސެޕްޓެމްބަރު',
        'އޮކްޓޯބަރު',
        'ނޮވެމްބަރު',
        'ޑިސެމްބަރު'
    ], weekdays = [
        'އާދިއްތަ',
        'ހޯމަ',
        'އަންގާރަ',
        'ބުދަ',
        'ބުރާސްފަތި',
        'ހުކުރު',
        'ހޮނިހިރު'
    ];

    var dv = moment.defineLocale('dv', {
        months : months,
        monthsShort : months,
        weekdays : weekdays,
        weekdaysShort : weekdays,
        weekdaysMin : 'އާދި_ހޯމަ_އަން_ބުދަ_ބުރާ_ހުކު_ހޮނި'.split('_'),
        longDateFormat : {

            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'D/M/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        meridiemParse: /މކ|މފ/,
        isPM : function (input) {
            return 'މފ' === input;
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'މކ';
            } else {
                return 'މފ';
            }
        },
        calendar : {
            sameDay : '[މިއަދު] LT',
            nextDay : '[މާދަމާ] LT',
            nextWeek : 'dddd LT',
            lastDay : '[އިއްޔެ] LT',
            lastWeek : '[ފާއިތުވި] dddd LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'ތެރޭގައި %s',
            past : 'ކުރިން %s',
            s : 'ސިކުންތުކޮޅެއް',
            ss : 'd% ސިކުންތު',
            m : 'މިނިޓެއް',
            mm : 'މިނިޓު %d',
            h : 'ގަޑިއިރެއް',
            hh : 'ގަޑިއިރު %d',
            d : 'ދުވަހެއް',
            dd : 'ދުވަސް %d',
            M : 'މަހެއް',
            MM : 'މަސް %d',
            y : 'އަހަރެއް',
            yy : 'އަހަރު %d'
        },
        preparse: function (string) {
            return string.replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/,/g, '،');
        },
        week : {
            dow : 7,  // Sunday is the first day of the week.
            doy : 12  // The week that contains Jan 1st is the first week of the year.
        }
    });

    return dv;

})));


/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    function isFunction(input) {
        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
    }


    var el = moment.defineLocale('el', {
        monthsNominativeEl : 'Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος'.split('_'),
        monthsGenitiveEl : 'Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου'.split('_'),
        months : function (momentToFormat, format) {
            if (!momentToFormat) {
                return this._monthsNominativeEl;
            } else if (typeof format === 'string' && /D/.test(format.substring(0, format.indexOf('MMMM')))) { // if there is a day number before 'MMMM'
                return this._monthsGenitiveEl[momentToFormat.month()];
            } else {
                return this._monthsNominativeEl[momentToFormat.month()];
            }
        },
        monthsShort : 'Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ'.split('_'),
        weekdays : 'Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο'.split('_'),
        weekdaysShort : 'Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ'.split('_'),
        weekdaysMin : 'Κυ_Δε_Τρ_Τε_Πε_Πα_Σα'.split('_'),
        meridiem : function (hours, minutes, isLower) {
            if (hours > 11) {
                return isLower ? 'μμ' : 'ΜΜ';
            } else {
                return isLower ? 'πμ' : 'ΠΜ';
            }
        },
        isPM : function (input) {
            return ((input + '').toLowerCase()[0] === 'μ');
        },
        meridiemParse : /[ΠΜ]\.?Μ?\.?/i,
        longDateFormat : {
            LT : 'h:mm A',
            LTS : 'h:mm:ss A',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY h:mm A',
            LLLL : 'dddd, D MMMM YYYY h:mm A'
        },
        calendarEl : {
            sameDay : '[Σήμερα {}] LT',
            nextDay : '[Αύριο {}] LT',
            nextWeek : 'dddd [{}] LT',
            lastDay : '[Χθες {}] LT',
            lastWeek : function () {
                switch (this.day()) {
                    case 6:
                        return '[το προηγούμενο] dddd [{}] LT';
                    default:
                        return '[την προηγούμενη] dddd [{}] LT';
                }
            },
            sameElse : 'L'
        },
        calendar : function (key, mom) {
            var output = this._calendarEl[key],
                hours = mom && mom.hours();
            if (isFunction(output)) {
                output = output.apply(mom);
            }
            return output.replace('{}', (hours % 12 === 1 ? 'στη' : 'στις'));
        },
        relativeTime : {
            future : 'σε %s',
            past : '%s πριν',
            s : 'λίγα δευτερόλεπτα',
            ss : '%d δευτερόλεπτα',
            m : 'ένα λεπτό',
            mm : '%d λεπτά',
            h : 'μία ώρα',
            hh : '%d ώρες',
            d : 'μία μέρα',
            dd : '%d μέρες',
            M : 'ένας μήνας',
            MM : '%d μήνες',
            y : 'ένας χρόνος',
            yy : '%d χρόνια'
        },
        dayOfMonthOrdinalParse: /\d{1,2}η/,
        ordinal: '%dη',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4st is the first week of the year.
        }
    });

    return el;

})));


/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var enAu = moment.defineLocale('en-au', {
        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat : {
            LT : 'h:mm A',
            LTS : 'h:mm:ss A',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY h:mm A',
            LLLL : 'dddd, D MMMM YYYY h:mm A'
        },
        calendar : {
            sameDay : '[Today at] LT',
            nextDay : '[Tomorrow at] LT',
            nextWeek : 'dddd [at] LT',
            lastDay : '[Yesterday at] LT',
            lastWeek : '[Last] dddd [at] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'in %s',
            past : '%s ago',
            s : 'a few seconds',
            ss : '%d seconds',
            m : 'a minute',
            mm : '%d minutes',
            h : 'an hour',
            hh : '%d hours',
            d : 'a day',
            dd : '%d days',
            M : 'a month',
            MM : '%d months',
            y : 'a year',
            yy : '%d years'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return enAu;

})));


/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var enCa = moment.defineLocale('en-ca', {
        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat : {
            LT : 'h:mm A',
            LTS : 'h:mm:ss A',
            L : 'YYYY-MM-DD',
            LL : 'MMMM D, YYYY',
            LLL : 'MMMM D, YYYY h:mm A',
            LLLL : 'dddd, MMMM D, YYYY h:mm A'
        },
        calendar : {
            sameDay : '[Today at] LT',
            nextDay : '[Tomorrow at] LT',
            nextWeek : 'dddd [at] LT',
            lastDay : '[Yesterday at] LT',
            lastWeek : '[Last] dddd [at] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'in %s',
            past : '%s ago',
            s : 'a few seconds',
            ss : '%d seconds',
            m : 'a minute',
            mm : '%d minutes',
            h : 'an hour',
            hh : '%d hours',
            d : 'a day',
            dd : '%d days',
            M : 'a month',
            MM : '%d months',
            y : 'a year',
            yy : '%d years'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        }
    });

    return enCa;

})));


/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var enGb = moment.defineLocale('en-gb', {
        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Today at] LT',
            nextDay : '[Tomorrow at] LT',
            nextWeek : 'dddd [at] LT',
            lastDay : '[Yesterday at] LT',
            lastWeek : '[Last] dddd [at] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'in %s',
            past : '%s ago',
            s : 'a few seconds',
            ss : '%d seconds',
            m : 'a minute',
            mm : '%d minutes',
            h : 'an hour',
            hh : '%d hours',
            d : 'a day',
            dd : '%d days',
            M : 'a month',
            MM : '%d months',
            y : 'a year',
            yy : '%d years'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return enGb;

})));


/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var enIe = moment.defineLocale('en-ie', {
        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD-MM-YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Today at] LT',
            nextDay : '[Tomorrow at] LT',
            nextWeek : 'dddd [at] LT',
            lastDay : '[Yesterday at] LT',
            lastWeek : '[Last] dddd [at] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'in %s',
            past : '%s ago',
            s : 'a few seconds',
            ss : '%d seconds',
            m : 'a minute',
            mm : '%d minutes',
            h : 'an hour',
            hh : '%d hours',
            d : 'a day',
            dd : '%d days',
            M : 'a month',
            MM : '%d months',
            y : 'a year',
            yy : '%d years'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return enIe;

})));


/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var enIl = moment.defineLocale('en-il', {
        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Today at] LT',
            nextDay : '[Tomorrow at] LT',
            nextWeek : 'dddd [at] LT',
            lastDay : '[Yesterday at] LT',
            lastWeek : '[Last] dddd [at] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'in %s',
            past : '%s ago',
            s : 'a few seconds',
            m : 'a minute',
            mm : '%d minutes',
            h : 'an hour',
            hh : '%d hours',
            d : 'a day',
            dd : '%d days',
            M : 'a month',
            MM : '%d months',
            y : 'a year',
            yy : '%d years'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        }
    });

    return enIl;

})));


/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var enNz = moment.defineLocale('en-nz', {
        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat : {
            LT : 'h:mm A',
            LTS : 'h:mm:ss A',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY h:mm A',
            LLLL : 'dddd, D MMMM YYYY h:mm A'
        },
        calendar : {
            sameDay : '[Today at] LT',
            nextDay : '[Tomorrow at] LT',
            nextWeek : 'dddd [at] LT',
            lastDay : '[Yesterday at] LT',
            lastWeek : '[Last] dddd [at] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'in %s',
            past : '%s ago',
            s : 'a few seconds',
            ss : '%d seconds',
            m : 'a minute',
            mm : '%d minutes',
            h : 'an hour',
            hh : '%d hours',
            d : 'a day',
            dd : '%d days',
            M : 'a month',
            MM : '%d months',
            y : 'a year',
            yy : '%d years'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return enNz;

})));


/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var eo = moment.defineLocale('eo', {
        months : 'januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro'.split('_'),
        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aŭg_sep_okt_nov_dec'.split('_'),
        weekdays : 'dimanĉo_lundo_mardo_merkredo_ĵaŭdo_vendredo_sabato'.split('_'),
        weekdaysShort : 'dim_lun_mard_merk_ĵaŭ_ven_sab'.split('_'),
        weekdaysMin : 'di_lu_ma_me_ĵa_ve_sa'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY-MM-DD',
            LL : 'D[-a de] MMMM, YYYY',
            LLL : 'D[-a de] MMMM, YYYY HH:mm',
            LLLL : 'dddd, [la] D[-a de] MMMM, YYYY HH:mm'
        },
        meridiemParse: /[ap]\.t\.m/i,
        isPM: function (input) {
            return input.charAt(0).toLowerCase() === 'p';
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours > 11) {
                return isLower ? 'p.t.m.' : 'P.T.M.';
            } else {
                return isLower ? 'a.t.m.' : 'A.T.M.';
            }
        },
        calendar : {
            sameDay : '[Hodiaŭ je] LT',
            nextDay : '[Morgaŭ je] LT',
            nextWeek : 'dddd [je] LT',
            lastDay : '[Hieraŭ je] LT',
            lastWeek : '[pasinta] dddd [je] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'post %s',
            past : 'antaŭ %s',
            s : 'sekundoj',
            ss : '%d sekundoj',
            m : 'minuto',
            mm : '%d minutoj',
            h : 'horo',
            hh : '%d horoj',
            d : 'tago',//ne 'diurno', ĉar estas uzita por proksimumo
            dd : '%d tagoj',
            M : 'monato',
            MM : '%d monatoj',
            y : 'jaro',
            yy : '%d jaroj'
        },
        dayOfMonthOrdinalParse: /\d{1,2}a/,
        ordinal : '%da',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1st is the first week of the year.
        }
    });

    return eo;

})));


/***/ }),
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),
        monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');

    var monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];
    var monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;

    var es = moment.defineLocale('es', {
        months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
        monthsShort : function (m, format) {
            if (!m) {
                return monthsShortDot;
            } else if (/-MMM-/.test(format)) {
                return monthsShort[m.month()];
            } else {
                return monthsShortDot[m.month()];
            }
        },
        monthsRegex : monthsRegex,
        monthsShortRegex : monthsRegex,
        monthsStrictRegex : /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
        monthsShortStrictRegex : /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
        monthsParse : monthsParse,
        longMonthsParse : monthsParse,
        shortMonthsParse : monthsParse,
        weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
        weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
        weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D [de] MMMM [de] YYYY',
            LLL : 'D [de] MMMM [de] YYYY H:mm',
            LLLL : 'dddd, D [de] MMMM [de] YYYY H:mm'
        },
        calendar : {
            sameDay : function () {
                return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            nextDay : function () {
                return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            nextWeek : function () {
                return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            lastDay : function () {
                return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            lastWeek : function () {
                return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'en %s',
            past : 'hace %s',
            s : 'unos segundos',
            ss : '%d segundos',
            m : 'un minuto',
            mm : '%d minutos',
            h : 'una hora',
            hh : '%d horas',
            d : 'un día',
            dd : '%d días',
            M : 'un mes',
            MM : '%d meses',
            y : 'un año',
            yy : '%d años'
        },
        dayOfMonthOrdinalParse : /\d{1,2}º/,
        ordinal : '%dº',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return es;

})));


/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),
        monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');

    var monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];
    var monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;

    var esDo = moment.defineLocale('es-do', {
        months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
        monthsShort : function (m, format) {
            if (!m) {
                return monthsShortDot;
            } else if (/-MMM-/.test(format)) {
                return monthsShort[m.month()];
            } else {
                return monthsShortDot[m.month()];
            }
        },
        monthsRegex: monthsRegex,
        monthsShortRegex: monthsRegex,
        monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
        monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
        monthsParse: monthsParse,
        longMonthsParse: monthsParse,
        shortMonthsParse: monthsParse,
        weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
        weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
        weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'h:mm A',
            LTS : 'h:mm:ss A',
            L : 'DD/MM/YYYY',
            LL : 'D [de] MMMM [de] YYYY',
            LLL : 'D [de] MMMM [de] YYYY h:mm A',
            LLLL : 'dddd, D [de] MMMM [de] YYYY h:mm A'
        },
        calendar : {
            sameDay : function () {
                return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            nextDay : function () {
                return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            nextWeek : function () {
                return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            lastDay : function () {
                return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            lastWeek : function () {
                return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'en %s',
            past : 'hace %s',
            s : 'unos segundos',
            ss : '%d segundos',
            m : 'un minuto',
            mm : '%d minutos',
            h : 'una hora',
            hh : '%d horas',
            d : 'un día',
            dd : '%d días',
            M : 'un mes',
            MM : '%d meses',
            y : 'un año',
            yy : '%d años'
        },
        dayOfMonthOrdinalParse : /\d{1,2}º/,
        ordinal : '%dº',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return esDo;

})));


/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),
        monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');

    var esUs = moment.defineLocale('es-us', {
        months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
        monthsShort : function (m, format) {
            if (!m) {
                return monthsShortDot;
            } else if (/-MMM-/.test(format)) {
                return monthsShort[m.month()];
            } else {
                return monthsShortDot[m.month()];
            }
        },
        monthsParseExact : true,
        weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
        weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
        weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'h:mm A',
            LTS : 'h:mm:ss A',
            L : 'MM/DD/YYYY',
            LL : 'MMMM [de] D [de] YYYY',
            LLL : 'MMMM [de] D [de] YYYY h:mm A',
            LLLL : 'dddd, MMMM [de] D [de] YYYY h:mm A'
        },
        calendar : {
            sameDay : function () {
                return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            nextDay : function () {
                return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            nextWeek : function () {
                return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            lastDay : function () {
                return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            lastWeek : function () {
                return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'en %s',
            past : 'hace %s',
            s : 'unos segundos',
            ss : '%d segundos',
            m : 'un minuto',
            mm : '%d minutos',
            h : 'una hora',
            hh : '%d horas',
            d : 'un día',
            dd : '%d días',
            M : 'un mes',
            MM : '%d meses',
            y : 'un año',
            yy : '%d años'
        },
        dayOfMonthOrdinalParse : /\d{1,2}º/,
        ordinal : '%dº',
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 1st is the first week of the year.
        }
    });

    return esUs;

})));


/***/ }),
/* 133 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            's' : ['mõne sekundi', 'mõni sekund', 'paar sekundit'],
            'ss': [number + 'sekundi', number + 'sekundit'],
            'm' : ['ühe minuti', 'üks minut'],
            'mm': [number + ' minuti', number + ' minutit'],
            'h' : ['ühe tunni', 'tund aega', 'üks tund'],
            'hh': [number + ' tunni', number + ' tundi'],
            'd' : ['ühe päeva', 'üks päev'],
            'M' : ['kuu aja', 'kuu aega', 'üks kuu'],
            'MM': [number + ' kuu', number + ' kuud'],
            'y' : ['ühe aasta', 'aasta', 'üks aasta'],
            'yy': [number + ' aasta', number + ' aastat']
        };
        if (withoutSuffix) {
            return format[key][2] ? format[key][2] : format[key][1];
        }
        return isFuture ? format[key][0] : format[key][1];
    }

    var et = moment.defineLocale('et', {
        months        : 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split('_'),
        monthsShort   : 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),
        weekdays      : 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split('_'),
        weekdaysShort : 'P_E_T_K_N_R_L'.split('_'),
        weekdaysMin   : 'P_E_T_K_N_R_L'.split('_'),
        longDateFormat : {
            LT   : 'H:mm',
            LTS : 'H:mm:ss',
            L    : 'DD.MM.YYYY',
            LL   : 'D. MMMM YYYY',
            LLL  : 'D. MMMM YYYY H:mm',
            LLLL : 'dddd, D. MMMM YYYY H:mm'
        },
        calendar : {
            sameDay  : '[Täna,] LT',
            nextDay  : '[Homme,] LT',
            nextWeek : '[Järgmine] dddd LT',
            lastDay  : '[Eile,] LT',
            lastWeek : '[Eelmine] dddd LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s pärast',
            past   : '%s tagasi',
            s      : processRelativeTime,
            ss     : processRelativeTime,
            m      : processRelativeTime,
            mm     : processRelativeTime,
            h      : processRelativeTime,
            hh     : processRelativeTime,
            d      : processRelativeTime,
            dd     : '%d päeva',
            M      : processRelativeTime,
            MM     : processRelativeTime,
            y      : processRelativeTime,
            yy     : processRelativeTime
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return et;

})));


/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var eu = moment.defineLocale('eu', {
        months : 'urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua'.split('_'),
        monthsShort : 'urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.'.split('_'),
        monthsParseExact : true,
        weekdays : 'igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata'.split('_'),
        weekdaysShort : 'ig._al._ar._az._og._ol._lr.'.split('_'),
        weekdaysMin : 'ig_al_ar_az_og_ol_lr'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY-MM-DD',
            LL : 'YYYY[ko] MMMM[ren] D[a]',
            LLL : 'YYYY[ko] MMMM[ren] D[a] HH:mm',
            LLLL : 'dddd, YYYY[ko] MMMM[ren] D[a] HH:mm',
            l : 'YYYY-M-D',
            ll : 'YYYY[ko] MMM D[a]',
            lll : 'YYYY[ko] MMM D[a] HH:mm',
            llll : 'ddd, YYYY[ko] MMM D[a] HH:mm'
        },
        calendar : {
            sameDay : '[gaur] LT[etan]',
            nextDay : '[bihar] LT[etan]',
            nextWeek : 'dddd LT[etan]',
            lastDay : '[atzo] LT[etan]',
            lastWeek : '[aurreko] dddd LT[etan]',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s barru',
            past : 'duela %s',
            s : 'segundo batzuk',
            ss : '%d segundo',
            m : 'minutu bat',
            mm : '%d minutu',
            h : 'ordu bat',
            hh : '%d ordu',
            d : 'egun bat',
            dd : '%d egun',
            M : 'hilabete bat',
            MM : '%d hilabete',
            y : 'urte bat',
            yy : '%d urte'
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1st is the first week of the year.
        }
    });

    return eu;

})));


/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '۱',
        '2': '۲',
        '3': '۳',
        '4': '۴',
        '5': '۵',
        '6': '۶',
        '7': '۷',
        '8': '۸',
        '9': '۹',
        '0': '۰'
    }, numberMap = {
        '۱': '1',
        '۲': '2',
        '۳': '3',
        '۴': '4',
        '۵': '5',
        '۶': '6',
        '۷': '7',
        '۸': '8',
        '۹': '9',
        '۰': '0'
    };

    var fa = moment.defineLocale('fa', {
        months : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
        monthsShort : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
        weekdays : 'یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه'.split('_'),
        weekdaysShort : 'یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه'.split('_'),
        weekdaysMin : 'ی_د_س_چ_پ_ج_ش'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        meridiemParse: /قبل از ظهر|بعد از ظهر/,
        isPM: function (input) {
            return /بعد از ظهر/.test(input);
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'قبل از ظهر';
            } else {
                return 'بعد از ظهر';
            }
        },
        calendar : {
            sameDay : '[امروز ساعت] LT',
            nextDay : '[فردا ساعت] LT',
            nextWeek : 'dddd [ساعت] LT',
            lastDay : '[دیروز ساعت] LT',
            lastWeek : 'dddd [پیش] [ساعت] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'در %s',
            past : '%s پیش',
            s : 'چند ثانیه',
            ss : 'ثانیه d%',
            m : 'یک دقیقه',
            mm : '%d دقیقه',
            h : 'یک ساعت',
            hh : '%d ساعت',
            d : 'یک روز',
            dd : '%d روز',
            M : 'یک ماه',
            MM : '%d ماه',
            y : 'یک سال',
            yy : '%d سال'
        },
        preparse: function (string) {
            return string.replace(/[۰-۹]/g, function (match) {
                return numberMap[match];
            }).replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            }).replace(/,/g, '،');
        },
        dayOfMonthOrdinalParse: /\d{1,2}م/,
        ordinal : '%dم',
        week : {
            dow : 6, // Saturday is the first day of the week.
            doy : 12 // The week that contains Jan 1st is the first week of the year.
        }
    });

    return fa;

})));


/***/ }),
/* 136 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(' '),
        numbersFuture = [
            'nolla', 'yhden', 'kahden', 'kolmen', 'neljän', 'viiden', 'kuuden',
            numbersPast[7], numbersPast[8], numbersPast[9]
        ];
    function translate(number, withoutSuffix, key, isFuture) {
        var result = '';
        switch (key) {
            case 's':
                return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';
            case 'ss':
                return isFuture ? 'sekunnin' : 'sekuntia';
            case 'm':
                return isFuture ? 'minuutin' : 'minuutti';
            case 'mm':
                result = isFuture ? 'minuutin' : 'minuuttia';
                break;
            case 'h':
                return isFuture ? 'tunnin' : 'tunti';
            case 'hh':
                result = isFuture ? 'tunnin' : 'tuntia';
                break;
            case 'd':
                return isFuture ? 'päivän' : 'päivä';
            case 'dd':
                result = isFuture ? 'päivän' : 'päivää';
                break;
            case 'M':
                return isFuture ? 'kuukauden' : 'kuukausi';
            case 'MM':
                result = isFuture ? 'kuukauden' : 'kuukautta';
                break;
            case 'y':
                return isFuture ? 'vuoden' : 'vuosi';
            case 'yy':
                result = isFuture ? 'vuoden' : 'vuotta';
                break;
        }
        result = verbalNumber(number, isFuture) + ' ' + result;
        return result;
    }
    function verbalNumber(number, isFuture) {
        return number < 10 ? (isFuture ? numbersFuture[number] : numbersPast[number]) : number;
    }

    var fi = moment.defineLocale('fi', {
        months : 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'),
        monthsShort : 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split('_'),
        weekdays : 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'),
        weekdaysShort : 'su_ma_ti_ke_to_pe_la'.split('_'),
        weekdaysMin : 'su_ma_ti_ke_to_pe_la'.split('_'),
        longDateFormat : {
            LT : 'HH.mm',
            LTS : 'HH.mm.ss',
            L : 'DD.MM.YYYY',
            LL : 'Do MMMM[ta] YYYY',
            LLL : 'Do MMMM[ta] YYYY, [klo] HH.mm',
            LLLL : 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',
            l : 'D.M.YYYY',
            ll : 'Do MMM YYYY',
            lll : 'Do MMM YYYY, [klo] HH.mm',
            llll : 'ddd, Do MMM YYYY, [klo] HH.mm'
        },
        calendar : {
            sameDay : '[tänään] [klo] LT',
            nextDay : '[huomenna] [klo] LT',
            nextWeek : 'dddd [klo] LT',
            lastDay : '[eilen] [klo] LT',
            lastWeek : '[viime] dddd[na] [klo] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s päästä',
            past : '%s sitten',
            s : translate,
            ss : translate,
            m : translate,
            mm : translate,
            h : translate,
            hh : translate,
            d : translate,
            dd : translate,
            M : translate,
            MM : translate,
            y : translate,
            yy : translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return fi;

})));


/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var fo = moment.defineLocale('fo', {
        months : 'januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
        monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
        weekdays : 'sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur'.split('_'),
        weekdaysShort : 'sun_mán_týs_mik_hós_frí_ley'.split('_'),
        weekdaysMin : 'su_má_tý_mi_hó_fr_le'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D. MMMM, YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Í dag kl.] LT',
            nextDay : '[Í morgin kl.] LT',
            nextWeek : 'dddd [kl.] LT',
            lastDay : '[Í gjár kl.] LT',
            lastWeek : '[síðstu] dddd [kl] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'um %s',
            past : '%s síðani',
            s : 'fá sekund',
            ss : '%d sekundir',
            m : 'ein minutt',
            mm : '%d minuttir',
            h : 'ein tími',
            hh : '%d tímar',
            d : 'ein dagur',
            dd : '%d dagar',
            M : 'ein mánaði',
            MM : '%d mánaðir',
            y : 'eitt ár',
            yy : '%d ár'
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return fo;

})));


/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var fr = moment.defineLocale('fr', {
        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
        monthsParseExact : true,
        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
        weekdaysMin : 'di_lu_ma_me_je_ve_sa'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Aujourd’hui à] LT',
            nextDay : '[Demain à] LT',
            nextWeek : 'dddd [à] LT',
            lastDay : '[Hier à] LT',
            lastWeek : 'dddd [dernier à] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'dans %s',
            past : 'il y a %s',
            s : 'quelques secondes',
            ss : '%d secondes',
            m : 'une minute',
            mm : '%d minutes',
            h : 'une heure',
            hh : '%d heures',
            d : 'un jour',
            dd : '%d jours',
            M : 'un mois',
            MM : '%d mois',
            y : 'un an',
            yy : '%d ans'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(er|)/,
        ordinal : function (number, period) {
            switch (period) {
                // TODO: Return 'e' when day of month > 1. Move this case inside
                // block for masculine words below.
                // See https://github.com/moment/moment/issues/3375
                case 'D':
                    return number + (number === 1 ? 'er' : '');

                // Words with masculine grammatical gender: mois, trimestre, jour
                default:
                case 'M':
                case 'Q':
                case 'DDD':
                case 'd':
                    return number + (number === 1 ? 'er' : 'e');

                // Words with feminine grammatical gender: semaine
                case 'w':
                case 'W':
                    return number + (number === 1 ? 're' : 'e');
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return fr;

})));


/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var frCa = moment.defineLocale('fr-ca', {
        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
        monthsParseExact : true,
        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
        weekdaysMin : 'di_lu_ma_me_je_ve_sa'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY-MM-DD',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Aujourd’hui à] LT',
            nextDay : '[Demain à] LT',
            nextWeek : 'dddd [à] LT',
            lastDay : '[Hier à] LT',
            lastWeek : 'dddd [dernier à] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'dans %s',
            past : 'il y a %s',
            s : 'quelques secondes',
            ss : '%d secondes',
            m : 'une minute',
            mm : '%d minutes',
            h : 'une heure',
            hh : '%d heures',
            d : 'un jour',
            dd : '%d jours',
            M : 'un mois',
            MM : '%d mois',
            y : 'un an',
            yy : '%d ans'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
        ordinal : function (number, period) {
            switch (period) {
                // Words with masculine grammatical gender: mois, trimestre, jour
                default:
                case 'M':
                case 'Q':
                case 'D':
                case 'DDD':
                case 'd':
                    return number + (number === 1 ? 'er' : 'e');

                // Words with feminine grammatical gender: semaine
                case 'w':
                case 'W':
                    return number + (number === 1 ? 're' : 'e');
            }
        }
    });

    return frCa;

})));


/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var frCh = moment.defineLocale('fr-ch', {
        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
        monthsParseExact : true,
        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
        weekdaysMin : 'di_lu_ma_me_je_ve_sa'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Aujourd’hui à] LT',
            nextDay : '[Demain à] LT',
            nextWeek : 'dddd [à] LT',
            lastDay : '[Hier à] LT',
            lastWeek : 'dddd [dernier à] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'dans %s',
            past : 'il y a %s',
            s : 'quelques secondes',
            ss : '%d secondes',
            m : 'une minute',
            mm : '%d minutes',
            h : 'une heure',
            hh : '%d heures',
            d : 'un jour',
            dd : '%d jours',
            M : 'un mois',
            MM : '%d mois',
            y : 'un an',
            yy : '%d ans'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
        ordinal : function (number, period) {
            switch (period) {
                // Words with masculine grammatical gender: mois, trimestre, jour
                default:
                case 'M':
                case 'Q':
                case 'D':
                case 'DDD':
                case 'd':
                    return number + (number === 1 ? 'er' : 'e');

                // Words with feminine grammatical gender: semaine
                case 'w':
                case 'W':
                    return number + (number === 1 ? 're' : 'e');
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return frCh;

})));


/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var monthsShortWithDots = 'jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.'.split('_'),
        monthsShortWithoutDots = 'jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_');

    var fy = moment.defineLocale('fy', {
        months : 'jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber'.split('_'),
        monthsShort : function (m, format) {
            if (!m) {
                return monthsShortWithDots;
            } else if (/-MMM-/.test(format)) {
                return monthsShortWithoutDots[m.month()];
            } else {
                return monthsShortWithDots[m.month()];
            }
        },
        monthsParseExact : true,
        weekdays : 'snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon'.split('_'),
        weekdaysShort : 'si._mo._ti._wo._to._fr._so.'.split('_'),
        weekdaysMin : 'Si_Mo_Ti_Wo_To_Fr_So'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD-MM-YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[hjoed om] LT',
            nextDay: '[moarn om] LT',
            nextWeek: 'dddd [om] LT',
            lastDay: '[juster om] LT',
            lastWeek: '[ôfrûne] dddd [om] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'oer %s',
            past : '%s lyn',
            s : 'in pear sekonden',
            ss : '%d sekonden',
            m : 'ien minút',
            mm : '%d minuten',
            h : 'ien oere',
            hh : '%d oeren',
            d : 'ien dei',
            dd : '%d dagen',
            M : 'ien moanne',
            MM : '%d moannen',
            y : 'ien jier',
            yy : '%d jierren'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
        ordinal : function (number) {
            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return fy;

})));


/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var months = [
        'Am Faoilleach', 'An Gearran', 'Am Màrt', 'An Giblean', 'An Cèitean', 'An t-Ògmhios', 'An t-Iuchar', 'An Lùnastal', 'An t-Sultain', 'An Dàmhair', 'An t-Samhain', 'An Dùbhlachd'
    ];

    var monthsShort = ['Faoi', 'Gear', 'Màrt', 'Gibl', 'Cèit', 'Ògmh', 'Iuch', 'Lùn', 'Sult', 'Dàmh', 'Samh', 'Dùbh'];

    var weekdays = ['Didòmhnaich', 'Diluain', 'Dimàirt', 'Diciadain', 'Diardaoin', 'Dihaoine', 'Disathairne'];

    var weekdaysShort = ['Did', 'Dil', 'Dim', 'Dic', 'Dia', 'Dih', 'Dis'];

    var weekdaysMin = ['Dò', 'Lu', 'Mà', 'Ci', 'Ar', 'Ha', 'Sa'];

    var gd = moment.defineLocale('gd', {
        months : months,
        monthsShort : monthsShort,
        monthsParseExact : true,
        weekdays : weekdays,
        weekdaysShort : weekdaysShort,
        weekdaysMin : weekdaysMin,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[An-diugh aig] LT',
            nextDay : '[A-màireach aig] LT',
            nextWeek : 'dddd [aig] LT',
            lastDay : '[An-dè aig] LT',
            lastWeek : 'dddd [seo chaidh] [aig] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'ann an %s',
            past : 'bho chionn %s',
            s : 'beagan diogan',
            ss : '%d diogan',
            m : 'mionaid',
            mm : '%d mionaidean',
            h : 'uair',
            hh : '%d uairean',
            d : 'latha',
            dd : '%d latha',
            M : 'mìos',
            MM : '%d mìosan',
            y : 'bliadhna',
            yy : '%d bliadhna'
        },
        dayOfMonthOrdinalParse : /\d{1,2}(d|na|mh)/,
        ordinal : function (number) {
            var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return gd;

})));


/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var gl = moment.defineLocale('gl', {
        months : 'xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro'.split('_'),
        monthsShort : 'xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.'.split('_'),
        monthsParseExact: true,
        weekdays : 'domingo_luns_martes_mércores_xoves_venres_sábado'.split('_'),
        weekdaysShort : 'dom._lun._mar._mér._xov._ven._sáb.'.split('_'),
        weekdaysMin : 'do_lu_ma_mé_xo_ve_sá'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D [de] MMMM [de] YYYY',
            LLL : 'D [de] MMMM [de] YYYY H:mm',
            LLLL : 'dddd, D [de] MMMM [de] YYYY H:mm'
        },
        calendar : {
            sameDay : function () {
                return '[hoxe ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';
            },
            nextDay : function () {
                return '[mañá ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';
            },
            nextWeek : function () {
                return 'dddd [' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';
            },
            lastDay : function () {
                return '[onte ' + ((this.hours() !== 1) ? 'á' : 'a') + '] LT';
            },
            lastWeek : function () {
                return '[o] dddd [pasado ' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : function (str) {
                if (str.indexOf('un') === 0) {
                    return 'n' + str;
                }
                return 'en ' + str;
            },
            past : 'hai %s',
            s : 'uns segundos',
            ss : '%d segundos',
            m : 'un minuto',
            mm : '%d minutos',
            h : 'unha hora',
            hh : '%d horas',
            d : 'un día',
            dd : '%d días',
            M : 'un mes',
            MM : '%d meses',
            y : 'un ano',
            yy : '%d anos'
        },
        dayOfMonthOrdinalParse : /\d{1,2}º/,
        ordinal : '%dº',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return gl;

})));


/***/ }),
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            's': ['thodde secondanim', 'thodde second'],
            'ss': [number + ' secondanim', number + ' second'],
            'm': ['eka mintan', 'ek minute'],
            'mm': [number + ' mintanim', number + ' mintam'],
            'h': ['eka horan', 'ek hor'],
            'hh': [number + ' horanim', number + ' horam'],
            'd': ['eka disan', 'ek dis'],
            'dd': [number + ' disanim', number + ' dis'],
            'M': ['eka mhoinean', 'ek mhoino'],
            'MM': [number + ' mhoineanim', number + ' mhoine'],
            'y': ['eka vorsan', 'ek voros'],
            'yy': [number + ' vorsanim', number + ' vorsam']
        };
        return withoutSuffix ? format[key][0] : format[key][1];
    }

    var gomLatn = moment.defineLocale('gom-latn', {
        months : 'Janer_Febrer_Mars_Abril_Mai_Jun_Julai_Agost_Setembr_Otubr_Novembr_Dezembr'.split('_'),
        monthsShort : 'Jan._Feb._Mars_Abr._Mai_Jun_Jul._Ago._Set._Otu._Nov._Dez.'.split('_'),
        monthsParseExact : true,
        weekdays : 'Aitar_Somar_Mongllar_Budvar_Brestar_Sukrar_Son\'var'.split('_'),
        weekdaysShort : 'Ait._Som._Mon._Bud._Bre._Suk._Son.'.split('_'),
        weekdaysMin : 'Ai_Sm_Mo_Bu_Br_Su_Sn'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'A h:mm [vazta]',
            LTS : 'A h:mm:ss [vazta]',
            L : 'DD-MM-YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY A h:mm [vazta]',
            LLLL : 'dddd, MMMM[achea] Do, YYYY, A h:mm [vazta]',
            llll: 'ddd, D MMM YYYY, A h:mm [vazta]'
        },
        calendar : {
            sameDay: '[Aiz] LT',
            nextDay: '[Faleam] LT',
            nextWeek: '[Ieta to] dddd[,] LT',
            lastDay: '[Kal] LT',
            lastWeek: '[Fatlo] dddd[,] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : '%s',
            past : '%s adim',
            s : processRelativeTime,
            ss : processRelativeTime,
            m : processRelativeTime,
            mm : processRelativeTime,
            h : processRelativeTime,
            hh : processRelativeTime,
            d : processRelativeTime,
            dd : processRelativeTime,
            M : processRelativeTime,
            MM : processRelativeTime,
            y : processRelativeTime,
            yy : processRelativeTime
        },
        dayOfMonthOrdinalParse : /\d{1,2}(er)/,
        ordinal : function (number, period) {
            switch (period) {
                // the ordinal 'er' only applies to day of the month
                case 'D':
                    return number + 'er';
                default:
                case 'M':
                case 'Q':
                case 'DDD':
                case 'd':
                case 'w':
                case 'W':
                    return number;
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        },
        meridiemParse: /rati|sokalli|donparam|sanje/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'rati') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'sokalli') {
                return hour;
            } else if (meridiem === 'donparam') {
                return hour > 12 ? hour : hour + 12;
            } else if (meridiem === 'sanje') {
                return hour + 12;
            }
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'rati';
            } else if (hour < 12) {
                return 'sokalli';
            } else if (hour < 16) {
                return 'donparam';
            } else if (hour < 20) {
                return 'sanje';
            } else {
                return 'rati';
            }
        }
    });

    return gomLatn;

})));


/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
            '1': '૧',
            '2': '૨',
            '3': '૩',
            '4': '૪',
            '5': '૫',
            '6': '૬',
            '7': '૭',
            '8': '૮',
            '9': '૯',
            '0': '૦'
        },
        numberMap = {
            '૧': '1',
            '૨': '2',
            '૩': '3',
            '૪': '4',
            '૫': '5',
            '૬': '6',
            '૭': '7',
            '૮': '8',
            '૯': '9',
            '૦': '0'
        };

    var gu = moment.defineLocale('gu', {
        months: 'જાન્યુઆરી_ફેબ્રુઆરી_માર્ચ_એપ્રિલ_મે_જૂન_જુલાઈ_ઑગસ્ટ_સપ્ટેમ્બર_ઑક્ટ્બર_નવેમ્બર_ડિસેમ્બર'.split('_'),
        monthsShort: 'જાન્યુ._ફેબ્રુ._માર્ચ_એપ્રિ._મે_જૂન_જુલા._ઑગ._સપ્ટે._ઑક્ટ્._નવે._ડિસે.'.split('_'),
        monthsParseExact: true,
        weekdays: 'રવિવાર_સોમવાર_મંગળવાર_બુધ્વાર_ગુરુવાર_શુક્રવાર_શનિવાર'.split('_'),
        weekdaysShort: 'રવિ_સોમ_મંગળ_બુધ્_ગુરુ_શુક્ર_શનિ'.split('_'),
        weekdaysMin: 'ર_સો_મં_બુ_ગુ_શુ_શ'.split('_'),
        longDateFormat: {
            LT: 'A h:mm વાગ્યે',
            LTS: 'A h:mm:ss વાગ્યે',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm વાગ્યે',
            LLLL: 'dddd, D MMMM YYYY, A h:mm વાગ્યે'
        },
        calendar: {
            sameDay: '[આજ] LT',
            nextDay: '[કાલે] LT',
            nextWeek: 'dddd, LT',
            lastDay: '[ગઇકાલે] LT',
            lastWeek: '[પાછલા] dddd, LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: '%s મા',
            past: '%s પેહલા',
            s: 'અમુક પળો',
            ss: '%d સેકંડ',
            m: 'એક મિનિટ',
            mm: '%d મિનિટ',
            h: 'એક કલાક',
            hh: '%d કલાક',
            d: 'એક દિવસ',
            dd: '%d દિવસ',
            M: 'એક મહિનો',
            MM: '%d મહિનો',
            y: 'એક વર્ષ',
            yy: '%d વર્ષ'
        },
        preparse: function (string) {
            return string.replace(/[૧૨૩૪૫૬૭૮૯૦]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        // Gujarati notation for meridiems are quite fuzzy in practice. While there exists
        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Gujarati.
        meridiemParse: /રાત|બપોર|સવાર|સાંજ/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'રાત') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'સવાર') {
                return hour;
            } else if (meridiem === 'બપોર') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'સાંજ') {
                return hour + 12;
            }
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
                return 'રાત';
            } else if (hour < 10) {
                return 'સવાર';
            } else if (hour < 17) {
                return 'બપોર';
            } else if (hour < 20) {
                return 'સાંજ';
            } else {
                return 'રાત';
            }
        },
        week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 6 // The week that contains Jan 1st is the first week of the year.
        }
    });

    return gu;

})));


/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var he = moment.defineLocale('he', {
        months : 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split('_'),
        monthsShort : 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split('_'),
        weekdays : 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),
        weekdaysShort : 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),
        weekdaysMin : 'א_ב_ג_ד_ה_ו_ש'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D [ב]MMMM YYYY',
            LLL : 'D [ב]MMMM YYYY HH:mm',
            LLLL : 'dddd, D [ב]MMMM YYYY HH:mm',
            l : 'D/M/YYYY',
            ll : 'D MMM YYYY',
            lll : 'D MMM YYYY HH:mm',
            llll : 'ddd, D MMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[היום ב־]LT',
            nextDay : '[מחר ב־]LT',
            nextWeek : 'dddd [בשעה] LT',
            lastDay : '[אתמול ב־]LT',
            lastWeek : '[ביום] dddd [האחרון בשעה] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'בעוד %s',
            past : 'לפני %s',
            s : 'מספר שניות',
            ss : '%d שניות',
            m : 'דקה',
            mm : '%d דקות',
            h : 'שעה',
            hh : function (number) {
                if (number === 2) {
                    return 'שעתיים';
                }
                return number + ' שעות';
            },
            d : 'יום',
            dd : function (number) {
                if (number === 2) {
                    return 'יומיים';
                }
                return number + ' ימים';
            },
            M : 'חודש',
            MM : function (number) {
                if (number === 2) {
                    return 'חודשיים';
                }
                return number + ' חודשים';
            },
            y : 'שנה',
            yy : function (number) {
                if (number === 2) {
                    return 'שנתיים';
                } else if (number % 10 === 0 && number !== 10) {
                    return number + ' שנה';
                }
                return number + ' שנים';
            }
        },
        meridiemParse: /אחה"צ|לפנה"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,
        isPM : function (input) {
            return /^(אחה"צ|אחרי הצהריים|בערב)$/.test(input);
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 5) {
                return 'לפנות בוקר';
            } else if (hour < 10) {
                return 'בבוקר';
            } else if (hour < 12) {
                return isLower ? 'לפנה"צ' : 'לפני הצהריים';
            } else if (hour < 18) {
                return isLower ? 'אחה"צ' : 'אחרי הצהריים';
            } else {
                return 'בערב';
            }
        }
    });

    return he;

})));


/***/ }),
/* 147 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '१',
        '2': '२',
        '3': '३',
        '4': '४',
        '5': '५',
        '6': '६',
        '7': '७',
        '8': '८',
        '9': '९',
        '0': '०'
    },
    numberMap = {
        '१': '1',
        '२': '2',
        '३': '3',
        '४': '4',
        '५': '5',
        '६': '6',
        '७': '7',
        '८': '8',
        '९': '9',
        '०': '0'
    };

    var hi = moment.defineLocale('hi', {
        months : 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split('_'),
        monthsShort : 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split('_'),
        monthsParseExact: true,
        weekdays : 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
        weekdaysShort : 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),
        weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),
        longDateFormat : {
            LT : 'A h:mm बजे',
            LTS : 'A h:mm:ss बजे',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, A h:mm बजे',
            LLLL : 'dddd, D MMMM YYYY, A h:mm बजे'
        },
        calendar : {
            sameDay : '[आज] LT',
            nextDay : '[कल] LT',
            nextWeek : 'dddd, LT',
            lastDay : '[कल] LT',
            lastWeek : '[पिछले] dddd, LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s में',
            past : '%s पहले',
            s : 'कुछ ही क्षण',
            ss : '%d सेकंड',
            m : 'एक मिनट',
            mm : '%d मिनट',
            h : 'एक घंटा',
            hh : '%d घंटे',
            d : 'एक दिन',
            dd : '%d दिन',
            M : 'एक महीने',
            MM : '%d महीने',
            y : 'एक वर्ष',
            yy : '%d वर्ष'
        },
        preparse: function (string) {
            return string.replace(/[१२३४५६७८९०]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        // Hindi notation for meridiems are quite fuzzy in practice. While there exists
        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.
        meridiemParse: /रात|सुबह|दोपहर|शाम/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'रात') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'सुबह') {
                return hour;
            } else if (meridiem === 'दोपहर') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'शाम') {
                return hour + 12;
            }
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'रात';
            } else if (hour < 10) {
                return 'सुबह';
            } else if (hour < 17) {
                return 'दोपहर';
            } else if (hour < 20) {
                return 'शाम';
            } else {
                return 'रात';
            }
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 1st is the first week of the year.
        }
    });

    return hi;

})));


/***/ }),
/* 148 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function translate(number, withoutSuffix, key) {
        var result = number + ' ';
        switch (key) {
            case 'ss':
                if (number === 1) {
                    result += 'sekunda';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'sekunde';
                } else {
                    result += 'sekundi';
                }
                return result;
            case 'm':
                return withoutSuffix ? 'jedna minuta' : 'jedne minute';
            case 'mm':
                if (number === 1) {
                    result += 'minuta';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'minute';
                } else {
                    result += 'minuta';
                }
                return result;
            case 'h':
                return withoutSuffix ? 'jedan sat' : 'jednog sata';
            case 'hh':
                if (number === 1) {
                    result += 'sat';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'sata';
                } else {
                    result += 'sati';
                }
                return result;
            case 'dd':
                if (number === 1) {
                    result += 'dan';
                } else {
                    result += 'dana';
                }
                return result;
            case 'MM':
                if (number === 1) {
                    result += 'mjesec';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'mjeseca';
                } else {
                    result += 'mjeseci';
                }
                return result;
            case 'yy':
                if (number === 1) {
                    result += 'godina';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'godine';
                } else {
                    result += 'godina';
                }
                return result;
        }
    }

    var hr = moment.defineLocale('hr', {
        months : {
            format: 'siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca'.split('_'),
            standalone: 'siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac'.split('_')
        },
        monthsShort : 'sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.'.split('_'),
        monthsParseExact: true,
        weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
        weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
        weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY H:mm',
            LLLL : 'dddd, D. MMMM YYYY H:mm'
        },
        calendar : {
            sameDay  : '[danas u] LT',
            nextDay  : '[sutra u] LT',
            nextWeek : function () {
                switch (this.day()) {
                    case 0:
                        return '[u] [nedjelju] [u] LT';
                    case 3:
                        return '[u] [srijedu] [u] LT';
                    case 6:
                        return '[u] [subotu] [u] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[u] dddd [u] LT';
                }
            },
            lastDay  : '[jučer u] LT',
            lastWeek : function () {
                switch (this.day()) {
                    case 0:
                    case 3:
                        return '[prošlu] dddd [u] LT';
                    case 6:
                        return '[prošle] [subote] [u] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[prošli] dddd [u] LT';
                }
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'za %s',
            past   : 'prije %s',
            s      : 'par sekundi',
            ss     : translate,
            m      : translate,
            mm     : translate,
            h      : translate,
            hh     : translate,
            d      : 'dan',
            dd     : translate,
            M      : 'mjesec',
            MM     : translate,
            y      : 'godinu',
            yy     : translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1st is the first week of the year.
        }
    });

    return hr;

})));


/***/ }),
/* 149 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');
    function translate(number, withoutSuffix, key, isFuture) {
        var num = number;
        switch (key) {
            case 's':
                return (isFuture || withoutSuffix) ? 'néhány másodperc' : 'néhány másodperce';
            case 'ss':
                return num + (isFuture || withoutSuffix) ? ' másodperc' : ' másodperce';
            case 'm':
                return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');
            case 'mm':
                return num + (isFuture || withoutSuffix ? ' perc' : ' perce');
            case 'h':
                return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');
            case 'hh':
                return num + (isFuture || withoutSuffix ? ' óra' : ' órája');
            case 'd':
                return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');
            case 'dd':
                return num + (isFuture || withoutSuffix ? ' nap' : ' napja');
            case 'M':
                return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
            case 'MM':
                return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
            case 'y':
                return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');
            case 'yy':
                return num + (isFuture || withoutSuffix ? ' év' : ' éve');
        }
        return '';
    }
    function week(isFuture) {
        return (isFuture ? '' : '[múlt] ') + '[' + weekEndings[this.day()] + '] LT[-kor]';
    }

    var hu = moment.defineLocale('hu', {
        months : 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split('_'),
        monthsShort : 'jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec'.split('_'),
        weekdays : 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),
        weekdaysShort : 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),
        weekdaysMin : 'v_h_k_sze_cs_p_szo'.split('_'),
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'YYYY.MM.DD.',
            LL : 'YYYY. MMMM D.',
            LLL : 'YYYY. MMMM D. H:mm',
            LLLL : 'YYYY. MMMM D., dddd H:mm'
        },
        meridiemParse: /de|du/i,
        isPM: function (input) {
            return input.charAt(1).toLowerCase() === 'u';
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours < 12) {
                return isLower === true ? 'de' : 'DE';
            } else {
                return isLower === true ? 'du' : 'DU';
            }
        },
        calendar : {
            sameDay : '[ma] LT[-kor]',
            nextDay : '[holnap] LT[-kor]',
            nextWeek : function () {
                return week.call(this, true);
            },
            lastDay : '[tegnap] LT[-kor]',
            lastWeek : function () {
                return week.call(this, false);
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s múlva',
            past : '%s',
            s : translate,
            ss : translate,
            m : translate,
            mm : translate,
            h : translate,
            hh : translate,
            d : translate,
            dd : translate,
            M : translate,
            MM : translate,
            y : translate,
            yy : translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return hu;

})));


/***/ }),
/* 150 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var hyAm = moment.defineLocale('hy-am', {
        months : {
            format: 'հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի'.split('_'),
            standalone: 'հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր'.split('_')
        },
        monthsShort : 'հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ'.split('_'),
        weekdays : 'կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ'.split('_'),
        weekdaysShort : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
        weekdaysMin : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY թ.',
            LLL : 'D MMMM YYYY թ., HH:mm',
            LLLL : 'dddd, D MMMM YYYY թ., HH:mm'
        },
        calendar : {
            sameDay: '[այսօր] LT',
            nextDay: '[վաղը] LT',
            lastDay: '[երեկ] LT',
            nextWeek: function () {
                return 'dddd [օրը ժամը] LT';
            },
            lastWeek: function () {
                return '[անցած] dddd [օրը ժամը] LT';
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : '%s հետո',
            past : '%s առաջ',
            s : 'մի քանի վայրկյան',
            ss : '%d վայրկյան',
            m : 'րոպե',
            mm : '%d րոպե',
            h : 'ժամ',
            hh : '%d ժամ',
            d : 'օր',
            dd : '%d օր',
            M : 'ամիս',
            MM : '%d ամիս',
            y : 'տարի',
            yy : '%d տարի'
        },
        meridiemParse: /գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,
        isPM: function (input) {
            return /^(ցերեկվա|երեկոյան)$/.test(input);
        },
        meridiem : function (hour) {
            if (hour < 4) {
                return 'գիշերվա';
            } else if (hour < 12) {
                return 'առավոտվա';
            } else if (hour < 17) {
                return 'ցերեկվա';
            } else {
                return 'երեկոյան';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}|\d{1,2}-(ին|րդ)/,
        ordinal: function (number, period) {
            switch (period) {
                case 'DDD':
                case 'w':
                case 'W':
                case 'DDDo':
                    if (number === 1) {
                        return number + '-ին';
                    }
                    return number + '-րդ';
                default:
                    return number;
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1st is the first week of the year.
        }
    });

    return hyAm;

})));


/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var id = moment.defineLocale('id', {
        months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split('_'),
        monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Agt_Sep_Okt_Nov_Des'.split('_'),
        weekdays : 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),
        weekdaysShort : 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),
        weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),
        longDateFormat : {
            LT : 'HH.mm',
            LTS : 'HH.mm.ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY [pukul] HH.mm',
            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
        },
        meridiemParse: /pagi|siang|sore|malam/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'pagi') {
                return hour;
            } else if (meridiem === 'siang') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'sore' || meridiem === 'malam') {
                return hour + 12;
            }
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours < 11) {
                return 'pagi';
            } else if (hours < 15) {
                return 'siang';
            } else if (hours < 19) {
                return 'sore';
            } else {
                return 'malam';
            }
        },
        calendar : {
            sameDay : '[Hari ini pukul] LT',
            nextDay : '[Besok pukul] LT',
            nextWeek : 'dddd [pukul] LT',
            lastDay : '[Kemarin pukul] LT',
            lastWeek : 'dddd [lalu pukul] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'dalam %s',
            past : '%s yang lalu',
            s : 'beberapa detik',
            ss : '%d detik',
            m : 'semenit',
            mm : '%d menit',
            h : 'sejam',
            hh : '%d jam',
            d : 'sehari',
            dd : '%d hari',
            M : 'sebulan',
            MM : '%d bulan',
            y : 'setahun',
            yy : '%d tahun'
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1st is the first week of the year.
        }
    });

    return id;

})));


/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function plural(n) {
        if (n % 100 === 11) {
            return true;
        } else if (n % 10 === 1) {
            return false;
        }
        return true;
    }
    function translate(number, withoutSuffix, key, isFuture) {
        var result = number + ' ';
        switch (key) {
            case 's':
                return withoutSuffix || isFuture ? 'nokkrar sekúndur' : 'nokkrum sekúndum';
            case 'ss':
                if (plural(number)) {
                    return result + (withoutSuffix || isFuture ? 'sekúndur' : 'sekúndum');
                }
                return result + 'sekúnda';
            case 'm':
                return withoutSuffix ? 'mínúta' : 'mínútu';
            case 'mm':
                if (plural(number)) {
                    return result + (withoutSuffix || isFuture ? 'mínútur' : 'mínútum');
                } else if (withoutSuffix) {
                    return result + 'mínúta';
                }
                return result + 'mínútu';
            case 'hh':
                if (plural(number)) {
                    return result + (withoutSuffix || isFuture ? 'klukkustundir' : 'klukkustundum');
                }
                return result + 'klukkustund';
            case 'd':
                if (withoutSuffix) {
                    return 'dagur';
                }
                return isFuture ? 'dag' : 'degi';
            case 'dd':
                if (plural(number)) {
                    if (withoutSuffix) {
                        return result + 'dagar';
                    }
                    return result + (isFuture ? 'daga' : 'dögum');
                } else if (withoutSuffix) {
                    return result + 'dagur';
                }
                return result + (isFuture ? 'dag' : 'degi');
            case 'M':
                if (withoutSuffix) {
                    return 'mánuður';
                }
                return isFuture ? 'mánuð' : 'mánuði';
            case 'MM':
                if (plural(number)) {
                    if (withoutSuffix) {
                        return result + 'mánuðir';
                    }
                    return result + (isFuture ? 'mánuði' : 'mánuðum');
                } else if (withoutSuffix) {
                    return result + 'mánuður';
                }
                return result + (isFuture ? 'mánuð' : 'mánuði');
            case 'y':
                return withoutSuffix || isFuture ? 'ár' : 'ári';
            case 'yy':
                if (plural(number)) {
                    return result + (withoutSuffix || isFuture ? 'ár' : 'árum');
                }
                return result + (withoutSuffix || isFuture ? 'ár' : 'ári');
        }
    }

    var is = moment.defineLocale('is', {
        months : 'janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember'.split('_'),
        monthsShort : 'jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des'.split('_'),
        weekdays : 'sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur'.split('_'),
        weekdaysShort : 'sun_mán_þri_mið_fim_fös_lau'.split('_'),
        weekdaysMin : 'Su_Má_Þr_Mi_Fi_Fö_La'.split('_'),
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY [kl.] H:mm',
            LLLL : 'dddd, D. MMMM YYYY [kl.] H:mm'
        },
        calendar : {
            sameDay : '[í dag kl.] LT',
            nextDay : '[á morgun kl.] LT',
            nextWeek : 'dddd [kl.] LT',
            lastDay : '[í gær kl.] LT',
            lastWeek : '[síðasta] dddd [kl.] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'eftir %s',
            past : 'fyrir %s síðan',
            s : translate,
            ss : translate,
            m : translate,
            mm : translate,
            h : 'klukkustund',
            hh : translate,
            d : translate,
            dd : translate,
            M : translate,
            MM : translate,
            y : translate,
            yy : translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return is;

})));


/***/ }),
/* 153 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var it = moment.defineLocale('it', {
        months : 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),
        monthsShort : 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),
        weekdays : 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split('_'),
        weekdaysShort : 'dom_lun_mar_mer_gio_ven_sab'.split('_'),
        weekdaysMin : 'do_lu_ma_me_gi_ve_sa'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[Oggi alle] LT',
            nextDay: '[Domani alle] LT',
            nextWeek: 'dddd [alle] LT',
            lastDay: '[Ieri alle] LT',
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[la scorsa] dddd [alle] LT';
                    default:
                        return '[lo scorso] dddd [alle] LT';
                }
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : function (s) {
                return ((/^[0-9].+$/).test(s) ? 'tra' : 'in') + ' ' + s;
            },
            past : '%s fa',
            s : 'alcuni secondi',
            ss : '%d secondi',
            m : 'un minuto',
            mm : '%d minuti',
            h : 'un\'ora',
            hh : '%d ore',
            d : 'un giorno',
            dd : '%d giorni',
            M : 'un mese',
            MM : '%d mesi',
            y : 'un anno',
            yy : '%d anni'
        },
        dayOfMonthOrdinalParse : /\d{1,2}º/,
        ordinal: '%dº',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return it;

})));


/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var ja = moment.defineLocale('ja', {
        months : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
        weekdays : '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),
        weekdaysShort : '日_月_火_水_木_金_土'.split('_'),
        weekdaysMin : '日_月_火_水_木_金_土'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY/MM/DD',
            LL : 'YYYY年M月D日',
            LLL : 'YYYY年M月D日 HH:mm',
            LLLL : 'YYYY年M月D日 dddd HH:mm',
            l : 'YYYY/MM/DD',
            ll : 'YYYY年M月D日',
            lll : 'YYYY年M月D日 HH:mm',
            llll : 'YYYY年M月D日(ddd) HH:mm'
        },
        meridiemParse: /午前|午後/i,
        isPM : function (input) {
            return input === '午後';
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return '午前';
            } else {
                return '午後';
            }
        },
        calendar : {
            sameDay : '[今日] LT',
            nextDay : '[明日] LT',
            nextWeek : function (now) {
                if (now.week() < this.week()) {
                    return '[来週]dddd LT';
                } else {
                    return 'dddd LT';
                }
            },
            lastDay : '[昨日] LT',
            lastWeek : function (now) {
                if (this.week() < now.week()) {
                    return '[先週]dddd LT';
                } else {
                    return 'dddd LT';
                }
            },
            sameElse : 'L'
        },
        dayOfMonthOrdinalParse : /\d{1,2}日/,
        ordinal : function (number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                    return number + '日';
                default:
                    return number;
            }
        },
        relativeTime : {
            future : '%s後',
            past : '%s前',
            s : '数秒',
            ss : '%d秒',
            m : '1分',
            mm : '%d分',
            h : '1時間',
            hh : '%d時間',
            d : '1日',
            dd : '%d日',
            M : '1ヶ月',
            MM : '%dヶ月',
            y : '1年',
            yy : '%d年'
        }
    });

    return ja;

})));


/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var jv = moment.defineLocale('jv', {
        months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember'.split('_'),
        monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des'.split('_'),
        weekdays : 'Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu'.split('_'),
        weekdaysShort : 'Min_Sen_Sel_Reb_Kem_Jem_Sep'.split('_'),
        weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sp'.split('_'),
        longDateFormat : {
            LT : 'HH.mm',
            LTS : 'HH.mm.ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY [pukul] HH.mm',
            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
        },
        meridiemParse: /enjing|siyang|sonten|ndalu/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'enjing') {
                return hour;
            } else if (meridiem === 'siyang') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'sonten' || meridiem === 'ndalu') {
                return hour + 12;
            }
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours < 11) {
                return 'enjing';
            } else if (hours < 15) {
                return 'siyang';
            } else if (hours < 19) {
                return 'sonten';
            } else {
                return 'ndalu';
            }
        },
        calendar : {
            sameDay : '[Dinten puniko pukul] LT',
            nextDay : '[Mbenjang pukul] LT',
            nextWeek : 'dddd [pukul] LT',
            lastDay : '[Kala wingi pukul] LT',
            lastWeek : 'dddd [kepengker pukul] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'wonten ing %s',
            past : '%s ingkang kepengker',
            s : 'sawetawis detik',
            ss : '%d detik',
            m : 'setunggal menit',
            mm : '%d menit',
            h : 'setunggal jam',
            hh : '%d jam',
            d : 'sedinten',
            dd : '%d dinten',
            M : 'sewulan',
            MM : '%d wulan',
            y : 'setaun',
            yy : '%d taun'
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1st is the first week of the year.
        }
    });

    return jv;

})));


/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var ka = moment.defineLocale('ka', {
        months : {
            standalone: 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split('_'),
            format: 'იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს'.split('_')
        },
        monthsShort : 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),
        weekdays : {
            standalone: 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split('_'),
            format: 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split('_'),
            isFormat: /(წინა|შემდეგ)/
        },
        weekdaysShort : 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),
        weekdaysMin : 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),
        longDateFormat : {
            LT : 'h:mm A',
            LTS : 'h:mm:ss A',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY h:mm A',
            LLLL : 'dddd, D MMMM YYYY h:mm A'
        },
        calendar : {
            sameDay : '[დღეს] LT[-ზე]',
            nextDay : '[ხვალ] LT[-ზე]',
            lastDay : '[გუშინ] LT[-ზე]',
            nextWeek : '[შემდეგ] dddd LT[-ზე]',
            lastWeek : '[წინა] dddd LT-ზე',
            sameElse : 'L'
        },
        relativeTime : {
            future : function (s) {
                return (/(წამი|წუთი|საათი|წელი)/).test(s) ?
                    s.replace(/ი$/, 'ში') :
                    s + 'ში';
            },
            past : function (s) {
                if ((/(წამი|წუთი|საათი|დღე|თვე)/).test(s)) {
                    return s.replace(/(ი|ე)$/, 'ის წინ');
                }
                if ((/წელი/).test(s)) {
                    return s.replace(/წელი$/, 'წლის წინ');
                }
            },
            s : 'რამდენიმე წამი',
            ss : '%d წამი',
            m : 'წუთი',
            mm : '%d წუთი',
            h : 'საათი',
            hh : '%d საათი',
            d : 'დღე',
            dd : '%d დღე',
            M : 'თვე',
            MM : '%d თვე',
            y : 'წელი',
            yy : '%d წელი'
        },
        dayOfMonthOrdinalParse: /0|1-ლი|მე-\d{1,2}|\d{1,2}-ე/,
        ordinal : function (number) {
            if (number === 0) {
                return number;
            }
            if (number === 1) {
                return number + '-ლი';
            }
            if ((number < 20) || (number <= 100 && (number % 20 === 0)) || (number % 100 === 0)) {
                return 'მე-' + number;
            }
            return number + '-ე';
        },
        week : {
            dow : 1,
            doy : 7
        }
    });

    return ka;

})));


/***/ }),
/* 157 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var suffixes = {
        0: '-ші',
        1: '-ші',
        2: '-ші',
        3: '-ші',
        4: '-ші',
        5: '-ші',
        6: '-шы',
        7: '-ші',
        8: '-ші',
        9: '-шы',
        10: '-шы',
        20: '-шы',
        30: '-шы',
        40: '-шы',
        50: '-ші',
        60: '-шы',
        70: '-ші',
        80: '-ші',
        90: '-шы',
        100: '-ші'
    };

    var kk = moment.defineLocale('kk', {
        months : 'қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан'.split('_'),
        monthsShort : 'қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел'.split('_'),
        weekdays : 'жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі'.split('_'),
        weekdaysShort : 'жек_дүй_сей_сәр_бей_жұм_сен'.split('_'),
        weekdaysMin : 'жк_дй_сй_ср_бй_жм_сн'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Бүгін сағат] LT',
            nextDay : '[Ертең сағат] LT',
            nextWeek : 'dddd [сағат] LT',
            lastDay : '[Кеше сағат] LT',
            lastWeek : '[Өткен аптаның] dddd [сағат] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s ішінде',
            past : '%s бұрын',
            s : 'бірнеше секунд',
            ss : '%d секунд',
            m : 'бір минут',
            mm : '%d минут',
            h : 'бір сағат',
            hh : '%d сағат',
            d : 'бір күн',
            dd : '%d күн',
            M : 'бір ай',
            MM : '%d ай',
            y : 'бір жыл',
            yy : '%d жыл'
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(ші|шы)/,
        ordinal : function (number) {
            var a = number % 10,
                b = number >= 100 ? 100 : null;
            return number + (suffixes[number] || suffixes[a] || suffixes[b]);
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1st is the first week of the year.
        }
    });

    return kk;

})));


/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '១',
        '2': '២',
        '3': '៣',
        '4': '៤',
        '5': '៥',
        '6': '៦',
        '7': '៧',
        '8': '៨',
        '9': '៩',
        '0': '០'
    }, numberMap = {
        '១': '1',
        '២': '2',
        '៣': '3',
        '៤': '4',
        '៥': '5',
        '៦': '6',
        '៧': '7',
        '៨': '8',
        '៩': '9',
        '០': '0'
    };

    var km = moment.defineLocale('km', {
        months: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split(
            '_'
        ),
        monthsShort: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split(
            '_'
        ),
        weekdays: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
        weekdaysShort: 'អា_ច_អ_ព_ព្រ_សុ_ស'.split('_'),
        weekdaysMin: 'អា_ច_អ_ព_ព្រ_សុ_ស'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
        },
        meridiemParse: /ព្រឹក|ល្ងាច/,
        isPM: function (input) {
            return input === 'ល្ងាច';
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ព្រឹក';
            } else {
                return 'ល្ងាច';
            }
        },
        calendar: {
            sameDay: '[ថ្ងៃនេះ ម៉ោង] LT',
            nextDay: '[ស្អែក ម៉ោង] LT',
            nextWeek: 'dddd [ម៉ោង] LT',
            lastDay: '[ម្សិលមិញ ម៉ោង] LT',
            lastWeek: 'dddd [សប្តាហ៍មុន] [ម៉ោង] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: '%sទៀត',
            past: '%sមុន',
            s: 'ប៉ុន្មានវិនាទី',
            ss: '%d វិនាទី',
            m: 'មួយនាទី',
            mm: '%d នាទី',
            h: 'មួយម៉ោង',
            hh: '%d ម៉ោង',
            d: 'មួយថ្ងៃ',
            dd: '%d ថ្ងៃ',
            M: 'មួយខែ',
            MM: '%d ខែ',
            y: 'មួយឆ្នាំ',
            yy: '%d ឆ្នាំ'
        },
        dayOfMonthOrdinalParse : /ទី\d{1,2}/,
        ordinal : 'ទី%d',
        preparse: function (string) {
            return string.replace(/[១២៣៤៥៦៧៨៩០]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
        }
    });

    return km;

})));


/***/ }),
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '೧',
        '2': '೨',
        '3': '೩',
        '4': '೪',
        '5': '೫',
        '6': '೬',
        '7': '೭',
        '8': '೮',
        '9': '೯',
        '0': '೦'
    },
    numberMap = {
        '೧': '1',
        '೨': '2',
        '೩': '3',
        '೪': '4',
        '೫': '5',
        '೬': '6',
        '೭': '7',
        '೮': '8',
        '೯': '9',
        '೦': '0'
    };

    var kn = moment.defineLocale('kn', {
        months : 'ಜನವರಿ_ಫೆಬ್ರವರಿ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂಬರ್_ಅಕ್ಟೋಬರ್_ನವೆಂಬರ್_ಡಿಸೆಂಬರ್'.split('_'),
        monthsShort : 'ಜನ_ಫೆಬ್ರ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂ_ಅಕ್ಟೋ_ನವೆಂ_ಡಿಸೆಂ'.split('_'),
        monthsParseExact: true,
        weekdays : 'ಭಾನುವಾರ_ಸೋಮವಾರ_ಮಂಗಳವಾರ_ಬುಧವಾರ_ಗುರುವಾರ_ಶುಕ್ರವಾರ_ಶನಿವಾರ'.split('_'),
        weekdaysShort : 'ಭಾನು_ಸೋಮ_ಮಂಗಳ_ಬುಧ_ಗುರು_ಶುಕ್ರ_ಶನಿ'.split('_'),
        weekdaysMin : 'ಭಾ_ಸೋ_ಮಂ_ಬು_ಗು_ಶು_ಶ'.split('_'),
        longDateFormat : {
            LT : 'A h:mm',
            LTS : 'A h:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, A h:mm',
            LLLL : 'dddd, D MMMM YYYY, A h:mm'
        },
        calendar : {
            sameDay : '[ಇಂದು] LT',
            nextDay : '[ನಾಳೆ] LT',
            nextWeek : 'dddd, LT',
            lastDay : '[ನಿನ್ನೆ] LT',
            lastWeek : '[ಕೊನೆಯ] dddd, LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s ನಂತರ',
            past : '%s ಹಿಂದೆ',
            s : 'ಕೆಲವು ಕ್ಷಣಗಳು',
            ss : '%d ಸೆಕೆಂಡುಗಳು',
            m : 'ಒಂದು ನಿಮಿಷ',
            mm : '%d ನಿಮಿಷ',
            h : 'ಒಂದು ಗಂಟೆ',
            hh : '%d ಗಂಟೆ',
            d : 'ಒಂದು ದಿನ',
            dd : '%d ದಿನ',
            M : 'ಒಂದು ತಿಂಗಳು',
            MM : '%d ತಿಂಗಳು',
            y : 'ಒಂದು ವರ್ಷ',
            yy : '%d ವರ್ಷ'
        },
        preparse: function (string) {
            return string.replace(/[೧೨೩೪೫೬೭೮೯೦]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        meridiemParse: /ರಾತ್ರಿ|ಬೆಳಿಗ್ಗೆ|ಮಧ್ಯಾಹ್ನ|ಸಂಜೆ/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'ರಾತ್ರಿ') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'ಬೆಳಿಗ್ಗೆ') {
                return hour;
            } else if (meridiem === 'ಮಧ್ಯಾಹ್ನ') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'ಸಂಜೆ') {
                return hour + 12;
            }
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'ರಾತ್ರಿ';
            } else if (hour < 10) {
                return 'ಬೆಳಿಗ್ಗೆ';
            } else if (hour < 17) {
                return 'ಮಧ್ಯಾಹ್ನ';
            } else if (hour < 20) {
                return 'ಸಂಜೆ';
            } else {
                return 'ರಾತ್ರಿ';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}(ನೇ)/,
        ordinal : function (number) {
            return number + 'ನೇ';
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 1st is the first week of the year.
        }
    });

    return kn;

})));


/***/ }),
/* 160 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var ko = moment.defineLocale('ko', {
        months : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
        monthsShort : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
        weekdays : '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),
        weekdaysShort : '일_월_화_수_목_금_토'.split('_'),
        weekdaysMin : '일_월_화_수_목_금_토'.split('_'),
        longDateFormat : {
            LT : 'A h:mm',
            LTS : 'A h:mm:ss',
            L : 'YYYY.MM.DD.',
            LL : 'YYYY년 MMMM D일',
            LLL : 'YYYY년 MMMM D일 A h:mm',
            LLLL : 'YYYY년 MMMM D일 dddd A h:mm',
            l : 'YYYY.MM.DD.',
            ll : 'YYYY년 MMMM D일',
            lll : 'YYYY년 MMMM D일 A h:mm',
            llll : 'YYYY년 MMMM D일 dddd A h:mm'
        },
        calendar : {
            sameDay : '오늘 LT',
            nextDay : '내일 LT',
            nextWeek : 'dddd LT',
            lastDay : '어제 LT',
            lastWeek : '지난주 dddd LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s 후',
            past : '%s 전',
            s : '몇 초',
            ss : '%d초',
            m : '1분',
            mm : '%d분',
            h : '한 시간',
            hh : '%d시간',
            d : '하루',
            dd : '%d일',
            M : '한 달',
            MM : '%d달',
            y : '일 년',
            yy : '%d년'
        },
        dayOfMonthOrdinalParse : /\d{1,2}(일|월|주)/,
        ordinal : function (number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                    return number + '일';
                case 'M':
                    return number + '월';
                case 'w':
                case 'W':
                    return number + '주';
                default:
                    return number;
            }
        },
        meridiemParse : /오전|오후/,
        isPM : function (token) {
            return token === '오후';
        },
        meridiem : function (hour, minute, isUpper) {
            return hour < 12 ? '오전' : '오후';
        }
    });

    return ko;

})));


/***/ }),
/* 161 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var suffixes = {
        0: '-чү',
        1: '-чи',
        2: '-чи',
        3: '-чү',
        4: '-чү',
        5: '-чи',
        6: '-чы',
        7: '-чи',
        8: '-чи',
        9: '-чу',
        10: '-чу',
        20: '-чы',
        30: '-чу',
        40: '-чы',
        50: '-чү',
        60: '-чы',
        70: '-чи',
        80: '-чи',
        90: '-чу',
        100: '-чү'
    };

    var ky = moment.defineLocale('ky', {
        months : 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),
        monthsShort : 'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split('_'),
        weekdays : 'Жекшемби_Дүйшөмбү_Шейшемби_Шаршемби_Бейшемби_Жума_Ишемби'.split('_'),
        weekdaysShort : 'Жек_Дүй_Шей_Шар_Бей_Жум_Ише'.split('_'),
        weekdaysMin : 'Жк_Дй_Шй_Шр_Бй_Жм_Иш'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Бүгүн саат] LT',
            nextDay : '[Эртең саат] LT',
            nextWeek : 'dddd [саат] LT',
            lastDay : '[Кече саат] LT',
            lastWeek : '[Өткен аптанын] dddd [күнү] [саат] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s ичинде',
            past : '%s мурун',
            s : 'бирнече секунд',
            ss : '%d секунд',
            m : 'бир мүнөт',
            mm : '%d мүнөт',
            h : 'бир саат',
            hh : '%d саат',
            d : 'бир күн',
            dd : '%d күн',
            M : 'бир ай',
            MM : '%d ай',
            y : 'бир жыл',
            yy : '%d жыл'
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(чи|чы|чү|чу)/,
        ordinal : function (number) {
            var a = number % 10,
                b = number >= 100 ? 100 : null;
            return number + (suffixes[number] || suffixes[a] || suffixes[b]);
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1st is the first week of the year.
        }
    });

    return ky;

})));


/***/ }),
/* 162 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            'm': ['eng Minutt', 'enger Minutt'],
            'h': ['eng Stonn', 'enger Stonn'],
            'd': ['een Dag', 'engem Dag'],
            'M': ['ee Mount', 'engem Mount'],
            'y': ['ee Joer', 'engem Joer']
        };
        return withoutSuffix ? format[key][0] : format[key][1];
    }
    function processFutureTime(string) {
        var number = string.substr(0, string.indexOf(' '));
        if (eifelerRegelAppliesToNumber(number)) {
            return 'a ' + string;
        }
        return 'an ' + string;
    }
    function processPastTime(string) {
        var number = string.substr(0, string.indexOf(' '));
        if (eifelerRegelAppliesToNumber(number)) {
            return 'viru ' + string;
        }
        return 'virun ' + string;
    }
    /**
     * Returns true if the word before the given number loses the '-n' ending.
     * e.g. 'an 10 Deeg' but 'a 5 Deeg'
     *
     * @param number {integer}
     * @returns {boolean}
     */
    function eifelerRegelAppliesToNumber(number) {
        number = parseInt(number, 10);
        if (isNaN(number)) {
            return false;
        }
        if (number < 0) {
            // Negative Number --> always true
            return true;
        } else if (number < 10) {
            // Only 1 digit
            if (4 <= number && number <= 7) {
                return true;
            }
            return false;
        } else if (number < 100) {
            // 2 digits
            var lastDigit = number % 10, firstDigit = number / 10;
            if (lastDigit === 0) {
                return eifelerRegelAppliesToNumber(firstDigit);
            }
            return eifelerRegelAppliesToNumber(lastDigit);
        } else if (number < 10000) {
            // 3 or 4 digits --> recursively check first digit
            while (number >= 10) {
                number = number / 10;
            }
            return eifelerRegelAppliesToNumber(number);
        } else {
            // Anything larger than 4 digits: recursively check first n-3 digits
            number = number / 1000;
            return eifelerRegelAppliesToNumber(number);
        }
    }

    var lb = moment.defineLocale('lb', {
        months: 'Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
        monthsShort: 'Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),
        monthsParseExact : true,
        weekdays: 'Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg'.split('_'),
        weekdaysShort: 'So._Mé._Dë._Më._Do._Fr._Sa.'.split('_'),
        weekdaysMin: 'So_Mé_Dë_Më_Do_Fr_Sa'.split('_'),
        weekdaysParseExact : true,
        longDateFormat: {
            LT: 'H:mm [Auer]',
            LTS: 'H:mm:ss [Auer]',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm [Auer]',
            LLLL: 'dddd, D. MMMM YYYY H:mm [Auer]'
        },
        calendar: {
            sameDay: '[Haut um] LT',
            sameElse: 'L',
            nextDay: '[Muer um] LT',
            nextWeek: 'dddd [um] LT',
            lastDay: '[Gëschter um] LT',
            lastWeek: function () {
                // Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule
                switch (this.day()) {
                    case 2:
                    case 4:
                        return '[Leschten] dddd [um] LT';
                    default:
                        return '[Leschte] dddd [um] LT';
                }
            }
        },
        relativeTime : {
            future : processFutureTime,
            past : processPastTime,
            s : 'e puer Sekonnen',
            ss : '%d Sekonnen',
            m : processRelativeTime,
            mm : '%d Minutten',
            h : processRelativeTime,
            hh : '%d Stonnen',
            d : processRelativeTime,
            dd : '%d Deeg',
            M : processRelativeTime,
            MM : '%d Méint',
            y : processRelativeTime,
            yy : '%d Joer'
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return lb;

})));


/***/ }),
/* 163 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var lo = moment.defineLocale('lo', {
        months : 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),
        monthsShort : 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),
        weekdays : 'ອາທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
        weekdaysShort : 'ທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
        weekdaysMin : 'ທ_ຈ_ອຄ_ພ_ພຫ_ສກ_ສ'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'ວັນdddd D MMMM YYYY HH:mm'
        },
        meridiemParse: /ຕອນເຊົ້າ|ຕອນແລງ/,
        isPM: function (input) {
            return input === 'ຕອນແລງ';
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ຕອນເຊົ້າ';
            } else {
                return 'ຕອນແລງ';
            }
        },
        calendar : {
            sameDay : '[ມື້ນີ້ເວລາ] LT',
            nextDay : '[ມື້ອື່ນເວລາ] LT',
            nextWeek : '[ວັນ]dddd[ໜ້າເວລາ] LT',
            lastDay : '[ມື້ວານນີ້ເວລາ] LT',
            lastWeek : '[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'ອີກ %s',
            past : '%sຜ່ານມາ',
            s : 'ບໍ່ເທົ່າໃດວິນາທີ',
            ss : '%d ວິນາທີ' ,
            m : '1 ນາທີ',
            mm : '%d ນາທີ',
            h : '1 ຊົ່ວໂມງ',
            hh : '%d ຊົ່ວໂມງ',
            d : '1 ມື້',
            dd : '%d ມື້',
            M : '1 ເດືອນ',
            MM : '%d ເດືອນ',
            y : '1 ປີ',
            yy : '%d ປີ'
        },
        dayOfMonthOrdinalParse: /(ທີ່)\d{1,2}/,
        ordinal : function (number) {
            return 'ທີ່' + number;
        }
    });

    return lo;

})));


/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var units = {
        'ss' : 'sekundė_sekundžių_sekundes',
        'm' : 'minutė_minutės_minutę',
        'mm': 'minutės_minučių_minutes',
        'h' : 'valanda_valandos_valandą',
        'hh': 'valandos_valandų_valandas',
        'd' : 'diena_dienos_dieną',
        'dd': 'dienos_dienų_dienas',
        'M' : 'mėnuo_mėnesio_mėnesį',
        'MM': 'mėnesiai_mėnesių_mėnesius',
        'y' : 'metai_metų_metus',
        'yy': 'metai_metų_metus'
    };
    function translateSeconds(number, withoutSuffix, key, isFuture) {
        if (withoutSuffix) {
            return 'kelios sekundės';
        } else {
            return isFuture ? 'kelių sekundžių' : 'kelias sekundes';
        }
    }
    function translateSingular(number, withoutSuffix, key, isFuture) {
        return withoutSuffix ? forms(key)[0] : (isFuture ? forms(key)[1] : forms(key)[2]);
    }
    function special(number) {
        return number % 10 === 0 || (number > 10 && number < 20);
    }
    function forms(key) {
        return units[key].split('_');
    }
    function translate(number, withoutSuffix, key, isFuture) {
        var result = number + ' ';
        if (number === 1) {
            return result + translateSingular(number, withoutSuffix, key[0], isFuture);
        } else if (withoutSuffix) {
            return result + (special(number) ? forms(key)[1] : forms(key)[0]);
        } else {
            if (isFuture) {
                return result + forms(key)[1];
            } else {
                return result + (special(number) ? forms(key)[1] : forms(key)[2]);
            }
        }
    }
    var lt = moment.defineLocale('lt', {
        months : {
            format: 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split('_'),
            standalone: 'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split('_'),
            isFormat: /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?|MMMM?(\[[^\[\]]*\]|\s)+D[oD]?/
        },
        monthsShort : 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),
        weekdays : {
            format: 'sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį'.split('_'),
            standalone: 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split('_'),
            isFormat: /dddd HH:mm/
        },
        weekdaysShort : 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),
        weekdaysMin : 'S_P_A_T_K_Pn_Š'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY-MM-DD',
            LL : 'YYYY [m.] MMMM D [d.]',
            LLL : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
            LLLL : 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',
            l : 'YYYY-MM-DD',
            ll : 'YYYY [m.] MMMM D [d.]',
            lll : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
            llll : 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]'
        },
        calendar : {
            sameDay : '[Šiandien] LT',
            nextDay : '[Rytoj] LT',
            nextWeek : 'dddd LT',
            lastDay : '[Vakar] LT',
            lastWeek : '[Praėjusį] dddd LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'po %s',
            past : 'prieš %s',
            s : translateSeconds,
            ss : translate,
            m : translateSingular,
            mm : translate,
            h : translateSingular,
            hh : translate,
            d : translateSingular,
            dd : translate,
            M : translateSingular,
            MM : translate,
            y : translateSingular,
            yy : translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}-oji/,
        ordinal : function (number) {
            return number + '-oji';
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return lt;

})));


/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var units = {
        'ss': 'sekundes_sekundēm_sekunde_sekundes'.split('_'),
        'm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),
        'mm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),
        'h': 'stundas_stundām_stunda_stundas'.split('_'),
        'hh': 'stundas_stundām_stunda_stundas'.split('_'),
        'd': 'dienas_dienām_diena_dienas'.split('_'),
        'dd': 'dienas_dienām_diena_dienas'.split('_'),
        'M': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
        'MM': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
        'y': 'gada_gadiem_gads_gadi'.split('_'),
        'yy': 'gada_gadiem_gads_gadi'.split('_')
    };
    /**
     * @param withoutSuffix boolean true = a length of time; false = before/after a period of time.
     */
    function format(forms, number, withoutSuffix) {
        if (withoutSuffix) {
            // E.g. "21 minūte", "3 minūtes".
            return number % 10 === 1 && number % 100 !== 11 ? forms[2] : forms[3];
        } else {
            // E.g. "21 minūtes" as in "pēc 21 minūtes".
            // E.g. "3 minūtēm" as in "pēc 3 minūtēm".
            return number % 10 === 1 && number % 100 !== 11 ? forms[0] : forms[1];
        }
    }
    function relativeTimeWithPlural(number, withoutSuffix, key) {
        return number + ' ' + format(units[key], number, withoutSuffix);
    }
    function relativeTimeWithSingular(number, withoutSuffix, key) {
        return format(units[key], number, withoutSuffix);
    }
    function relativeSeconds(number, withoutSuffix) {
        return withoutSuffix ? 'dažas sekundes' : 'dažām sekundēm';
    }

    var lv = moment.defineLocale('lv', {
        months : 'janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris'.split('_'),
        monthsShort : 'jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec'.split('_'),
        weekdays : 'svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena'.split('_'),
        weekdaysShort : 'Sv_P_O_T_C_Pk_S'.split('_'),
        weekdaysMin : 'Sv_P_O_T_C_Pk_S'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY.',
            LL : 'YYYY. [gada] D. MMMM',
            LLL : 'YYYY. [gada] D. MMMM, HH:mm',
            LLLL : 'YYYY. [gada] D. MMMM, dddd, HH:mm'
        },
        calendar : {
            sameDay : '[Šodien pulksten] LT',
            nextDay : '[Rīt pulksten] LT',
            nextWeek : 'dddd [pulksten] LT',
            lastDay : '[Vakar pulksten] LT',
            lastWeek : '[Pagājušā] dddd [pulksten] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'pēc %s',
            past : 'pirms %s',
            s : relativeSeconds,
            ss : relativeTimeWithPlural,
            m : relativeTimeWithSingular,
            mm : relativeTimeWithPlural,
            h : relativeTimeWithSingular,
            hh : relativeTimeWithPlural,
            d : relativeTimeWithSingular,
            dd : relativeTimeWithPlural,
            M : relativeTimeWithSingular,
            MM : relativeTimeWithPlural,
            y : relativeTimeWithSingular,
            yy : relativeTimeWithPlural
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return lv;

})));


/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var translator = {
        words: { //Different grammatical cases
            ss: ['sekund', 'sekunda', 'sekundi'],
            m: ['jedan minut', 'jednog minuta'],
            mm: ['minut', 'minuta', 'minuta'],
            h: ['jedan sat', 'jednog sata'],
            hh: ['sat', 'sata', 'sati'],
            dd: ['dan', 'dana', 'dana'],
            MM: ['mjesec', 'mjeseca', 'mjeseci'],
            yy: ['godina', 'godine', 'godina']
        },
        correctGrammaticalCase: function (number, wordKey) {
            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
        },
        translate: function (number, withoutSuffix, key) {
            var wordKey = translator.words[key];
            if (key.length === 1) {
                return withoutSuffix ? wordKey[0] : wordKey[1];
            } else {
                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
            }
        }
    };

    var me = moment.defineLocale('me', {
        months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),
        monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),
        monthsParseExact : true,
        weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
        weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
        weekdaysParseExact : true,
        longDateFormat: {
            LT: 'H:mm',
            LTS : 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd, D. MMMM YYYY H:mm'
        },
        calendar: {
            sameDay: '[danas u] LT',
            nextDay: '[sjutra u] LT',

            nextWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[u] [nedjelju] [u] LT';
                    case 3:
                        return '[u] [srijedu] [u] LT';
                    case 6:
                        return '[u] [subotu] [u] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[u] dddd [u] LT';
                }
            },
            lastDay  : '[juče u] LT',
            lastWeek : function () {
                var lastWeekDays = [
                    '[prošle] [nedjelje] [u] LT',
                    '[prošlog] [ponedjeljka] [u] LT',
                    '[prošlog] [utorka] [u] LT',
                    '[prošle] [srijede] [u] LT',
                    '[prošlog] [četvrtka] [u] LT',
                    '[prošlog] [petka] [u] LT',
                    '[prošle] [subote] [u] LT'
                ];
                return lastWeekDays[this.day()];
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'za %s',
            past   : 'prije %s',
            s      : 'nekoliko sekundi',
            ss     : translator.translate,
            m      : translator.translate,
            mm     : translator.translate,
            h      : translator.translate,
            hh     : translator.translate,
            d      : 'dan',
            dd     : translator.translate,
            M      : 'mjesec',
            MM     : translator.translate,
            y      : 'godinu',
            yy     : translator.translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1st is the first week of the year.
        }
    });

    return me;

})));


/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var mi = moment.defineLocale('mi', {
        months: 'Kohi-tāte_Hui-tanguru_Poutū-te-rangi_Paenga-whāwhā_Haratua_Pipiri_Hōngoingoi_Here-turi-kōkā_Mahuru_Whiringa-ā-nuku_Whiringa-ā-rangi_Hakihea'.split('_'),
        monthsShort: 'Kohi_Hui_Pou_Pae_Hara_Pipi_Hōngoi_Here_Mahu_Whi-nu_Whi-ra_Haki'.split('_'),
        monthsRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
        monthsStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
        monthsShortRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
        monthsShortStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,2}/i,
        weekdays: 'Rātapu_Mane_Tūrei_Wenerei_Tāite_Paraire_Hātarei'.split('_'),
        weekdaysShort: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),
        weekdaysMin: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY [i] HH:mm',
            LLLL: 'dddd, D MMMM YYYY [i] HH:mm'
        },
        calendar: {
            sameDay: '[i teie mahana, i] LT',
            nextDay: '[apopo i] LT',
            nextWeek: 'dddd [i] LT',
            lastDay: '[inanahi i] LT',
            lastWeek: 'dddd [whakamutunga i] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'i roto i %s',
            past: '%s i mua',
            s: 'te hēkona ruarua',
            ss: '%d hēkona',
            m: 'he meneti',
            mm: '%d meneti',
            h: 'te haora',
            hh: '%d haora',
            d: 'he ra',
            dd: '%d ra',
            M: 'he marama',
            MM: '%d marama',
            y: 'he tau',
            yy: '%d tau'
        },
        dayOfMonthOrdinalParse: /\d{1,2}º/,
        ordinal: '%dº',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return mi;

})));


/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var mk = moment.defineLocale('mk', {
        months : 'јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември'.split('_'),
        monthsShort : 'јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек'.split('_'),
        weekdays : 'недела_понеделник_вторник_среда_четврток_петок_сабота'.split('_'),
        weekdaysShort : 'нед_пон_вто_сре_чет_пет_саб'.split('_'),
        weekdaysMin : 'нe_пo_вт_ср_че_пе_сa'.split('_'),
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'D.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY H:mm',
            LLLL : 'dddd, D MMMM YYYY H:mm'
        },
        calendar : {
            sameDay : '[Денес во] LT',
            nextDay : '[Утре во] LT',
            nextWeek : '[Во] dddd [во] LT',
            lastDay : '[Вчера во] LT',
            lastWeek : function () {
                switch (this.day()) {
                    case 0:
                    case 3:
                    case 6:
                        return '[Изминатата] dddd [во] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[Изминатиот] dddd [во] LT';
                }
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'после %s',
            past : 'пред %s',
            s : 'неколку секунди',
            ss : '%d секунди',
            m : 'минута',
            mm : '%d минути',
            h : 'час',
            hh : '%d часа',
            d : 'ден',
            dd : '%d дена',
            M : 'месец',
            MM : '%d месеци',
            y : 'година',
            yy : '%d години'
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
        ordinal : function (number) {
            var lastDigit = number % 10,
                last2Digits = number % 100;
            if (number === 0) {
                return number + '-ев';
            } else if (last2Digits === 0) {
                return number + '-ен';
            } else if (last2Digits > 10 && last2Digits < 20) {
                return number + '-ти';
            } else if (lastDigit === 1) {
                return number + '-ви';
            } else if (lastDigit === 2) {
                return number + '-ри';
            } else if (lastDigit === 7 || lastDigit === 8) {
                return number + '-ми';
            } else {
                return number + '-ти';
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1st is the first week of the year.
        }
    });

    return mk;

})));


/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var ml = moment.defineLocale('ml', {
        months : 'ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ'.split('_'),
        monthsShort : 'ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.'.split('_'),
        monthsParseExact : true,
        weekdays : 'ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച'.split('_'),
        weekdaysShort : 'ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി'.split('_'),
        weekdaysMin : 'ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ'.split('_'),
        longDateFormat : {
            LT : 'A h:mm -നു',
            LTS : 'A h:mm:ss -നു',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, A h:mm -നു',
            LLLL : 'dddd, D MMMM YYYY, A h:mm -നു'
        },
        calendar : {
            sameDay : '[ഇന്ന്] LT',
            nextDay : '[നാളെ] LT',
            nextWeek : 'dddd, LT',
            lastDay : '[ഇന്നലെ] LT',
            lastWeek : '[കഴിഞ്ഞ] dddd, LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s കഴിഞ്ഞ്',
            past : '%s മുൻപ്',
            s : 'അൽപ നിമിഷങ്ങൾ',
            ss : '%d സെക്കൻഡ്',
            m : 'ഒരു മിനിറ്റ്',
            mm : '%d മിനിറ്റ്',
            h : 'ഒരു മണിക്കൂർ',
            hh : '%d മണിക്കൂർ',
            d : 'ഒരു ദിവസം',
            dd : '%d ദിവസം',
            M : 'ഒരു മാസം',
            MM : '%d മാസം',
            y : 'ഒരു വർഷം',
            yy : '%d വർഷം'
        },
        meridiemParse: /രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if ((meridiem === 'രാത്രി' && hour >= 4) ||
                    meridiem === 'ഉച്ച കഴിഞ്ഞ്' ||
                    meridiem === 'വൈകുന്നേരം') {
                return hour + 12;
            } else {
                return hour;
            }
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'രാത്രി';
            } else if (hour < 12) {
                return 'രാവിലെ';
            } else if (hour < 17) {
                return 'ഉച്ച കഴിഞ്ഞ്';
            } else if (hour < 20) {
                return 'വൈകുന്നേരം';
            } else {
                return 'രാത്രി';
            }
        }
    });

    return ml;

})));


/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function translate(number, withoutSuffix, key, isFuture) {
        switch (key) {
            case 's':
                return withoutSuffix ? 'хэдхэн секунд' : 'хэдхэн секундын';
            case 'ss':
                return number + (withoutSuffix ? ' секунд' : ' секундын');
            case 'm':
            case 'mm':
                return number + (withoutSuffix ? ' минут' : ' минутын');
            case 'h':
            case 'hh':
                return number + (withoutSuffix ? ' цаг' : ' цагийн');
            case 'd':
            case 'dd':
                return number + (withoutSuffix ? ' өдөр' : ' өдрийн');
            case 'M':
            case 'MM':
                return number + (withoutSuffix ? ' сар' : ' сарын');
            case 'y':
            case 'yy':
                return number + (withoutSuffix ? ' жил' : ' жилийн');
            default:
                return number;
        }
    }

    var mn = moment.defineLocale('mn', {
        months : 'Нэгдүгээр сар_Хоёрдугаар сар_Гуравдугаар сар_Дөрөвдүгээр сар_Тавдугаар сар_Зургадугаар сар_Долдугаар сар_Наймдугаар сар_Есдүгээр сар_Аравдугаар сар_Арван нэгдүгээр сар_Арван хоёрдугаар сар'.split('_'),
        monthsShort : '1 сар_2 сар_3 сар_4 сар_5 сар_6 сар_7 сар_8 сар_9 сар_10 сар_11 сар_12 сар'.split('_'),
        monthsParseExact : true,
        weekdays : 'Ням_Даваа_Мягмар_Лхагва_Пүрэв_Баасан_Бямба'.split('_'),
        weekdaysShort : 'Ням_Дав_Мяг_Лха_Пүр_Баа_Бям'.split('_'),
        weekdaysMin : 'Ня_Да_Мя_Лх_Пү_Ба_Бя'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY-MM-DD',
            LL : 'YYYY оны MMMMын D',
            LLL : 'YYYY оны MMMMын D HH:mm',
            LLLL : 'dddd, YYYY оны MMMMын D HH:mm'
        },
        meridiemParse: /ҮӨ|ҮХ/i,
        isPM : function (input) {
            return input === 'ҮХ';
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ҮӨ';
            } else {
                return 'ҮХ';
            }
        },
        calendar : {
            sameDay : '[Өнөөдөр] LT',
            nextDay : '[Маргааш] LT',
            nextWeek : '[Ирэх] dddd LT',
            lastDay : '[Өчигдөр] LT',
            lastWeek : '[Өнгөрсөн] dddd LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s дараа',
            past : '%s өмнө',
            s : translate,
            ss : translate,
            m : translate,
            mm : translate,
            h : translate,
            hh : translate,
            d : translate,
            dd : translate,
            M : translate,
            MM : translate,
            y : translate,
            yy : translate
        },
        dayOfMonthOrdinalParse: /\d{1,2} өдөр/,
        ordinal : function (number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                    return number + ' өдөр';
                default:
                    return number;
            }
        }
    });

    return mn;

})));


/***/ }),
/* 171 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '१',
        '2': '२',
        '3': '३',
        '4': '४',
        '5': '५',
        '6': '६',
        '7': '७',
        '8': '८',
        '9': '९',
        '0': '०'
    },
    numberMap = {
        '१': '1',
        '२': '2',
        '३': '3',
        '४': '4',
        '५': '5',
        '६': '6',
        '७': '7',
        '८': '8',
        '९': '9',
        '०': '0'
    };

    function relativeTimeMr(number, withoutSuffix, string, isFuture)
    {
        var output = '';
        if (withoutSuffix) {
            switch (string) {
                case 's': output = 'काही सेकंद'; break;
                case 'ss': output = '%d सेकंद'; break;
                case 'm': output = 'एक मिनिट'; break;
                case 'mm': output = '%d मिनिटे'; break;
                case 'h': output = 'एक तास'; break;
                case 'hh': output = '%d तास'; break;
                case 'd': output = 'एक दिवस'; break;
                case 'dd': output = '%d दिवस'; break;
                case 'M': output = 'एक महिना'; break;
                case 'MM': output = '%d महिने'; break;
                case 'y': output = 'एक वर्ष'; break;
                case 'yy': output = '%d वर्षे'; break;
            }
        }
        else {
            switch (string) {
                case 's': output = 'काही सेकंदां'; break;
                case 'ss': output = '%d सेकंदां'; break;
                case 'm': output = 'एका मिनिटा'; break;
                case 'mm': output = '%d मिनिटां'; break;
                case 'h': output = 'एका तासा'; break;
                case 'hh': output = '%d तासां'; break;
                case 'd': output = 'एका दिवसा'; break;
                case 'dd': output = '%d दिवसां'; break;
                case 'M': output = 'एका महिन्या'; break;
                case 'MM': output = '%d महिन्यां'; break;
                case 'y': output = 'एका वर्षा'; break;
                case 'yy': output = '%d वर्षां'; break;
            }
        }
        return output.replace(/%d/i, number);
    }

    var mr = moment.defineLocale('mr', {
        months : 'जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split('_'),
        monthsShort: 'जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split('_'),
        monthsParseExact : true,
        weekdays : 'रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
        weekdaysShort : 'रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि'.split('_'),
        weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),
        longDateFormat : {
            LT : 'A h:mm वाजता',
            LTS : 'A h:mm:ss वाजता',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, A h:mm वाजता',
            LLLL : 'dddd, D MMMM YYYY, A h:mm वाजता'
        },
        calendar : {
            sameDay : '[आज] LT',
            nextDay : '[उद्या] LT',
            nextWeek : 'dddd, LT',
            lastDay : '[काल] LT',
            lastWeek: '[मागील] dddd, LT',
            sameElse : 'L'
        },
        relativeTime : {
            future: '%sमध्ये',
            past: '%sपूर्वी',
            s: relativeTimeMr,
            ss: relativeTimeMr,
            m: relativeTimeMr,
            mm: relativeTimeMr,
            h: relativeTimeMr,
            hh: relativeTimeMr,
            d: relativeTimeMr,
            dd: relativeTimeMr,
            M: relativeTimeMr,
            MM: relativeTimeMr,
            y: relativeTimeMr,
            yy: relativeTimeMr
        },
        preparse: function (string) {
            return string.replace(/[१२३४५६७८९०]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        meridiemParse: /रात्री|सकाळी|दुपारी|सायंकाळी/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'रात्री') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'सकाळी') {
                return hour;
            } else if (meridiem === 'दुपारी') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'सायंकाळी') {
                return hour + 12;
            }
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
                return 'रात्री';
            } else if (hour < 10) {
                return 'सकाळी';
            } else if (hour < 17) {
                return 'दुपारी';
            } else if (hour < 20) {
                return 'सायंकाळी';
            } else {
                return 'रात्री';
            }
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 1st is the first week of the year.
        }
    });

    return mr;

})));


/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var ms = moment.defineLocale('ms', {
        months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),
        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
        weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
        weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
        weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
        longDateFormat : {
            LT : 'HH.mm',
            LTS : 'HH.mm.ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY [pukul] HH.mm',
            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
        },
        meridiemParse: /pagi|tengahari|petang|malam/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'pagi') {
                return hour;
            } else if (meridiem === 'tengahari') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'petang' || meridiem === 'malam') {
                return hour + 12;
            }
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours < 11) {
                return 'pagi';
            } else if (hours < 15) {
                return 'tengahari';
            } else if (hours < 19) {
                return 'petang';
            } else {
                return 'malam';
            }
        },
        calendar : {
            sameDay : '[Hari ini pukul] LT',
            nextDay : '[Esok pukul] LT',
            nextWeek : 'dddd [pukul] LT',
            lastDay : '[Kelmarin pukul] LT',
            lastWeek : 'dddd [lepas pukul] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'dalam %s',
            past : '%s yang lepas',
            s : 'beberapa saat',
            ss : '%d saat',
            m : 'seminit',
            mm : '%d minit',
            h : 'sejam',
            hh : '%d jam',
            d : 'sehari',
            dd : '%d hari',
            M : 'sebulan',
            MM : '%d bulan',
            y : 'setahun',
            yy : '%d tahun'
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1st is the first week of the year.
        }
    });

    return ms;

})));


/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var msMy = moment.defineLocale('ms-my', {
        months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),
        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
        weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
        weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
        weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
        longDateFormat : {
            LT : 'HH.mm',
            LTS : 'HH.mm.ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY [pukul] HH.mm',
            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
        },
        meridiemParse: /pagi|tengahari|petang|malam/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'pagi') {
                return hour;
            } else if (meridiem === 'tengahari') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'petang' || meridiem === 'malam') {
                return hour + 12;
            }
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours < 11) {
                return 'pagi';
            } else if (hours < 15) {
                return 'tengahari';
            } else if (hours < 19) {
                return 'petang';
            } else {
                return 'malam';
            }
        },
        calendar : {
            sameDay : '[Hari ini pukul] LT',
            nextDay : '[Esok pukul] LT',
            nextWeek : 'dddd [pukul] LT',
            lastDay : '[Kelmarin pukul] LT',
            lastWeek : 'dddd [lepas pukul] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'dalam %s',
            past : '%s yang lepas',
            s : 'beberapa saat',
            ss : '%d saat',
            m : 'seminit',
            mm : '%d minit',
            h : 'sejam',
            hh : '%d jam',
            d : 'sehari',
            dd : '%d hari',
            M : 'sebulan',
            MM : '%d bulan',
            y : 'setahun',
            yy : '%d tahun'
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1st is the first week of the year.
        }
    });

    return msMy;

})));


/***/ }),
/* 174 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var mt = moment.defineLocale('mt', {
        months : 'Jannar_Frar_Marzu_April_Mejju_Ġunju_Lulju_Awwissu_Settembru_Ottubru_Novembru_Diċembru'.split('_'),
        monthsShort : 'Jan_Fra_Mar_Apr_Mej_Ġun_Lul_Aww_Set_Ott_Nov_Diċ'.split('_'),
        weekdays : 'Il-Ħadd_It-Tnejn_It-Tlieta_L-Erbgħa_Il-Ħamis_Il-Ġimgħa_Is-Sibt'.split('_'),
        weekdaysShort : 'Ħad_Tne_Tli_Erb_Ħam_Ġim_Sib'.split('_'),
        weekdaysMin : 'Ħa_Tn_Tl_Er_Ħa_Ġi_Si'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Illum fil-]LT',
            nextDay : '[Għada fil-]LT',
            nextWeek : 'dddd [fil-]LT',
            lastDay : '[Il-bieraħ fil-]LT',
            lastWeek : 'dddd [li għadda] [fil-]LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'f’ %s',
            past : '%s ilu',
            s : 'ftit sekondi',
            ss : '%d sekondi',
            m : 'minuta',
            mm : '%d minuti',
            h : 'siegħa',
            hh : '%d siegħat',
            d : 'ġurnata',
            dd : '%d ġranet',
            M : 'xahar',
            MM : '%d xhur',
            y : 'sena',
            yy : '%d sni'
        },
        dayOfMonthOrdinalParse : /\d{1,2}º/,
        ordinal: '%dº',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return mt;

})));


/***/ }),
/* 175 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '၁',
        '2': '၂',
        '3': '၃',
        '4': '၄',
        '5': '၅',
        '6': '၆',
        '7': '၇',
        '8': '၈',
        '9': '၉',
        '0': '၀'
    }, numberMap = {
        '၁': '1',
        '၂': '2',
        '၃': '3',
        '၄': '4',
        '၅': '5',
        '၆': '6',
        '၇': '7',
        '၈': '8',
        '၉': '9',
        '၀': '0'
    };

    var my = moment.defineLocale('my', {
        months: 'ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ'.split('_'),
        monthsShort: 'ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ'.split('_'),
        weekdays: 'တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ'.split('_'),
        weekdaysShort: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),
        weekdaysMin: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),

        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[ယနေ.] LT [မှာ]',
            nextDay: '[မနက်ဖြန်] LT [မှာ]',
            nextWeek: 'dddd LT [မှာ]',
            lastDay: '[မနေ.က] LT [မှာ]',
            lastWeek: '[ပြီးခဲ့သော] dddd LT [မှာ]',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'လာမည့် %s မှာ',
            past: 'လွန်ခဲ့သော %s က',
            s: 'စက္ကန်.အနည်းငယ်',
            ss : '%d စက္ကန့်',
            m: 'တစ်မိနစ်',
            mm: '%d မိနစ်',
            h: 'တစ်နာရီ',
            hh: '%d နာရီ',
            d: 'တစ်ရက်',
            dd: '%d ရက်',
            M: 'တစ်လ',
            MM: '%d လ',
            y: 'တစ်နှစ်',
            yy: '%d နှစ်'
        },
        preparse: function (string) {
            return string.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 1st is the first week of the year.
        }
    });

    return my;

})));


/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var nb = moment.defineLocale('nb', {
        months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
        monthsShort : 'jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.'.split('_'),
        monthsParseExact : true,
        weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
        weekdaysShort : 'sø._ma._ti._on._to._fr._lø.'.split('_'),
        weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY [kl.] HH:mm',
            LLLL : 'dddd D. MMMM YYYY [kl.] HH:mm'
        },
        calendar : {
            sameDay: '[i dag kl.] LT',
            nextDay: '[i morgen kl.] LT',
            nextWeek: 'dddd [kl.] LT',
            lastDay: '[i går kl.] LT',
            lastWeek: '[forrige] dddd [kl.] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'om %s',
            past : '%s siden',
            s : 'noen sekunder',
            ss : '%d sekunder',
            m : 'ett minutt',
            mm : '%d minutter',
            h : 'en time',
            hh : '%d timer',
            d : 'en dag',
            dd : '%d dager',
            M : 'en måned',
            MM : '%d måneder',
            y : 'ett år',
            yy : '%d år'
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return nb;

})));


/***/ }),
/* 177 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '१',
        '2': '२',
        '3': '३',
        '4': '४',
        '5': '५',
        '6': '६',
        '7': '७',
        '8': '८',
        '9': '९',
        '0': '०'
    },
    numberMap = {
        '१': '1',
        '२': '2',
        '३': '3',
        '४': '4',
        '५': '5',
        '६': '6',
        '७': '7',
        '८': '8',
        '९': '9',
        '०': '0'
    };

    var ne = moment.defineLocale('ne', {
        months : 'जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर'.split('_'),
        monthsShort : 'जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.'.split('_'),
        monthsParseExact : true,
        weekdays : 'आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार'.split('_'),
        weekdaysShort : 'आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.'.split('_'),
        weekdaysMin : 'आ._सो._मं._बु._बि._शु._श.'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'Aको h:mm बजे',
            LTS : 'Aको h:mm:ss बजे',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, Aको h:mm बजे',
            LLLL : 'dddd, D MMMM YYYY, Aको h:mm बजे'
        },
        preparse: function (string) {
            return string.replace(/[१२३४५६७८९०]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        meridiemParse: /राति|बिहान|दिउँसो|साँझ/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'राति') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'बिहान') {
                return hour;
            } else if (meridiem === 'दिउँसो') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'साँझ') {
                return hour + 12;
            }
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 3) {
                return 'राति';
            } else if (hour < 12) {
                return 'बिहान';
            } else if (hour < 16) {
                return 'दिउँसो';
            } else if (hour < 20) {
                return 'साँझ';
            } else {
                return 'राति';
            }
        },
        calendar : {
            sameDay : '[आज] LT',
            nextDay : '[भोलि] LT',
            nextWeek : '[आउँदो] dddd[,] LT',
            lastDay : '[हिजो] LT',
            lastWeek : '[गएको] dddd[,] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%sमा',
            past : '%s अगाडि',
            s : 'केही क्षण',
            ss : '%d सेकेण्ड',
            m : 'एक मिनेट',
            mm : '%d मिनेट',
            h : 'एक घण्टा',
            hh : '%d घण्टा',
            d : 'एक दिन',
            dd : '%d दिन',
            M : 'एक महिना',
            MM : '%d महिना',
            y : 'एक बर्ष',
            yy : '%d बर्ष'
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 1st is the first week of the year.
        }
    });

    return ne;

})));


/***/ }),
/* 178 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),
        monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');

    var monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];
    var monthsRegex = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;

    var nl = moment.defineLocale('nl', {
        months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),
        monthsShort : function (m, format) {
            if (!m) {
                return monthsShortWithDots;
            } else if (/-MMM-/.test(format)) {
                return monthsShortWithoutDots[m.month()];
            } else {
                return monthsShortWithDots[m.month()];
            }
        },

        monthsRegex: monthsRegex,
        monthsShortRegex: monthsRegex,
        monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,
        monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,

        monthsParse : monthsParse,
        longMonthsParse : monthsParse,
        shortMonthsParse : monthsParse,

        weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),
        weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),
        weekdaysMin : 'zo_ma_di_wo_do_vr_za'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD-MM-YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[vandaag om] LT',
            nextDay: '[morgen om] LT',
            nextWeek: 'dddd [om] LT',
            lastDay: '[gisteren om] LT',
            lastWeek: '[afgelopen] dddd [om] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'over %s',
            past : '%s geleden',
            s : 'een paar seconden',
            ss : '%d seconden',
            m : 'één minuut',
            mm : '%d minuten',
            h : 'één uur',
            hh : '%d uur',
            d : 'één dag',
            dd : '%d dagen',
            M : 'één maand',
            MM : '%d maanden',
            y : 'één jaar',
            yy : '%d jaar'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
        ordinal : function (number) {
            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return nl;

})));


/***/ }),
/* 179 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),
        monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');

    var monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];
    var monthsRegex = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;

    var nlBe = moment.defineLocale('nl-be', {
        months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),
        monthsShort : function (m, format) {
            if (!m) {
                return monthsShortWithDots;
            } else if (/-MMM-/.test(format)) {
                return monthsShortWithoutDots[m.month()];
            } else {
                return monthsShortWithDots[m.month()];
            }
        },

        monthsRegex: monthsRegex,
        monthsShortRegex: monthsRegex,
        monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,
        monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,

        monthsParse : monthsParse,
        longMonthsParse : monthsParse,
        shortMonthsParse : monthsParse,

        weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),
        weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),
        weekdaysMin : 'zo_ma_di_wo_do_vr_za'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[vandaag om] LT',
            nextDay: '[morgen om] LT',
            nextWeek: 'dddd [om] LT',
            lastDay: '[gisteren om] LT',
            lastWeek: '[afgelopen] dddd [om] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'over %s',
            past : '%s geleden',
            s : 'een paar seconden',
            ss : '%d seconden',
            m : 'één minuut',
            mm : '%d minuten',
            h : 'één uur',
            hh : '%d uur',
            d : 'één dag',
            dd : '%d dagen',
            M : 'één maand',
            MM : '%d maanden',
            y : 'één jaar',
            yy : '%d jaar'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
        ordinal : function (number) {
            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return nlBe;

})));


/***/ }),
/* 180 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var nn = moment.defineLocale('nn', {
        months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
        monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
        weekdays : 'sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag'.split('_'),
        weekdaysShort : 'sun_mån_tys_ons_tor_fre_lau'.split('_'),
        weekdaysMin : 'su_må_ty_on_to_fr_lø'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY [kl.] H:mm',
            LLLL : 'dddd D. MMMM YYYY [kl.] HH:mm'
        },
        calendar : {
            sameDay: '[I dag klokka] LT',
            nextDay: '[I morgon klokka] LT',
            nextWeek: 'dddd [klokka] LT',
            lastDay: '[I går klokka] LT',
            lastWeek: '[Føregåande] dddd [klokka] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'om %s',
            past : '%s sidan',
            s : 'nokre sekund',
            ss : '%d sekund',
            m : 'eit minutt',
            mm : '%d minutt',
            h : 'ein time',
            hh : '%d timar',
            d : 'ein dag',
            dd : '%d dagar',
            M : 'ein månad',
            MM : '%d månader',
            y : 'eit år',
            yy : '%d år'
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return nn;

})));


/***/ }),
/* 181 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '੧',
        '2': '੨',
        '3': '੩',
        '4': '੪',
        '5': '੫',
        '6': '੬',
        '7': '੭',
        '8': '੮',
        '9': '੯',
        '0': '੦'
    },
    numberMap = {
        '੧': '1',
        '੨': '2',
        '੩': '3',
        '੪': '4',
        '੫': '5',
        '੬': '6',
        '੭': '7',
        '੮': '8',
        '੯': '9',
        '੦': '0'
    };

    var paIn = moment.defineLocale('pa-in', {
        // There are months name as per Nanakshahi Calender but they are not used as rigidly in modern Punjabi.
        months : 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),
        monthsShort : 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),
        weekdays : 'ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ'.split('_'),
        weekdaysShort : 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
        weekdaysMin : 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
        longDateFormat : {
            LT : 'A h:mm ਵਜੇ',
            LTS : 'A h:mm:ss ਵਜੇ',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, A h:mm ਵਜੇ',
            LLLL : 'dddd, D MMMM YYYY, A h:mm ਵਜੇ'
        },
        calendar : {
            sameDay : '[ਅਜ] LT',
            nextDay : '[ਕਲ] LT',
            nextWeek : '[ਅਗਲਾ] dddd, LT',
            lastDay : '[ਕਲ] LT',
            lastWeek : '[ਪਿਛਲੇ] dddd, LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s ਵਿੱਚ',
            past : '%s ਪਿਛਲੇ',
            s : 'ਕੁਝ ਸਕਿੰਟ',
            ss : '%d ਸਕਿੰਟ',
            m : 'ਇਕ ਮਿੰਟ',
            mm : '%d ਮਿੰਟ',
            h : 'ਇੱਕ ਘੰਟਾ',
            hh : '%d ਘੰਟੇ',
            d : 'ਇੱਕ ਦਿਨ',
            dd : '%d ਦਿਨ',
            M : 'ਇੱਕ ਮਹੀਨਾ',
            MM : '%d ਮਹੀਨੇ',
            y : 'ਇੱਕ ਸਾਲ',
            yy : '%d ਸਾਲ'
        },
        preparse: function (string) {
            return string.replace(/[੧੨੩੪੫੬੭੮੯੦]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        // Punjabi notation for meridiems are quite fuzzy in practice. While there exists
        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Punjabi.
        meridiemParse: /ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'ਰਾਤ') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'ਸਵੇਰ') {
                return hour;
            } else if (meridiem === 'ਦੁਪਹਿਰ') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'ਸ਼ਾਮ') {
                return hour + 12;
            }
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'ਰਾਤ';
            } else if (hour < 10) {
                return 'ਸਵੇਰ';
            } else if (hour < 17) {
                return 'ਦੁਪਹਿਰ';
            } else if (hour < 20) {
                return 'ਸ਼ਾਮ';
            } else {
                return 'ਰਾਤ';
            }
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 1st is the first week of the year.
        }
    });

    return paIn;

})));


/***/ }),
/* 182 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_'),
        monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_');
    function plural(n) {
        return (n % 10 < 5) && (n % 10 > 1) && ((~~(n / 10) % 10) !== 1);
    }
    function translate(number, withoutSuffix, key) {
        var result = number + ' ';
        switch (key) {
            case 'ss':
                return result + (plural(number) ? 'sekundy' : 'sekund');
            case 'm':
                return withoutSuffix ? 'minuta' : 'minutę';
            case 'mm':
                return result + (plural(number) ? 'minuty' : 'minut');
            case 'h':
                return withoutSuffix  ? 'godzina'  : 'godzinę';
            case 'hh':
                return result + (plural(number) ? 'godziny' : 'godzin');
            case 'MM':
                return result + (plural(number) ? 'miesiące' : 'miesięcy');
            case 'yy':
                return result + (plural(number) ? 'lata' : 'lat');
        }
    }

    var pl = moment.defineLocale('pl', {
        months : function (momentToFormat, format) {
            if (!momentToFormat) {
                return monthsNominative;
            } else if (format === '') {
                // Hack: if format empty we know this is used to generate
                // RegExp by moment. Give then back both valid forms of months
                // in RegExp ready format.
                return '(' + monthsSubjective[momentToFormat.month()] + '|' + monthsNominative[momentToFormat.month()] + ')';
            } else if (/D MMMM/.test(format)) {
                return monthsSubjective[momentToFormat.month()];
            } else {
                return monthsNominative[momentToFormat.month()];
            }
        },
        monthsShort : 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),
        weekdays : 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),
        weekdaysShort : 'ndz_pon_wt_śr_czw_pt_sob'.split('_'),
        weekdaysMin : 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[Dziś o] LT',
            nextDay: '[Jutro o] LT',
            nextWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[W niedzielę o] LT';

                    case 2:
                        return '[We wtorek o] LT';

                    case 3:
                        return '[W środę o] LT';

                    case 6:
                        return '[W sobotę o] LT';

                    default:
                        return '[W] dddd [o] LT';
                }
            },
            lastDay: '[Wczoraj o] LT',
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[W zeszłą niedzielę o] LT';
                    case 3:
                        return '[W zeszłą środę o] LT';
                    case 6:
                        return '[W zeszłą sobotę o] LT';
                    default:
                        return '[W zeszły] dddd [o] LT';
                }
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : 'za %s',
            past : '%s temu',
            s : 'kilka sekund',
            ss : translate,
            m : translate,
            mm : translate,
            h : translate,
            hh : translate,
            d : '1 dzień',
            dd : '%d dni',
            M : 'miesiąc',
            MM : translate,
            y : 'rok',
            yy : translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return pl;

})));


/***/ }),
/* 183 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var pt = moment.defineLocale('pt', {
        months : 'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split('_'),
        monthsShort : 'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'),
        weekdays : 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),
        weekdaysShort : 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
        weekdaysMin : 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D [de] MMMM [de] YYYY',
            LLL : 'D [de] MMMM [de] YYYY HH:mm',
            LLLL : 'dddd, D [de] MMMM [de] YYYY HH:mm'
        },
        calendar : {
            sameDay: '[Hoje às] LT',
            nextDay: '[Amanhã às] LT',
            nextWeek: 'dddd [às] LT',
            lastDay: '[Ontem às] LT',
            lastWeek: function () {
                return (this.day() === 0 || this.day() === 6) ?
                    '[Último] dddd [às] LT' : // Saturday + Sunday
                    '[Última] dddd [às] LT'; // Monday - Friday
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : 'em %s',
            past : 'há %s',
            s : 'segundos',
            ss : '%d segundos',
            m : 'um minuto',
            mm : '%d minutos',
            h : 'uma hora',
            hh : '%d horas',
            d : 'um dia',
            dd : '%d dias',
            M : 'um mês',
            MM : '%d meses',
            y : 'um ano',
            yy : '%d anos'
        },
        dayOfMonthOrdinalParse: /\d{1,2}º/,
        ordinal : '%dº',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return pt;

})));


/***/ }),
/* 184 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var ptBr = moment.defineLocale('pt-br', {
        months : 'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split('_'),
        monthsShort : 'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'),
        weekdays : 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),
        weekdaysShort : 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
        weekdaysMin : 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D [de] MMMM [de] YYYY',
            LLL : 'D [de] MMMM [de] YYYY [às] HH:mm',
            LLLL : 'dddd, D [de] MMMM [de] YYYY [às] HH:mm'
        },
        calendar : {
            sameDay: '[Hoje às] LT',
            nextDay: '[Amanhã às] LT',
            nextWeek: 'dddd [às] LT',
            lastDay: '[Ontem às] LT',
            lastWeek: function () {
                return (this.day() === 0 || this.day() === 6) ?
                    '[Último] dddd [às] LT' : // Saturday + Sunday
                    '[Última] dddd [às] LT'; // Monday - Friday
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : 'em %s',
            past : 'há %s',
            s : 'poucos segundos',
            ss : '%d segundos',
            m : 'um minuto',
            mm : '%d minutos',
            h : 'uma hora',
            hh : '%d horas',
            d : 'um dia',
            dd : '%d dias',
            M : 'um mês',
            MM : '%d meses',
            y : 'um ano',
            yy : '%d anos'
        },
        dayOfMonthOrdinalParse: /\d{1,2}º/,
        ordinal : '%dº'
    });

    return ptBr;

})));


/***/ }),
/* 185 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function relativeTimeWithPlural(number, withoutSuffix, key) {
        var format = {
                'ss': 'secunde',
                'mm': 'minute',
                'hh': 'ore',
                'dd': 'zile',
                'MM': 'luni',
                'yy': 'ani'
            },
            separator = ' ';
        if (number % 100 >= 20 || (number >= 100 && number % 100 === 0)) {
            separator = ' de ';
        }
        return number + separator + format[key];
    }

    var ro = moment.defineLocale('ro', {
        months : 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split('_'),
        monthsShort : 'ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split('_'),
        monthsParseExact: true,
        weekdays : 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),
        weekdaysShort : 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),
        weekdaysMin : 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY H:mm',
            LLLL : 'dddd, D MMMM YYYY H:mm'
        },
        calendar : {
            sameDay: '[azi la] LT',
            nextDay: '[mâine la] LT',
            nextWeek: 'dddd [la] LT',
            lastDay: '[ieri la] LT',
            lastWeek: '[fosta] dddd [la] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'peste %s',
            past : '%s în urmă',
            s : 'câteva secunde',
            ss : relativeTimeWithPlural,
            m : 'un minut',
            mm : relativeTimeWithPlural,
            h : 'o oră',
            hh : relativeTimeWithPlural,
            d : 'o zi',
            dd : relativeTimeWithPlural,
            M : 'o lună',
            MM : relativeTimeWithPlural,
            y : 'un an',
            yy : relativeTimeWithPlural
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1st is the first week of the year.
        }
    });

    return ro;

})));


/***/ }),
/* 186 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function plural(word, num) {
        var forms = word.split('_');
        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
    }
    function relativeTimeWithPlural(number, withoutSuffix, key) {
        var format = {
            'ss': withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',
            'mm': withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',
            'hh': 'час_часа_часов',
            'dd': 'день_дня_дней',
            'MM': 'месяц_месяца_месяцев',
            'yy': 'год_года_лет'
        };
        if (key === 'm') {
            return withoutSuffix ? 'минута' : 'минуту';
        }
        else {
            return number + ' ' + plural(format[key], +number);
        }
    }
    var monthsParse = [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[йя]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i];

    // http://new.gramota.ru/spravka/rules/139-prop : § 103
    // Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637
    // CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753
    var ru = moment.defineLocale('ru', {
        months : {
            format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_'),
            standalone: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_')
        },
        monthsShort : {
            // по CLDR именно "июл." и "июн.", но какой смысл менять букву на точку ?
            format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split('_'),
            standalone: 'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split('_')
        },
        weekdays : {
            standalone: 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),
            format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_'),
            isFormat: /\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\] ?dddd/
        },
        weekdaysShort : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
        weekdaysMin : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
        monthsParse : monthsParse,
        longMonthsParse : monthsParse,
        shortMonthsParse : monthsParse,

        // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки
        monthsRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,

        // копия предыдущего
        monthsShortRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,

        // полные названия с падежами
        monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,

        // Выражение, которое соотвествует только сокращённым формам
        monthsShortStrictRegex: /^(янв\.|февр?\.|мар[т.]|апр\.|ма[яй]|июн[ья.]|июл[ья.]|авг\.|сент?\.|окт\.|нояб?\.|дек\.)/i,
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY г.',
            LLL : 'D MMMM YYYY г., H:mm',
            LLLL : 'dddd, D MMMM YYYY г., H:mm'
        },
        calendar : {
            sameDay: '[Сегодня, в] LT',
            nextDay: '[Завтра, в] LT',
            lastDay: '[Вчера, в] LT',
            nextWeek: function (now) {
                if (now.week() !== this.week()) {
                    switch (this.day()) {
                        case 0:
                            return '[В следующее] dddd, [в] LT';
                        case 1:
                        case 2:
                        case 4:
                            return '[В следующий] dddd, [в] LT';
                        case 3:
                        case 5:
                        case 6:
                            return '[В следующую] dddd, [в] LT';
                    }
                } else {
                    if (this.day() === 2) {
                        return '[Во] dddd, [в] LT';
                    } else {
                        return '[В] dddd, [в] LT';
                    }
                }
            },
            lastWeek: function (now) {
                if (now.week() !== this.week()) {
                    switch (this.day()) {
                        case 0:
                            return '[В прошлое] dddd, [в] LT';
                        case 1:
                        case 2:
                        case 4:
                            return '[В прошлый] dddd, [в] LT';
                        case 3:
                        case 5:
                        case 6:
                            return '[В прошлую] dddd, [в] LT';
                    }
                } else {
                    if (this.day() === 2) {
                        return '[Во] dddd, [в] LT';
                    } else {
                        return '[В] dddd, [в] LT';
                    }
                }
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : 'через %s',
            past : '%s назад',
            s : 'несколько секунд',
            ss : relativeTimeWithPlural,
            m : relativeTimeWithPlural,
            mm : relativeTimeWithPlural,
            h : 'час',
            hh : relativeTimeWithPlural,
            d : 'день',
            dd : relativeTimeWithPlural,
            M : 'месяц',
            MM : relativeTimeWithPlural,
            y : 'год',
            yy : relativeTimeWithPlural
        },
        meridiemParse: /ночи|утра|дня|вечера/i,
        isPM : function (input) {
            return /^(дня|вечера)$/.test(input);
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'ночи';
            } else if (hour < 12) {
                return 'утра';
            } else if (hour < 17) {
                return 'дня';
            } else {
                return 'вечера';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(й|го|я)/,
        ordinal: function (number, period) {
            switch (period) {
                case 'M':
                case 'd':
                case 'DDD':
                    return number + '-й';
                case 'D':
                    return number + '-го';
                case 'w':
                case 'W':
                    return number + '-я';
                default:
                    return number;
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return ru;

})));


/***/ }),
/* 187 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var months = [
        'جنوري',
        'فيبروري',
        'مارچ',
        'اپريل',
        'مئي',
        'جون',
        'جولاءِ',
        'آگسٽ',
        'سيپٽمبر',
        'آڪٽوبر',
        'نومبر',
        'ڊسمبر'
    ];
    var days = [
        'آچر',
        'سومر',
        'اڱارو',
        'اربع',
        'خميس',
        'جمع',
        'ڇنڇر'
    ];

    var sd = moment.defineLocale('sd', {
        months : months,
        monthsShort : months,
        weekdays : days,
        weekdaysShort : days,
        weekdaysMin : days,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd، D MMMM YYYY HH:mm'
        },
        meridiemParse: /صبح|شام/,
        isPM : function (input) {
            return 'شام' === input;
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'صبح';
            }
            return 'شام';
        },
        calendar : {
            sameDay : '[اڄ] LT',
            nextDay : '[سڀاڻي] LT',
            nextWeek : 'dddd [اڳين هفتي تي] LT',
            lastDay : '[ڪالهه] LT',
            lastWeek : '[گزريل هفتي] dddd [تي] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s پوء',
            past : '%s اڳ',
            s : 'چند سيڪنڊ',
            ss : '%d سيڪنڊ',
            m : 'هڪ منٽ',
            mm : '%d منٽ',
            h : 'هڪ ڪلاڪ',
            hh : '%d ڪلاڪ',
            d : 'هڪ ڏينهن',
            dd : '%d ڏينهن',
            M : 'هڪ مهينو',
            MM : '%d مهينا',
            y : 'هڪ سال',
            yy : '%d سال'
        },
        preparse: function (string) {
            return string.replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/,/g, '،');
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return sd;

})));


/***/ }),
/* 188 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var se = moment.defineLocale('se', {
        months : 'ođđajagemánnu_guovvamánnu_njukčamánnu_cuoŋománnu_miessemánnu_geassemánnu_suoidnemánnu_borgemánnu_čakčamánnu_golggotmánnu_skábmamánnu_juovlamánnu'.split('_'),
        monthsShort : 'ođđj_guov_njuk_cuo_mies_geas_suoi_borg_čakč_golg_skáb_juov'.split('_'),
        weekdays : 'sotnabeaivi_vuossárga_maŋŋebárga_gaskavahkku_duorastat_bearjadat_lávvardat'.split('_'),
        weekdaysShort : 'sotn_vuos_maŋ_gask_duor_bear_láv'.split('_'),
        weekdaysMin : 's_v_m_g_d_b_L'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'MMMM D. [b.] YYYY',
            LLL : 'MMMM D. [b.] YYYY [ti.] HH:mm',
            LLLL : 'dddd, MMMM D. [b.] YYYY [ti.] HH:mm'
        },
        calendar : {
            sameDay: '[otne ti] LT',
            nextDay: '[ihttin ti] LT',
            nextWeek: 'dddd [ti] LT',
            lastDay: '[ikte ti] LT',
            lastWeek: '[ovddit] dddd [ti] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : '%s geažes',
            past : 'maŋit %s',
            s : 'moadde sekunddat',
            ss: '%d sekunddat',
            m : 'okta minuhta',
            mm : '%d minuhtat',
            h : 'okta diimmu',
            hh : '%d diimmut',
            d : 'okta beaivi',
            dd : '%d beaivvit',
            M : 'okta mánnu',
            MM : '%d mánut',
            y : 'okta jahki',
            yy : '%d jagit'
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return se;

})));


/***/ }),
/* 189 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    /*jshint -W100*/
    var si = moment.defineLocale('si', {
        months : 'ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්'.split('_'),
        monthsShort : 'ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ'.split('_'),
        weekdays : 'ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා'.split('_'),
        weekdaysShort : 'ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන'.split('_'),
        weekdaysMin : 'ඉ_ස_අ_බ_බ්‍ර_සි_සෙ'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'a h:mm',
            LTS : 'a h:mm:ss',
            L : 'YYYY/MM/DD',
            LL : 'YYYY MMMM D',
            LLL : 'YYYY MMMM D, a h:mm',
            LLLL : 'YYYY MMMM D [වැනි] dddd, a h:mm:ss'
        },
        calendar : {
            sameDay : '[අද] LT[ට]',
            nextDay : '[හෙට] LT[ට]',
            nextWeek : 'dddd LT[ට]',
            lastDay : '[ඊයේ] LT[ට]',
            lastWeek : '[පසුගිය] dddd LT[ට]',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%sකින්',
            past : '%sකට පෙර',
            s : 'තත්පර කිහිපය',
            ss : 'තත්පර %d',
            m : 'මිනිත්තුව',
            mm : 'මිනිත්තු %d',
            h : 'පැය',
            hh : 'පැය %d',
            d : 'දිනය',
            dd : 'දින %d',
            M : 'මාසය',
            MM : 'මාස %d',
            y : 'වසර',
            yy : 'වසර %d'
        },
        dayOfMonthOrdinalParse: /\d{1,2} වැනි/,
        ordinal : function (number) {
            return number + ' වැනි';
        },
        meridiemParse : /පෙර වරු|පස් වරු|පෙ.ව|ප.ව./,
        isPM : function (input) {
            return input === 'ප.ව.' || input === 'පස් වරු';
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours > 11) {
                return isLower ? 'ප.ව.' : 'පස් වරු';
            } else {
                return isLower ? 'පෙ.ව.' : 'පෙර වරු';
            }
        }
    });

    return si;

})));


/***/ }),
/* 190 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var months = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split('_'),
        monthsShort = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');
    function plural(n) {
        return (n > 1) && (n < 5);
    }
    function translate(number, withoutSuffix, key, isFuture) {
        var result = number + ' ';
        switch (key) {
            case 's':  // a few seconds / in a few seconds / a few seconds ago
                return (withoutSuffix || isFuture) ? 'pár sekúnd' : 'pár sekundami';
            case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'sekundy' : 'sekúnd');
                } else {
                    return result + 'sekundami';
                }
                break;
            case 'm':  // a minute / in a minute / a minute ago
                return withoutSuffix ? 'minúta' : (isFuture ? 'minútu' : 'minútou');
            case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'minúty' : 'minút');
                } else {
                    return result + 'minútami';
                }
                break;
            case 'h':  // an hour / in an hour / an hour ago
                return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');
            case 'hh': // 9 hours / in 9 hours / 9 hours ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'hodiny' : 'hodín');
                } else {
                    return result + 'hodinami';
                }
                break;
            case 'd':  // a day / in a day / a day ago
                return (withoutSuffix || isFuture) ? 'deň' : 'dňom';
            case 'dd': // 9 days / in 9 days / 9 days ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'dni' : 'dní');
                } else {
                    return result + 'dňami';
                }
                break;
            case 'M':  // a month / in a month / a month ago
                return (withoutSuffix || isFuture) ? 'mesiac' : 'mesiacom';
            case 'MM': // 9 months / in 9 months / 9 months ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'mesiace' : 'mesiacov');
                } else {
                    return result + 'mesiacmi';
                }
                break;
            case 'y':  // a year / in a year / a year ago
                return (withoutSuffix || isFuture) ? 'rok' : 'rokom';
            case 'yy': // 9 years / in 9 years / 9 years ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'roky' : 'rokov');
                } else {
                    return result + 'rokmi';
                }
                break;
        }
    }

    var sk = moment.defineLocale('sk', {
        months : months,
        monthsShort : monthsShort,
        weekdays : 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),
        weekdaysShort : 'ne_po_ut_st_št_pi_so'.split('_'),
        weekdaysMin : 'ne_po_ut_st_št_pi_so'.split('_'),
        longDateFormat : {
            LT: 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY H:mm',
            LLLL : 'dddd D. MMMM YYYY H:mm'
        },
        calendar : {
            sameDay: '[dnes o] LT',
            nextDay: '[zajtra o] LT',
            nextWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[v nedeľu o] LT';
                    case 1:
                    case 2:
                        return '[v] dddd [o] LT';
                    case 3:
                        return '[v stredu o] LT';
                    case 4:
                        return '[vo štvrtok o] LT';
                    case 5:
                        return '[v piatok o] LT';
                    case 6:
                        return '[v sobotu o] LT';
                }
            },
            lastDay: '[včera o] LT',
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[minulú nedeľu o] LT';
                    case 1:
                    case 2:
                        return '[minulý] dddd [o] LT';
                    case 3:
                        return '[minulú stredu o] LT';
                    case 4:
                    case 5:
                        return '[minulý] dddd [o] LT';
                    case 6:
                        return '[minulú sobotu o] LT';
                }
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : 'za %s',
            past : 'pred %s',
            s : translate,
            ss : translate,
            m : translate,
            mm : translate,
            h : translate,
            hh : translate,
            d : translate,
            dd : translate,
            M : translate,
            MM : translate,
            y : translate,
            yy : translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return sk;

})));


/***/ }),
/* 191 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var result = number + ' ';
        switch (key) {
            case 's':
                return withoutSuffix || isFuture ? 'nekaj sekund' : 'nekaj sekundami';
            case 'ss':
                if (number === 1) {
                    result += withoutSuffix ? 'sekundo' : 'sekundi';
                } else if (number === 2) {
                    result += withoutSuffix || isFuture ? 'sekundi' : 'sekundah';
                } else if (number < 5) {
                    result += withoutSuffix || isFuture ? 'sekunde' : 'sekundah';
                } else {
                    result += withoutSuffix || isFuture ? 'sekund' : 'sekund';
                }
                return result;
            case 'm':
                return withoutSuffix ? 'ena minuta' : 'eno minuto';
            case 'mm':
                if (number === 1) {
                    result += withoutSuffix ? 'minuta' : 'minuto';
                } else if (number === 2) {
                    result += withoutSuffix || isFuture ? 'minuti' : 'minutama';
                } else if (number < 5) {
                    result += withoutSuffix || isFuture ? 'minute' : 'minutami';
                } else {
                    result += withoutSuffix || isFuture ? 'minut' : 'minutami';
                }
                return result;
            case 'h':
                return withoutSuffix ? 'ena ura' : 'eno uro';
            case 'hh':
                if (number === 1) {
                    result += withoutSuffix ? 'ura' : 'uro';
                } else if (number === 2) {
                    result += withoutSuffix || isFuture ? 'uri' : 'urama';
                } else if (number < 5) {
                    result += withoutSuffix || isFuture ? 'ure' : 'urami';
                } else {
                    result += withoutSuffix || isFuture ? 'ur' : 'urami';
                }
                return result;
            case 'd':
                return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';
            case 'dd':
                if (number === 1) {
                    result += withoutSuffix || isFuture ? 'dan' : 'dnem';
                } else if (number === 2) {
                    result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';
                } else {
                    result += withoutSuffix || isFuture ? 'dni' : 'dnevi';
                }
                return result;
            case 'M':
                return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';
            case 'MM':
                if (number === 1) {
                    result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';
                } else if (number === 2) {
                    result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';
                } else if (number < 5) {
                    result += withoutSuffix || isFuture ? 'mesece' : 'meseci';
                } else {
                    result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';
                }
                return result;
            case 'y':
                return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';
            case 'yy':
                if (number === 1) {
                    result += withoutSuffix || isFuture ? 'leto' : 'letom';
                } else if (number === 2) {
                    result += withoutSuffix || isFuture ? 'leti' : 'letoma';
                } else if (number < 5) {
                    result += withoutSuffix || isFuture ? 'leta' : 'leti';
                } else {
                    result += withoutSuffix || isFuture ? 'let' : 'leti';
                }
                return result;
        }
    }

    var sl = moment.defineLocale('sl', {
        months : 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'),
        monthsShort : 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'),
        monthsParseExact: true,
        weekdays : 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),
        weekdaysShort : 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),
        weekdaysMin : 'ne_po_to_sr_če_pe_so'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY H:mm',
            LLLL : 'dddd, D. MMMM YYYY H:mm'
        },
        calendar : {
            sameDay  : '[danes ob] LT',
            nextDay  : '[jutri ob] LT',

            nextWeek : function () {
                switch (this.day()) {
                    case 0:
                        return '[v] [nedeljo] [ob] LT';
                    case 3:
                        return '[v] [sredo] [ob] LT';
                    case 6:
                        return '[v] [soboto] [ob] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[v] dddd [ob] LT';
                }
            },
            lastDay  : '[včeraj ob] LT',
            lastWeek : function () {
                switch (this.day()) {
                    case 0:
                        return '[prejšnjo] [nedeljo] [ob] LT';
                    case 3:
                        return '[prejšnjo] [sredo] [ob] LT';
                    case 6:
                        return '[prejšnjo] [soboto] [ob] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[prejšnji] dddd [ob] LT';
                }
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'čez %s',
            past   : 'pred %s',
            s      : processRelativeTime,
            ss     : processRelativeTime,
            m      : processRelativeTime,
            mm     : processRelativeTime,
            h      : processRelativeTime,
            hh     : processRelativeTime,
            d      : processRelativeTime,
            dd     : processRelativeTime,
            M      : processRelativeTime,
            MM     : processRelativeTime,
            y      : processRelativeTime,
            yy     : processRelativeTime
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1st is the first week of the year.
        }
    });

    return sl;

})));


/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var sq = moment.defineLocale('sq', {
        months : 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split('_'),
        monthsShort : 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),
        weekdays : 'E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split('_'),
        weekdaysShort : 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),
        weekdaysMin : 'D_H_Ma_Më_E_P_Sh'.split('_'),
        weekdaysParseExact : true,
        meridiemParse: /PD|MD/,
        isPM: function (input) {
            return input.charAt(0) === 'M';
        },
        meridiem : function (hours, minutes, isLower) {
            return hours < 12 ? 'PD' : 'MD';
        },
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Sot në] LT',
            nextDay : '[Nesër në] LT',
            nextWeek : 'dddd [në] LT',
            lastDay : '[Dje në] LT',
            lastWeek : 'dddd [e kaluar në] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'në %s',
            past : '%s më parë',
            s : 'disa sekonda',
            ss : '%d sekonda',
            m : 'një minutë',
            mm : '%d minuta',
            h : 'një orë',
            hh : '%d orë',
            d : 'një ditë',
            dd : '%d ditë',
            M : 'një muaj',
            MM : '%d muaj',
            y : 'një vit',
            yy : '%d vite'
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return sq;

})));


/***/ }),
/* 193 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var translator = {
        words: { //Different grammatical cases
            ss: ['sekunda', 'sekunde', 'sekundi'],
            m: ['jedan minut', 'jedne minute'],
            mm: ['minut', 'minute', 'minuta'],
            h: ['jedan sat', 'jednog sata'],
            hh: ['sat', 'sata', 'sati'],
            dd: ['dan', 'dana', 'dana'],
            MM: ['mesec', 'meseca', 'meseci'],
            yy: ['godina', 'godine', 'godina']
        },
        correctGrammaticalCase: function (number, wordKey) {
            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
        },
        translate: function (number, withoutSuffix, key) {
            var wordKey = translator.words[key];
            if (key.length === 1) {
                return withoutSuffix ? wordKey[0] : wordKey[1];
            } else {
                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
            }
        }
    };

    var sr = moment.defineLocale('sr', {
        months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),
        monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),
        monthsParseExact: true,
        weekdays: 'nedelja_ponedeljak_utorak_sreda_četvrtak_petak_subota'.split('_'),
        weekdaysShort: 'ned._pon._uto._sre._čet._pet._sub.'.split('_'),
        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
        weekdaysParseExact : true,
        longDateFormat: {
            LT: 'H:mm',
            LTS : 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd, D. MMMM YYYY H:mm'
        },
        calendar: {
            sameDay: '[danas u] LT',
            nextDay: '[sutra u] LT',
            nextWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[u] [nedelju] [u] LT';
                    case 3:
                        return '[u] [sredu] [u] LT';
                    case 6:
                        return '[u] [subotu] [u] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[u] dddd [u] LT';
                }
            },
            lastDay  : '[juče u] LT',
            lastWeek : function () {
                var lastWeekDays = [
                    '[prošle] [nedelje] [u] LT',
                    '[prošlog] [ponedeljka] [u] LT',
                    '[prošlog] [utorka] [u] LT',
                    '[prošle] [srede] [u] LT',
                    '[prošlog] [četvrtka] [u] LT',
                    '[prošlog] [petka] [u] LT',
                    '[prošle] [subote] [u] LT'
                ];
                return lastWeekDays[this.day()];
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'za %s',
            past   : 'pre %s',
            s      : 'nekoliko sekundi',
            ss     : translator.translate,
            m      : translator.translate,
            mm     : translator.translate,
            h      : translator.translate,
            hh     : translator.translate,
            d      : 'dan',
            dd     : translator.translate,
            M      : 'mesec',
            MM     : translator.translate,
            y      : 'godinu',
            yy     : translator.translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1st is the first week of the year.
        }
    });

    return sr;

})));


/***/ }),
/* 194 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var translator = {
        words: { //Different grammatical cases
            ss: ['секунда', 'секунде', 'секунди'],
            m: ['један минут', 'једне минуте'],
            mm: ['минут', 'минуте', 'минута'],
            h: ['један сат', 'једног сата'],
            hh: ['сат', 'сата', 'сати'],
            dd: ['дан', 'дана', 'дана'],
            MM: ['месец', 'месеца', 'месеци'],
            yy: ['година', 'године', 'година']
        },
        correctGrammaticalCase: function (number, wordKey) {
            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
        },
        translate: function (number, withoutSuffix, key) {
            var wordKey = translator.words[key];
            if (key.length === 1) {
                return withoutSuffix ? wordKey[0] : wordKey[1];
            } else {
                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
            }
        }
    };

    var srCyrl = moment.defineLocale('sr-cyrl', {
        months: 'јануар_фебруар_март_април_мај_јун_јул_август_септембар_октобар_новембар_децембар'.split('_'),
        monthsShort: 'јан._феб._мар._апр._мај_јун_јул_авг._сеп._окт._нов._дец.'.split('_'),
        monthsParseExact: true,
        weekdays: 'недеља_понедељак_уторак_среда_четвртак_петак_субота'.split('_'),
        weekdaysShort: 'нед._пон._уто._сре._чет._пет._суб.'.split('_'),
        weekdaysMin: 'не_по_ут_ср_че_пе_су'.split('_'),
        weekdaysParseExact : true,
        longDateFormat: {
            LT: 'H:mm',
            LTS : 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd, D. MMMM YYYY H:mm'
        },
        calendar: {
            sameDay: '[данас у] LT',
            nextDay: '[сутра у] LT',
            nextWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[у] [недељу] [у] LT';
                    case 3:
                        return '[у] [среду] [у] LT';
                    case 6:
                        return '[у] [суботу] [у] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[у] dddd [у] LT';
                }
            },
            lastDay  : '[јуче у] LT',
            lastWeek : function () {
                var lastWeekDays = [
                    '[прошле] [недеље] [у] LT',
                    '[прошлог] [понедељка] [у] LT',
                    '[прошлог] [уторка] [у] LT',
                    '[прошле] [среде] [у] LT',
                    '[прошлог] [четвртка] [у] LT',
                    '[прошлог] [петка] [у] LT',
                    '[прошле] [суботе] [у] LT'
                ];
                return lastWeekDays[this.day()];
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'за %s',
            past   : 'пре %s',
            s      : 'неколико секунди',
            ss     : translator.translate,
            m      : translator.translate,
            mm     : translator.translate,
            h      : translator.translate,
            hh     : translator.translate,
            d      : 'дан',
            dd     : translator.translate,
            M      : 'месец',
            MM     : translator.translate,
            y      : 'годину',
            yy     : translator.translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1st is the first week of the year.
        }
    });

    return srCyrl;

})));


/***/ }),
/* 195 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var ss = moment.defineLocale('ss', {
        months : "Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni".split('_'),
        monthsShort : 'Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo'.split('_'),
        weekdays : 'Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo'.split('_'),
        weekdaysShort : 'Lis_Umb_Lsb_Les_Lsi_Lsh_Umg'.split('_'),
        weekdaysMin : 'Li_Us_Lb_Lt_Ls_Lh_Ug'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'h:mm A',
            LTS : 'h:mm:ss A',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY h:mm A',
            LLLL : 'dddd, D MMMM YYYY h:mm A'
        },
        calendar : {
            sameDay : '[Namuhla nga] LT',
            nextDay : '[Kusasa nga] LT',
            nextWeek : 'dddd [nga] LT',
            lastDay : '[Itolo nga] LT',
            lastWeek : 'dddd [leliphelile] [nga] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'nga %s',
            past : 'wenteka nga %s',
            s : 'emizuzwana lomcane',
            ss : '%d mzuzwana',
            m : 'umzuzu',
            mm : '%d emizuzu',
            h : 'lihora',
            hh : '%d emahora',
            d : 'lilanga',
            dd : '%d emalanga',
            M : 'inyanga',
            MM : '%d tinyanga',
            y : 'umnyaka',
            yy : '%d iminyaka'
        },
        meridiemParse: /ekuseni|emini|entsambama|ebusuku/,
        meridiem : function (hours, minutes, isLower) {
            if (hours < 11) {
                return 'ekuseni';
            } else if (hours < 15) {
                return 'emini';
            } else if (hours < 19) {
                return 'entsambama';
            } else {
                return 'ebusuku';
            }
        },
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'ekuseni') {
                return hour;
            } else if (meridiem === 'emini') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'entsambama' || meridiem === 'ebusuku') {
                if (hour === 0) {
                    return 0;
                }
                return hour + 12;
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}/,
        ordinal : '%d',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return ss;

})));


/***/ }),
/* 196 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var sv = moment.defineLocale('sv', {
        months : 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'),
        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
        weekdays : 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),
        weekdaysShort : 'sön_mån_tis_ons_tor_fre_lör'.split('_'),
        weekdaysMin : 'sö_må_ti_on_to_fr_lö'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY-MM-DD',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY [kl.] HH:mm',
            LLLL : 'dddd D MMMM YYYY [kl.] HH:mm',
            lll : 'D MMM YYYY HH:mm',
            llll : 'ddd D MMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[Idag] LT',
            nextDay: '[Imorgon] LT',
            lastDay: '[Igår] LT',
            nextWeek: '[På] dddd LT',
            lastWeek: '[I] dddd[s] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'om %s',
            past : 'för %s sedan',
            s : 'några sekunder',
            ss : '%d sekunder',
            m : 'en minut',
            mm : '%d minuter',
            h : 'en timme',
            hh : '%d timmar',
            d : 'en dag',
            dd : '%d dagar',
            M : 'en månad',
            MM : '%d månader',
            y : 'ett år',
            yy : '%d år'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(e|a)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'e' :
                (b === 1) ? 'a' :
                (b === 2) ? 'a' :
                (b === 3) ? 'e' : 'e';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return sv;

})));


/***/ }),
/* 197 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var sw = moment.defineLocale('sw', {
        months : 'Januari_Februari_Machi_Aprili_Mei_Juni_Julai_Agosti_Septemba_Oktoba_Novemba_Desemba'.split('_'),
        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ago_Sep_Okt_Nov_Des'.split('_'),
        weekdays : 'Jumapili_Jumatatu_Jumanne_Jumatano_Alhamisi_Ijumaa_Jumamosi'.split('_'),
        weekdaysShort : 'Jpl_Jtat_Jnne_Jtan_Alh_Ijm_Jmos'.split('_'),
        weekdaysMin : 'J2_J3_J4_J5_Al_Ij_J1'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[leo saa] LT',
            nextDay : '[kesho saa] LT',
            nextWeek : '[wiki ijayo] dddd [saat] LT',
            lastDay : '[jana] LT',
            lastWeek : '[wiki iliyopita] dddd [saat] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s baadaye',
            past : 'tokea %s',
            s : 'hivi punde',
            ss : 'sekunde %d',
            m : 'dakika moja',
            mm : 'dakika %d',
            h : 'saa limoja',
            hh : 'masaa %d',
            d : 'siku moja',
            dd : 'masiku %d',
            M : 'mwezi mmoja',
            MM : 'miezi %d',
            y : 'mwaka mmoja',
            yy : 'miaka %d'
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1st is the first week of the year.
        }
    });

    return sw;

})));


/***/ }),
/* 198 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '௧',
        '2': '௨',
        '3': '௩',
        '4': '௪',
        '5': '௫',
        '6': '௬',
        '7': '௭',
        '8': '௮',
        '9': '௯',
        '0': '௦'
    }, numberMap = {
        '௧': '1',
        '௨': '2',
        '௩': '3',
        '௪': '4',
        '௫': '5',
        '௬': '6',
        '௭': '7',
        '௮': '8',
        '௯': '9',
        '௦': '0'
    };

    var ta = moment.defineLocale('ta', {
        months : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),
        monthsShort : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),
        weekdays : 'ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை'.split('_'),
        weekdaysShort : 'ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி'.split('_'),
        weekdaysMin : 'ஞா_தி_செ_பு_வி_வெ_ச'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, HH:mm',
            LLLL : 'dddd, D MMMM YYYY, HH:mm'
        },
        calendar : {
            sameDay : '[இன்று] LT',
            nextDay : '[நாளை] LT',
            nextWeek : 'dddd, LT',
            lastDay : '[நேற்று] LT',
            lastWeek : '[கடந்த வாரம்] dddd, LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s இல்',
            past : '%s முன்',
            s : 'ஒரு சில விநாடிகள்',
            ss : '%d விநாடிகள்',
            m : 'ஒரு நிமிடம்',
            mm : '%d நிமிடங்கள்',
            h : 'ஒரு மணி நேரம்',
            hh : '%d மணி நேரம்',
            d : 'ஒரு நாள்',
            dd : '%d நாட்கள்',
            M : 'ஒரு மாதம்',
            MM : '%d மாதங்கள்',
            y : 'ஒரு வருடம்',
            yy : '%d ஆண்டுகள்'
        },
        dayOfMonthOrdinalParse: /\d{1,2}வது/,
        ordinal : function (number) {
            return number + 'வது';
        },
        preparse: function (string) {
            return string.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        // refer http://ta.wikipedia.org/s/1er1
        meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,
        meridiem : function (hour, minute, isLower) {
            if (hour < 2) {
                return ' யாமம்';
            } else if (hour < 6) {
                return ' வைகறை';  // வைகறை
            } else if (hour < 10) {
                return ' காலை'; // காலை
            } else if (hour < 14) {
                return ' நண்பகல்'; // நண்பகல்
            } else if (hour < 18) {
                return ' எற்பாடு'; // எற்பாடு
            } else if (hour < 22) {
                return ' மாலை'; // மாலை
            } else {
                return ' யாமம்';
            }
        },
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'யாமம்') {
                return hour < 2 ? hour : hour + 12;
            } else if (meridiem === 'வைகறை' || meridiem === 'காலை') {
                return hour;
            } else if (meridiem === 'நண்பகல்') {
                return hour >= 10 ? hour : hour + 12;
            } else {
                return hour + 12;
            }
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 1st is the first week of the year.
        }
    });

    return ta;

})));


/***/ }),
/* 199 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var te = moment.defineLocale('te', {
        months : 'జనవరి_ఫిబ్రవరి_మార్చి_ఏప్రిల్_మే_జూన్_జూలై_ఆగస్టు_సెప్టెంబర్_అక్టోబర్_నవంబర్_డిసెంబర్'.split('_'),
        monthsShort : 'జన._ఫిబ్ర._మార్చి_ఏప్రి._మే_జూన్_జూలై_ఆగ._సెప్._అక్టో._నవ._డిసె.'.split('_'),
        monthsParseExact : true,
        weekdays : 'ఆదివారం_సోమవారం_మంగళవారం_బుధవారం_గురువారం_శుక్రవారం_శనివారం'.split('_'),
        weekdaysShort : 'ఆది_సోమ_మంగళ_బుధ_గురు_శుక్ర_శని'.split('_'),
        weekdaysMin : 'ఆ_సో_మం_బు_గు_శు_శ'.split('_'),
        longDateFormat : {
            LT : 'A h:mm',
            LTS : 'A h:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, A h:mm',
            LLLL : 'dddd, D MMMM YYYY, A h:mm'
        },
        calendar : {
            sameDay : '[నేడు] LT',
            nextDay : '[రేపు] LT',
            nextWeek : 'dddd, LT',
            lastDay : '[నిన్న] LT',
            lastWeek : '[గత] dddd, LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s లో',
            past : '%s క్రితం',
            s : 'కొన్ని క్షణాలు',
            ss : '%d సెకన్లు',
            m : 'ఒక నిమిషం',
            mm : '%d నిమిషాలు',
            h : 'ఒక గంట',
            hh : '%d గంటలు',
            d : 'ఒక రోజు',
            dd : '%d రోజులు',
            M : 'ఒక నెల',
            MM : '%d నెలలు',
            y : 'ఒక సంవత్సరం',
            yy : '%d సంవత్సరాలు'
        },
        dayOfMonthOrdinalParse : /\d{1,2}వ/,
        ordinal : '%dవ',
        meridiemParse: /రాత్రి|ఉదయం|మధ్యాహ్నం|సాయంత్రం/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'రాత్రి') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'ఉదయం') {
                return hour;
            } else if (meridiem === 'మధ్యాహ్నం') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'సాయంత్రం') {
                return hour + 12;
            }
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'రాత్రి';
            } else if (hour < 10) {
                return 'ఉదయం';
            } else if (hour < 17) {
                return 'మధ్యాహ్నం';
            } else if (hour < 20) {
                return 'సాయంత్రం';
            } else {
                return 'రాత్రి';
            }
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 1st is the first week of the year.
        }
    });

    return te;

})));


/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var tet = moment.defineLocale('tet', {
        months : 'Janeiru_Fevereiru_Marsu_Abril_Maiu_Juñu_Jullu_Agustu_Setembru_Outubru_Novembru_Dezembru'.split('_'),
        monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),
        weekdays : 'Domingu_Segunda_Tersa_Kuarta_Kinta_Sesta_Sabadu'.split('_'),
        weekdaysShort : 'Dom_Seg_Ters_Kua_Kint_Sest_Sab'.split('_'),
        weekdaysMin : 'Do_Seg_Te_Ku_Ki_Ses_Sa'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[Ohin iha] LT',
            nextDay: '[Aban iha] LT',
            nextWeek: 'dddd [iha] LT',
            lastDay: '[Horiseik iha] LT',
            lastWeek: 'dddd [semana kotuk] [iha] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'iha %s',
            past : '%s liuba',
            s : 'minutu balun',
            ss : 'minutu %d',
            m : 'minutu ida',
            mm : 'minutu %d',
            h : 'oras ida',
            hh : 'oras %d',
            d : 'loron ida',
            dd : 'loron %d',
            M : 'fulan ida',
            MM : 'fulan %d',
            y : 'tinan ida',
            yy : 'tinan %d'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return tet;

})));


/***/ }),
/* 201 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var suffixes = {
        0: '-ум',
        1: '-ум',
        2: '-юм',
        3: '-юм',
        4: '-ум',
        5: '-ум',
        6: '-ум',
        7: '-ум',
        8: '-ум',
        9: '-ум',
        10: '-ум',
        12: '-ум',
        13: '-ум',
        20: '-ум',
        30: '-юм',
        40: '-ум',
        50: '-ум',
        60: '-ум',
        70: '-ум',
        80: '-ум',
        90: '-ум',
        100: '-ум'
    };

    var tg = moment.defineLocale('tg', {
        months : 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split('_'),
        monthsShort : 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),
        weekdays : 'якшанбе_душанбе_сешанбе_чоршанбе_панҷшанбе_ҷумъа_шанбе'.split('_'),
        weekdaysShort : 'яшб_дшб_сшб_чшб_пшб_ҷум_шнб'.split('_'),
        weekdaysMin : 'яш_дш_сш_чш_пш_ҷм_шб'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Имрӯз соати] LT',
            nextDay : '[Пагоҳ соати] LT',
            lastDay : '[Дирӯз соати] LT',
            nextWeek : 'dddd[и] [ҳафтаи оянда соати] LT',
            lastWeek : 'dddd[и] [ҳафтаи гузашта соати] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'баъди %s',
            past : '%s пеш',
            s : 'якчанд сония',
            m : 'як дақиқа',
            mm : '%d дақиқа',
            h : 'як соат',
            hh : '%d соат',
            d : 'як рӯз',
            dd : '%d рӯз',
            M : 'як моҳ',
            MM : '%d моҳ',
            y : 'як сол',
            yy : '%d сол'
        },
        meridiemParse: /шаб|субҳ|рӯз|бегоҳ/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'шаб') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'субҳ') {
                return hour;
            } else if (meridiem === 'рӯз') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'бегоҳ') {
                return hour + 12;
            }
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
                return 'шаб';
            } else if (hour < 11) {
                return 'субҳ';
            } else if (hour < 16) {
                return 'рӯз';
            } else if (hour < 19) {
                return 'бегоҳ';
            } else {
                return 'шаб';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(ум|юм)/,
        ordinal: function (number) {
            var a = number % 10,
                b = number >= 100 ? 100 : null;
            return number + (suffixes[number] || suffixes[a] || suffixes[b]);
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1th is the first week of the year.
        }
    });

    return tg;

})));


/***/ }),
/* 202 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var th = moment.defineLocale('th', {
        months : 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),
        monthsShort : 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split('_'),
        monthsParseExact: true,
        weekdays : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),
        weekdaysShort : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์'.split('_'), // yes, three characters difference
        weekdaysMin : 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY เวลา H:mm',
            LLLL : 'วันddddที่ D MMMM YYYY เวลา H:mm'
        },
        meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,
        isPM: function (input) {
            return input === 'หลังเที่ยง';
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ก่อนเที่ยง';
            } else {
                return 'หลังเที่ยง';
            }
        },
        calendar : {
            sameDay : '[วันนี้ เวลา] LT',
            nextDay : '[พรุ่งนี้ เวลา] LT',
            nextWeek : 'dddd[หน้า เวลา] LT',
            lastDay : '[เมื่อวานนี้ เวลา] LT',
            lastWeek : '[วัน]dddd[ที่แล้ว เวลา] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'อีก %s',
            past : '%sที่แล้ว',
            s : 'ไม่กี่วินาที',
            ss : '%d วินาที',
            m : '1 นาที',
            mm : '%d นาที',
            h : '1 ชั่วโมง',
            hh : '%d ชั่วโมง',
            d : '1 วัน',
            dd : '%d วัน',
            M : '1 เดือน',
            MM : '%d เดือน',
            y : '1 ปี',
            yy : '%d ปี'
        }
    });

    return th;

})));


/***/ }),
/* 203 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var tlPh = moment.defineLocale('tl-ph', {
        months : 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split('_'),
        monthsShort : 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),
        weekdays : 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split('_'),
        weekdaysShort : 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),
        weekdaysMin : 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'MM/D/YYYY',
            LL : 'MMMM D, YYYY',
            LLL : 'MMMM D, YYYY HH:mm',
            LLLL : 'dddd, MMMM DD, YYYY HH:mm'
        },
        calendar : {
            sameDay: 'LT [ngayong araw]',
            nextDay: '[Bukas ng] LT',
            nextWeek: 'LT [sa susunod na] dddd',
            lastDay: 'LT [kahapon]',
            lastWeek: 'LT [noong nakaraang] dddd',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'sa loob ng %s',
            past : '%s ang nakalipas',
            s : 'ilang segundo',
            ss : '%d segundo',
            m : 'isang minuto',
            mm : '%d minuto',
            h : 'isang oras',
            hh : '%d oras',
            d : 'isang araw',
            dd : '%d araw',
            M : 'isang buwan',
            MM : '%d buwan',
            y : 'isang taon',
            yy : '%d taon'
        },
        dayOfMonthOrdinalParse: /\d{1,2}/,
        ordinal : function (number) {
            return number;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return tlPh;

})));


/***/ }),
/* 204 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var numbersNouns = 'pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut'.split('_');

    function translateFuture(output) {
        var time = output;
        time = (output.indexOf('jaj') !== -1) ?
        time.slice(0, -3) + 'leS' :
        (output.indexOf('jar') !== -1) ?
        time.slice(0, -3) + 'waQ' :
        (output.indexOf('DIS') !== -1) ?
        time.slice(0, -3) + 'nem' :
        time + ' pIq';
        return time;
    }

    function translatePast(output) {
        var time = output;
        time = (output.indexOf('jaj') !== -1) ?
        time.slice(0, -3) + 'Hu’' :
        (output.indexOf('jar') !== -1) ?
        time.slice(0, -3) + 'wen' :
        (output.indexOf('DIS') !== -1) ?
        time.slice(0, -3) + 'ben' :
        time + ' ret';
        return time;
    }

    function translate(number, withoutSuffix, string, isFuture) {
        var numberNoun = numberAsNoun(number);
        switch (string) {
            case 'ss':
                return numberNoun + ' lup';
            case 'mm':
                return numberNoun + ' tup';
            case 'hh':
                return numberNoun + ' rep';
            case 'dd':
                return numberNoun + ' jaj';
            case 'MM':
                return numberNoun + ' jar';
            case 'yy':
                return numberNoun + ' DIS';
        }
    }

    function numberAsNoun(number) {
        var hundred = Math.floor((number % 1000) / 100),
        ten = Math.floor((number % 100) / 10),
        one = number % 10,
        word = '';
        if (hundred > 0) {
            word += numbersNouns[hundred] + 'vatlh';
        }
        if (ten > 0) {
            word += ((word !== '') ? ' ' : '') + numbersNouns[ten] + 'maH';
        }
        if (one > 0) {
            word += ((word !== '') ? ' ' : '') + numbersNouns[one];
        }
        return (word === '') ? 'pagh' : word;
    }

    var tlh = moment.defineLocale('tlh', {
        months : 'tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’'.split('_'),
        monthsShort : 'jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’'.split('_'),
        monthsParseExact : true,
        weekdays : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
        weekdaysShort : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
        weekdaysMin : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[DaHjaj] LT',
            nextDay: '[wa’leS] LT',
            nextWeek: 'LLL',
            lastDay: '[wa’Hu’] LT',
            lastWeek: 'LLL',
            sameElse: 'L'
        },
        relativeTime : {
            future : translateFuture,
            past : translatePast,
            s : 'puS lup',
            ss : translate,
            m : 'wa’ tup',
            mm : translate,
            h : 'wa’ rep',
            hh : translate,
            d : 'wa’ jaj',
            dd : translate,
            M : 'wa’ jar',
            MM : translate,
            y : 'wa’ DIS',
            yy : translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return tlh;

})));


/***/ }),
/* 205 */
/***/ (function(module, exports, __webpack_require__) {


;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    var suffixes = {
        1: '\'inci',
        5: '\'inci',
        8: '\'inci',
        70: '\'inci',
        80: '\'inci',
        2: '\'nci',
        7: '\'nci',
        20: '\'nci',
        50: '\'nci',
        3: '\'üncü',
        4: '\'üncü',
        100: '\'üncü',
        6: '\'ncı',
        9: '\'uncu',
        10: '\'uncu',
        30: '\'uncu',
        60: '\'ıncı',
        90: '\'ıncı'
    };

    var tr = moment.defineLocale('tr', {
        months : 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split('_'),
        monthsShort : 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),
        weekdays : 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split('_'),
        weekdaysShort : 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),
        weekdaysMin : 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[bugün saat] LT',
            nextDay : '[yarın saat] LT',
            nextWeek : '[gelecek] dddd [saat] LT',
            lastDay : '[dün] LT',
            lastWeek : '[geçen] dddd [saat] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s sonra',
            past : '%s önce',
            s : 'birkaç saniye',
            ss : '%d saniye',
            m : 'bir dakika',
            mm : '%d dakika',
            h : 'bir saat',
            hh : '%d saat',
            d : 'bir gün',
            dd : '%d gün',
            M : 'bir ay',
            MM : '%d ay',
            y : 'bir yıl',
            yy : '%d yıl'
        },
        ordinal: function (number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'Do':
                case 'DD':
                    return number;
                default:
                    if (number === 0) {  // special case for zero
                        return number + '\'ıncı';
                    }
                    var a = number % 10,
                        b = number % 100 - a,
                        c = number >= 100 ? 100 : null;
                    return number + (suffixes[a] || suffixes[b] || suffixes[c]);
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1st is the first week of the year.
        }
    });

    return tr;

})));


/***/ }),
/* 206 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    // After the year there should be a slash and the amount of years since December 26, 1979 in Roman numerals.
    // This is currently too difficult (maybe even impossible) to add.
    var tzl = moment.defineLocale('tzl', {
        months : 'Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar'.split('_'),
        monthsShort : 'Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec'.split('_'),
        weekdays : 'Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi'.split('_'),
        weekdaysShort : 'Súl_Lún_Mai_Már_Xhú_Vié_Sát'.split('_'),
        weekdaysMin : 'Sú_Lú_Ma_Má_Xh_Vi_Sá'.split('_'),
        longDateFormat : {
            LT : 'HH.mm',
            LTS : 'HH.mm.ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM [dallas] YYYY',
            LLL : 'D. MMMM [dallas] YYYY HH.mm',
            LLLL : 'dddd, [li] D. MMMM [dallas] YYYY HH.mm'
        },
        meridiemParse: /d\'o|d\'a/i,
        isPM : function (input) {
            return 'd\'o' === input.toLowerCase();
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours > 11) {
                return isLower ? 'd\'o' : 'D\'O';
            } else {
                return isLower ? 'd\'a' : 'D\'A';
            }
        },
        calendar : {
            sameDay : '[oxhi à] LT',
            nextDay : '[demà à] LT',
            nextWeek : 'dddd [à] LT',
            lastDay : '[ieiri à] LT',
            lastWeek : '[sür el] dddd [lasteu à] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'osprei %s',
            past : 'ja%s',
            s : processRelativeTime,
            ss : processRelativeTime,
            m : processRelativeTime,
            mm : processRelativeTime,
            h : processRelativeTime,
            hh : processRelativeTime,
            d : processRelativeTime,
            dd : processRelativeTime,
            M : processRelativeTime,
            MM : processRelativeTime,
            y : processRelativeTime,
            yy : processRelativeTime
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            's': ['viensas secunds', '\'iensas secunds'],
            'ss': [number + ' secunds', '' + number + ' secunds'],
            'm': ['\'n míut', '\'iens míut'],
            'mm': [number + ' míuts', '' + number + ' míuts'],
            'h': ['\'n þora', '\'iensa þora'],
            'hh': [number + ' þoras', '' + number + ' þoras'],
            'd': ['\'n ziua', '\'iensa ziua'],
            'dd': [number + ' ziuas', '' + number + ' ziuas'],
            'M': ['\'n mes', '\'iens mes'],
            'MM': [number + ' mesen', '' + number + ' mesen'],
            'y': ['\'n ar', '\'iens ar'],
            'yy': [number + ' ars', '' + number + ' ars']
        };
        return isFuture ? format[key][0] : (withoutSuffix ? format[key][0] : format[key][1]);
    }

    return tzl;

})));


/***/ }),
/* 207 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var tzm = moment.defineLocale('tzm', {
        months : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),
        monthsShort : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),
        weekdays : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
        weekdaysShort : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
        weekdaysMin : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS: 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[ⴰⵙⴷⵅ ⴴ] LT',
            nextDay: '[ⴰⵙⴽⴰ ⴴ] LT',
            nextWeek: 'dddd [ⴴ] LT',
            lastDay: '[ⴰⵚⴰⵏⵜ ⴴ] LT',
            lastWeek: 'dddd [ⴴ] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s',
            past : 'ⵢⴰⵏ %s',
            s : 'ⵉⵎⵉⴽ',
            ss : '%d ⵉⵎⵉⴽ',
            m : 'ⵎⵉⵏⵓⴺ',
            mm : '%d ⵎⵉⵏⵓⴺ',
            h : 'ⵙⴰⵄⴰ',
            hh : '%d ⵜⴰⵙⵙⴰⵄⵉⵏ',
            d : 'ⴰⵙⵙ',
            dd : '%d oⵙⵙⴰⵏ',
            M : 'ⴰⵢoⵓⵔ',
            MM : '%d ⵉⵢⵢⵉⵔⵏ',
            y : 'ⴰⵙⴳⴰⵙ',
            yy : '%d ⵉⵙⴳⴰⵙⵏ'
        },
        week : {
            dow : 6, // Saturday is the first day of the week.
            doy : 12  // The week that contains Jan 1st is the first week of the year.
        }
    });

    return tzm;

})));


/***/ }),
/* 208 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var tzmLatn = moment.defineLocale('tzm-latn', {
        months : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),
        monthsShort : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),
        weekdays : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
        weekdaysShort : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
        weekdaysMin : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[asdkh g] LT',
            nextDay: '[aska g] LT',
            nextWeek: 'dddd [g] LT',
            lastDay: '[assant g] LT',
            lastWeek: 'dddd [g] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'dadkh s yan %s',
            past : 'yan %s',
            s : 'imik',
            ss : '%d imik',
            m : 'minuḍ',
            mm : '%d minuḍ',
            h : 'saɛa',
            hh : '%d tassaɛin',
            d : 'ass',
            dd : '%d ossan',
            M : 'ayowr',
            MM : '%d iyyirn',
            y : 'asgas',
            yy : '%d isgasn'
        },
        week : {
            dow : 6, // Saturday is the first day of the week.
            doy : 12  // The week that contains Jan 1st is the first week of the year.
        }
    });

    return tzmLatn;

})));


/***/ }),
/* 209 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js language configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var ugCn = moment.defineLocale('ug-cn', {
        months: 'يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر'.split(
            '_'
        ),
        monthsShort: 'يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر'.split(
            '_'
        ),
        weekdays: 'يەكشەنبە_دۈشەنبە_سەيشەنبە_چارشەنبە_پەيشەنبە_جۈمە_شەنبە'.split(
            '_'
        ),
        weekdaysShort: 'يە_دۈ_سە_چا_پە_جۈ_شە'.split('_'),
        weekdaysMin: 'يە_دۈ_سە_چا_پە_جۈ_شە'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'YYYY-MM-DD',
            LL: 'YYYY-يىلىM-ئاينىڭD-كۈنى',
            LLL: 'YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm',
            LLLL: 'dddd، YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm'
        },
        meridiemParse: /يېرىم كېچە|سەھەر|چۈشتىن بۇرۇن|چۈش|چۈشتىن كېيىن|كەچ/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (
                meridiem === 'يېرىم كېچە' ||
                meridiem === 'سەھەر' ||
                meridiem === 'چۈشتىن بۇرۇن'
            ) {
                return hour;
            } else if (meridiem === 'چۈشتىن كېيىن' || meridiem === 'كەچ') {
                return hour + 12;
            } else {
                return hour >= 11 ? hour : hour + 12;
            }
        },
        meridiem: function (hour, minute, isLower) {
            var hm = hour * 100 + minute;
            if (hm < 600) {
                return 'يېرىم كېچە';
            } else if (hm < 900) {
                return 'سەھەر';
            } else if (hm < 1130) {
                return 'چۈشتىن بۇرۇن';
            } else if (hm < 1230) {
                return 'چۈش';
            } else if (hm < 1800) {
                return 'چۈشتىن كېيىن';
            } else {
                return 'كەچ';
            }
        },
        calendar: {
            sameDay: '[بۈگۈن سائەت] LT',
            nextDay: '[ئەتە سائەت] LT',
            nextWeek: '[كېلەركى] dddd [سائەت] LT',
            lastDay: '[تۆنۈگۈن] LT',
            lastWeek: '[ئالدىنقى] dddd [سائەت] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: '%s كېيىن',
            past: '%s بۇرۇن',
            s: 'نەچچە سېكونت',
            ss: '%d سېكونت',
            m: 'بىر مىنۇت',
            mm: '%d مىنۇت',
            h: 'بىر سائەت',
            hh: '%d سائەت',
            d: 'بىر كۈن',
            dd: '%d كۈن',
            M: 'بىر ئاي',
            MM: '%d ئاي',
            y: 'بىر يىل',
            yy: '%d يىل'
        },

        dayOfMonthOrdinalParse: /\d{1,2}(-كۈنى|-ئاي|-ھەپتە)/,
        ordinal: function (number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                    return number + '-كۈنى';
                case 'w':
                case 'W':
                    return number + '-ھەپتە';
                default:
                    return number;
            }
        },
        preparse: function (string) {
            return string.replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/,/g, '،');
        },
        week: {
            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效
            dow: 1, // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 1st is the first week of the year.
        }
    });

    return ugCn;

})));


/***/ }),
/* 210 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function plural(word, num) {
        var forms = word.split('_');
        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
    }
    function relativeTimeWithPlural(number, withoutSuffix, key) {
        var format = {
            'ss': withoutSuffix ? 'секунда_секунди_секунд' : 'секунду_секунди_секунд',
            'mm': withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',
            'hh': withoutSuffix ? 'година_години_годин' : 'годину_години_годин',
            'dd': 'день_дні_днів',
            'MM': 'місяць_місяці_місяців',
            'yy': 'рік_роки_років'
        };
        if (key === 'm') {
            return withoutSuffix ? 'хвилина' : 'хвилину';
        }
        else if (key === 'h') {
            return withoutSuffix ? 'година' : 'годину';
        }
        else {
            return number + ' ' + plural(format[key], +number);
        }
    }
    function weekdaysCaseReplace(m, format) {
        var weekdays = {
            'nominative': 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'),
            'accusative': 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'),
            'genitive': 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_')
        };

        if (!m) {
            return weekdays['nominative'];
        }

        var nounCase = (/(\[[ВвУу]\]) ?dddd/).test(format) ?
            'accusative' :
            ((/\[?(?:минулої|наступної)? ?\] ?dddd/).test(format) ?
                'genitive' :
                'nominative');
        return weekdays[nounCase][m.day()];
    }
    function processHoursFunction(str) {
        return function () {
            return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';
        };
    }

    var uk = moment.defineLocale('uk', {
        months : {
            'format': 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_'),
            'standalone': 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_')
        },
        monthsShort : 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split('_'),
        weekdays : weekdaysCaseReplace,
        weekdaysShort : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
        weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY р.',
            LLL : 'D MMMM YYYY р., HH:mm',
            LLLL : 'dddd, D MMMM YYYY р., HH:mm'
        },
        calendar : {
            sameDay: processHoursFunction('[Сьогодні '),
            nextDay: processHoursFunction('[Завтра '),
            lastDay: processHoursFunction('[Вчора '),
            nextWeek: processHoursFunction('[У] dddd ['),
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                    case 3:
                    case 5:
                    case 6:
                        return processHoursFunction('[Минулої] dddd [').call(this);
                    case 1:
                    case 2:
                    case 4:
                        return processHoursFunction('[Минулого] dddd [').call(this);
                }
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : 'за %s',
            past : '%s тому',
            s : 'декілька секунд',
            ss : relativeTimeWithPlural,
            m : relativeTimeWithPlural,
            mm : relativeTimeWithPlural,
            h : 'годину',
            hh : relativeTimeWithPlural,
            d : 'день',
            dd : relativeTimeWithPlural,
            M : 'місяць',
            MM : relativeTimeWithPlural,
            y : 'рік',
            yy : relativeTimeWithPlural
        },
        // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason
        meridiemParse: /ночі|ранку|дня|вечора/,
        isPM: function (input) {
            return /^(дня|вечора)$/.test(input);
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'ночі';
            } else if (hour < 12) {
                return 'ранку';
            } else if (hour < 17) {
                return 'дня';
            } else {
                return 'вечора';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(й|го)/,
        ordinal: function (number, period) {
            switch (period) {
                case 'M':
                case 'd':
                case 'DDD':
                case 'w':
                case 'W':
                    return number + '-й';
                case 'D':
                    return number + '-го';
                default:
                    return number;
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1st is the first week of the year.
        }
    });

    return uk;

})));


/***/ }),
/* 211 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var months = [
        'جنوری',
        'فروری',
        'مارچ',
        'اپریل',
        'مئی',
        'جون',
        'جولائی',
        'اگست',
        'ستمبر',
        'اکتوبر',
        'نومبر',
        'دسمبر'
    ];
    var days = [
        'اتوار',
        'پیر',
        'منگل',
        'بدھ',
        'جمعرات',
        'جمعہ',
        'ہفتہ'
    ];

    var ur = moment.defineLocale('ur', {
        months : months,
        monthsShort : months,
        weekdays : days,
        weekdaysShort : days,
        weekdaysMin : days,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd، D MMMM YYYY HH:mm'
        },
        meridiemParse: /صبح|شام/,
        isPM : function (input) {
            return 'شام' === input;
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'صبح';
            }
            return 'شام';
        },
        calendar : {
            sameDay : '[آج بوقت] LT',
            nextDay : '[کل بوقت] LT',
            nextWeek : 'dddd [بوقت] LT',
            lastDay : '[گذشتہ روز بوقت] LT',
            lastWeek : '[گذشتہ] dddd [بوقت] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s بعد',
            past : '%s قبل',
            s : 'چند سیکنڈ',
            ss : '%d سیکنڈ',
            m : 'ایک منٹ',
            mm : '%d منٹ',
            h : 'ایک گھنٹہ',
            hh : '%d گھنٹے',
            d : 'ایک دن',
            dd : '%d دن',
            M : 'ایک ماہ',
            MM : '%d ماہ',
            y : 'ایک سال',
            yy : '%d سال'
        },
        preparse: function (string) {
            return string.replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/,/g, '،');
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return ur;

})));


/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var uz = moment.defineLocale('uz', {
        months : 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split('_'),
        monthsShort : 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),
        weekdays : 'Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба'.split('_'),
        weekdaysShort : 'Якш_Душ_Сеш_Чор_Пай_Жум_Шан'.split('_'),
        weekdaysMin : 'Як_Ду_Се_Чо_Па_Жу_Ша'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'D MMMM YYYY, dddd HH:mm'
        },
        calendar : {
            sameDay : '[Бугун соат] LT [да]',
            nextDay : '[Эртага] LT [да]',
            nextWeek : 'dddd [куни соат] LT [да]',
            lastDay : '[Кеча соат] LT [да]',
            lastWeek : '[Утган] dddd [куни соат] LT [да]',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'Якин %s ичида',
            past : 'Бир неча %s олдин',
            s : 'фурсат',
            ss : '%d фурсат',
            m : 'бир дакика',
            mm : '%d дакика',
            h : 'бир соат',
            hh : '%d соат',
            d : 'бир кун',
            dd : '%d кун',
            M : 'бир ой',
            MM : '%d ой',
            y : 'бир йил',
            yy : '%d йил'
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return uz;

})));


/***/ }),
/* 213 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var uzLatn = moment.defineLocale('uz-latn', {
        months : 'Yanvar_Fevral_Mart_Aprel_May_Iyun_Iyul_Avgust_Sentabr_Oktabr_Noyabr_Dekabr'.split('_'),
        monthsShort : 'Yan_Fev_Mar_Apr_May_Iyun_Iyul_Avg_Sen_Okt_Noy_Dek'.split('_'),
        weekdays : 'Yakshanba_Dushanba_Seshanba_Chorshanba_Payshanba_Juma_Shanba'.split('_'),
        weekdaysShort : 'Yak_Dush_Sesh_Chor_Pay_Jum_Shan'.split('_'),
        weekdaysMin : 'Ya_Du_Se_Cho_Pa_Ju_Sha'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'D MMMM YYYY, dddd HH:mm'
        },
        calendar : {
            sameDay : '[Bugun soat] LT [da]',
            nextDay : '[Ertaga] LT [da]',
            nextWeek : 'dddd [kuni soat] LT [da]',
            lastDay : '[Kecha soat] LT [da]',
            lastWeek : '[O\'tgan] dddd [kuni soat] LT [da]',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'Yaqin %s ichida',
            past : 'Bir necha %s oldin',
            s : 'soniya',
            ss : '%d soniya',
            m : 'bir daqiqa',
            mm : '%d daqiqa',
            h : 'bir soat',
            hh : '%d soat',
            d : 'bir kun',
            dd : '%d kun',
            M : 'bir oy',
            MM : '%d oy',
            y : 'bir yil',
            yy : '%d yil'
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1st is the first week of the year.
        }
    });

    return uzLatn;

})));


/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var vi = moment.defineLocale('vi', {
        months : 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split('_'),
        monthsShort : 'Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12'.split('_'),
        monthsParseExact : true,
        weekdays : 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split('_'),
        weekdaysShort : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
        weekdaysMin : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
        weekdaysParseExact : true,
        meridiemParse: /sa|ch/i,
        isPM : function (input) {
            return /^ch$/i.test(input);
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours < 12) {
                return isLower ? 'sa' : 'SA';
            } else {
                return isLower ? 'ch' : 'CH';
            }
        },
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM [năm] YYYY',
            LLL : 'D MMMM [năm] YYYY HH:mm',
            LLLL : 'dddd, D MMMM [năm] YYYY HH:mm',
            l : 'DD/M/YYYY',
            ll : 'D MMM YYYY',
            lll : 'D MMM YYYY HH:mm',
            llll : 'ddd, D MMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[Hôm nay lúc] LT',
            nextDay: '[Ngày mai lúc] LT',
            nextWeek: 'dddd [tuần tới lúc] LT',
            lastDay: '[Hôm qua lúc] LT',
            lastWeek: 'dddd [tuần rồi lúc] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : '%s tới',
            past : '%s trước',
            s : 'vài giây',
            ss : '%d giây' ,
            m : 'một phút',
            mm : '%d phút',
            h : 'một giờ',
            hh : '%d giờ',
            d : 'một ngày',
            dd : '%d ngày',
            M : 'một tháng',
            MM : '%d tháng',
            y : 'một năm',
            yy : '%d năm'
        },
        dayOfMonthOrdinalParse: /\d{1,2}/,
        ordinal : function (number) {
            return number;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return vi;

})));


/***/ }),
/* 215 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var xPseudo = moment.defineLocale('x-pseudo', {
        months : 'J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér'.split('_'),
        monthsShort : 'J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc'.split('_'),
        monthsParseExact : true,
        weekdays : 'S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý'.split('_'),
        weekdaysShort : 'S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát'.split('_'),
        weekdaysMin : 'S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[T~ódá~ý át] LT',
            nextDay : '[T~ómó~rró~w át] LT',
            nextWeek : 'dddd [át] LT',
            lastDay : '[Ý~ést~érdá~ý át] LT',
            lastWeek : '[L~ást] dddd [át] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'í~ñ %s',
            past : '%s á~gó',
            s : 'á ~féw ~sécó~ñds',
            ss : '%d s~écóñ~ds',
            m : 'á ~míñ~úté',
            mm : '%d m~íñú~tés',
            h : 'á~ñ hó~úr',
            hh : '%d h~óúrs',
            d : 'á ~dáý',
            dd : '%d d~áýs',
            M : 'á ~móñ~th',
            MM : '%d m~óñt~hs',
            y : 'á ~ýéár',
            yy : '%d ý~éárs'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return xPseudo;

})));


/***/ }),
/* 216 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var yo = moment.defineLocale('yo', {
        months : 'Sẹ́rẹ́_Èrèlè_Ẹrẹ̀nà_Ìgbé_Èbibi_Òkùdu_Agẹmo_Ògún_Owewe_Ọ̀wàrà_Bélú_Ọ̀pẹ̀̀'.split('_'),
        monthsShort : 'Sẹ́r_Èrl_Ẹrn_Ìgb_Èbi_Òkù_Agẹ_Ògú_Owe_Ọ̀wà_Bél_Ọ̀pẹ̀̀'.split('_'),
        weekdays : 'Àìkú_Ajé_Ìsẹ́gun_Ọjọ́rú_Ọjọ́bọ_Ẹtì_Àbámẹ́ta'.split('_'),
        weekdaysShort : 'Àìk_Ajé_Ìsẹ́_Ọjr_Ọjb_Ẹtì_Àbá'.split('_'),
        weekdaysMin : 'Àì_Aj_Ìs_Ọr_Ọb_Ẹt_Àb'.split('_'),
        longDateFormat : {
            LT : 'h:mm A',
            LTS : 'h:mm:ss A',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY h:mm A',
            LLLL : 'dddd, D MMMM YYYY h:mm A'
        },
        calendar : {
            sameDay : '[Ònì ni] LT',
            nextDay : '[Ọ̀la ni] LT',
            nextWeek : 'dddd [Ọsẹ̀ tón\'bọ] [ni] LT',
            lastDay : '[Àna ni] LT',
            lastWeek : 'dddd [Ọsẹ̀ tólọ́] [ni] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'ní %s',
            past : '%s kọjá',
            s : 'ìsẹjú aayá die',
            ss :'aayá %d',
            m : 'ìsẹjú kan',
            mm : 'ìsẹjú %d',
            h : 'wákati kan',
            hh : 'wákati %d',
            d : 'ọjọ́ kan',
            dd : 'ọjọ́ %d',
            M : 'osù kan',
            MM : 'osù %d',
            y : 'ọdún kan',
            yy : 'ọdún %d'
        },
        dayOfMonthOrdinalParse : /ọjọ́\s\d{1,2}/,
        ordinal : 'ọjọ́ %d',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4 // The week that contains Jan 4th is the first week of the year.
        }
    });

    return yo;

})));


/***/ }),
/* 217 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var zhCn = moment.defineLocale('zh-cn', {
        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
        weekdaysShort : '周日_周一_周二_周三_周四_周五_周六'.split('_'),
        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY/MM/DD',
            LL : 'YYYY年M月D日',
            LLL : 'YYYY年M月D日Ah点mm分',
            LLLL : 'YYYY年M月D日ddddAh点mm分',
            l : 'YYYY/M/D',
            ll : 'YYYY年M月D日',
            lll : 'YYYY年M月D日 HH:mm',
            llll : 'YYYY年M月D日dddd HH:mm'
        },
        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === '凌晨' || meridiem === '早上' ||
                    meridiem === '上午') {
                return hour;
            } else if (meridiem === '下午' || meridiem === '晚上') {
                return hour + 12;
            } else {
                // '中午'
                return hour >= 11 ? hour : hour + 12;
            }
        },
        meridiem : function (hour, minute, isLower) {
            var hm = hour * 100 + minute;
            if (hm < 600) {
                return '凌晨';
            } else if (hm < 900) {
                return '早上';
            } else if (hm < 1130) {
                return '上午';
            } else if (hm < 1230) {
                return '中午';
            } else if (hm < 1800) {
                return '下午';
            } else {
                return '晚上';
            }
        },
        calendar : {
            sameDay : '[今天]LT',
            nextDay : '[明天]LT',
            nextWeek : '[下]ddddLT',
            lastDay : '[昨天]LT',
            lastWeek : '[上]ddddLT',
            sameElse : 'L'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(日|月|周)/,
        ordinal : function (number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                    return number + '日';
                case 'M':
                    return number + '月';
                case 'w':
                case 'W':
                    return number + '周';
                default:
                    return number;
            }
        },
        relativeTime : {
            future : '%s内',
            past : '%s前',
            s : '几秒',
            ss : '%d 秒',
            m : '1 分钟',
            mm : '%d 分钟',
            h : '1 小时',
            hh : '%d 小时',
            d : '1 天',
            dd : '%d 天',
            M : '1 个月',
            MM : '%d 个月',
            y : '1 年',
            yy : '%d 年'
        },
        week : {
            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return zhCn;

})));


/***/ }),
/* 218 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var zhHk = moment.defineLocale('zh-hk', {
        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
        weekdaysShort : '週日_週一_週二_週三_週四_週五_週六'.split('_'),
        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY/MM/DD',
            LL : 'YYYY年M月D日',
            LLL : 'YYYY年M月D日 HH:mm',
            LLLL : 'YYYY年M月D日dddd HH:mm',
            l : 'YYYY/M/D',
            ll : 'YYYY年M月D日',
            lll : 'YYYY年M月D日 HH:mm',
            llll : 'YYYY年M月D日dddd HH:mm'
        },
        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
                return hour;
            } else if (meridiem === '中午') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === '下午' || meridiem === '晚上') {
                return hour + 12;
            }
        },
        meridiem : function (hour, minute, isLower) {
            var hm = hour * 100 + minute;
            if (hm < 600) {
                return '凌晨';
            } else if (hm < 900) {
                return '早上';
            } else if (hm < 1130) {
                return '上午';
            } else if (hm < 1230) {
                return '中午';
            } else if (hm < 1800) {
                return '下午';
            } else {
                return '晚上';
            }
        },
        calendar : {
            sameDay : '[今天]LT',
            nextDay : '[明天]LT',
            nextWeek : '[下]ddddLT',
            lastDay : '[昨天]LT',
            lastWeek : '[上]ddddLT',
            sameElse : 'L'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
        ordinal : function (number, period) {
            switch (period) {
                case 'd' :
                case 'D' :
                case 'DDD' :
                    return number + '日';
                case 'M' :
                    return number + '月';
                case 'w' :
                case 'W' :
                    return number + '週';
                default :
                    return number;
            }
        },
        relativeTime : {
            future : '%s內',
            past : '%s前',
            s : '幾秒',
            ss : '%d 秒',
            m : '1 分鐘',
            mm : '%d 分鐘',
            h : '1 小時',
            hh : '%d 小時',
            d : '1 天',
            dd : '%d 天',
            M : '1 個月',
            MM : '%d 個月',
            y : '1 年',
            yy : '%d 年'
        }
    });

    return zhHk;

})));


/***/ }),
/* 219 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var zhTw = moment.defineLocale('zh-tw', {
        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
        weekdaysShort : '週日_週一_週二_週三_週四_週五_週六'.split('_'),
        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY/MM/DD',
            LL : 'YYYY年M月D日',
            LLL : 'YYYY年M月D日 HH:mm',
            LLLL : 'YYYY年M月D日dddd HH:mm',
            l : 'YYYY/M/D',
            ll : 'YYYY年M月D日',
            lll : 'YYYY年M月D日 HH:mm',
            llll : 'YYYY年M月D日dddd HH:mm'
        },
        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
                return hour;
            } else if (meridiem === '中午') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === '下午' || meridiem === '晚上') {
                return hour + 12;
            }
        },
        meridiem : function (hour, minute, isLower) {
            var hm = hour * 100 + minute;
            if (hm < 600) {
                return '凌晨';
            } else if (hm < 900) {
                return '早上';
            } else if (hm < 1130) {
                return '上午';
            } else if (hm < 1230) {
                return '中午';
            } else if (hm < 1800) {
                return '下午';
            } else {
                return '晚上';
            }
        },
        calendar : {
            sameDay : '[今天] LT',
            nextDay : '[明天] LT',
            nextWeek : '[下]dddd LT',
            lastDay : '[昨天] LT',
            lastWeek : '[上]dddd LT',
            sameElse : 'L'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
        ordinal : function (number, period) {
            switch (period) {
                case 'd' :
                case 'D' :
                case 'DDD' :
                    return number + '日';
                case 'M' :
                    return number + '月';
                case 'w' :
                case 'W' :
                    return number + '週';
                default :
                    return number;
            }
        },
        relativeTime : {
            future : '%s內',
            past : '%s前',
            s : '幾秒',
            ss : '%d 秒',
            m : '1 分鐘',
            mm : '%d 分鐘',
            h : '1 小時',
            hh : '%d 小時',
            d : '1 天',
            dd : '%d 天',
            M : '1 個月',
            MM : '%d 個月',
            y : '1 年',
            yy : '%d 年'
        }
    });

    return zhTw;

})));


/***/ }),
/* 220 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _create = __webpack_require__(43);

var _create2 = _interopRequireDefault(_create);

var _typeof2 = __webpack_require__(45);

var _typeof3 = _interopRequireDefault(_typeof2);

var _keys = __webpack_require__(20);

var _keys2 = _interopRequireDefault(_keys);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable */
var bowser = __webpack_require__(23);

if (!_keys2.default) {
  Object.keys = function () {
    var hasOwnProperty = Object.prototype.hasOwnProperty,
        hasDontEnumBug = !{ toString: null }.propertyIsEnumerable('toString'),
        dontEnums = ['toString', 'toLocaleString', 'valueOf', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'constructor'],
        dontEnumsLength = dontEnums.length;

    return function (obj) {
      if ((typeof obj === 'undefined' ? 'undefined' : (0, _typeof3.default)(obj)) !== 'object' && (typeof obj !== 'function' || obj === null)) {
        throw new TypeError('Object.keys called on non-object');
      }
      var result = [],
          prop = void 0,
          i = void 0;
      for (prop in obj) {
        if (hasOwnProperty.call(obj, prop)) {
          result.push(prop);
        }
      }
      if (hasDontEnumBug) {
        for (i = 0; i < dontEnumsLength; i++) {
          if (hasOwnProperty.call(obj, dontEnums[i])) {
            result.push(dontEnums[i]);
          }
        }
      }
      return result;
    };
  }();
}

if (typeof _create2.default !== 'function') {
  Object.create = function () {
    function Temp() {}
    var hasOwn = Object.prototype.hasOwnProperty;
    return function (O) {
      if ((typeof O === 'undefined' ? 'undefined' : (0, _typeof3.default)(O)) !== 'object') {
        throw TypeError('Object prototype may only be an Object or null');
      }
      Temp.prototype = O;
      var obj = new Temp();
      Temp.prototype = null;
      if (arguments.length > 1) {
        var Properties = Object(arguments[1]);
        for (var prop in Properties) {
          if (hasOwn.call(Properties, prop)) obj[prop] = Properties[prop];
        }
      }
      return obj;
    };
  }();
}

if (!Array.prototype.map) {
  Array.prototype.map = function (callback, thisArg) {
    var T = void 0,
        A = void 0,
        k = void 0;
    if (this == null) throw new TypeError('This is null or not defined');
    var O = Object(this);
    var len = O.length >>> 0;
    if (typeof callback !== 'function') {
      throw new TypeError(callback + ' is not a function');
    }
    if (arguments.length > 1) T = thisArg;
    A = new Array(len);
    k = 0;
    while (k < len) {
      var kValue, mappedValue;
      if (k in O) {
        kValue = O[k];
        mappedValue = callback.call(T, kValue, k, O);
        A[k] = mappedValue;
      }
      k++;
    }
    return A;
  };
}

if (!Array.prototype.find) {
  Array.prototype.find = function (predicate) {
    if (this === null) {
      throw new TypeError('Array.prototype.find called on null or undefined');
    }
    if (typeof predicate !== 'function') {
      throw new TypeError('predicate must be a function');
    }
    var list = Object(this);
    var length = list.length >>> 0;
    var thisArg = arguments[1];
    var value = void 0;
    for (var i = 0; i < length; i++) {
      value = list[i];
      if (predicate.call(thisArg, value, i, list)) return value;
    }
  };
}

if (bowser.msie && bowser.version <= 8) {
  var splitSolved = void 0;
  splitSolved = splitSolved || function (undef) {
    var nativeSplit = String.prototype.split,
        compliantExecNpcg = /()??/.exec('')[1] === undef,
        // NPCG: nonparticipating capturing group
    self = void 0;

    self = function self(str, separator, limit) {
      // If `separator` is not a regex, use `nativeSplit`
      if (Object.prototype.toString.call(separator) !== '[object RegExp]') {
        return nativeSplit.call(str, separator, limit);
      }
      var output = [],
          flags = (separator.ignoreCase ? 'i' : '') + (separator.multiline ? 'm' : '') + (separator.extended ? 'x' : '') + ( // Proposed for ES6
      separator.sticky ? 'y' : ''),
          // Firefox 3+
      lastLastIndex = 0,

      // Make `global` and avoid `lastIndex` issues by working with a copy
      separator = new RegExp(separator.source, flags + 'g'),
          separator2,
          match,
          lastIndex,
          lastLength;
      str += ''; // Type-convert
      if (!compliantExecNpcg) {
        // Doesn't need flags gy, but they don't hurt
        separator2 = new RegExp('^' + separator.source + '$(?!\\s)', flags);
      }
      /* Values for `limit`, per the spec:
           * If undefined: 4294967295 // Math.pow(2, 32) - 1
           * If 0, Infinity, or NaN: 0
           * If positive number: limit = Math.floor(limit); if (limit > 4294967295) limit -= 4294967296;
           * If negative number: 4294967296 - Math.floor(Math.abs(limit))
           * If other: Type-convert, then use the above rules
           */
      limit = limit === undef ? -1 >>> 0 // Math.pow(2, 32) - 1
      : limit >>> 0; // ToUint32(limit)
      while (match = separator.exec(str)) {
        // `separator.lastIndex` is not reliable cross-browser
        lastIndex = match.index + match[0].length;
        if (lastIndex > lastLastIndex) {
          output.push(str.slice(lastLastIndex, match.index));
          // Fix browsers whose `exec` methods don't consistently return `undefined` for
          // nonparticipating capturing groups
          if (!compliantExecNpcg && match.length > 1) {
            match[0].replace(separator2, function () {
              for (var i = 1; i < arguments.length - 2; i++) {
                if (arguments[i] === undef) {
                  match[i] = undef;
                }
              }
            });
          }
          if (match.length > 1 && match.index < str.length) {
            Array.prototype.push.apply(output, match.slice(1));
          }
          lastLength = match[0].length;
          lastLastIndex = lastIndex;
          if (output.length >= limit) {
            break;
          }
        }
        if (separator.lastIndex === match.index) {
          separator.lastIndex++; // Avoid an infinite loop
        }
      }
      if (lastLastIndex === str.length) {
        if (lastLength || !separator.test('')) {
          output.push('');
        }
      } else {
        output.push(str.slice(lastLastIndex));
      }
      return output.length > limit ? output.slice(0, limit) : output;
    };

    // For convenience
    String.prototype.split = function (separator, limit) {
      return self(this, separator, limit);
    };

    return self;
  }();
}

exports.StringDate = function (value) {
  if (!value) return new Date();
  value = value.split(' ');
  var date = value[0].split('-');
  var time = value[1] ? value[1].split(':') : [];

  return new Date(date[0], date[1] - 1, date[2], time[0] || 0, time[1] || 0, time[2] || 0);
};

/***/ }),
/* 221 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _popper = __webpack_require__(402);

var _popper2 = _interopRequireDefault(_popper);

var _component = __webpack_require__(1);

var _component2 = _interopRequireDefault(_component);

var _2 = __webpack_require__(2);

var _3 = _interopRequireDefault(_2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var PopperComponent = _component2.default.extend({
  name: 'kl-popper',
  template: '\n    <div class="{class} {isShow ? \'fadeIn\' : \'fadeOut\'}"\n      r-hide={!isShow}\n      ref="popper"\n      v-clickoutside="onClose">\n      {#inc this.$body}\n    </div>\n    ',
  config: function config(data) {
    var _this = this;

    this.defaults({
      referenceElm: null,
      popperJS: null,
      showPopper: false,
      currentPlacement: '',
      reference: {},
      appendToBody: false,
      placement: 'bottom',
      isShow: false
    });

    this.supr(data);

    this.$watch('isShow', function (newVal) {
      var index = PopperComponent.opens.indexOf(_this);
      if (newVal) {
        _this.$emit('show');
        if (index < 0) {
          PopperComponent.opens.push(_this);
        }
        _this.updatePopper();
      } else {
        _this.$emit('hide');
        if (index > 0) {
          PopperComponent.opens.splice(index, 1);
        }
      }
    });
  },
  init: function init() {},
  destroyPopper: function destroyPopper() {
    // todo: 待优化（这种方式感觉不是很好）
    if (document.body.contains(this.$el)) {
      this.$el && document.body.removeChild(this.$el);
    }
    this.data.popperJS && this.data.popperJS.destroy();
    this.data.popperJS = null;
  },
  updatePopper: function updatePopper() {
    var _this2 = this;

    if (!this.data.popperJS) {
      var boundariesElement = 'scrollParent';
      if (this.data.appendToBody === true) {
        document.body.appendChild(this.$refs.popper);
        var referenceWidth = window.getComputedStyle(this.data.reference).width;
        this.$refs.popper.style.width = referenceWidth;
        boundariesElement = 'window';
      }
      this.data.popperJS = new _popper2.default(this.data.reference, this.$refs.popper, {
        placement: this.data.placement,
        modifiers: {
          preventOverflow: {
            // boundariesElement: document.querySelector(".myclass"),
            enabled: true,
            boundariesElement: boundariesElement
          },
          hide: {
            // ModifierFn(data, options) {
            //   console.log(123);
            // },
          }
        },
        onCreate: function onCreate() {
          // console.log('create');
        },

        onUpdate: function onUpdate() {
          if (!_this2.$refs || !_this2.$refs.popper) return;
          if (_this2.$refs.popper.attributes['x-out-of-boundaries']) {
            _this2.data.isShow = false;
            _this2.$update();
          }
        }
      });
    }
    this.data.popperJS.update();
  },
  onClose: function onClose() {
    if (this.data.isShow === true) {
      this.data.isShow = false;
    }
  },
  destroy: function destroy() {
    var index = PopperComponent.opens.indexOf(this);
    index >= 0 && PopperComponent.opens.splice(index, 1);
    this.supr();
  }
});

PopperComponent.opens = [];

_3.default.dom.on(document, 'click', function (e) {
  var opens = PopperComponent.opens.map(function (d) {
    return d;
  });
  opens.forEach(function (popperNode) {
    // 这个地方不能用stopPropagation来处理，因为展开一个popperNode的同时要收起其他popperNode
    var element = popperNode.$refs.popper;
    var referenceNode = popperNode.data.reference;
    // let clickedElem = e.target;
    if (referenceNode.contains(e.target) || element.contains(e.target)) {
      return false;
    }
    // while (clickedElem) {
    //   if (element === clickedElem || referenceNode === clickedElem) return;
    //   clickedElem = clickedElem.parentElement;
    // }
    // popperNode.toggle(false);
    popperNode.data.isShow = false;
    popperNode.$update();
  });
});

module.exports = PopperComponent;

/***/ }),
/* 222 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1,eval)("this");
} catch(e) {
	// This works if the window reference is available
	if(typeof window === "object")
		g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 223 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * ------------------------------------------------------------
 * kl-select  util
 * ------------------------------------------------------------
 */

var selectUtil = {
  /**
     * 设置对应的key为value
     * @param target   目标对象
     * @param key      需要设置的key
     * @param value    设置的值
     */
  clearDataToNUll: function clearDataToNUll(target, key, value) {
    target[key] = value || '';
  },

  /**
     * 根据是否多选获取selected中key对应的字段并返回
     * @param data          组件data
     * @param valueFn       非多选时获取selected中key对应值的函数
     * @param nullValue     未获取到key对应值时的默认值
     * @param separator     多选时拼接key对应的字段的分隔符
     * @param key           获取值的key
     * @returns {string}    最终返回值
     */
  getSelectedTextByKey: function getSelectedTextByKey(data, valueFn, nullValue, separator, key) {
    var selected = data.selected;
    var value = '';
    if (selected) {
      if (data.multiple) {
        value = selected.length ? selected.reduce(function (prev, next, index) {
          var nextValue = next[key];
          if (index !== selected.length - 1) {
            nextValue += separator;
          }
          return prev + nextValue;
        }, '') : nullValue;
      } else {
        value = valueFn(selected);
      }
    }
    return value;
  }
};

module.exports = selectUtil;

/***/ }),
/* 224 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _keys = __webpack_require__(20);

var _keys2 = _interopRequireDefault(_keys);

var _promise = __webpack_require__(420);

var _promise2 = _interopRequireDefault(_promise);

var _values = __webpack_require__(70);

var _values2 = _interopRequireDefault(_values);

var _getIterator2 = __webpack_require__(38);

var _getIterator3 = _interopRequireDefault(_getIterator2);

var _stringify = __webpack_require__(44);

var _stringify2 = _interopRequireDefault(_stringify);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 *  ------------------------------
 *  upload.base 上传基础类
 *  ------------------------------
 */

var Component = __webpack_require__(1);
var _ = __webpack_require__(2);
var utils = __webpack_require__(47);
var Config = __webpack_require__(68);
var FileUnit = __webpack_require__(430);
var KLImagePreview = __webpack_require__(229);

/**
 * @class UploadBase
 * @extend Component
 * @param {object}     [options.data]                = 绑定属性
 * @param {string}     [options.data.action]         => 必选，上传地址
 * @param {array}      [options.data.file-list]      => 上传的文件列表, 可以指定初始值，代表已经上传的文件，见demo，每次操作文件后，
 *                                                       都可以通过该参数绑定的变量，得到最新的文件列表，其中每个文件项包含下面的字段:
 *                                                       name: 文件名称
 *                                                       url: 文件的路径
 *                                                       flag: 0, 新增的文件; 1, 已经上传未被删除的文件，2，已经上传被删除的文件
 * @param {string}     [options.data.name]           => 可选，上传的文件字段名, 默认为'file'
 * @param {object}     [options.data.headers]              => 可选，设置上传的请求头部
 * @param {object}     [options.data.with-credentials=false]    => 可选，支持发送 cookie 凭证信息, 默认false
 * @param {boolean}    [options.data.multiple]       => 可选，是否支持多选, 可选值true/false，默认false单选
 * @param {object}     [options.data.data]           => 可选，上传时附带的额外参数
 * @param {boolean}    [options.data.drag]           => 可选，是否支持拖拽上传，可选值true/false，默认false不支持拖拽
 * @param {string}     [options.data.accept]         => 可选，接受上传的文件类型, 同input的accept属性
 * @param {string}     [options.data.list-type]      => 可选，上传组件的展示形式, 可选值list/card，默认list
 * @param {number}     [options.data.num-min]        => 可选，指定的至少上传的文件个数，默认无限制
 * @param {number}     [options.data.num-max]        => 可选，最大允许上传文件的个数，默认无限制
 * @param {number}     [options.data.num-perline]    => 可选，每行展示的文件个数，对于列表形式，默认无限制，根据父容器自动折行；
 *                                                       对于表单形式，默认每行展示5个
 * @param {number}     [options.data.max-size]       => 可选，上传文件大小的最大允许值, 支持数值大小以及KB,MB,GB为单元的指定
 * @param {boolean}    [options.data.readonly]       => 可选，是否开启预览模式，可选值true/false，true预览模式，只能预览和下载图片，
 *                                                       默认false，允许上传和删除图片
 * @param {number}     [options.data.image-width]    => 可选，指定上传图片文件的宽度, 值为数值，单位为px，如800
 * @param {number}     [options.data.image-height]   => 可选，指定上传图片文件的高度, 值为数值，单位为px, 如600
 * @param {string}     [options.data.image-scale]    => 可选，指定上传图片文件的宽高比, 值为冒号分隔的宽高比例字符串，如'4:3'
 * @param {boolean}    [options.data.readonly]       => 可选，是否开启预览模式，可选值true/false，true预览模式，只能预览和下载图片，
 */
var UploadBase = Component.extend({
  config: function config(data) {
    this.supr(data);

    _.extend(data, {
      action: '',
      name: 'file',
      headers: {},
      withCredentials: false,
      multiple: false,
      data: {},
      drag: false,
      accept: '*',
      listType: 'list',
      fileList: [],
      numMin: -Infinity,
      numMax: Infinity,
      numPerline: Infinity,
      maxSize: Config.sizeMap.GB,
      readonly: false,
      imageWidth: Infinity,
      imageHeight: Infinity,
      imageScale: '',
      encType: 'multipart/form-data',
      onLoadInterceptor: null,
      onErrorInterceptor: null,
      beforeUpload: null,
      beforeRemove: null
    });

    _.extend(data, {
      fileUnitList: [],
      dragover: false,
      dragenterCount: 0
    });

    this.initWatchers();
    this.initUploadedFileUnitList();
  },
  initWatchers: function initWatchers() {
    var self = this;

    this.$watch('fileList', function (newVal, oldVal) {
      if (oldVal !== undefined) {
        if (newVal.length >= oldVal.length) {
          self.extendFileList(newVal);
        } else {
          self.reduceFileList(newVal, oldVal);
        }
      }
    }, true);
  },
  extendFileList: function extendFileList(fileList) {
    var self = this;
    var data = this.data;

    function filterDeleted(file) {
      return file.flag !== Config.flagMap.DELETED;
    }

    fileList.filter(filterDeleted).forEach(function (file, index) {
      if (!file.uid) {
        var uid = utils.genUid();
        file.uid = uid;
        file.flag = file.flag === undefined ? Config.flagMap.ORIGINAL : file.flag;
        var fileunit = {
          name: file.name,
          url: file.url,
          type: self.getFileType(file),
          flag: file.flag,
          uid: file.uid,
          status: 'success'
        };
        data.fileUnitList.splice(index, index, fileunit);
      }
    });
  },
  reduceFileList: function reduceFileList(deletedFileList, srcFileList) {
    var data = this.data;

    function filterDeleted(file, srcIndex) {
      var index = deletedFileList.findIndex(function (item) {
        var isEqual = item.name === file.name && item.url === file.url;
        if (item.uid && file.uid) {
          isEqual = isEqual && item.uid === file.uid;
        }
        return isEqual;
      });

      if (index === -1 && (file.flag === Config.flagMap.ORIGINAL || file.flag === Config.flagMap.DELETED)) {
        file.flag = Config.flagMap.DELETED;
        data.fileList.splice(srcIndex, 0, file);
      }

      return index === -1;
    }

    srcFileList.filter(filterDeleted).forEach(function (file) {
      if (file.uid) {
        var visualIndex = data.fileUnitList.findIndex(function (item) {
          return item.uid === file.uid;
        });

        if (visualIndex !== -1) {
          data.fileUnitList.splice(visualIndex, 1);
        }
      }
    });
  },
  init: function init(data) {
    this.supr(data);
  },
  initUploadedFileUnitList: function initUploadedFileUnitList() {
    var self = this;
    var data = this.data;
    var fileList = data.fileList;
    var fileUnitList = data.fileUnitList;

    if (data.fileList.length > 0) {
      fileList.forEach(function (file) {
        var uid = utils.genUid();
        file.uid = uid;
        file.flag = file.flag === undefined ? Config.flagMap.ORIGINAL : file.flag;
        var fileunit = {
          name: file.name,
          url: file.url,
          type: self.getFileType(file),
          flag: file.flag,
          uid: file.uid,
          status: 'success',
          class: file.class || ''
        };

        if (fileunit.flag !== Config.flagMap.DELETED) {
          fileUnitList.push(fileunit);
        }
      });
    }
  },
  updateList: function updateList(info) {
    // setTimeout((function() { this.updateFileList(); }).bind(this), 0);
    this.updateFileList(info);
  },
  updateFileList: function updateFileList(info) {
    var data = this.data;
    var uid = info.file.uid;
    var fileUnitList = data.fileUnitList;


    var fileList = JSON.parse((0, _stringify2.default)(data.fileList));
    // 找到触发更新的unit单元
    var unitIndex = fileUnitList.findIndex(function (item) {
      return uid === item.uid;
    });
    var unit = fileUnitList[unitIndex];
    var name = unit.name,
        url = unit.url,
        flag = unit.flag,
        destroyed = unit.destroyed;

    // 找到该unit单元在fileList中的位置

    var fileIndex = fileList.findIndex(function (item) {
      return uid === item.uid;
    });
    if (fileIndex === -1 && (unit.status === 'success' || unit.status === 'wait')) {
      // fileList中不存在该单元数据，新增数据
      // 只有当上传成功时才更新fileList
      fileList.push({ name: name, url: url, flag: flag, uid: uid });
    } else if (flag === Config.flagMap.DELETED) {
      if (fileIndex !== -1) {
        fileList[fileIndex].flag = Config.flagMap.DELETED;
      }
      fileUnitList.splice(unitIndex, 1);
    } else if (destroyed) {
      if (fileIndex !== -1) {
        fileList.splice(fileIndex, 1);
      }
      fileUnitList.splice(unitIndex, 1);
    }
    data.fileList = fileList;
    if (!data.autoUpload) {
      this.initFormData();
    }
    this.$update();
  },
  initFormData: function initFormData() {
    var data = this.data;
    var name = data.name || 'file';
    var fileList = data.fileList,
        fileUnitList = data.fileUnitList;


    data.formData = data.formData || new FormData();
    data.formData.delete(name);
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
      var _loop = function _loop() {
        var file = _step.value;
        var flag = file.flag,
            uid = file.uid;

        if (flag === Config.flagMap.ADDED) {
          var unitIndex = fileUnitList.findIndex(function (item) {
            return uid === item.uid;
          });
          data.formData.append(name, fileUnitList[unitIndex].rawFile);
        }
      };

      for (var _iterator = (0, _getIterator3.default)((0, _values2.default)(fileList)), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        _loop();
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
  },
  fileDialogOpen: function fileDialogOpen() {
    var inputNode = this.$refs.file;
    inputNode && inputNode.click();
  },
  fileSelect: function fileSelect() {
    var inputNode = this.$refs.file;
    var files = inputNode.files;

    this.handleFiles(files);

    inputNode.value = '';
  },
  onDragEnter: function onDragEnter(e) {
    var data = this.data;
    e.stopPropagation();
    e.preventDefault();
    data.dragover = true;
    data.dragenterCount += 1;
  },
  onDragOver: function onDragOver(e) {
    e.stopPropagation();
    e.preventDefault();
  },
  onDragLeave: function onDragLeave(e) {
    var data = this.data;
    e.stopPropagation();
    e.preventDefault();
    data.dragenterCount -= 1;
    if (data.dragenterCount === 0) {
      data.dragover = false;
    }
  },
  onDrop: function onDrop(e) {
    this.data.dragover = false;
    e.stopPropagation();
    e.preventDefault();

    if (!this.data.drag) {
      return;
    }

    var dt = e.event && e.event.dataTransfer;
    var files = dt.files;

    this.handleFiles(files);
  },
  handleFiles: function handleFiles(files) {
    var self = this;
    var data = this.data;

    data.preCheckInfo = '';

    var fileList = [].slice.call(files);
    fileList.forEach(function (file) {
      if (data.fileUnitList.length < data.numMax) {
        var checker = self.preCheck(file);
        checker.then(function (preCheckInfo) {
          data.preCheckInfo = preCheckInfo;
          self.$update();
          if (!data.preCheckInfo && data.fileUnitList.length < data.numMax) {
            var fileunit = {
              rawFile: file,
              name: file.name,
              url: window.URL.createObjectURL(file),
              type: self.getFileType(file),
              flag: Config.flagMap.ADDED,
              uid: utils.genUid(),
              status: self.data.autoUpload ? 'ready' : 'wait'
            };
            data.fileUnitList.push(fileunit);
            self.$update();
          }
        });
      }
    });
  },
  onPreview: function onPreview(info) {
    var current = info.file;
    this.$emit('preview', info);
    if (current.type !== 'image') {
      return;
    }
    function filterImgFile(file) {
      return file.type === 'image';
    }

    function mapCurrentFlag(img) {
      if (current === img) {
        img.current = true;
      }
      return img;
    }

    var imageList = this.data.fileUnitList.filter(filterImgFile).map(mapCurrentFlag);

    var preview = createImagePreview(imageList);

    preview.$inject(this.$refs.imagepreview);

    function createImagePreview(imgFileList) {
      function findHelper(img) {
        return img.current;
      }

      var curIndex = imgFileList.findIndex(findHelper);

      function mapHelper(img) {
        delete img.current;
        return {
          src: img.url,
          name: img.name,
          status: img.status
        };
      }

      imageList = imgFileList.map(mapHelper);
      var imagePreview = new KLImagePreview({
        data: {
          imageList: imageList,
          curIndex: curIndex
        }
      });

      imagePreview.$on('remove', function (imgInfo) {
        var index = imgInfo.index;
        var imgInst = imgFileList[index];

        if (imgInst) {
          imgInst.$emit('remove');
        }
      });

      imagePreview.$on('$destroy', function () {
        imgFileList.splice(0);
      });

      return imagePreview;
    }
  },
  onProgress: function onProgress(info) {
    this.$emit('progress', _.extend(info, {
      fileList: this.data.fileList
    }));
  },
  onSuccess: function onSuccess(info) {
    this.updateList(info);
    this.$emit('success', _.extend(info, {
      fileList: this.data.fileList
    }));
  },
  onError: function onError(info) {
    // 错误的情况下不更新fileList
    // this.updateList(info);
    this.$emit('error', _.extend(info, {
      fileList: this.data.fileList
    }));
  },
  onRemove: function onRemove(info) {
    var inst = info.sender;
    var file = info.file;
    file.destroyed = true;
    if (file.flag === Config.flagMap.ORIGINAL) {
      file.flag = Config.flagMap.DELETED;
    }
    inst.destroy();
    this.updateList(info);

    this.$emit('remove', _.extend(info, {
      fileList: this.data.fileList
    }));
  },
  setOptions: function setOptions(options) {
    var opts = options || {};

    return {
      url: opts.action,
      name: opts.name,
      readonly: opts.readonly,
      data: opts.data
    };
  },
  preCheck: function preCheck(file) {
    var self = this;
    var data = self.data;
    var beforeCheck = data.beforeUpload && data.beforeUpload(file);

    var preFileCheck = function preFileCheck(resolve) {
      var type = self.getFileType(file).toLowerCase();
      var preCheckInfo = '';

      if (!self.isAcceptedFileSize(file)) {
        preCheckInfo = self.$trans('FILE_TOO_LARGE');
        return resolve(preCheckInfo);
      }
      if (!self.isAcceptedFileType(file)) {
        preCheckInfo = self.$trans('FILE_TYPE_ERROR');
        return resolve(preCheckInfo);
      }

      if (type === 'image') {
        var imageChecker = self.preCheckImage(file);
        imageChecker && imageChecker.then(function (imageCheckInfo) {
          return resolve(imageCheckInfo);
        });
      } else {
        return resolve(preCheckInfo);
      }
    };

    if (beforeCheck && beforeCheck.then) {
      return beforeCheck.then(function (checkInfo) {
        if (checkInfo === '') {
          return new _promise2.default(preFileCheck);
        }
        return _promise2.default.resolve(checkInfo);
      });
    } else if (beforeCheck === '' || beforeCheck === null || beforeCheck === undefined) {
      return new _promise2.default(preFileCheck);
    }

    return _promise2.default.resolve(beforeCheck);
  },
  preCheckImage: function preCheckImage(file) {
    var self = this;
    var data = this.data;
    var type = this.getFileType(file).toLowerCase();

    if (type === 'image') {
      var imageWidth = data.imageWidth;
      var imageHeight = data.imageHeight;
      var imageScale = data.imageScale;

      var preImageCheck = function preImageCheck(resolve) {
        var img = new window.Image();
        img.onload = function () {
          window.URL.revokeObjectURL(img.src);
          var width = img.width;
          var height = img.height;
          var checkInfo = '';
          if (isFinite(imageWidth) && imageWidth !== width) {
            checkInfo = self.$trans('IMAGE_WIDTH_ERROR');
          }
          if (isFinite(imageHeight) && imageHeight !== height) {
            checkInfo = self.$trans('IMAGE_HEIGHT_ERROR');
          }
          if (imageScale) {
            var scaleList = imageScale.split(':');
            var scaleW = scaleList[0];
            var scaleH = scaleList[1];
            if (Math.abs(width / height - scaleW / scaleH) > 0.01) {
              checkInfo = self.$trans('IMAGE_SCALE_ERROR');
            }
          }

          resolve(checkInfo);
        };

        img.src = window.URL.createObjectURL(file);
      };

      return new _promise2.default(preImageCheck);
    }
  },
  isAcceptedFileType: function isAcceptedFileType(file) {
    var data = this.data;
    var accept = data.accept;
    var type = this.getFileType(file).toLowerCase();
    var isValid = false;

    accept.split(',').forEach(function (cond) {
      if (cond === '*') {
        isValid = true;
      } else if (/image\/.*/.test(cond)) {
        isValid = isValid || type === 'image';
      } else if (/audio\/.*/.test(cond)) {
        isValid = isValid || type === 'audio';
      } else if (/video\/.*/.test(cond)) {
        isValid = isValid || type === 'video';
      } else {
        isValid = isValid || type === Config.typeMap[cond];
      }
    });

    return isValid;
  },
  getFileType: function getFileType(file) {
    var type = file.type || '';
    var name = file.name || '';
    var typeMap = Config.typeMap;
    var typeStr = 'unknown';

    (0, _keys2.default)(typeMap).forEach(function (key) {
      var reg = new RegExp(key + '$');
      // 名称后缀不区分大小写
      if (reg.test(type) || reg.test(('' + name).toLowerCase())) {
        typeStr = typeMap[key];
      }
    });

    return typeStr;
  },
  isAcceptedFileSize: function isAcceptedFileSize(file) {
    var data = this.data;
    var maxSize = data.maxSize;
    var fileSize = file.size;

    var patterns = maxSize.match(/(\d+)(\D+)?/i);
    var size = patterns[1];
    var unit = patterns[2];

    if (unit) {
      size *= Config.sizeMap[unit.toUpperCase()];
    }

    return size >= fileSize;
  }
}).component('file-unit', FileUnit);

module.exports = UploadBase;

/***/ }),
/* 225 */
/***/ (function(module, exports, __webpack_require__) {

// call something on iterator step with safe closing on error
var anObject = __webpack_require__(13);
module.exports = function(iterator, fn, value, entries){
  try {
    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
  // 7.4.6 IteratorClose(iterator, completion)
  } catch(e){
    var ret = iterator['return'];
    if(ret !== undefined)anObject(ret.call(iterator));
    throw e;
  }
};

/***/ }),
/* 226 */
/***/ (function(module, exports, __webpack_require__) {

// check on default Array iterator
var Iterators  = __webpack_require__(22)
  , ITERATOR   = __webpack_require__(7)('iterator')
  , ArrayProto = Array.prototype;

module.exports = function(it){
  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
};

/***/ }),
/* 227 */
/***/ (function(module, exports, __webpack_require__) {

var ctx                = __webpack_require__(26)
  , invoke             = __webpack_require__(426)
  , html               = __webpack_require__(77)
  , cel                = __webpack_require__(50)
  , global             = __webpack_require__(8)
  , process            = global.process
  , setTask            = global.setImmediate
  , clearTask          = global.clearImmediate
  , MessageChannel     = global.MessageChannel
  , counter            = 0
  , queue              = {}
  , ONREADYSTATECHANGE = 'onreadystatechange'
  , defer, channel, port;
var run = function(){
  var id = +this;
  if(queue.hasOwnProperty(id)){
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};
var listener = function(event){
  run.call(event.data);
};
// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if(!setTask || !clearTask){
  setTask = function setImmediate(fn){
    var args = [], i = 1;
    while(arguments.length > i)args.push(arguments[i++]);
    queue[++counter] = function(){
      invoke(typeof fn == 'function' ? fn : Function(fn), args);
    };
    defer(counter);
    return counter;
  };
  clearTask = function clearImmediate(id){
    delete queue[id];
  };
  // Node.js 0.8-
  if(__webpack_require__(29)(process) == 'process'){
    defer = function(id){
      process.nextTick(ctx(run, id, 1));
    };
  // Browsers with MessageChannel, includes WebWorkers
  } else if(MessageChannel){
    channel = new MessageChannel;
    port    = channel.port2;
    channel.port1.onmessage = listener;
    defer = ctx(port.postMessage, port, 1);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if(global.addEventListener && typeof postMessage == 'function' && !global.importScripts){
    defer = function(id){
      global.postMessage(id + '', '*');
    };
    global.addEventListener('message', listener, false);
  // IE8-
  } else if(ONREADYSTATECHANGE in cel('script')){
    defer = function(id){
      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function(){
        html.removeChild(this);
        run.call(id);
      };
    };
  // Rest old browsers
  } else {
    defer = function(id){
      setTimeout(ctx(run, id, 1), 0);
    };
  }
}
module.exports = {
  set:   setTask,
  clear: clearTask
};

/***/ }),
/* 228 */
/***/ (function(module, exports, __webpack_require__) {

var ITERATOR     = __webpack_require__(7)('iterator')
  , SAFE_CLOSING = false;

try {
  var riter = [7][ITERATOR]();
  riter['return'] = function(){ SAFE_CLOSING = true; };
  Array.from(riter, function(){ throw 2; });
} catch(e){ /* empty */ }

module.exports = function(exec, skipClosing){
  if(!skipClosing && !SAFE_CLOSING)return false;
  var safe = false;
  try {
    var arr  = [7]
      , iter = arr[ITERATOR]();
    iter.next = function(){ return {done: safe = true}; };
    arr[ITERATOR] = function(){ return iter; };
    exec(arr);
  } catch(e){ /* empty */ }
  return safe;
};

/***/ }),
/* 229 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * @file  KLImagePreview 图片预览
 */

var Component = __webpack_require__(1);
var _ = __webpack_require__(2);
var KLModal = __webpack_require__(230);
var tpl = __webpack_require__(433);

/**
 * @class KLImagePreview
 * @extend Component
 * @param {object}     [options.data]               = 绑定属性
 * @param {array}      [options.data.image-list]    => 必选，图片文件列表, 其中每个文件项包含下面的字段:
 *                                                     name: 图片文件名称
 *                                                     src: 图片文件的路径
 * @param {number}     [options.data.cur-index=0]   => 必选，当前图片文件的索引, 默认第一项为当前项
 * @param {string}     [options.data.el]            => 设置对话框要插入的父级元素，默认为document.body
 */

var KLImagePreview = Component.extend({
  name: 'kl-image-preview',
  template: tpl.replace(/([>}])\s*([<{])/g, '$1$2'),
  config: function config(data) {
    _.extend(data, {
      imageList: [],
      curIndex: 0,
      delConfirm: false
    });

    _.extend(data, {
      showVirtual: false,
      virtualInfo: {
        rotate: 0,
        scale: 1,
        translateX: 0,
        translateY: 0,
        mouseDownX: 0,
        mouseDownY: 0,
        dragTarget: null
      },
      opList: [{
        name: 'zoomIn',
        icon: 'zoomin',
        fnName: 'zoomIn'
      }, {
        name: 'zoomOut',
        icon: 'zoomout',
        fnName: 'zoomOut'
      }, {
        name: 'rezoom',
        icon: 'min-size',
        fnName: 'rezoom'
      }, {
        name: 'rotate_left',
        icon: 'anticlockwise',
        fnName: 'rotateLeft'
      }, {
        name: 'rotate_right',
        icon: 'clockwise',
        fnName: 'rotateRight'
      }, {
        name: 'remove',
        icon: 'delete',
        fnName: 'onDel'
      }]
    });

    this.supr(data);
  },
  init: function init(data) {
    this.supr(data);

    // 如果不是内嵌组件，则嵌入到data.el或document.body中
    if (this.$root === this) {
      this.$inject(data.el || document.body);
    }
  },
  onClose: function onClose() {
    this.destroy();
  },
  onPrev: function onPrev() {
    var data = this.data;
    var length = data.imageList.length;
    var toIndex = length - 1;

    if (data.curIndex > 0) {
      data.curIndex -= 1;
      toIndex = data.curIndex;
    }

    this.setCurrentTo(toIndex);
  },
  onNext: function onNext() {
    var data = this.data;
    var length = data.imageList.length;
    var toIndex = 0;

    if (data.curIndex < length - 1) {
      data.curIndex += 1;
      toIndex = data.curIndex;
    }

    this.setCurrentTo(toIndex);
  },
  setCurrentTo: function setCurrentTo(toIndex) {
    var data = this.data;
    var refs = this.$refs;
    var curIndex = data.curIndex;

    data.showVirtual = false;
    data.virtualInfo.scale = 1;
    data.virtualInfo.rotate = 0;
    data.virtualInfo.translateX = 0;
    data.virtualInfo.translateY = 0;

    refs['full-' + curIndex].style.opacity = 0;
    refs['full-' + toIndex].style.opacity = 1;

    this.data.curIndex = toIndex;
  },
  zoomIn: function zoomIn() {
    var data = this.data;
    var virtualInfo = data.virtualInfo;
    var step = this.getZoomInStep();

    data.showVirtual = true;

    virtualInfo.scale += step;

    this.$refs.virtualimage.style.transform = this.genTransform();
  },
  zoomOut: function zoomOut() {
    var data = this.data;
    var virtualInfo = data.virtualInfo;
    var step = this.getZoomOutStep();
    var translateStepInfo = this.getTranslateStep(step);

    data.showVirtual = true;

    virtualInfo.scale -= step;
    virtualInfo.translateX -= translateStepInfo.xStep;
    virtualInfo.translateY -= translateStepInfo.yStep;

    this.$refs.virtualimage.style.transform = this.genTransform();
  },
  rezoom: function rezoom() {
    var data = this.data;
    var virtualInfo = data.virtualInfo;

    data.showVirtual = true;

    virtualInfo.scale = 1;
    virtualInfo.translateX = 0;
    virtualInfo.translateY = 0;

    this.$refs.virtualimage.style.transform = this.genTransform();
  },
  getZoomInStep: function getZoomInStep() {
    var virtualInfo = this.data.virtualInfo;
    var scale = +virtualInfo.scale.toFixed(1);
    var step = this.getScaleStep();

    if (scale <= 0.1) {
      return 0.1;
    }

    return step;
  },
  getZoomOutStep: function getZoomOutStep() {
    var virtualInfo = this.data.virtualInfo;
    var scale = +virtualInfo.scale.toFixed(1);
    var step = this.getScaleStep();

    if (scale >= 10) {
      return 1;
    }

    return step;
  },
  getScaleStep: function getScaleStep() {
    var virtualInfo = this.data.virtualInfo;
    var scale = +virtualInfo.scale.toFixed(1);

    if (scale > 0.1 && scale < 1.5) {
      return 0.1;
    } else if (scale >= 1.5 && scale < 4) {
      return 0.5;
    } else if (scale >= 4 && scale < 10) {
      return 1;
    }

    return 0;
  },
  getTranslateStep: function getTranslateStep(scaleStep) {
    var virtualInfo = this.data.virtualInfo;
    var scale = +virtualInfo.scale.toFixed(1);

    var totalSteps = (scale - 1) * 10;
    var translateX = virtualInfo.translateX;
    var translateY = virtualInfo.translateY;

    return {
      xStep: totalSteps ? translateX / totalSteps * scaleStep * 10 : 0,
      yStep: totalSteps ? translateY / totalSteps * scaleStep * 10 : 0
    };
  },
  rotateLeft: function rotateLeft() {
    this.rotate('left');
  },
  rotateRight: function rotateRight() {
    this.rotate('right');
  },
  rotate: function rotate(dir) {
    var data = this.data;
    var virtualInfo = data.virtualInfo;
    var image = this.$refs.virtualimage;

    data.showVirtual = true;

    if (dir === 'right') {
      virtualInfo.rotate += 90;
    } else if (dir === 'left') {
      virtualInfo.rotate -= 90;
    }

    image.style.transform = this.genTransform();
  },
  genTransform: function genTransform() {
    var virtualInfo = this.data.virtualInfo;
    return 'translateX(' + virtualInfo.translateX + 'px)' + (' translateY(' + virtualInfo.translateY + 'px)') + (' rotate(' + virtualInfo.rotate + 'deg)') + (' scale(' + virtualInfo.scale + ')');
  },
  onDel: function onDel(index) {
    var self = this;
    var data = this.data;
    var imageList = data.imageList;
    var image = imageList[index];

    if (data.delConfirm) {
      var modal = new KLModal({
        data: {
          content: this.$trans('REMOVE_CONFIRM') + image.name + '?'
        }
      });
      modal.$on('ok', function () {
        self.removeImage(index);
      });
    } else {
      self.removeImage(index);
    }
  },
  removeImage: function removeImage(index) {
    var data = this.data;
    var imageList = data.imageList;
    var image = imageList.splice(index, 1);

    if (!imageList[index]) {
      data.curIndex = 0;
    }
    this.$emit('remove', {
      image: image,
      index: index
    });
    this.$update();
  },
  onMouseDown: function onMouseDown(e) {
    var data = this.data;
    var virtualInfo = data.virtualInfo;

    virtualInfo.mouseDownX = e.pageX;
    virtualInfo.mouseDownY = e.pageY;
    virtualInfo.dragTarget = e.origin;
    virtualInfo.dragBoundary = this.getMaxMinTranslateValue();
  },
  onMouseMove: function onMouseMove(e) {
    var data = this.data;
    var virtualImg = this.$refs.virtualimage;
    var virtualInfo = data.virtualInfo;
    var originX = virtualInfo.mouseDownX;
    var originY = virtualInfo.mouseDownY;
    virtualInfo.dragBoundary = this.getMaxMinTranslateValue();

    var boundary = virtualInfo.dragBoundary;
    if (virtualInfo.dragTarget) {
      var translateX = e.pageX - originX;
      var translateY = e.pageY - originY;

      if (translateX > boundary.maxTranslateX) {
        translateX = boundary.maxTranslateX;
      } else if (translateX < boundary.minTranslateX) {
        translateX = boundary.minTranslateX;
      }

      if (translateY > boundary.maxTranslateY) {
        translateY = boundary.maxTranslateY;
      } else if (translateY < boundary.minTranslateY) {
        translateY = boundary.minTranslateY;
      }

      virtualInfo.translateX += translateX;
      virtualInfo.translateY += translateY;
      virtualInfo.mouseDownX = e.pageX;
      virtualInfo.mouseDownY = e.pageY;
      virtualImg.style.transform = this.genTransform();
    }
  },
  onMouseUp: function onMouseUp() {
    var data = this.data;
    var virtualInfo = data.virtualInfo;

    if (virtualInfo.dragTarget) {
      virtualInfo.mouseDownX = 0;
      virtualInfo.mouseDownY = 0;
      virtualInfo.dragTarget = null;
    }
  },
  onMouseWheel: function onMouseWheel(e) {
    if (e.wheelDelta > 0) {
      this.zoomIn();
    } else if (e.wheelDelta < 0) {
      this.zoomOut();
    }
  },
  getMaxMinTranslateValue: function getMaxMinTranslateValue() {
    var virtualImg = this.$refs.virtualimage;
    var virtualZone = this.$refs.virtualzone;

    var virtualImgRect = virtualImg.getBoundingClientRect();
    var virtualZoneRect = virtualZone.getBoundingClientRect();
    var maxDeltaX = virtualZoneRect.left - virtualImgRect.left;
    var maxDeltaY = virtualZoneRect.top - virtualImgRect.top;
    var minDeltaX = virtualZoneRect.right - virtualImgRect.right;
    var minDeltaY = virtualZoneRect.bottom - virtualImgRect.bottom;

    return {
      maxTranslateX: maxDeltaX > 0 ? maxDeltaX : 0,
      maxTranslateY: maxDeltaY > 0 ? maxDeltaY : 0,
      minTranslateX: minDeltaX < 0 ? minDeltaX : 0,
      minTranslateY: minDeltaY < 0 ? minDeltaY : 0
    };
  },
  downloadFile: function downloadFile(file) {
    var a = document.createElement('a');
    a.download = file.name;
    fetch(file.src).then(function (res) {
      return res.blob().then(function (blob) {
        var blobUrl = window.URL.createObjectURL(blob);
        a.href = blobUrl;
        a.click();
        window.URL.revokeObjectURL(blobUrl);
      });
    });
  }
});

module.exports = KLImagePreview;

/***/ }),
/* 230 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


//
// /**
//  * @filter  KLModal     模态对话框
//  * @author  sensen(rainforest92@126.com)
//  */

var Component = __webpack_require__(1);
var template = __webpack_require__(432);
var _ = __webpack_require__(2);

/**
 * @class KLModal
 * @extend Component
 * @param {object}            [options.data]                      = 绑定属性
 * @param {string}            [options.data.modalType=提示]             => 对话框类型, 可选参数：`default`、`notice`、`warning`、`error`、`success`
 * @param {string}            [options.data.title=提示]            => 对话框标题
 * @param {string}            [options.data.content]              => 对话框内容
 * @param {string}            [options.data.contentTemplate]      => 对话框内容模板，用于支持复杂内容的自定义。
 * @param {string}            [options.data.footerTemplate]       => 对话框底部模板
 * @param {boolean}           [options.data.okDisabled=false]     => Disable 确认按钮
 * @param {boolean}           [options.data.cancelDisabled=false] => Disable 取消按钮
 * @param {boolean}           [options.data.hasFooter=true]       => 是否显示 footer
 * @param {boolean}           [options.data.isCanClose=true]      => 是否允许取消关闭
 * @param {string/boolean}    [options.data.okButton=true]        => 是否显示确定按钮。值为`string`时显示该段文字。
 * @param {string/boolean}    [options.data.cancelButton=false]   => 是否显示取消按钮。值为`string`时显示该段文字。
 * @param {string}            [options.data.class]                => 补充class
 * @param {boolean}           [options.data.noClose]              => ok时是否关闭弹窗
 * @param {number}            [options.data.minHeight]            => 内容区域最小高度
 * @param {number}            [options.data.maxHeight]            => 内容区域最大高度，超出则显示滚动条
 * @param {string}            [options.data.el]                   => 设置对话框要插入的父级元素，默认为document.body
 * @param {boolean}           [options.data.draggable=false]      => 是否可以拖拽对话框
 * @param {boolean}           [options.data.fullscreen=false]     => 是否覆盖全屏
 */
var KLModal = Component.extend({
  name: 'kl-modal',
  template: template,
  config: function config() {
    _.extend(this.data, {
      title: this.$trans('NOTICE'),
      content: '',
      modalType: '',
      okButton: true,
      width: 400,
      cancelButton: false,
      noClose: false,
      okDisabled: false,
      cancelDisabled: false,
      hasFooter: true,
      isCanClose: true,
      fullscreen: false
    });
    this.supr();
  },
  init: function init() {
    // - 禁止Modal的时候后面的内容还可以滚动，很重要的一条！
    document.body.style.overflow = 'hidden';
    this.supr();
    // 如果不是内嵌组件，则嵌入到data.el或document.body中
    if (this.$root === this) {
      this.$inject(this.data.el || document.body);
    }
    this.$on('$destroy', function () {
      document.body.style.overflow = '';
    });
  },

  /**
     * @method KLModal#close(result) 关闭对话框
     * @param  {boolean} result 点击确定还是取消
     * @return {void}
     */
  close: function close(result, event) {
    /**
         * @event KLModal#close  关闭对话框时触发
         * @property {boolean} result 点击事件按钮，确定/取消
         */
    this.$emit('close', {
      result: result
    });
    result ? this.ok(event) : this.cancel();
  },

  /**
     * @method KLModal#ok() 确定对话框
     * @return {void}
     */
  ok: function ok(event) {
    /**
         * @event KLModal#ok 确定对话框时触发
         */
    this.$emit('ok', event);
    if (!this.data.noClose) {
      this.destroy();
      document.body.style.overflow = '';
    }
  },

  /**
     * @method KLModal#cancel() 取消对话框
     * @return {void}
     */
  cancel: function cancel() {
    /**
         * @event KLModal#cancel 取消对话框时触发
         */
    this.$emit('cancel');
    this.destroy();
    // - 禁止Modal的时候后面的内容还可以滚动，很重要的一条！
    document.body.style.overflow = '';
  },
  _onDragStart: function _onDragStart($event) {
    var dialog = $event.proxy;
    dialog.style.left = dialog.offsetLeft + 'px';
    dialog.style.top = dialog.offsetTop + 'px';
    dialog.style.zIndex = '1000';
    dialog.style.position = 'absolute';
  }
});

/**
 * @static
 * @param  {string} content 对话框内容
 * @param  {string} title=提示 对话框标题
 */
KLModal.alert = function (content, title, okButton) {
  var modal = new this({
    data: {
      content: content,
      title: title,
      okButton: okButton
    }
  });

  return modal;
};

/**
 * @static
 * @param  {string} content 对话框内容
 * @param  {string} title=提示 对话框标题
 */
KLModal.confirm = function (content, title, okButton, cancelButton) {
  var modal = new this({
    data: {
      content: content,
      title: title,
      okButton: okButton,
      cancelButton: cancelButton || true
    }
  });

  return modal;
};

module.exports = KLModal;

/***/ }),
/* 231 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _keys = __webpack_require__(20);

var _keys2 = _interopRequireDefault(_keys);

var _component = __webpack_require__(1);

var _component2 = _interopRequireDefault(_component);

var _index = __webpack_require__(444);

var _index2 = _interopRequireDefault(_index);

var _index3 = __webpack_require__(232);

var _index4 = _interopRequireDefault(_index3);

var _index5 = __webpack_require__(48);

var _index6 = _interopRequireDefault(_index5);

var _index7 = __webpack_require__(5);

var _index8 = __webpack_require__(458);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// utils


// base components
/* eslint-disable */

// common
var KLTimePickerPanel = _component2.default.extend({
    name: 'kl-time-panel',
    template: _index2.default,
    config: function config() {
        var _this = this;

        this.defaults({
            prefixCls: 'kl-picker-panel',
            timePrefixCls: 'kl-time-picker',

            disabledHours: [],
            disabledMinutes: [],
            disabledSeconds: [],
            hideDisabledOptions: false,
            confirm: false,
            disabledDate: _index8.returnFalse, // function
            steps: [],
            format: 'HH:mm:ss',
            value: null,
            showDate: false
        });
        this.supr();

        this.$watch('isShow', function (newValue) {
            if (newValue == true) {
                // 更新dom
                _this.updateScroll();
            }
        });
        this.initInternalValue();

        this.$watch('value', function () {
            _this.initInternalValue();
        });
    },
    getVisualValue: function getVisualValue(value) {
        var visualValue = void 0;
        if (!value) {
            visualValue = '';
        } else {
            visualValue = this.formatDate(value);
        }
        this.$emit('format', visualValue);
    },
    initInternalValue: function initInternalValue() {

        var value = this.data.value;

        if (!value) {
            this.data.date = null;
        } else if (Array.isArray(value)) {
            this.data.date = this.parseDate(value[0])[0];
        } else {
            this.data.date = this.parseDate(value)[0];
        }
        this.getVisualValue(this.data.date);
        this.getTimeSlots();
        this.showSeconds();
        this.getDisabledHMS();
    },
    getTimeSlots: function getTimeSlots() {
        var _this2 = this;

        if (!this.data.date) {
            this.data.timeSlots = [];
        } else {
            this.data.timeSlots = ['getHours', 'getMinutes', 'getSeconds'].map(function (fn) {
                return _this2.data.date[fn]();
            });
        }
    },
    showSeconds: function showSeconds() {
        this.data.showSeconds = !(this.data.format || '').match(/mm$/);
    },
    getDisabledHMS: function getDisabledHMS() {
        var store = this.data;
        var disabledTypes = ['disabledHours', 'disabledMinutes', 'disabledSeconds'];
        var disabled = disabledTypes.reduce(function (obj, type) {
            return obj[type] = store[type], obj;
        }, {});
        this.data.disabledHMS = disabled;
    },
    onChange: function onChange(e) {
        if (!this.data.date) {
            this.data.date = (0, _index7.initTimeDate)();
        }

        var newDate = new Date(this.data.date);
        (0, _keys2.default)(e).forEach(function (type) {
            return newDate['set' + (0, _index8.capitalize)(type)](e[type]);
        });

        this.data.date = newDate;
        this.getTimeSlots();
        this.data.value = this.formatDate(newDate);
        this.getVisualValue(this.data.date);

        this.$emit('pick', {
            value: newDate,
            type: 'time'
        });
    },
    onPickClick: function onPickClick() {
        //
    },
    formatDate: function formatDate(value) {
        var store = this.data;

        var format = _index7.DEFAULT_FORMATS.time;

        var formatter = _index7.TYPE_VALUE_RESOLVER_MAP.time.formatter;

        return formatter(value, store.format || format);
    },
    parseDate: function parseDate(val) {
        var store = this.data;
        var type = store.se;
        var format = store.format || _index7.DEFAULT_FORMATS.time;
        var parser = _index7.TYPE_VALUE_RESOLVER_MAP.time.parser;

        if (val && !(val instanceof Date)) {
            val = parser(val, format);
        }
        return [val];
    },
    updateScroll: function updateScroll() {
        this.$refs.timeSpinner.updateScroll();
    },
    onPickSuccess: function onPickSuccess(event) {
        this.$emit('pickSuccess', event);
    }
}).component('kl-time-spinner', _index4.default).component('kl-confirm', _index6.default);

module.exports = KLTimePickerPanel;

/***/ }),
/* 232 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _defineProperty2 = __webpack_require__(445);

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _component = __webpack_require__(1);

var _component2 = _interopRequireDefault(_component);

var _index = __webpack_require__(449);

var _index2 = _interopRequireDefault(_index);

var _class = __webpack_require__(450);

var _class2 = _interopRequireDefault(_class);

var _index3 = __webpack_require__(5);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable */
/**
 * event: change, pick-click(传了当前选择的值)
 * 基本属性
 *  disabledHours: [],
 *  disabledMinutes: [],
 *  disabledSeconds: [],
 *  hideDisabledOptions: false,
 *  hours: NaN,
 *  minutes: NaN,
 *  seconds: NaN,
 *  showSeconds: true,
 *  steps: [],
 */
var timeParts = ['hours', 'minutes', 'seconds'];

var KLTimeSpinner = _component2.default.extend({
    name: 'kl-time-spinner',
    template: _index2.default,
    config: function config() {
        var _this = this;

        this.defaults({
            prefixCls: 'kl-time-picker-cells',

            disabledHours: [],
            disabledMinutes: [],
            disabledSeconds: [],
            hideDisabledOptions: false,
            hours: NaN,
            minutes: NaN,
            seconds: NaN,
            showSeconds: true,
            steps: [],

            compiled: false,
            focusedColumn: -1, // which column inside the picker
            focusedTime: [0, 0, 0] // the values array into [hh, mm, ss]
        });

        this.data.spinerSteps = [1, 1, 1].map(function (one, i) {
            return Math.abs(_this.data.steps[i]) || one;
        });

        this.supr();

        // 初始化的时候滚动到当前选项
        this.$watch('hours', function (val) {
            if (!_this.data.compiled) return;
            _this.scroll('hours', _this.data.hoursList.findIndex(function (obj) {
                return obj.text == val;
            }));
        });

        this.$watch('minutes', function (val) {
            if (!_this.data.compiled) return;
            _this.scroll('minutes', _this.data.minutesList.findIndex(function (obj) {
                return obj.text == val;
            }));
        });

        this.$watch('seconds', function (val) {
            if (!_this.data.compiled) return;
            _this.scroll('seconds', _this.data.secondsList.findIndex(function (obj) {
                return obj.text == val;
            }));
        });

        this.$watch('focusedTime', function (updated, old) {
            timeParts.forEach(function (part, i) {
                if (old == undefined) return;
                if (updated[i] === old[i] || typeof updated[i] === 'undefined') return;
                var valueIndex = _this.data[part + 'List'].findIndex(function (obj) {
                    return obj.text === updated[i];
                });
                _this.scroll(part, valueIndex);
            });
        });
    },
    init: function init() {
        var _this2 = this;

        this.supr();
        this.data.compiled = true;

        this.getHoursList();
        this.getMinutesList();
        this.getSecondsList();

        this.$watch('hours', function () {
            _this2.getHoursList();
        });
        this.$watch('minutes', function () {
            _this2.getMinutesList();
        });
        this.$watch('seconds', function () {
            _this2.getSecondsList();
        });
    },

    /**
     * 依赖的外部值（这些值变化需要重新更新hourList）：
     * spinerSteps、
     * focusedColumn、
     * focusedTime、
     * disabledHours: 设置不可点击的时间
     * hideDisabledOptions: 隐藏不可点击的选项————只会通过外部传入，内部不会改变
     * hours: value
     */
    getHoursList: function getHoursList() {
        var store = this.data;

        var hours = [];
        var step = store.spinerSteps[0];
        var focusedHour = store.focusedColumn === 0 && store.focusedTime[0];
        var hour_tmpl = {
            text: 0,
            selected: false,
            disabled: false,
            hide: false
        };

        for (var i = 0; i < 24; i += step) {
            var hour = (0, _index3.deepCopy)(hour_tmpl);
            hour.text = i;
            hour.focused = i === focusedHour;

            if (store.disabledHours.length && store.disabledHours.indexOf(i) > -1) {
                hour.disabled = true;
                if (store.hideDisabledOptions) hour.hide = true;
            }
            if (store.hours === i) hour.selected = true;
            hours.push(hour);
        }
        this.data.hoursList = hours;
    },

    /**
     * 依赖的外部值（这些值变化需要重新更新hourList）：
     * spinerSteps、
     * focusedColumn、
     * focusedTime、
     * disabledMinutes: 设置不可点击的时间
     * hideDisabledOptions: 隐藏不可点击的选项————只会通过外部传入，内部不会改变
     * minutes: value
     */
    getMinutesList: function getMinutesList() {
        var store = this.data;

        var minutes = [];
        var step = store.spinerSteps[1];
        var focusedMinute = store.focusedColumn === 1 && store.focusedTime[1];
        var minute_tmpl = {
            text: 0,
            selected: false,
            disabled: false,
            hide: false
        };

        for (var i = 0; i < 60; i += step) {
            var minute = (0, _index3.deepCopy)(minute_tmpl);
            minute.text = i;
            minute.focused = i === focusedMinute;

            if (store.disabledMinutes.length && store.disabledMinutes.indexOf(i) > -1) {
                minute.disabled = true;
                if (store.hideDisabledOptions) minute.hide = true;
            }
            if (store.minutes === i) minute.selected = true;
            minutes.push(minute);
        }
        this.data.minutesList = minutes;
    },

    /**
     * 依赖的外部值（这些值变化需要重新更新hourList）：
     * spinerSteps、
     * focusedColumn、
     * focusedTime、
     * disabledSeconds: 设置不可点击的时间
     * hideDisabledOptions: 隐藏不可点击的选项————只会通过外部传入，内部不会改变
     * seconds: value
     */
    getSecondsList: function getSecondsList() {
        var store = this.data;

        var seconds = [];
        var step = store.spinerSteps[2];
        var focusedMinute = store.focusedColumn === 2 && store.focusedTime[2];
        var second_tmpl = {
            text: 0,
            selected: false,
            disabled: false,
            hide: false
        };

        for (var i = 0; i < 60; i += step) {
            var second = (0, _index3.deepCopy)(second_tmpl);
            second.text = i;
            second.focused = i === focusedMinute;

            if (store.disabledSeconds.length && store.disabledSeconds.indexOf(i) > -1) {
                second.disabled = true;
                if (store.hideDisabledOptions) second.hide = true;
            }
            if (store.seconds === i) second.selected = true;
            seconds.push(second);
        }
        this.data.secondsList = seconds;
    },


    /**
     * 选中时、分、秒
     */
    onClick: function onClick(type, cell, e) {
        e.stopPropagation();
        if (cell.disabled) return;
        var data = (0, _defineProperty3.default)({}, type, cell.text);
        this.emitChange(data);
    },
    emitChange: function emitChange(changes) {
        this.$emit('change', changes);
        this.$emit('pick-click');
    },
    scroll: function scroll(type, index) {
        var from = this.$refs[type].scrollTop;
        var to = 24 * this.getScrollIndex(type, index);
        (0, _index3.scrollTop)(this.$refs[type], from, to, 500);
    },
    getScrollIndex: function getScrollIndex(type, index) {
        var Type = (0, _index3.firstUpperCase)(type);
        var disabled = this.data['disabled' + Type];
        if (disabled.length && this.data.hideDisabledOptions) {
            var _count = 0;
            disabled.forEach(function (item) {
                return item <= index ? _count++ : '';
            });
            index -= _count;
        }
        return index;
    },
    updateScroll: function updateScroll() {
        var _this3 = this;

        setTimeout(function () {
            timeParts.forEach(function (type) {
                _this3.$refs[type].scrollTop = 24 * _this3.data[type + 'List'].findIndex(function (obj) {
                    return obj.text == _this3.data[type];
                });
            });
        });
        setTimeout(function () {
            timeParts.forEach(function (type) {
                _this3.$refs[type].scrollTop = 24 * _this3.data[type + 'List'].findIndex(function (obj) {
                    return obj.text == _this3.data[type];
                });
            });
        });
    }
}

// updateFocusedTime(col, time) {
//     this.data.focusedColumn = col;
//     this.data.focusedTime = time.slice();
// },
// chooseValue(values) {
//     const changes = timeParts.reduce((obj, part, i) => {
//         const value = values[i];
//         if (this.data[part] === value) return obj;
//         return {
//             ...obj,
//             [part]: value,
//         };
//     }, {});
//     if (Object.keys(changes).length > 0) {
//         this.emitChange(changes);
//     }
// },
).use(_class2.default).filter({
    formatTime: function formatTime(text) {
        return text < 10 ? '0' + text : text;
    }
});

module.exports = KLTimeSpinner;

/***/ }),
/* 233 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _slicedToArray2 = __webpack_require__(25);

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _component = __webpack_require__(1);

var _component2 = _interopRequireDefault(_component);

var _index = __webpack_require__(459);

var _index2 = _interopRequireDefault(_index);

var _index3 = __webpack_require__(232);

var _index4 = _interopRequireDefault(_index3);

var _index5 = __webpack_require__(48);

var _index6 = _interopRequireDefault(_index5);

var _event = __webpack_require__(460);

var _event2 = _interopRequireDefault(_event);

var _index7 = __webpack_require__(5);

var _utils = __webpack_require__(5);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// const prefixCls = 'kl-picker-panel';
// const datePrefixCls = 'kl-picker-panel-body-header';


//utils
var prefixCls = 'kl-picker-panel';

// mixins
/* eslint-disable */

var timePrefixCls = 'kl-time-picker-body-header';
var KLRangeTimePickerPanel = _component2.default.extend({
    template: _index2.default,
    config: function config() {
        var _this = this;

        this.defaults({
            disabledHours: [],
            disabledMinutes: [],
            disabledSeconds: [],
            hideDisabledOptions: false,
            type: 'timerange',

            confirm: false,

            steps: [],
            format: 'HH:mm:ss',
            value: [],

            prefixCls: prefixCls,
            timePrefixCls: timePrefixCls,
            showDate: false
        });
        this.supr();

        this.initInternalValue();

        this.$watch('value', function () {
            _this.initInternalValue();
        });
    },
    getVisualValue: function getVisualValue(dateStart, dateEnd) {
        var visualValue = void 0;
        if (!dateStart || !dateEnd) {
            visualValue = '';
        } else {
            visualValue = this.formatDate(dateStart) + '-' + this.formatDate(dateEnd);
        }
        this.$emit('format', visualValue);
    },
    initInternalValue: function initInternalValue() {
        var _data = this.data,
            value = _data.value,
            type = _data.type;

        if (!value) {
            this.data.dateStart = (0, _index7.initTimeDate)();
            this.data.dateEnd = (0, _index7.initTimeDate)();

            this.getVisualValue(null, null);
        } else if (Array.isArray(value)) {
            var formattedValue = (0, _index7.parseValue)(value, type);

            var _formattedValue$slice = formattedValue.slice(),
                _formattedValue$slice2 = (0, _slicedToArray3.default)(_formattedValue$slice, 2),
                dateStart = _formattedValue$slice2[0],
                dateEnd = _formattedValue$slice2[1];

            this.data.dateStart = dateStart || (0, _index7.initTimeDate)();
            this.data.dateEnd = dateEnd || (0, _index7.initTimeDate)();

            if (dateStart && dateEnd) {
                this.getVisualValue(dateStart, dateEnd);
            }
        } else {
            console.error('value值类型错误');
            return;
        }
    },

    computed: {
        classes: function classes() {
            var secondsCls = this.showSeconds ? timePrefixCls + '--with-seconds' : '';
            return [prefixCls + '--body-wrapper', prefixCls + '--with-range', secondsCls].join(' ');
        },
        showSeconds: function showSeconds() {
            return !(this.data.format || '').match(/mm$/);
        }
    },
    onPickSuccess: function onPickSuccess(event) {
        this.$emit('pickSuccess', event);
    }
}).use(_event2.default);

module.exports = KLRangeTimePickerPanel;

/***/ }),
/* 234 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _extends2 = __webpack_require__(465);

var _extends3 = _interopRequireDefault(_extends2);

var _slicedToArray2 = __webpack_require__(25);

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _component = __webpack_require__(1);

var _component2 = _interopRequireDefault(_component);

var _index = __webpack_require__(466);

var _index2 = _interopRequireDefault(_index);

var _classes = __webpack_require__(467);

var _classes2 = _interopRequireDefault(_classes);

var _event = __webpack_require__(468);

var _event2 = _interopRequireDefault(_event);

var _index3 = __webpack_require__(5);

var _jsCalendar = __webpack_require__(235);

var _jsCalendar2 = _interopRequireDefault(_jsCalendar);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable */
var prefixCls = 'kl-newdate-picker-cells';
var weeks = {
    sun: '日',
    mon: '一',
    tue: '二',
    wed: '三',
    thu: '四',
    fri: '五',
    sat: '六'
};

var KLDateTable = _component2.default.extend({
    name: 'kl-date-table',
    template: _index2.default,
    config: function config() {
        this.defaults({
            tableDate: null,
            selectionMode: null,
            value: null,
            rangeState: {
                from: null,
                to: null,
                selecting: false
            },
            focusedDate: null,

            showWeekNumbers: false,
            disabledDate: null,
            prefixCls: prefixCls
        });
        this.supr();
    },
    init: function init() {
        var _this = this;

        this.supr();

        this.getCalendar();
        this.getHeaderDays();

        this.getDates();
        this.getCells();

        this.$watch('value', function (newValue) {
            _this.getDates();
            _this.getCells();
        });

        this.$watch('tableDate', function (newValue) {
            _this.getDates();
            _this.getCells();
        });

        this.$watch('rangeState', function (newValue) {
            _this.getDates();
            _this.getCells();
        });

        // 待优化？？ rangeState变了 没检测到？！
        this.$watch('rangeState.to', function (newValue) {
            _this.getDates();
            _this.getCells();
        });
    },


    /**
     * calendar： function，日期面板获取方法
     */
    getCalendar: function getCalendar() {
        var weekStartDay = Number(0);
        this.data.calendar = new _jsCalendar2.default.Generator({ onlyDays: !this.data.showWeekNumbers, weekStart: weekStartDay });
    },

    /**
     * 获取日期头部数据
     */
    getHeaderDays: function getHeaderDays() {
        var weekStartDay = Number(0);
        var translatedDays = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'].map(function (item) {
            return weeks[item];
        } // ??
        );
        var weekDays = translatedDays.splice(weekStartDay, 7 - weekStartDay).concat(translatedDays.splice(0, weekStartDay));
        this.data.headerDays = this.data.showWeekNumbers ? [''].concat(weekDays) : weekDays;
    },


    // 依赖的外部值：selectionMode, value, rangeState
    getDates: function getDates() {
        var _data = this.data,
            selectionMode = _data.selectionMode,
            value = _data.value,
            rangeState = _data.rangeState;

        var rangeSelecting = selectionMode === 'range' && rangeState.selecting;
        this.data.dates = rangeSelecting ? [rangeState.from] : value;
    },

    // 依赖的外部值：tableDate, dates, rangeState, selectionMode, disabledDate, showWeekNumbers
    getCells: function getCells() {
        var store = this.data;

        var tableYear = store.tableDate.getFullYear();
        var tableMonth = store.tableDate.getMonth();

        var today = (0, _index3.clearHours)(new Date());
        // const selectedDays = store.dates.filter(Boolean).map(clearHours);
        var selectedDays = store.dates.map(_index3.clearHours);

        var _store$dates$map = store.dates.map(_index3.clearHours),
            _store$dates$map2 = (0, _slicedToArray3.default)(_store$dates$map, 2),
            minDay = _store$dates$map2[0],
            maxDay = _store$dates$map2[1];

        var rangeStart = store.rangeState.from && (0, _index3.clearHours)(store.rangeState.from);
        var rangeEnd = store.rangeState.to && (0, _index3.clearHours)(store.rangeState.to);

        var isRange = store.selectionMode === 'range';
        var disabledTestFn = typeof store.disabledDate === 'function' && store.disabledDate;

        this.data.cells = this.data.calendar(tableYear, tableMonth, function (cell) {
            var time = cell.date && (0, _index3.clearHours)(cell.date);
            var dateIsInCurrentMonth = cell.date && tableMonth === cell.date.getMonth();
            return (0, _extends3.default)({}, cell, {
                type: time === today ? 'today' : cell.type,
                selected: dateIsInCurrentMonth && selectedDays.includes(time),
                disabled: cell.date && disabledTestFn && disabledTestFn(new Date(time)),
                range: dateIsInCurrentMonth && isRange && (0, _index3.isInRange)(time, rangeStart, rangeEnd),
                start: dateIsInCurrentMonth && isRange && time === minDay,
                end: dateIsInCurrentMonth && isRange && time === maxDay
            });
        }).cells.slice(store.showWeekNumbers ? 8 : 0);
    }
}).use(_classes2.default).use(_event2.default);

module.exports = KLDateTable;

/***/ }),
/* 235 */
/***/ (function(module, exports, __webpack_require__) {


module.exports = {
	Generator: __webpack_require__(469),
	addLabels: __webpack_require__(470)
}


/***/ }),
/* 236 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _component = __webpack_require__(1);

var _component2 = _interopRequireDefault(_component);

var _index = __webpack_require__(472);

var _index2 = _interopRequireDefault(_index);

var _index3 = __webpack_require__(5);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// const prefixCls = 'ivu-date-picker-cells';
var prefixCls = 'kl-newdate-picker-cells'; /* eslint-disable */


var KLYearTable = _component2.default.extend({
    name: 'kl-year-table',
    template: _index2.default,
    config: function config() {
        this.defaults({
            prefixCls: prefixCls,
            tableDate: null,
            selectionMode: null,
            value: null,
            focusedDate: null,

            rangeState: {
                from: null,
                to: null,
                selecting: false
            },
            disabledDate: null
        });
        this.supr();
    },
    init: function init() {
        var _this = this;

        this.startYear();
        this.dates();
        this.cells();

        this.$watch('value', function (newValue) {
            _this.startYear();
            _this.dates();
            _this.cells();
        });

        this.$watch('tableDate', function (newValue) {
            _this.startYear();
            _this.dates();
            _this.cells();
        });

        this.$watch('rangeState', function (newValue) {
            _this.startYear();
            _this.dates();
            _this.cells();
        });

        // 待优化？？ rangeState变了 没检测到？！
        this.$watch('rangeState.to', function (newValue) {
            _this.startYear();
            _this.dates();
            _this.cells();
        });

        this.supr();
    },

    computed: {
        classes: function classes() {
            return prefixCls + ' ' + prefixCls + '-year';
        }
    },

    startYear: function startYear() {
        this.data.startYear = Math.floor(this.data.tableDate.getFullYear() / 10) * 10;
        return Math.floor(this.data.tableDate.getFullYear() / 10) * 10;
    },
    dates: function dates() {
        var _data = this.data,
            selectionMode = _data.selectionMode,
            value = _data.value,
            rangeState = _data.rangeState;

        var rangeSelecting = selectionMode === 'range' && rangeState.selecting;
        this.data.dates = rangeSelecting ? [rangeState.from] : value;
        return rangeSelecting ? [rangeState.from] : value;
    },
    cells: function cells() {
        var store = this.data;
        var cells = [];
        var cell_tmpl = {
            text: '',
            selected: false,
            disabled: false
        };

        var selectedDays = store.dates.filter(Boolean).map(function (date) {
            return (0, _index3.clearHours)(new Date(date.getFullYear(), 0, 1));
        });
        var focusedDate = (0, _index3.clearHours)(new Date(store.focusedDate.getFullYear(), 0, 1));

        for (var i = 0; i < 10; i++) {
            var cell = (0, _index3.deepCopy)(cell_tmpl);
            cell.date = new Date(store.startYear + i, 0, 1);
            cell.disabled = typeof store.disabledDate === 'function' && store.disabledDate(cell.date) && store.selectionMode === 'year';
            var day = (0, _index3.clearHours)(cell.date);
            cell.selected = selectedDays.includes(day);
            cell.focused = day === focusedDate;
            cells.push(cell);
        }

        this.data.cells = cells;

        return cells;
    },
    handleClick: function handleClick(cell, e) {
        e.stopPropagation();
        if (cell.disabled || cell.type === 'weekLabel') return;
        var newDate = new Date((0, _index3.clearHours)(cell.date));

        this.$emit('pick', { value: newDate });
        this.$emit('pick-click');
    },
    handleMouseMove: function handleMouseMove(cell) {
        if (!this.data.rangeState.selecting) return;
        if (cell.disabled) return;
        var newDate = cell.date;
        this.$emit('change-range', newDate);
    },
    getCellCls: function getCellCls(cell) {
        var selectedCls = cell.selected ? prefixCls + '__cell--selected' : '';
        var disabledCls = cell.disabled ? prefixCls + '__cell--disabled' : '';
        var focusedCls = cell.focused ? prefixCls + '__cell--focused' : '';
        var rangedCls = cell.range && !cell.start && !cell.end ? prefixCls + '__cell--range' : '';

        return prefixCls + '-year__cell ' + prefixCls + '__cell ' + selectedCls + ' ' + disabledCls + ' ' + focusedCls + ' ' + rangedCls;
    }
});

module.exports = KLYearTable;

/***/ }),
/* 237 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _component = __webpack_require__(1);

var _component2 = _interopRequireDefault(_component);

var _index = __webpack_require__(473);

var _index2 = _interopRequireDefault(_index);

var _index3 = __webpack_require__(5);

var _jsCalendar = __webpack_require__(235);

var _jsCalendar2 = _interopRequireDefault(_jsCalendar);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable */
var prefixCls = 'kl-newdate-picker-cells';
var MONTHS = {
    m1: '1月',
    m2: '2月',
    m3: '3月',
    m4: '4月',
    m5: '5月',
    m6: '6月',
    m7: '7月',
    m8: '8月',
    m9: '9月',
    m10: '10月',
    m11: '11月',
    m12: '12月'
};

var KLMonthTable = _component2.default.extend({
    name: 'kl-month-table',
    template: _index2.default,
    config: function config() {
        this.defaults({
            prefixCls: prefixCls,
            tableDate: null,
            selectionMode: null,
            value: null,
            focusedDate: null,

            rangeState: {
                from: null,
                to: null,
                selecting: false
            },
            disabledDate: null
        });
        this.supr();
    },
    init: function init() {
        var _this = this;

        this.supr();
        this.getDates();
        this.getCells();

        this.$watch('value', function (newValue) {
            _this.getDates();
            _this.getCells();
        });

        this.$watch('tableDate', function (newValue) {
            _this.getDates();
            _this.getCells();
        });

        this.$watch('rangeState', function (newValue) {
            _this.getDates();
            _this.getCells();
        });

        // 待优化？？ rangeState变了 没检测到？！
        this.$watch('rangeState.to', function (newValue) {
            _this.getDates();
            _this.getCells();
        });
    },

    computed: {
        classes: function classes() {
            return prefixCls + ' ' + prefixCls + '-month';
        }
    },

    getDates: function getDates() {
        var _data = this.data,
            selectionMode = _data.selectionMode,
            value = _data.value,
            rangeState = _data.rangeState;

        var rangeSelecting = selectionMode === 'range' && rangeState.selecting;

        this.data.dates = rangeSelecting ? [rangeState.from] : value;
        return rangeSelecting ? [rangeState.from] : value;
    },
    getCells: function getCells() {
        var store = this.data;

        var cells = [];
        var cell_tmpl = {
            text: '',
            selected: false,
            disabled: false
        };

        var tableYear = store.tableDate.getFullYear();
        var selectedDays = store.dates.filter(Boolean).map(function (date) {
            return (0, _index3.clearHours)(new Date(date.getFullYear(), date.getMonth(), 1));
        });
        var focusedDate = (0, _index3.clearHours)(new Date(store.focusedDate.getFullYear(), store.focusedDate.getMonth(), 1));

        for (var i = 0; i < 12; i++) {
            var cell = (0, _index3.deepCopy)(cell_tmpl);
            cell.date = new Date(tableYear, i, 1);
            cell.text = this.tCell(i + 1);
            var day = (0, _index3.clearHours)(cell.date);
            cell.disabled = typeof store.disabledDate === 'function' && store.disabledDate(cell.date) && store.selectionMode === 'month';
            cell.selected = selectedDays.includes(day);
            cell.focused = day === focusedDate;
            cells.push(cell);
        }

        this.data.cells = cells;

        return cells;
    },
    onClick: function onClick(cell, e) {
        e.stopPropagation();
        if (cell.disabled || cell.type === 'weekLabel') return;
        var newDate = new Date((0, _index3.clearHours)(cell.date));

        this.$emit('pick', { value: newDate });
        this.$emit('pick-click');
    },
    onMouseMove: function onMouseMove(cell) {
        if (!this.data.rangeState.selecting) return;
        if (cell.disabled) return;
        var newDate = cell.date;
        this.$emit('change-range', newDate);
    },
    getCellCls: function getCellCls(cell) {
        var selectedCls = cell.selected ? prefixCls + '__cell--selected' : '';
        var disabledCls = cell.disabled ? prefixCls + '__cell--disabled' : '';
        var focusedCls = cell.focused ? prefixCls + '__cell--focused' : '';
        var rangedCls = cell.range && !cell.start && !cell.end ? prefixCls + '__cell--range' : '';

        return prefixCls + '-month__cell  ' + prefixCls + '__cell ' + selectedCls + ' ' + disabledCls + ' ' + focusedCls + ' ' + rangedCls;
    },
    tCell: function tCell(nr) {
        return MONTHS['m' + nr];
    }
});

module.exports = KLMonthTable;

/***/ }),
/* 238 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _component = __webpack_require__(1);

var _component2 = _interopRequireDefault(_component);

var _index = __webpack_require__(474);

var _index2 = _interopRequireDefault(_index);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable */
var KLDatePanelLabel = _component2.default.extend({
    name: 'kl-date-panel-label',
    template: _index2.default,
    config: function config() {
        this.defaults({
            datePanelLabel: {},
            currentView: '',
            datePrefixCls: ''
        });
        this.supr();

        this.$watch('datePanelLabel[0].label', function (value) {
            // console.log(value)
        });
    }
});

module.exports = KLDatePanelLabel;

/***/ }),
/* 239 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * @file KLMenu      导航菜单
 */

var Component = __webpack_require__(1);
var template = __webpack_require__(487);

/**
 * @class KLMenu
 * @extend Component
 * @param {object}        [options.data]                          = 绑定属性
 * @param {string}        [options.data.class]                    => 补充class
 * @param {boolean}       [options.data.uniqueOpened]             => 是否只保持打开一个菜单
 * @param {object}        [options.data.router]                   => 单页应用时, 请将regular-state的manager实例传入
 */

/**
 * @class KLSubMenu
 * @extend Component
 * @param {object}        [options.data]                          = 绑定属性
 * @param {string}        [options.data.class]                    => 补充class
 * @param {boolean}       [options.data.defaultOpen=false]        => 是否默认展开,如果需要默认展开,设置为true
 * @param {string}        [options.data.url]                   => 如果一级菜单需要链接,可配置url属性
 * @param {string}        [options.data.route]                   => 单页spa应用时替代url属性
 * @param {string}        [options.data.iconClass]             => 菜单文字前的icon
 * @param {string}        [options.data.title]                    => 标题文案
 * @param {string}        [options.data.titleTemplate]            => 标题文案模板
 */

/**
 * @class KLMenuItem
 * @extend Component
 * @param {object}        [options.data]                          = 绑定属性
 * @param {string}        [options.data.class]                    => 补充class
 * @param {string}        [options.data.title]                    => 标题文案
 * @param {string}        [options.data.url]                      => 跳转链接
 * @param {string}        [options.data.route]                    => 单页spa应用时替代url属性
 * @param {boolean}       [options.data.isCurrent]                => 是否是当前页
 */

var KLMenu = Component.extend({
  name: 'kl-menu',
  template: template,
  openedMenus: [],
  currentItem: null,
  config: function config() {
    this.defaults({
      class: '',
      uniqueOpened: true
    });
    this.supr();
  },
  init: function init() {
    this.$on('submenu-click', function (submenu) {
      var isOpened = this.openedMenus.indexOf(submenu) !== -1;
      if (isOpened) {
        this.closeMenu(submenu);
        this.$emit('close', submenu);
      } else {
        this.openMenu(submenu);
        this.$emit('open', submenu);
      }
    });

    /**
     * @event KLMenu#menuitem-click 选择某一页时触发
     * @property {object} menuitem 点击的menuItem实例
     */
    this.$on('menuitem-click', function (menuitem) {
      this.currentItem = menuitem;
      // 选中了二级页面,即使一级收起, 也要高亮显示
      this.currentSubMenu = menuitem.$outer;
    });
  },
  closeMenu: function closeMenu(submenu) {
    this.openedMenus.splice(this.openedMenus.indexOf(submenu), 1);
  },
  openMenu: function openMenu(submenu) {
    var openedMenus = this.openedMenus;
    if (openedMenus.indexOf(submenu) !== -1) return;
    if (this.data.uniqueOpened) {
      this.openedMenus = [].concat(submenu);
    } else {
      this.openedMenus.push(submenu);
    }
  }
});

module.exports = KLMenu;

/***/ }),
/* 240 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var KLMenu = __webpack_require__(239);

module.exports = function (Component) {
  Component.implement({
    initRootMenu: function initRootMenu() {
      var $outer = this;
      do {
        if ($outer.$outer) {
          $outer = $outer.$outer;
        } else if ($outer.$parent) {
          $outer = $outer.$parent;
        }
      } while (!($outer instanceof KLMenu) && ($outer.$outer || $outer.$parent));

      if ($outer && $outer instanceof KLMenu) {
        this.data.rootMenu = $outer;
      }
    }
  });
};

/***/ }),
/* 241 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * @file KLTabs       选项卡
 * @author   sensen(rainforest92@126.com)
 */

var Component = __webpack_require__(1);
var template = __webpack_require__(494);
var _ = __webpack_require__(2);

/**
 * @class KLTabs
 * @extend Component
 * @param {object}        [options.data]                      = 绑定属性
 * @param {string}        [options.data.type=line]            => 显示类型,card/line
 * @param {object}        [options.data.selected=null]        <=> 当前选择卡
 * @param {string}        [options.data.titleTemplate=null]   @=> 标题模板
 * @param {string}        [options.data.defaultKey=null]      => 默认显示对应 key 的 Tab
 * @param {boolean}       [options.data.readonly=false]       => 是否只读
 * @param {boolean}       [options.data.disabled=false]       => 是否禁用
 * @param {boolean}       [options.data.visible=true]         => 是否显示
 * @param {string}        [options.data.class]                => 补充class
 */

/**
 * @class KLTab
 * @extend Component
 * @param {object}        [options.data]                      = 绑定属性
 * @param {string}        [options.data.title]             => 标题
 * @param {string}        [options.data.key=null]             => key 标识
 */

var KLTabs = Component.extend({
  name: 'kl-tabs',
  template: _.compressHtml(template),
  config: function config() {
    var _this = this;

    _.extend(this.data, {
      tabs: [],
      selected: undefined,
      titleTemplate: null,
      offset: 0,
      navStyle: {
        transform: 'translateX(0)'
      },
      type: 'line',
      crtTabElem: null
    });
    this.supr();

    this.$watch('selected', function (newValue) {
      /**
       * @event KLTabs#change 选项卡改变时触发
       * @property {object} sender 事件发送对象
       * @property {object} selected 改变后的选项卡
       */
      _this.$emit('change', {
        sender: _this,
        selected: newValue,
        key: newValue.data.key
      });
    });
  },
  init: function init() {
    this.supr();
    this._update = this.update.bind(this);

    window.addEventListener('resize', this._update);
  },

  events: {
    $init: function $init() {
      var _this2 = this;

      setTimeout(function () {
        _this2.update();
      }, 500);
    }
  },
  update: function update() {
    var wrap = this.$refs.wrap;
    var nav = this.$refs.nav;
    if (!wrap || !nav) {
      return false;
    }
    var wrapWidth = wrap.offsetWidth;
    var navWidth = nav.scrollWidth;
    var currentOffset = this.data.offset;
    if (wrapWidth < navWidth) {
      this.data.scrollable = this.data.scrollable || {};
      this.data.scrollable.prev = currentOffset;
      this.data.scrollable.next = currentOffset + wrapWidth < navWidth;
      if (navWidth - currentOffset < wrapWidth) {
        this.setOffset(navWidth - wrapWidth);
      }
    } else {
      this.data.scrollable = false;
      this.setOffset(0);
    }
    this.$update();
  },
  setOffset: function setOffset(offset) {
    this.data.offset = offset;
    var transform = 'translateX(-' + this.data.offset + 'px)';
    var navStyle = this.data.navStyle;
    navStyle.transform = transform;
    navStyle.msTransform = transform;
    navStyle.webkitTransform = transform;
    this.data.scrollable && this.update();
  },
  prev: function prev() {
    if (!this.data.scrollable || !this.data.scrollable.prev) {
      return;
    }
    var wrap = this.$refs.wrap;
    var currentOffset = this.data.offset;
    if (!wrap || !currentOffset) {
      return;
    }
    var wrapWidth = wrap.offsetWidth;
    var newOffset = currentOffset > wrapWidth ? currentOffset - wrapWidth : 0;
    this.setOffset(newOffset);
  },
  next: function next() {
    if (!this.data.scrollable || !this.data.scrollable.next) {
      return;
    }
    var wrap = this.$refs.wrap;
    var nav = this.$refs.nav;
    if (!wrap || !nav) {
      return;
    }
    var navWidth = nav.scrollWidth;
    var wrapWidth = wrap.offsetWidth;
    var currentOffset = this.data.offset;
    if (navWidth - currentOffset <= wrapWidth) {
      return;
    }
    var newOffset = navWidth - currentOffset > wrapWidth * 2 ? currentOffset + wrapWidth : navWidth - wrapWidth;
    this.setOffset(newOffset);
  },
  select: function select(item, e) {
    if (this.data.readonly || this.data.disabled || item.data.disabled) return;

    this.data.selected = item;
    this.data.crtTabElem = e.target;
    /**
     * @event KLTabs#select 选择某一项时触发
     * @property {object} sender 事件发送对象
     * @property {object} selected 当前选择卡
     * @property {string} key 当前选择卡的key属性
     * @property {event} e 点击鼠标事件
     */
    this.$emit('select', {
      sender: this,
      selected: item,
      key: item.data.key,
      e: e
    });
  },
  destroy: function destroy() {
    this.supr();
    window.removeEventListener('resize', this._update);
  }
});

// eslint-disable-next-line
KLTabs.directive('active-bar', function (activeBarElem) {
  var _this3 = this;

  this.$watch('selected', function (selected) {
    if (_this3.data.type !== 'line' || !selected) {
      return;
    }
    setTimeout(function () {
      var elem = activeBarElem.parentElement.querySelector('.is-crt');

      activeBarElem.style.width = elem.clientWidth + 'px';
      activeBarElem.style.transform = 'translateX(' + elem.offsetLeft + 'px)';
    }, 100);
  });
});

module.exports = KLTabs;

/***/ }),
/* 242 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * @file KLCrumb 面包屑
 * @author   zianecui@gmail.com
 */

var Component = __webpack_require__(1);
var template = __webpack_require__(501);
var _ = __webpack_require__(2);

/**
 * @class KLCrumb
 * @extend Component
 * @param {object}          [options.data]                     = 绑定属性
 * @param {string}          [options.data.class]               => 补充class
 * @param {string}          [options.data.separator]           => 分隔符，支持模板
 */

/**
 * @class KLCrumbItem
 * @extend Component
 * @param {object}          [options.data]                    = 绑定属性
 * @param {string}          [options.data.content]            => 内容模板
 * @param {string}          [options.data.class]              => 补充class
 * @param {string}          [options.data.href]                => 传入的链接
 */

var KLCrumb = Component.extend({
  name: 'kl-crumb',
  template: template,
  config: function config() {
    _.extend(this.data, {
      separator: '/',
      crumbArr: []
    });
    this.supr();
  }
});

module.exports = KLCrumb;

/***/ }),
/* 243 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * ------------------------------------------------------------
 * Trigger   trigger component 当被包裹target的action事件触发时,执行getInstance方法的show;
 * @author   ziane(zianecui@gmail.com)
 * ------------------------------------------------------------
 */

var dom = __webpack_require__(11).dom;

var Component = __webpack_require__(1);
var _ = __webpack_require__(2);
__webpack_require__(508);

/**
 * @class Trigger
 * @extend Component
 * @param {object}          [options.data]                        => 绑定数据
 * @param {string}          [options.data.action=click]           => [click, focus, mouseEnter]中的一个
 * @param {function}        [options.data.getInstance]            => 获取浮层组件的方法
 * @param {string}          [options.data.placement]              => top left right bottom topLeft topRight bottomLeft bottomRight leftTop leftBottom rightTop rightBottom
 * @param {boolean}         [options.data.destroyOnHide=false]    => hide时是否destroy浮层
 * @param {boolean}         [options.data.hideWhenScroll=false]   => 页面滚动时, 是否去除popover;
 */
var Trigger = Component.extend({
  name: 'trigger',
  template: '<alignment placement="{placement}" ref="alignment">{#inc this.$body}</alignment>',
  config: function config(data) {
    this.defaults({
      action: 'mouseEnter',
      getInstance: function getInstance() {},

      placement: 'top',
      destroyOnHide: false,
      hideWhenScroll: false
    });

    this.supr(data);
  },
  init: function init() {
    var self = this;
    var element = dom.element(this);
    var action = this.data.action;

    if (action === 'click') {
      dom.on(element, 'click', function () {
        self.toggle();
      });
      dom.on(document.body, 'click', function (e) {
        var target = e.target;
        if (!_.dom.contains(element, target) && self.data.isShow) {
          self.toggle(false);
        }
      });
    }
    if (action === 'mouseEnter') {
      dom.on(element, 'mouseenter', function () {
        self.toggle(true);
      });
      dom.on(element, 'mouseleave', function () {
        self.toggle(false);
      });
    }
    if (action === 'focus') {
      dom.on(element, 'focus', function () {
        self.toggle(true);
      });
      dom.on(element, 'blur', function () {
        self.toggle(false);
      });
    }

    window.addEventListener('scroll', function () {
      var isShow = self.data.isShow;
      if (isShow && self.data.hideWhenScroll) {
        self.toggle(false);
      }
    }, true);
  },
  updateInstance: function updateInstance(isShow) {
    var instance = this.data.getInstance();
    var element = instance.getElement();
    var $align = this.$refs.alignment;
    var destroyOnHide = this.data.destroyOnHide;

    if (instance !== this.data.instance) {
      this.data.instance = instance;

      // firefox浏览器会造成死循环, 本来这里加事件的原因是为了处理:pop.confirm中验证之后,高度变化造成对不齐的情况 ;
      // dom.on(element, 'DOMSubtreeModified', function() {
      //     $align.reAlign(element);
      // });
    }

    if (!isShow && destroyOnHide) {
      instance.destroy();
    } else {
      instance.toggle && instance.toggle(isShow);
      if (isShow) {
        $align.reAlign(element);
      }
    }
  },
  toggle: function toggle(isShow) {
    this.data.isShow = typeof isShow === 'undefined' ? !this.data.isShow : isShow;
    this.updateInstance(this.data.isShow);
    this.$update();
  }
});

module.exports = Trigger;

/***/ }),
/* 244 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils__ = __webpack_require__(36);


/**
 * 得到会导致元素显示不全的祖先元素
 */

function getOffsetParent(element) {
  if (__WEBPACK_IMPORTED_MODULE_0__utils__["a" /* default */].isWindow(element) || element.nodeType === 9) {
    return null;
  }
  // ie 这个也不是完全可行
  /*
   <div style="width: 50px;height: 100px;overflow: hidden">
   <div style="width: 50px;height: 100px;position: relative;" id="d6">
   元素 6 高 100px 宽 50px<br/>
   </div>
   </div>
   */
  // element.offsetParent does the right thing in ie7 and below. Return parent with layout!
  //  In other browsers it only includes elements with position absolute, relative or
  // fixed, not elements with overflow set to auto or scroll.
  //        if (UA.ie && ieMode < 8) {
  //            return element.offsetParent;
  //        }
  // 统一的 offsetParent 方法
  var doc = __WEBPACK_IMPORTED_MODULE_0__utils__["a" /* default */].getDocument(element);
  var body = doc.body;
  var parent = void 0;
  var positionStyle = __WEBPACK_IMPORTED_MODULE_0__utils__["a" /* default */].css(element, 'position');
  var skipStatic = positionStyle === 'fixed' || positionStyle === 'absolute';

  if (!skipStatic) {
    return element.nodeName.toLowerCase() === 'html' ? null : element.parentNode;
  }

  for (parent = element.parentNode; parent && parent !== body; parent = parent.parentNode) {
    positionStyle = __WEBPACK_IMPORTED_MODULE_0__utils__["a" /* default */].css(parent, 'position');
    if (positionStyle !== 'static') {
      return parent;
    }
  }
  return null;
}

/* harmony default export */ __webpack_exports__["a"] = (getOffsetParent);

/***/ }),
/* 245 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * 获取 node 上的 align 对齐点 相对于页面的坐标
 */

function getAlignOffset(region, align) {
  var V = align.charAt(0);
  var H = align.charAt(1);
  var w = region.width;
  var h = region.height;
  var x = void 0;
  var y = void 0;

  x = region.left;
  y = region.top;

  if (V === 'c') {
    y += h / 2;
  } else if (V === 'b') {
    y += h;
  }

  if (H === 'c') {
    x += w / 2;
  } else if (H === 'r') {
    x += w;
  }

  return {
    left: x,
    top: y
  };
}

/* harmony default export */ __webpack_exports__["a"] = (getAlignOffset);

/***/ }),
/* 246 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * @file KLtable 表格
 */

var TableHeader = __webpack_require__(537);
var TableBody = __webpack_require__(539);
var _ = __webpack_require__(2);
var u = __webpack_require__(69);

var Component = __webpack_require__(1);
var tpl = __webpack_require__(544);

/**
 * @class KLTable
 * @extend Component
 * @param {object}            [options.data]                      = 绑定属性
 * @param {array}             [options.data.source]               => 数据源
 * @param {object}            [options.data.paging]               => 分页
 * @param {object}            [options.data.sorting]              => 排序
 * @param {boolean}           [options.data.stickyHeader]         => 将表头固定到页面顶部
 * @param {boolean}           [options.data.stickyFooter]         => 将表格底部操作固定到页面底部
 * @param {boolean}           [options.data.fixedHeader]          => 将表头固定到表格顶部
 * @param {number}            [options.data.lineClamp]            => 单元格行数限制
 * @param {array}             [options.data.columns]              => 列配置
 * @param {string}            [optiosn.data.align=center]         => 文字对齐
 * @param {number}            [optiosn.data.minColWidth=50]       => 最小列宽
 * @param {boolean}            [optiosn.data.loading=false]       => 是否显示加载浮层
 */

/**
 * @class KLTableCol
 * @extend Component
 * @param {object}      [options.data]                  = 绑定属性
 * @param {string}      [options.data.name]             => 表头名称
 * @param {string}      [options.data.key]              => 列属性字段
 * @param {string}      [options.data.tip]              => 提示信息
 * @param {string}      [options.data.type]             => 列内容的预设类型
 * @param {string}      [options.data.width]            => 列宽
 * @param {number}      [optiosn.data.minWidth]         => 最小列宽，不设置时取全局值 minColWidth，拖动改变列宽后会被设置
 * @param {string}      [options.data.columnClass]      => 列内容样式
 * @param {string}      [options.data.headerClass]      => 表头样式
 * @param {boolean}     [options.data.sortable]         => 可排序
 * @param {string}      [options.data.children]         => 子表头
 * @param {boolean|string} [options.data.fixed]         => 列固定开关，默认left为做固定，right为右固定
 * @param {string}      [optiosn.data.align='']         => 列文字对齐
 * @param {string}      [optiosn.data.placeholder='-']  => 列文字占位符
 *
 * @param {string}      [options.data.template]         => 列内容模版
 * @param {string}      [options.data.headerTemplate]   => 列表头模版
 * @param {string}      [options.data.expandTemplate]   => 下钻展开内容模版
 */

/**
 * @class KLTableTemplate
 * @extend Component
 * @param {object}      [options.data]                = 绑定属性
 * @param {string}      [options.data.type=content] => 模版类型, header, content
 */

var KLTable = Component.extend({
  name: 'kl-table',
  template: tpl,
  computed: {
    checkAll: {
      get: function get() {
        if (!this.data.source) {
          return false;
        }
        var checkedList = this.data.source.filter(function (item) {
          return item._checked;
        });
        if (checkedList.length === this.data.source.length) {
          return true;
        } else if (checkedList.length > 0) {
          return null;
        }
        return false;
      },
      set: function set(val) {
        if (!this.data.source) {
          return val;
        }
        if (val !== null) {
          this.data.source.forEach(function (item) {
            item._checked = !!val;
          });
        }
      }
    }
  },
  config: function config(data) {
    this.defaults({
      stickyHeaderOffset: 0,
      stickyFooterOffset: 0,
      scrollParent: null,
      scrollParentNode: null,
      strip: true,
      enableHover: true,
      scrollYBarWidth: 0,
      scrollXBarWidth: 0,

      show: true,
      columns: [],
      sorting: {},
      config: {},
      align: 'center',
      placeholder: '-',
      checkAll: false,
      initFinished: false,
      minColWidth: 50,
      isMobile: u.browser.versions.mobile,

      // 定时器
      _updateTimer: null,
      _getHeaderHeightTimer: null,
      _sourceChangeTimer: null
    });
    this.supr(data);
    this.data.minColWidth = +this.data.minColWidth;
    this.data._defaultWidth = +this.data.width;
    this.$table = this;
    this.$tableData = this.data;
  },
  init: function init() {
    this._initTable();
  },
  _initTable: function _initTable() {
    var _this = this;

    this.data._updateTimer = setTimeout(function () {
      _this._updateParentWidth();
      _this._updateSticky();
      _this._updateTableWidth();
      _this._updateExpandHeight();
      _this._initWatchers();
      _this.$update();
    }, 0);
    this.data._getHeaderHeightTimer = setTimeout(function () {
      _this._getHeaderHeight();
    }, 400);
  },
  _initWatchers: function _initWatchers() {
    this.$watch('source', this._onSouceChange);
    this.$watch('columns', this._onColumnsChange);
    this.$watch('scrollYBarWidth', this._onScrollYBarChange);
    this.$watch('parentWidth', this._onParentWidthChange);
    this.$watch('tableWidth', this._onTableWidthChange);
    this.$watch('headerHeight', this._updateBodyHeight);
    this.$watch('height', this._updateBodyHeight);

    this._onBodyScroll = u.throttle(this._onBodyScroll.bind(this), this.data.isMobile ? 100 : 16);

    this._onWindowScroll = u.throttle(this._onWindowScroll.bind(this), 50);
    this._getScrollParentNode().addEventListener('scroll', this._onWindowScroll);

    this._onWindowResize = u.throttle(this._onWindowResize.bind(this), 50);
    window.addEventListener('resize', this._onWindowResize);

    this._watchWidthChange();
  },
  _getScrollParentNode: function _getScrollParentNode() {
    var data = this.data;
    if (data.scrollParentNode) {
      return data.scrollParentNode;
    }
    if (data.scrollParent) {
      return data.scrollParentNode = document.querySelector(data.scrollParent) || window;
    }
    return data.scrollParentNode = window;
  },
  _updateHeaders: function _updateHeaders() {
    var columns = this.data.columns;
    if (!columns) {
      return;
    }
    var headers = u.getHeaders(columns);
    this._updateData('headers', headers);
  },
  _onParentWidthChange: function _onParentWidthChange(newVal, oldVal) {
    if (newVal === undefined || oldVal === undefined) {
      return;
    }
    this._updateTableWidth();
    this._updateSticky();
    this._updateFixedTablePosRight();
    this._getHeaderHeight();
  },
  _onTableWidthChange: function _onTableWidthChange() {
    this._updateFixedTablePosRight();
  },
  _onSouceChange: function _onSouceChange(val) {
    var _this2 = this;

    // 处理初始加载为[]的情况，列表加载会触发两次[]-->有数据，忽略第一次.
    // 考虑到以下方法主要是_updateSticky，就算是查询空数据无影响
    if (!val || val.length < 1) {
      return;
    }
    this.data._sourceChangeTimer = setTimeout(function () {
      _this2._updateSticky();
    }, 500);
  },
  _onWindowScroll: function _onWindowScroll() {
    if (!this.$refs || !this._isShow()) {
      return;
    }
    this._updateSticky();
  },
  _updateSticky: function _updateSticky() {
    var data = this.data;
    if (data.parentWidth === 0) {
      data.stickyHeaderActive = false;
      data.stickyFooterActive = false;
      return;
    }
    if (!data.stickyHeader && !data.stickyFooter) {
      return;
    }

    var tableWrapOffset = this._getTableWrapOffset();

    if (data.stickyHeader && tableWrapOffset) {
      this._updateStickyHeaderStatus(tableWrapOffset);
    }

    if (data.stickyFooter && tableWrapOffset) {
      this._updateStickyFooterStatus(tableWrapOffset);
    }
  },
  _getTableWrapOffset: function _getTableWrapOffset() {
    var scrollParentNode = this._getScrollParentNode();
    var parentRect = {
      top: 0
    };
    var scrollTop = void 0;
    if (scrollParentNode !== window) {
      scrollTop = scrollParentNode.scrollTop;
      parentRect = scrollParentNode.getBoundingClientRect();
    } else {
      scrollTop = window.pageYOffset || document.documentElement.scrollTop;
    }

    var tableRect = this.$refs.tableWrap.getBoundingClientRect();

    var tableWrapOffset = {
      top: tableRect.top + scrollTop - parentRect.top,
      bottom: tableRect.bottom + scrollTop - parentRect.top
    };

    return tableWrapOffset;
  },
  _updateStickyHeaderStatus: function _updateStickyHeaderStatus(tableWrapOffset) {
    var headerHeight = this._getHeaderHeight();

    var scrollParentNode = this._getScrollParentNode();
    var scrollY = 0;
    if (scrollParentNode !== window) {
      scrollY = scrollParentNode.scrollTop;
    } else {
      scrollY = window.pageYOffset || document.documentElement.scrollTop;
    }

    var stickyActive = false;
    var stickyHeaderOffset = +this.data.stickyHeaderOffset;

    if (scrollY + stickyHeaderOffset + headerHeight > tableWrapOffset.bottom || scrollY + stickyHeaderOffset < tableWrapOffset.top) {
      stickyActive = false;
    } else {
      stickyActive = true;
    }

    this._updateData('stickyHeaderActive', stickyActive);
  },
  _updateStickyFooterStatus: function _updateStickyFooterStatus(tableWrapOffset) {
    var headerHeight = this._getHeaderHeight();
    var footerHeight = this._getFooterHeight();

    var scrollY = 0;
    var innerHeight = 0;
    var scrollParentNode = this._getScrollParentNode();
    if (scrollParentNode !== window) {
      scrollY = scrollParentNode.scrollTop;
      innerHeight = scrollParentNode.clientHeight;
    } else {
      scrollY = window.scrollY;
      innerHeight = window.innerHeight;
    }

    var scrollYBottom = scrollY + innerHeight;
    var stickyActive = false;

    var stickyFooterOffset = +this.data.stickyFooterOffset;

    if (scrollYBottom > tableWrapOffset.bottom + footerHeight + stickyFooterOffset || scrollYBottom < tableWrapOffset.top + headerHeight + 20 + stickyFooterOffset) {
      stickyActive = false;
    } else {
      stickyActive = true;
    }

    this._updateData('stickyFooterActive', stickyActive);
  },
  _watchWidthChange: function _watchWidthChange() {
    var self = this;
    self.data._quickTimer = setInterval(function () {
      if (!self._isShow()) {
        return;
      }
      self._getHeaderHeight();
      self._updateParentWidth();
      self._updateScrollBar();
      self._updateExpandHeight();
    }, 200);
  },
  _updateExpandHeight: function _updateExpandHeight() {
    var _this3 = this;

    if (!this.data.source) {
      return;
    }
    this.data.source.forEach(function (row, index) {
      var expandElement = _this3.$refs['expand' + index];
      if (expandElement && row._expanddingColumn) {
        row._expandHeight = expandElement.clientHeight;
      }
    });
  },
  _getExpandRowTop: function _getExpandRowTop(index) {
    var top = this.data.source.reduce(function (sum, row, rowIndex) {
      var newSum = sum;
      if (rowIndex <= index) {
        newSum += row._rowHeight;
        if (rowIndex < index && row.expand) {
          newSum += row._expandHeight || 0;
        }
        return newSum;
      }
      return sum;
    }, this.data.headerHeight);
    return top;
  },
  _updateParentWidth: function _updateParentWidth() {
    var data = this.data;
    var width = data.width;

    var parentStyle = window.getComputedStyle(this.$refs.tableWrap.parentElement);
    var parentPadding = u.getNum(parentStyle.paddingLeft) + u.getNum(parentStyle.paddingRight);
    var parentWidth = this.$refs.tableWrap.parentElement.clientWidth;
    width = parentWidth - parentPadding;

    this._updateData('parentWidth', width);
  },
  _updateScrollBar: function _updateScrollBar() {
    var tableWrapEle = this.$refs.bodyWrap;
    var tableEle = this.$refs.table;
    if (!tableWrapEle || !tableEle) {
      return;
    }
    var yBarWidth = Math.abs(tableWrapEle.offsetWidth - tableWrapEle.clientWidth);
    var tableWrapEleXBarWidth = Math.abs(tableWrapEle.offsetHeight - tableWrapEle.clientHeight);
    var tableEleXBarWidth = Math.abs(tableEle.offsetHeight - tableEle.clientHeight);
    var xBarWidth = Math.max(tableWrapEleXBarWidth, tableEleXBarWidth);

    this._updateData('scrollYBarWidth', yBarWidth);
    this._updateData('scrollXBarWidth', xBarWidth);
  },
  _onScrollYBarChange: function _onScrollYBarChange(newVal, oldVal) {
    if (oldVal === undefined) {
      return;
    }
    this._updateTableWidth();
  },
  _onColumnsChange: function _onColumnsChange(newVal) {
    if (newVal) {
      this._updateDataColumn();
      this._updateTableWidth();
      this._updateHeaders();
    }
  },
  _updateDataColumn: function _updateDataColumn() {
    this.$update('_dataColumns', u.getLeaves(this.data.columns));
  },
  _getHeaderHeight: function _getHeaderHeight() {
    var headerHeight = u.getElementHeight(this.$refs.headerWrap);
    this._updateData('headerHeight', headerHeight);
    return headerHeight;
  },
  _getFooterHeight: function _getFooterHeight() {
    var footerHeight = u.getElementHeight(this.$refs.footerWrap);
    this._updateData('footerHeight', footerHeight);
    return footerHeight;
  },
  _updateTableWidth: function _updateTableWidth() {
    var data = this.data;
    var minColWidth = data.minColWidth;
    var parentWidth = data.parentWidth - (data.scrollYBarWidth || 0);
    var _dataColumns = data._dataColumns;
    if (!_dataColumns) {
      return;
    }
    var minTableWidth = _dataColumns.reduce(function (sum, column) {
      return sum + (column.width || column.minWidth || minColWidth);
    }, 0);
    if (parentWidth > minTableWidth) {
      var totalFlexWidth = parentWidth - minTableWidth;
      var flexColumns = _dataColumns.filter(function (column) {
        return !column.width;
      });
      var flexColumnsWidth = flexColumns.reduce(function (sum, column) {
        return sum + (column.minWidth || minColWidth);
      }, 0);
      var ratio = totalFlexWidth / flexColumnsWidth;
      var noneFirstColFlexWidth = 0;

      if (flexColumns.length > 0) {
        flexColumns.forEach(function (column, index) {
          if (index === 0) {
            return;
          }
          var flexWidth = Math.floor((column.minWidth || minColWidth) * ratio);
          column._width = flexWidth + (column.minWidth || minColWidth);
          noneFirstColFlexWidth += flexWidth;
        });
        flexColumns[0]._width = (flexColumns[0].minWidth || minColWidth) + (totalFlexWidth - noneFirstColFlexWidth);
      }

      var newTableWidth = _dataColumns.reduce(function (sum, column) {
        if (!column._width) {
          column._width = column.width || data.defaultsColWidth;
        }
        return sum + column._width;
      }, 0);

      this._updateData('tableWidth', newTableWidth);
    } else {
      var _newTableWidth = 0;
      _dataColumns.forEach(function (column) {
        column._width = column.width || column.minWidth || minColWidth;
        _newTableWidth += column._width;
      });
      this._updateData('tableWidth', _newTableWidth);
    }

    var newWidth = data.tableWidth;
    if (data._defaultWidth) {
      newWidth = Math.min(newWidth, data._defaultWidth);
    }
    newWidth = Math.min(newWidth, data.parentWidth);
    this._updateData('width', newWidth);
    this._updateFixedWidth();
  },
  _updateFixedWidth: function _updateFixedWidth() {
    var _dataColumns = this.data._dataColumns;
    var fixedTableWidth = _dataColumns.reduce(function (sum, current) {
      if (current.fixed === 'left' || current.fixed === true) {
        return sum + current._width;
      }
      return sum;
    }, 0);
    var fixedColLeft = !!fixedTableWidth;

    var fixedTableWidthRight = _dataColumns.reduce(function (sum, current) {
      if (current.fixed === 'right') {
        return sum + current._width;
      }
      return sum;
    }, 0) - 1;
    var fixedColRight = !!fixedTableWidthRight;

    this._updateData('fixedColLeft', fixedColLeft);
    this._updateData('fixedTableWidth', fixedTableWidth);
    this._updateData('fixedColRight', fixedColRight);
    this._updateData('fixedTableWidthRight', fixedTableWidthRight);
  },
  _onWindowResize: function _onWindowResize() {
    if (!this.$refs || !this._isShow()) {
      return;
    }
    this._updateParentWidth();
  },
  _onBodyScroll: function _onBodyScroll(host) {
    if (!this._isShow()) {
      return;
    }
    var $refs = this.$refs;

    u.setElementValue($refs.bodyWrapFixedLeft, 'scrollTop', host.scrollTop);
    u.setElementValue($refs.bodyWrapFixedRight, 'scrollTop', host.scrollTop);
    u.setElementValue($refs.headerWrap, 'scrollLeft', host.scrollLeft);
    u.setElementValue($refs.bodyWrap, 'scrollLeft', host.scrollLeft);
  },
  _onSort: function _onSort(e) {
    /**
         * @event KLTable#sort 排序事件
         * @property {object} sender 事件来源
         * @property {boolean} asc 是否升序
         * @property {object} column 目标列
         * @property {number} columnIndex 目标列序号
         * @property {string} key 排序字段
         * @property {object} sorting 排序设置对象
         */
    this.$emit('sort', e);
  },
  _onCustomEvent: function _onCustomEvent(e) {
    this.$emit(e.type, _.extend({
      sender: this,
      custom: true
    }, e.args));
  },
  _onItemCheckChange: function _onItemCheckChange(e) {
    var _this4 = this;

    /**
         * @event KLTable#checkchange 多选事件
         * @property {object} sender 事件来源
         * @property {boolean} checked 是否选中
         * @property {object} item 操作对象
         * @property {object} checkedEvent 多选事件对象源
         */
    setTimeout(function () {
      _this4.$emit('checkchange', {
        sender: _this4,
        item: e.item,
        checked: e.checked,
        checkedEvent: e.event,
        checkAll: _this4.data.checkAll
      });
    });
  },
  _updateFixedTablePosRight: function _updateFixedTablePosRight() {
    var data = this.data;
    var fixedTablePosRight = Math.floor(data.parentWidth - data.tableWidth);
    this._updateData('fixedTablePosRight', fixedTablePosRight > 0 ? fixedTablePosRight : data.scrollYBarWidth);
  },
  _updateBodyHeight: function _updateBodyHeight() {
    var data = this.data;
    if (data.height !== undefined && data.headerHeight !== undefined && data.height !== null && data.headerHeight !== null) {
      this._updateData('bodyHeight', +data.height - data.headerHeight);
    }
  },
  emitEvent: function emitEvent(type) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    /**
         * @event KLTable#type 自定义的操作事件
         * @property {object} sender 事件来源
         * @property {boolean} custom 自定义事件标识
         * @property {array} param 自定义事件所带的参数
         */
    this.$emit(type, {
      custom: true,
      sender: this,
      param: args
    });
  },
  _onExpand: function _onExpand(e) {
    var _this5 = this;

    setTimeout(function () {
      _this5._updateExpandHeight();
      _this5.$update();
    }, 0);
    this.$emit('expand', {
      sender: this,
      expand: e.expand,
      item: e.item,
      itemIndex: e.itemIndex,
      column: e.column
    });
  },
  _onPaging: function _onPaging(e) {
    /**
         * @event KLTable#paging 分页事件
         * @property {object} sender 事件来源
         * @property {number} current 事件来源
         * @property {object} paging 分页对象
         * @property {object} pagingEvent Pager 的分页事件
         */
    this.$emit('paging', {
      sender: this,
      current: e.current,
      paging: this.data.paging,
      pagingEvent: e
    });
  },
  _onFixedExpand: function _onFixedExpand(e) {
    this.$refs.tableBody._onExpand(e.item, e.itemIndex, e.column);
  },
  _onColumnResize: function _onColumnResize() {
    this._updateTableWidth();
    this._updateFixedWidth();
    this._forceRender();
  },
  _forceRender: function _forceRender() {
    var _this6 = this;

    var strip = this.data.strip;
    this.$update('strip', !strip);
    setTimeout(function () {
      _this6.$update('strip', strip);
    }, 50);
  },
  _isShow: function _isShow() {
    return this.data.show;
  },
  _updateData: function _updateData(key, val) {
    if (this.data[key] !== val) {
      this.$update(key, val);
    }
  },
  destroy: function destroy() {
    this.removeEventListener();
    this.supr();
  },
  removeEventListener: function removeEventListener() {
    // 清楚定时器
    clearInterval(this.data._quickTimer);
    clearTimeout(this.data._updateTimer);
    clearTimeout(this.data._getHeaderHeightTimer);
    clearTimeout(this.data._sourceChangeTimer);

    window.document.removeEventListener('scroll', this._onWindowScroll);
    window.removeEventListener('resize', this._onWindowResize);
  }
}).component('table-header', TableHeader).component('table-body', TableBody);

var oldFilter = KLTable.filter;
KLTable.$filter = function () {
  for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    args[_key2] = arguments[_key2];
  }

  TableHeader.filter.apply(TableHeader, args);
  TableBody.filter.apply(TableBody, args);
  oldFilter.apply(KLTable, args);
};
KLTable.filter = KLTable.$filter;

KLTable.$component = function () {
  for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
    args[_key3] = arguments[_key3];
  }

  TableHeader.component.apply(TableHeader, args);
  TableBody.component.apply(TableBody, args);
  KLTable.component.apply(KLTable, [KLTable].concat(args));
};

module.exports = KLTable;

/***/ }),
/* 247 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Component = __webpack_require__(1);

/**
 * @class KLTableTemplate
 * @extend Component
 * @param {object}      [options.data]                = 绑定属性
 * @param {string}      [options.data.type="content"] => 模版类型, header, content, expand
 */

var matchList = [{
  reg: /&quot;/g,
  glyph: '"'
}, {
  reg: /&amp;/g,
  glyph: '&'
}, {
  reg: /&lt;/g,
  glyph: '<'
}, {
  reg: /&gt;/g,
  glyph: '>'
}, {
  reg: /&nbsp;/g,
  glyph: ' '
}];

var decodeChar = function decodeChar(_str) {
  var str = _str;
  matchList.forEach(function (item) {
    str = str.replace(item.reg, item.glyph);
  });
  return str;
};

var KLTableTemplate = Component.extend({
  name: 'kl-table-template',
  template: '<div ref="bodyContainer" style="display:none">{#include this.$body}</div>',
  config: function config() {
    this.defaults({
      type: 'content',
      template: null
    });
  },
  init: function init() {
    this._register();
  },
  _register: function _register() {
    switch (this.data.type) {
      case 'header':
        this._register2Header();
        break;
      case 'expand':
        this._register2Expand();
        break;
      default:
        this._register2Content();
    }
  },
  _register2Header: function _register2Header() {
    var outerData = this.$outer.data;
    outerData._headerTemplate = this._getInnertTemplate();
  },
  _register2Expand: function _register2Expand() {
    this.$outer.data._expandTemplate = this._getInnertTemplate();
  },
  _register2Content: function _register2Content() {
    var outerData = this.$outer.data;
    outerData._template = this._getInnertTemplate();
  },
  _getInnertTemplate: function _getInnertTemplate() {
    var template = this.data.template || this.$refs.bodyContainer.innerHTML;
    return this._parseTemplate(template);
  },
  _parseTemplate: function _parseTemplate(template) {
    return decodeChar(template).replace(/(<!--)(.*)(-->)/g, '').trim();
  }
});

module.exports = KLTableTemplate;

/***/ }),
/* 248 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * @file KLRow 栅格布局-行
 */

var Component = __webpack_require__(1);
var template = __webpack_require__(546);

/**
 * @class KLRow
 * @extend Component
 * @param {object}          [options.data]                        => 绑定数据
 * @param {string}          [options.data.class]                  => 补充class
 * @param {string}          [options.data.type]              => 布局模式，可选 flex，现代浏览器下有效
 * @param {string}          [options.data.justify=start]      => flex 布局下的水平排列方式
 * @param {string}          [options.data.align=top]          => flex 布局下的垂直排列方式
 * @param {string}          [options.data.wrap=wrap]          => flex布局下的换行显示方式,wrap/nowrap/wrap-reverse
 * @param {number}          [options.data.gutter=40]           => 栅格间隔, 单位为px
 */

/**
 * @class KLCol
 * @extend Component
 * @param {object}          [options.data]                        => 绑定数据
 * @param {string}          [options.data.class]                  => 补充class
 * @param {number}          [options.data.span]              => 栅格占据的列数
 * @param {number}          [options.data.offset]            => 栅格左侧的间隔格数
 * @param {number/object}   [options.data.xs]                => <768px 响应式栅格数或者栅格属性对象, number/object (例如： {span: 4, offset: 4})
 * @param {number/object}   [options.data.sm]                => ≥768px 响应式栅格数或者栅格属性对象, number/object (例如： {span: 4, offset: 4})
 * @param {number/object}   [options.data.md]                => ≥992 响应式栅格数或者栅格属性对象, number/object (例如： {span: 4, offset: 4})
 * @param {number/object}   [options.data.lg]                => ≥1200 响应式栅格数或者栅格属性对象, number/object (例如： {span: 4, offset: 4})
 */

var KLRow = Component.extend({
  name: 'kl-row',
  template: template,
  config: function config(data) {
    this.defaults({
      type: '',
      justify: 'start',
      align: 'top',
      gutter: 24,
      wrap: 'wrap'
    });

    this.supr(data);
  }
});

KLRow.directive('gutter', function (ele, value) {
  this.$watch(value, function (gutter) {
    if (gutter || gutter === 0) {
      var margin = '-' + gutter / 2 + 'px';
      ele.style.marginLeft = margin;
      ele.style.marginRight = margin;
    }
  });
});

module.exports = KLRow;

/***/ }),
/* 249 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * ------------------------------------------------------------
 * @file KLCard 卡片
 * @author zianecui@gmail.com
 * ------------------------------------------------------------
 */

var Component = __webpack_require__(1);
var template = __webpack_require__(549);
var _ = __webpack_require__(2);

/**
 * @class KLCard
 * @extend Component
 * @param {object}          [options.data]                        = 绑定属性
 * @param {string}          [options.data.class]                  => 补充class
 * @param {boolean}          [options.data.isShowLine]            => 控制展示title之前的竖线，默认展示出来
 * @param {boolean}          [options.data.isShowBtLine]          => 控制展示title下发的横线，默认不展示出来
 * @param {boolean}          [options.data.isIndent]              => 控制子模块的title是否缩进
 * @param {boolean}          [options.data.bordered]              => 控制card是否有边框
 * @param {boolean}          [options.data.disHover]              => 禁用鼠标悬停显示阴影
 */
var KLCard = Component.extend({
  name: 'kl-card',
  template: template,
  $tools: null,
  config: function config() {
    _.extend(this.data, {
      title: '',
      isShowLine: true,
      isShowBtLine: true,
      isIndent: true
    });
    this.supr();
  }
});

module.exports = KLCard;

/***/ }),
/* 250 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * @file KLSearch 筛选区
 */

var Component = __webpack_require__(1);
var template = __webpack_require__(551);
var _ = __webpack_require__(2);

/**
 * @class KLSearch
 * @extend Component
 * @param {object}          [options.data]                       = 绑定属性
 * @param {string}          [options.data.class]                 => 补充class
 * @param {boolean}         [options.data.isShowFooter]          => 控制是否显示Footer
 * @param {boolean}         [options.data.isShowMore]            => 控制是否显示更多
 * @param {boolean}         [options.data.isShowToggle]          => 控制展示toggle文字，默认展示出来
 * @param {string}          [options.data.searchText]            => 设置展开的文案，默认“查询”
 * @param {string}          [options.data.resetText]             => 设置展开的文案，默认“重置”
 * @param {string}          [options.data.unfoldText]            => 设置展开的文案，默认“展开”
 * @param {string}          [options.data.foldText]              => 设置收起的文案，默认“收起”
 */
var KLSearch = Component.extend({
  name: 'kl-search',
  template: template,
  $more: null,

  config: function config() {
    _.extend(this.data, {
      isShowMore: false,
      isShowFooter: true,
      isShowToggle: true,
      searchText: this.$trans('SEARCH'),
      resetText: this.$trans('RESET'),
      unfoldText: this.$trans('UNFOLD'),
      foldText: this.$trans('FOLD'),
      toggleText: this.$trans('UNFOLD')
    });
    this.data.toggleText = this.data.isShowMore ? this.data.foldText : this.data.unfoldText;
    this.supr();
  },
  toggle: function toggle() {
    var data = this.data;
    data.isShowMore = !data.isShowMore;
    data.toggleText = data.toggleText === data.unfoldText ? data.foldText : data.unfoldText;
  },

  /**
  * @event KLSearch#search 点击查询时触发
  */
  search: function search() {
    this.$emit('search');
  },

  /**
  * @event KLSearch#reset 点击重置时触发
  */
  reset: function reset() {
    this.$emit('reset');
  }
});

module.exports = KLSearch;

/***/ }),
/* 251 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _values = __webpack_require__(70);

var _values2 = _interopRequireDefault(_values);

var _getIterator2 = __webpack_require__(38);

var _getIterator3 = _interopRequireDefault(_getIterator2);

var _assign = __webpack_require__(32);

var _assign2 = _interopRequireDefault(_assign);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var backward = __webpack_require__(268);

var Base = {
  Regular: __webpack_require__(11),
  Component: __webpack_require__(1),
  SourceComponent: __webpack_require__(16),
  _: __webpack_require__(2),
  ajax: __webpack_require__(46),
  Validation: __webpack_require__(9)
};

var Components = {
  // Form
  KLForm: __webpack_require__(379),
  KLFormItem: __webpack_require__(381),
  KLTag: __webpack_require__(383),
  KLCheck: __webpack_require__(385),
  KLCheckGroup: __webpack_require__(387),
  KLDatePicker: __webpack_require__(389),
  KLRadioGroup: __webpack_require__(395),
  KLMultiSelect: __webpack_require__(397),
  KLButton: __webpack_require__(399),
  KLInput: __webpack_require__(79),
  KLSelect: __webpack_require__(401),
  KLText: __webpack_require__(407),
  KLTextArea: __webpack_require__(409),
  KLUpload: __webpack_require__(412),
  KLTreeView: __webpack_require__(96),
  KLSwitch: __webpack_require__(438),
  KLGroup: __webpack_require__(440),
  KLTimePicker: __webpack_require__(442),
  KLDate: __webpack_require__(461),

  // Navigation
  KLSidebar: __webpack_require__(483),
  KLMenu: __webpack_require__(239),
  KLMenuItem: __webpack_require__(488),
  KLSubMenu: __webpack_require__(490),
  KLPager: __webpack_require__(492),
  KLTabs: __webpack_require__(241),
  KLTab: __webpack_require__(495),
  KLSteps: __webpack_require__(497),
  KLStep: __webpack_require__(499),
  KLCrumb: __webpack_require__(242),
  KLCrumbItem: __webpack_require__(502),

  // Notice
  KLModal: __webpack_require__(230),
  KLNotify: __webpack_require__(504),
  KLPopConfirm: __webpack_require__(506),
  KLMessage: __webpack_require__(516),

  // Widget
  KLBadge: __webpack_require__(518),
  KLProgress: __webpack_require__(520),
  KLLoading: __webpack_require__(522),
  KLTooltip: __webpack_require__(524),
  KLIcon: __webpack_require__(526),
  KLImagePreview: __webpack_require__(229),
  KLLocaleProvider: __webpack_require__(528),
  KLDraggable: __webpack_require__(529),
  KLScroll: __webpack_require__(531),

  // Layout
  KLTable: __webpack_require__(246),
  KLTableCol: __webpack_require__(545),
  KLTableTemplate: __webpack_require__(247),
  KLRow: __webpack_require__(248),
  KLCol: __webpack_require__(547),
  KLCard: __webpack_require__(249),
  KLCardTools: __webpack_require__(550),
  KLSearch: __webpack_require__(250),
  KLSearchMore: __webpack_require__(552),
  KLLayout: __webpack_require__(553),
  KLHeader: __webpack_require__(555),
  KLFooter: __webpack_require__(557),
  KLMain: __webpack_require__(559),
  KLAside: __webpack_require__(561),
  KLPopper: __webpack_require__(221),
  KLDrop: __webpack_require__(24),
  KLDropHeader: __webpack_require__(35),
  KLDropItem: __webpack_require__(563)
};

backward(Components);

module.exports = (0, _assign2.default)({
  // Register
  install: function install(Regular) {
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
      for (var _iterator = (0, _getIterator3.default)((0, _values2.default)(Components)), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var m = _step.value;

        var name = m.prototype && m.prototype.name;
        if (name) Regular.component(name, m);
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
  }
}, Base, Components);

/***/ }),
/* 252 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(253);
module.exports = __webpack_require__(4).Object.values;

/***/ }),
/* 253 */
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/tc39/proposal-object-values-entries
var $export = __webpack_require__(10)
  , $values = __webpack_require__(72)(false);

$export($export.S, 'Object', {
  values: function values(it){
    return $values(it);
  }
});

/***/ }),
/* 254 */
/***/ (function(module, exports, __webpack_require__) {

// false -> Array#indexOf
// true  -> Array#includes
var toIObject = __webpack_require__(15)
  , toLength  = __webpack_require__(53)
  , toIndex   = __webpack_require__(255);
module.exports = function(IS_INCLUDES){
  return function($this, el, fromIndex){
    var O      = toIObject($this)
      , length = toLength(O.length)
      , index  = toIndex(fromIndex, length)
      , value;
    // Array#includes uses SameValueZero equality algorithm
    if(IS_INCLUDES && el != el)while(length > index){
      value = O[index++];
      if(value != value)return true;
    // Array#toIndex ignores holes, Array#includes - not
    } else for(;length > index; index++)if(IS_INCLUDES || index in O){
      if(O[index] === el)return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

/***/ }),
/* 255 */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(54)
  , max       = Math.max
  , min       = Math.min;
module.exports = function(index, length){
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};

/***/ }),
/* 256 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(39);
__webpack_require__(31);
module.exports = __webpack_require__(264);

/***/ }),
/* 257 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var addToUnscopables = __webpack_require__(258)
  , step             = __webpack_require__(259)
  , Iterators        = __webpack_require__(22)
  , toIObject        = __webpack_require__(15);

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = __webpack_require__(75)(Array, 'Array', function(iterated, kind){
  this._t = toIObject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function(){
  var O     = this._t
    , kind  = this._k
    , index = this._i++;
  if(!O || index >= O.length){
    this._t = undefined;
    return step(1);
  }
  if(kind == 'keys'  )return step(0, index);
  if(kind == 'values')return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');

/***/ }),
/* 258 */
/***/ (function(module, exports) {

module.exports = function(){ /* empty */ };

/***/ }),
/* 259 */
/***/ (function(module, exports) {

module.exports = function(done, value){
  return {value: value, done: !!done};
};

/***/ }),
/* 260 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var create         = __webpack_require__(58)
  , descriptor     = __webpack_require__(28)
  , setToStringTag = __webpack_require__(41)
  , IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
__webpack_require__(17)(IteratorPrototype, __webpack_require__(7)('iterator'), function(){ return this; });

module.exports = function(Constructor, NAME, next){
  Constructor.prototype = create(IteratorPrototype, {next: descriptor(1, next)});
  setToStringTag(Constructor, NAME + ' Iterator');
};

/***/ }),
/* 261 */
/***/ (function(module, exports, __webpack_require__) {

var dP       = __webpack_require__(12)
  , anObject = __webpack_require__(13)
  , getKeys  = __webpack_require__(18);

module.exports = __webpack_require__(14) ? Object.defineProperties : function defineProperties(O, Properties){
  anObject(O);
  var keys   = getKeys(Properties)
    , length = keys.length
    , i = 0
    , P;
  while(length > i)dP.f(O, P = keys[i++], Properties[P]);
  return O;
};

/***/ }),
/* 262 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has         = __webpack_require__(19)
  , toObject    = __webpack_require__(42)
  , IE_PROTO    = __webpack_require__(55)('IE_PROTO')
  , ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function(O){
  O = toObject(O);
  if(has(O, IE_PROTO))return O[IE_PROTO];
  if(typeof O.constructor == 'function' && O instanceof O.constructor){
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};

/***/ }),
/* 263 */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(54)
  , defined   = __webpack_require__(52);
// true  -> String#at
// false -> String#codePointAt
module.exports = function(TO_STRING){
  return function(that, pos){
    var s = String(defined(that))
      , i = toInteger(pos)
      , l = s.length
      , a, b;
    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};

/***/ }),
/* 264 */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(13)
  , get      = __webpack_require__(59);
module.exports = __webpack_require__(4).getIterator = function(it){
  var iterFn = get(it);
  if(typeof iterFn != 'function')throw TypeError(it + ' is not iterable!');
  return anObject(iterFn.call(it));
};

/***/ }),
/* 265 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(266);
module.exports = __webpack_require__(4).Object.assign;

/***/ }),
/* 266 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.3.1 Object.assign(target, source)
var $export = __webpack_require__(10);

$export($export.S + $export.F, 'Object', {assign: __webpack_require__(267)});

/***/ }),
/* 267 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 19.1.2.1 Object.assign(target, source, ...)
var getKeys  = __webpack_require__(18)
  , gOPS     = __webpack_require__(61)
  , pIE      = __webpack_require__(30)
  , toObject = __webpack_require__(42)
  , IObject  = __webpack_require__(74)
  , $assign  = Object.assign;

// should work with symbols and should have deterministic property order (V8 bug)
module.exports = !$assign || __webpack_require__(21)(function(){
  var A = {}
    , B = {}
    , S = Symbol()
    , K = 'abcdefghijklmnopqrst';
  A[S] = 7;
  K.split('').forEach(function(k){ B[k] = k; });
  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
}) ? function assign(target, source){ // eslint-disable-line no-unused-vars
  var T     = toObject(target)
    , aLen  = arguments.length
    , index = 1
    , getSymbols = gOPS.f
    , isEnum     = pIE.f;
  while(aLen > index){
    var S      = IObject(arguments[index++])
      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)
      , length = keys.length
      , j      = 0
      , key;
    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];
  } return T;
} : $assign;

/***/ }),
/* 268 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _assign = __webpack_require__(32);

var _assign2 = _interopRequireDefault(_assign);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * 向下兼容
 */

var NumberInput = __webpack_require__(78);
var TimePicker = __webpack_require__(345);
var Dropdown = __webpack_require__(34);

var aliasList = [{ oldObj: 'Check', newObj: 'KLCheck', oldName: 'check' }, { oldObj: 'CheckGroup', newObj: 'KLCheckGroup', oldName: 'check.group' }, { oldObj: 'DatePicker', newObj: 'KLDatePicker', oldName: 'date.picker' }, { oldObj: 'RadioGroup', newObj: 'KLRadioGroup', oldName: 'radio.group' }, { oldObj: 'MultiSelect', newObj: 'KLMultiSelect', oldName: 'multi.select' }, { oldObj: 'UIButton', newObj: 'KLButton', oldName: 'ui.button' }, { oldObj: 'UIForm', newObj: 'KLForm', oldName: 'ui.form' }, { oldObj: 'FormItem', newObj: 'KLFormItem', oldName: 'form.item' }, { oldObj: 'UIInput', newObj: 'KLInput', oldName: 'ui.input' }, { oldObj: 'UISelect', newObj: 'KLSelect', oldName: 'ui.select' }, { oldObj: 'UIText', newObj: 'KLText', oldName: 'ui.text' }, { oldObj: 'UITextArea', newObj: 'KLTextArea', oldName: 'ui.textarea' }, { oldObj: 'Sidebar', newObj: 'KLSidebar', oldName: 'ui.sidebar' }, { oldObj: 'Menu', newObj: 'KLMenu', oldName: 'ui.menu' }, { oldObj: 'MenuItem', newObj: 'KLMenuItem', oldName: 'menu.item' }, { oldObj: 'SubMenu', newObj: 'KLSubMenu', oldName: 'sub.menu' }, { oldObj: 'Pager', newObj: 'KLPager', oldName: 'pager' }, { oldObj: 'Tabs', newObj: 'KLTabs', oldName: 'tabs' }, { oldObj: 'Tab', newObj: 'KLTab', oldName: 'tab' }, { oldObj: 'Steps', newObj: 'KLSteps', oldName: 'steps' }, {
  oldObj: 'Modal',
  newObj: 'KLModal',
  oldName: 'modal',
  staticMethods: ['alert', 'confirm']
}, { oldObj: 'Mask', newObj: 'KLMask', oldName: 'mask' }, {
  oldObj: 'Notify',
  newObj: 'KLNotify',
  oldName: 'notify',
  staticMethods: ['notify', 'show', 'close', 'closeAll', 'success', 'warning', 'info', 'error']
}, { oldObj: 'PopConfirm', newObj: 'KLPopConfirm', oldName: 'pop.confirm' }, {
  oldObj: 'Loading',
  newObj: 'KLLoading',
  oldName: 'loading',
  staticMethods: ['loading', 'show', 'hide']
}, { oldObj: 'Progress', newObj: 'KLProgress', oldName: 'progress' }, { oldObj: 'Tooltip', newObj: 'KLTooltip', oldName: 'tooltip' }, {
  oldObj: 'LocaleProvider',
  newObj: 'KLLocaleProvider',
  oldName: 'locale.provider',
  staticMethods: ['translate']
}, { oldObj: 'UITable', newObj: 'KLTable', oldName: 'ui.table' }, { oldObj: 'TableCol', newObj: 'KLTableCol', oldName: 'table.col' }, {
  oldObj: 'TableTemplate',
  newObj: 'KLTableTemplate',
  oldName: 'table.template'
}, { oldObj: 'Row', newObj: 'KLRow', oldName: 'ui.row' }, { oldObj: 'Col', newObj: 'KLCol', oldName: 'ui.col' }, { oldObj: 'Card', newObj: 'KLCard', oldName: 'ui.card' }, { oldObj: 'CardTools', newObj: 'KLCardTools', oldName: 'card.tools' }];

module.exports = function (Components) {
  (0, _assign2.default)(Components, {
    // 内部组件
    NumberInput: NumberInput.extend({ name: 'number.input' }),
    TimePicker: TimePicker.extend({ name: 'time.picker' }),
    Dropdown: Dropdown.extend({ name: 'dropdown' }),

    // 废弃组件
    SelectGroup: __webpack_require__(350),
    Suggest: __webpack_require__(352),
    TreeSelect: __webpack_require__(354),
    Uploader: __webpack_require__(359),
    UIGroup: __webpack_require__(361),
    Collapse: __webpack_require__(362),
    Gotop: __webpack_require__(365),
    PathTool: __webpack_require__(367),
    Panel: __webpack_require__(67),
    PanelTool: __webpack_require__(376),
    KLMask: __webpack_require__(377)
  });

  // 别名组件
  aliasList.forEach(function (alias) {
    Components[alias.oldObj] = Components[alias.newObj].extend({
      name: alias.oldName
    });
    // 静态方法
    (alias.staticMethods || []).forEach(function (_static) {
      Components[alias.oldObj][_static] = Components[alias.newObj][_static];
    });
  });
};

/***/ }),
/* 269 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(270);
var $Object = __webpack_require__(4).Object;
module.exports = function create(P, D){
  return $Object.create(P, D);
};

/***/ }),
/* 270 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(10)
// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
$export($export.S, 'Object', {create: __webpack_require__(58)});

/***/ }),
/* 271 */
/***/ (function(module, exports, __webpack_require__) {

var core  = __webpack_require__(4)
  , $JSON = core.JSON || (core.JSON = {stringify: JSON.stringify});
module.exports = function stringify(it){ // eslint-disable-line no-unused-vars
  return $JSON.stringify.apply($JSON, arguments);
};

/***/ }),
/* 272 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = {
  'zh-CN': __webpack_require__(273),
  'en-US': __webpack_require__(274)
};

/***/ }),
/* 273 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = {
  PLEASE_SELECT: '请选择',
  PLEASE_INPUT: '请输入',
  NO_MATCH: '无匹配项目',
  CAL_MONDAY: '一',
  CAL_TUESDAY: '二',
  CAL_WENSDAY: '三',
  CAL_THURSDAY: '四',
  CAL_FRIDAY: '五',
  CAL_SATURDAY: '六',
  CAL_SUNDAY: '日',
  CONFIRM: '确定',
  ALL: '全部',
  UPLOAD: '上传',
  DROPDOWN_LIST: '下拉菜单',
  MULTILEVEL_MENU: '多级菜单',
  GOTO: '跳至',
  PAGE_NEXT: '下一页',
  PAGE_PREV: '上一页',
  CANCEL: '取消',
  NOTICE: '提示',
  ITEM_PAGE: '条/页',
  TOTAL: '共',
  ITEMS: '条',
  PAGE: '页',
  FORMAT_ERROR: '格式错误',
  VALUE_ERROR: '值错误',
  LENGTH_ERROR: '长度错误',
  LOADING: '加载中',
  NO_DATA: '无数据',
  FILE_TYPE_ERROR: '格式错误',
  FILE_TOO_LARGE: '文件过大',
  RETRY: '重试',
  UPLOAD_FILE: '上传文件',
  DOWNLOAD_FILE: '下载',
  UPLOAD_FAIL: '上传失败',
  UNKNOWN: '未知',
  REMOVE_CONFIRM: '确认删除',
  LIMIT_ERROR: 'limit 应该为数字',
  IMAGE_WIDTH_ERROR: '宽度错误',
  IMAGE_HEIGHT_ERROR: '高度错误',
  IMAGE_SCALE_ERROR: '比例错误',
  PLEASE_UPLOAD_ATLEAST: '请至少上传',
  UNIT: '个',
  FILE: '文件',
  SEARCH: '查询',
  RESET: '重置',
  FOLD: '收起',
  UNFOLD: '展开',
  JAN: '1月',
  FEB: '2月',
  MAR: '3月',
  APR: '4月',
  MAY: '5月',
  JUN: '6月',
  JUL: '7月',
  AUG: '8月',
  SEP: '9月',
  OCT: '10月',
  NOV: '11月',
  DEC: '12月'
};

/***/ }),
/* 274 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = {
  PLEASE_SELECT: 'Please Select',
  PLEASE_INPUT: 'Please Input',
  NO_MATCH: 'No Match',
  CAL_MONDAY: 'Mon',
  CAL_TUESDAY: 'Tue',
  CAL_WENSDAY: 'Wen',
  CAL_THURSDAY: 'Thu',
  CAL_FRIDAY: 'Fri',
  CAL_SATURDAY: 'Sat',
  CAL_SUNDAY: 'Sun',
  CONFIRM: 'Confirm',
  ALL: 'All',
  UPLOAD: 'Upload',
  DROPDOWN_LIST: 'Dropdown List',
  MULTILEVEL_MENU: 'Multi-level Menu',
  GOTO: 'Goto',
  PAGE_NEXT: 'Next',
  PAGE_PREV: 'Prev',
  CANCEL: 'Cancel',
  NOTICE: 'Notice',
  ITEM_PAGE: '/page',
  TOTAL: 'total',
  ITEMS: 'items',
  PAGE: '',
  FORMAT_ERROR: 'Format Error',
  VALUE_ERROR: 'Value Error',
  LENGTH_ERROR: 'Length Error',
  LOADING: 'Loading',
  NO_DATA: 'No data',
  FILE_TYPE_ERROR: 'TypeError',
  FILE_TOO_LARGE: 'TooLarge',
  RETRY: 'Retry',
  UPLOAD_FILE: 'File',
  DOWNLOAD_FILE: '',
  UPLOAD_FAIL: 'Fail',
  UNKNOWN: 'UNKNOWN',
  REMOVE_CONFIRM: 'Are you sure to remove',
  LIMIT_ERROR: 'the limit should be a number',
  IMAGE_WIDTH_ERROR: 'width error',
  IMAGE_HEIGHT_ERROR: 'height error',
  IMAGE_SCALE_ERROR: 'scale error',
  PLEASE_UPLOAD_ATLEAST: 'Please upload at least',
  UNIT: '',
  FILE: 'file',
  SEARCH: 'search',
  RESET: 'reset',
  FOLD: 'fold',
  UNFOLD: 'unfold',
  JAN: 'Jan',
  FEB: 'Feb',
  MAR: 'Mar',
  APR: 'Apr',
  MAY: 'May',
  JUN: 'Jun',
  JUL: 'Jul',
  AUG: 'Aug',
  SEP: 'Sep',
  OCT: 'Oct',
  NOV: 'Nov',
  DEC: 'Dec'
};

/***/ }),
/* 275 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(276);
module.exports = __webpack_require__(4).Object.keys;

/***/ }),
/* 276 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 Object.keys(O)
var toObject = __webpack_require__(42)
  , $keys    = __webpack_require__(18);

__webpack_require__(277)('keys', function(){
  return function keys(it){
    return $keys(toObject(it));
  };
});

/***/ }),
/* 277 */
/***/ (function(module, exports, __webpack_require__) {

// most Object methods by ES6 should accept primitives
var $export = __webpack_require__(10)
  , core    = __webpack_require__(4)
  , fails   = __webpack_require__(21);
module.exports = function(KEY, exec){
  var fn  = (core.Object || {})[KEY] || Object[KEY]
    , exp = {};
  exp[KEY] = exec(fn);
  $export($export.S + $export.F * fails(function(){ fn(1); }), 'Object', exp);
};

/***/ }),
/* 278 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _typeof2 = __webpack_require__(45);

var _typeof3 = _interopRequireDefault(_typeof2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _ = __webpack_require__(2);
var Regular = __webpack_require__(11);

var rClassGenerator = function rClassGenerator(rClass) {
  exports[rClass] = function (elem, value) {
    if ((typeof value === 'undefined' ? 'undefined' : (0, _typeof3.default)(value)) === 'object' && value.type === 'expression') {
      this.$watch(value, function (newValue) {
        _.dom[newValue ? 'addClass' : 'delClass'](elem, rClass);
      });
    } else if (!!value || value === '') _.dom.addClass(elem, rClass);
  };
};

rClassGenerator('is-crt');
rClassGenerator('is-sel');
rClassGenerator('is-chk');
rClassGenerator('is-act');
rClassGenerator('is-dis');
rClassGenerator('is-hover');
rClassGenerator('is-divider');

exports['r-show'] = function (elem, value) {
  if ((typeof value === 'undefined' ? 'undefined' : (0, _typeof3.default)(value)) === 'object' && value.type === 'expression') {
    this.$watch(value, function (newValue, oldValue) {
      if (!newValue === !oldValue) return;

      if (typeof newValue === 'string') elem.style.display = newValue;else elem.style.display = newValue ? 'block' : '';
    });
  } else if (!!value || value === '') {
    if (typeof value === 'string' && value !== '') elem.style.display = value;else elem.style.display = value ? 'block' : '';
  }
};

exports['r-autofocus'] = function (elem) {
  setTimeout(function () {
    elem.focus();
  }, 0);
};

exports['r-attr'] = function (elem, value) {
  var attrs = {
    INPUT: ['autocomplete', 'autofocus', 'checked', 'disabled', 'max', 'maxlength', 'min', 'multiple', 'name', 'pattern', 'placeholder', 'readonly', 'required', 'step', 'type'],
    TEXTAREA: ['autofocus', 'disabled', 'maxlength', 'name', 'placeholder', 'readonly', 'required', 'wrap'],
    SELECT: ['autofocus', 'disabled', 'multiple', 'name', 'required']
  };

  this.$watch(value, function (newValue) {
    attrs[elem.tagName].forEach(function (attr) {
      if (newValue[attr]) _.dom.attr(elem, attr, newValue[attr]);
    });
  }, true);
};

/**
 * r-width form.item下表单元素固定宽度时使用;
 * @param elem
 * @param value
 */
exports['r-width'] = function (elem, value) {
  this.$watch(value, function (newValue) {
    if (parseInt(newValue)) {
      elem.style.width = parseInt(newValue) + 'px';
      elem.style.display = 'inline-block';
    }
  });
};

/**
 * r-route kl-menu中使用, 支持单页跳转
 * @param elem
 */
exports['r-route'] = function (elem, value) {
  this.$watch(value, function () {
    var data = this.data;
    var url = data.url,
        route = data.route,
        rootMenu = data.rootMenu;
    var router = rootMenu.data.router;


    if (url) {
      elem.href = url;
    } else if (router && route) {
      Regular.directive('r-link').link.call(this, elem, route);
    }
  });
};

/***/ }),
/* 279 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(280), __esModule: true };

/***/ }),
/* 280 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(31);
__webpack_require__(39);
module.exports = __webpack_require__(62).f('iterator');

/***/ }),
/* 281 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(282), __esModule: true };

/***/ }),
/* 282 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(283);
__webpack_require__(82);
__webpack_require__(290);
__webpack_require__(291);
module.exports = __webpack_require__(4).Symbol;

/***/ }),
/* 283 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// ECMAScript 6 symbols shim
var global         = __webpack_require__(8)
  , has            = __webpack_require__(19)
  , DESCRIPTORS    = __webpack_require__(14)
  , $export        = __webpack_require__(10)
  , redefine       = __webpack_require__(76)
  , META           = __webpack_require__(284).KEY
  , $fails         = __webpack_require__(21)
  , shared         = __webpack_require__(56)
  , setToStringTag = __webpack_require__(41)
  , uid            = __webpack_require__(37)
  , wks            = __webpack_require__(7)
  , wksExt         = __webpack_require__(62)
  , wksDefine      = __webpack_require__(63)
  , keyOf          = __webpack_require__(285)
  , enumKeys       = __webpack_require__(286)
  , isArray        = __webpack_require__(287)
  , anObject       = __webpack_require__(13)
  , toIObject      = __webpack_require__(15)
  , toPrimitive    = __webpack_require__(51)
  , createDesc     = __webpack_require__(28)
  , _create        = __webpack_require__(58)
  , gOPNExt        = __webpack_require__(288)
  , $GOPD          = __webpack_require__(289)
  , $DP            = __webpack_require__(12)
  , $keys          = __webpack_require__(18)
  , gOPD           = $GOPD.f
  , dP             = $DP.f
  , gOPN           = gOPNExt.f
  , $Symbol        = global.Symbol
  , $JSON          = global.JSON
  , _stringify     = $JSON && $JSON.stringify
  , PROTOTYPE      = 'prototype'
  , HIDDEN         = wks('_hidden')
  , TO_PRIMITIVE   = wks('toPrimitive')
  , isEnum         = {}.propertyIsEnumerable
  , SymbolRegistry = shared('symbol-registry')
  , AllSymbols     = shared('symbols')
  , OPSymbols      = shared('op-symbols')
  , ObjectProto    = Object[PROTOTYPE]
  , USE_NATIVE     = typeof $Symbol == 'function'
  , QObject        = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDesc = DESCRIPTORS && $fails(function(){
  return _create(dP({}, 'a', {
    get: function(){ return dP(this, 'a', {value: 7}).a; }
  })).a != 7;
}) ? function(it, key, D){
  var protoDesc = gOPD(ObjectProto, key);
  if(protoDesc)delete ObjectProto[key];
  dP(it, key, D);
  if(protoDesc && it !== ObjectProto)dP(ObjectProto, key, protoDesc);
} : dP;

var wrap = function(tag){
  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
  sym._k = tag;
  return sym;
};

var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function(it){
  return typeof it == 'symbol';
} : function(it){
  return it instanceof $Symbol;
};

var $defineProperty = function defineProperty(it, key, D){
  if(it === ObjectProto)$defineProperty(OPSymbols, key, D);
  anObject(it);
  key = toPrimitive(key, true);
  anObject(D);
  if(has(AllSymbols, key)){
    if(!D.enumerable){
      if(!has(it, HIDDEN))dP(it, HIDDEN, createDesc(1, {}));
      it[HIDDEN][key] = true;
    } else {
      if(has(it, HIDDEN) && it[HIDDEN][key])it[HIDDEN][key] = false;
      D = _create(D, {enumerable: createDesc(0, false)});
    } return setSymbolDesc(it, key, D);
  } return dP(it, key, D);
};
var $defineProperties = function defineProperties(it, P){
  anObject(it);
  var keys = enumKeys(P = toIObject(P))
    , i    = 0
    , l = keys.length
    , key;
  while(l > i)$defineProperty(it, key = keys[i++], P[key]);
  return it;
};
var $create = function create(it, P){
  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
};
var $propertyIsEnumerable = function propertyIsEnumerable(key){
  var E = isEnum.call(this, key = toPrimitive(key, true));
  if(this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return false;
  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
};
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key){
  it  = toIObject(it);
  key = toPrimitive(key, true);
  if(it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return;
  var D = gOPD(it, key);
  if(D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key]))D.enumerable = true;
  return D;
};
var $getOwnPropertyNames = function getOwnPropertyNames(it){
  var names  = gOPN(toIObject(it))
    , result = []
    , i      = 0
    , key;
  while(names.length > i){
    if(!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META)result.push(key);
  } return result;
};
var $getOwnPropertySymbols = function getOwnPropertySymbols(it){
  var IS_OP  = it === ObjectProto
    , names  = gOPN(IS_OP ? OPSymbols : toIObject(it))
    , result = []
    , i      = 0
    , key;
  while(names.length > i){
    if(has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true))result.push(AllSymbols[key]);
  } return result;
};

// 19.4.1.1 Symbol([description])
if(!USE_NATIVE){
  $Symbol = function Symbol(){
    if(this instanceof $Symbol)throw TypeError('Symbol is not a constructor!');
    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
    var $set = function(value){
      if(this === ObjectProto)$set.call(OPSymbols, value);
      if(has(this, HIDDEN) && has(this[HIDDEN], tag))this[HIDDEN][tag] = false;
      setSymbolDesc(this, tag, createDesc(1, value));
    };
    if(DESCRIPTORS && setter)setSymbolDesc(ObjectProto, tag, {configurable: true, set: $set});
    return wrap(tag);
  };
  redefine($Symbol[PROTOTYPE], 'toString', function toString(){
    return this._k;
  });

  $GOPD.f = $getOwnPropertyDescriptor;
  $DP.f   = $defineProperty;
  __webpack_require__(81).f = gOPNExt.f = $getOwnPropertyNames;
  __webpack_require__(30).f  = $propertyIsEnumerable;
  __webpack_require__(61).f = $getOwnPropertySymbols;

  if(DESCRIPTORS && !__webpack_require__(40)){
    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
  }

  wksExt.f = function(name){
    return wrap(wks(name));
  }
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, {Symbol: $Symbol});

for(var symbols = (
  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
).split(','), i = 0; symbols.length > i; )wks(symbols[i++]);

for(var symbols = $keys(wks.store), i = 0; symbols.length > i; )wksDefine(symbols[i++]);

$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
  // 19.4.2.1 Symbol.for(key)
  'for': function(key){
    return has(SymbolRegistry, key += '')
      ? SymbolRegistry[key]
      : SymbolRegistry[key] = $Symbol(key);
  },
  // 19.4.2.5 Symbol.keyFor(sym)
  keyFor: function keyFor(key){
    if(isSymbol(key))return keyOf(SymbolRegistry, key);
    throw TypeError(key + ' is not a symbol!');
  },
  useSetter: function(){ setter = true; },
  useSimple: function(){ setter = false; }
});

$export($export.S + $export.F * !USE_NATIVE, 'Object', {
  // 19.1.2.2 Object.create(O [, Properties])
  create: $create,
  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
  defineProperty: $defineProperty,
  // 19.1.2.3 Object.defineProperties(O, Properties)
  defineProperties: $defineProperties,
  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
  // 19.1.2.7 Object.getOwnPropertyNames(O)
  getOwnPropertyNames: $getOwnPropertyNames,
  // 19.1.2.8 Object.getOwnPropertySymbols(O)
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// 24.3.2 JSON.stringify(value [, replacer [, space]])
$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function(){
  var S = $Symbol();
  // MS Edge converts symbol values to JSON as {}
  // WebKit converts symbol values to JSON as null
  // V8 throws on boxed symbols
  return _stringify([S]) != '[null]' || _stringify({a: S}) != '{}' || _stringify(Object(S)) != '{}';
})), 'JSON', {
  stringify: function stringify(it){
    if(it === undefined || isSymbol(it))return; // IE8 returns string on undefined
    var args = [it]
      , i    = 1
      , replacer, $replacer;
    while(arguments.length > i)args.push(arguments[i++]);
    replacer = args[1];
    if(typeof replacer == 'function')$replacer = replacer;
    if($replacer || !isArray(replacer))replacer = function(key, value){
      if($replacer)value = $replacer.call(this, key, value);
      if(!isSymbol(value))return value;
    };
    args[1] = replacer;
    return _stringify.apply($JSON, args);
  }
});

// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(17)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
// 19.4.3.5 Symbol.prototype[@@toStringTag]
setToStringTag($Symbol, 'Symbol');
// 20.2.1.9 Math[@@toStringTag]
setToStringTag(Math, 'Math', true);
// 24.3.3 JSON[@@toStringTag]
setToStringTag(global.JSON, 'JSON', true);

/***/ }),
/* 284 */
/***/ (function(module, exports, __webpack_require__) {

var META     = __webpack_require__(37)('meta')
  , isObject = __webpack_require__(27)
  , has      = __webpack_require__(19)
  , setDesc  = __webpack_require__(12).f
  , id       = 0;
var isExtensible = Object.isExtensible || function(){
  return true;
};
var FREEZE = !__webpack_require__(21)(function(){
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function(it){
  setDesc(it, META, {value: {
    i: 'O' + ++id, // object ID
    w: {}          // weak collections IDs
  }});
};
var fastKey = function(it, create){
  // return primitive with prefix
  if(!isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if(!has(it, META)){
    // can't set metadata to uncaught frozen object
    if(!isExtensible(it))return 'F';
    // not necessary to add metadata
    if(!create)return 'E';
    // add missing metadata
    setMeta(it);
  // return object ID
  } return it[META].i;
};
var getWeak = function(it, create){
  if(!has(it, META)){
    // can't set metadata to uncaught frozen object
    if(!isExtensible(it))return true;
    // not necessary to add metadata
    if(!create)return false;
    // add missing metadata
    setMeta(it);
  // return hash weak collections IDs
  } return it[META].w;
};
// add metadata on freeze-family methods calling
var onFreeze = function(it){
  if(FREEZE && meta.NEED && isExtensible(it) && !has(it, META))setMeta(it);
  return it;
};
var meta = module.exports = {
  KEY:      META,
  NEED:     false,
  fastKey:  fastKey,
  getWeak:  getWeak,
  onFreeze: onFreeze
};

/***/ }),
/* 285 */
/***/ (function(module, exports, __webpack_require__) {

var getKeys   = __webpack_require__(18)
  , toIObject = __webpack_require__(15);
module.exports = function(object, el){
  var O      = toIObject(object)
    , keys   = getKeys(O)
    , length = keys.length
    , index  = 0
    , key;
  while(length > index)if(O[key = keys[index++]] === el)return key;
};

/***/ }),
/* 286 */
/***/ (function(module, exports, __webpack_require__) {

// all enumerable object keys, includes symbols
var getKeys = __webpack_require__(18)
  , gOPS    = __webpack_require__(61)
  , pIE     = __webpack_require__(30);
module.exports = function(it){
  var result     = getKeys(it)
    , getSymbols = gOPS.f;
  if(getSymbols){
    var symbols = getSymbols(it)
      , isEnum  = pIE.f
      , i       = 0
      , key;
    while(symbols.length > i)if(isEnum.call(it, key = symbols[i++]))result.push(key);
  } return result;
};

/***/ }),
/* 287 */
/***/ (function(module, exports, __webpack_require__) {

// 7.2.2 IsArray(argument)
var cof = __webpack_require__(29);
module.exports = Array.isArray || function isArray(arg){
  return cof(arg) == 'Array';
};

/***/ }),
/* 288 */
/***/ (function(module, exports, __webpack_require__) {

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
var toIObject = __webpack_require__(15)
  , gOPN      = __webpack_require__(81).f
  , toString  = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function(it){
  try {
    return gOPN(it);
  } catch(e){
    return windowNames.slice();
  }
};

module.exports.f = function getOwnPropertyNames(it){
  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
};


/***/ }),
/* 289 */
/***/ (function(module, exports, __webpack_require__) {

var pIE            = __webpack_require__(30)
  , createDesc     = __webpack_require__(28)
  , toIObject      = __webpack_require__(15)
  , toPrimitive    = __webpack_require__(51)
  , has            = __webpack_require__(19)
  , IE8_DOM_DEFINE = __webpack_require__(71)
  , gOPD           = Object.getOwnPropertyDescriptor;

exports.f = __webpack_require__(14) ? gOPD : function getOwnPropertyDescriptor(O, P){
  O = toIObject(O);
  P = toPrimitive(P, true);
  if(IE8_DOM_DEFINE)try {
    return gOPD(O, P);
  } catch(e){ /* empty */ }
  if(has(O, P))return createDesc(!pIE.f.call(O, P), O[P]);
};

/***/ }),
/* 290 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(63)('asyncIterator');

/***/ }),
/* 291 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(63)('observable');

/***/ }),
/* 292 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = {
  install: function install(Regular) {
    Regular.animation('collapse', function (step) {
      var param = step.param,
          el = step.element;

      var on = param === 'on';

      return function (done) {
        if (on) {
          // beforeEnter
          if (!el.dataset) el.dataset = {};

          el.dataset.oldPaddingTop = el.style.paddingTop;
          el.dataset.oldPaddingBottom = el.style.paddingBottom;

          el.style.height = '0';
          el.style.paddingTop = 0;
          el.style.paddingBottom = 0;
          el.classList.add('kl-collapse-transition');

          // enter
          el.dataset.oldOverflow = el.style.overflow;
          if (el.scrollHeight !== 0) {
            el.style.height = el.scrollHeight + 'px';
            el.style.paddingTop = el.dataset.oldPaddingTop;
            el.style.paddingBottom = el.dataset.oldPaddingBottom;
          } else {
            el.style.height = '';
            el.style.paddingTop = el.dataset.oldPaddingTop;
            el.style.paddingBottom = el.dataset.oldPaddingBottom;
          }

          el.style.overflow = 'hidden';

          // afterEnter
          el.addEventListener('transitionend', function () {
            el.classList.remove('kl-collapse-transition');
            el.style.height = '';
            el.style.overflow = el.dataset.oldOverflow;
            el.removeEventListener('transitionend', function () {});
            done();
          });
        } else {
          // beforeLeave
          if (!el.dataset) el.dataset = {};
          el.dataset.oldPaddingTop = el.style.paddingTop;
          el.dataset.oldPaddingBottom = el.style.paddingBottom;
          el.dataset.oldOverflow = el.style.overflow;

          el.style.height = el.scrollHeight + 'px';
          el.style.overflow = 'hidden';

          // leave
          if (el.scrollHeight !== 0) {
            // for safari: add class after set height,
            // or it will jump to zero height suddenly, weired
            el.classList.add('kl-collapse-transition');
            el.style.height = 0;
            el.style.paddingTop = 0;
            el.style.paddingBottom = 0;
          }

          // afterLeave
          el.addEventListener('transitionend', function () {
            el.classList.remove('kl-collapse-transition');
            el.style.height = '';
            el.style.overflow = el.dataset.oldOverflow;
            el.style.paddingTop = el.dataset.oldPaddingTop;
            el.style.paddingBottom = el.dataset.oldPaddingBottom;
            el.removeEventListener('transitionend', function () {});
            done();
          });
        }
      };
    });
  }
};

/***/ }),
/* 293 */
/***/ (function(module, exports) {

module.exports = "{#if visible}\n<label class=\"kl-input kl-input--{size} {class}\" r-width=\"{width}\">\n    <span class=\"kl-input-wrap\">\n        <input ref=\"input\" class=\"kl-input-wrap__inner kl-input-wrap__inner--{state} kl-input-wrap__inner--{unit ? 'unit' : ''}\" type={type | type}\n            name={name} placeholder={placeholder} maxlength={maxlength} autofocus={autofocus} readonly={readonly} disabled={disabled}\n            r-model={value | valueFilter}\n            on-focus={this._onFocus($event)}\n            on-keyup={this._onKeyUp($event)} on-blur={this._onBlur($event)}  on-change={this._onChange($event)} on-input={this._onInput($event)}>\n        {#if this.events.search}\n            <kl-icon class=\"kl-input-wrap__icon\" type=\"zoom\" on-click={this._onSearch($event)} />\n        {#elseif unit}\n            <span class=\"kl-input-wrap__unit\">{unit}</span>\n        {#elseif clearable && value.length}\n\t\t\t<kl-icon type=\"error\" on-click={this.clear()} class=\"kl-input-wrap__icon\"/>\n\t\t{/if}\n        {#if _eltIE9 && !value}\n            <span class=\"kl-input-wrap__placeholder\">{placeholder}</span>\n        {/if}\n     </span>\n\n    {#if tip && !hideTip}\n        <span class=\"kl-tip kl-tip--{state} animated\" r-animation=\"on:enter;class:fadeInY;\">\n            <kl-icon type={state} />\n            <span class=\"kl-tip__msg\">{tip}</span>\n        </span>\n    {/if}\n</label>\n{/if}\n"

/***/ }),
/* 294 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = toInt;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function toInt(str, radix) {
  (0, _assertString2.default)(str);
  return parseInt(str, radix || 10);
}
module.exports = exports['default'];

/***/ }),
/* 295 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = toBoolean;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function toBoolean(str, strict) {
  (0, _assertString2.default)(str);
  if (strict) {
    return str === '1' || str === 'true';
  }
  return str !== '0' && str !== 'false' && str !== '';
}
module.exports = exports['default'];

/***/ }),
/* 296 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = equals;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function equals(str, comparison) {
  (0, _assertString2.default)(str);
  return str === comparison;
}
module.exports = exports['default'];

/***/ }),
/* 297 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = contains;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

var _toString = __webpack_require__(65);

var _toString2 = _interopRequireDefault(_toString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function contains(str, elem) {
  (0, _assertString2.default)(str);
  return str.indexOf((0, _toString2.default)(elem)) >= 0;
}
module.exports = exports['default'];

/***/ }),
/* 298 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = matches;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function matches(str, pattern, modifiers) {
  (0, _assertString2.default)(str);
  if (Object.prototype.toString.call(pattern) !== '[object RegExp]') {
    pattern = new RegExp(pattern, modifiers);
  }
  return pattern.test(str);
}
module.exports = exports['default'];

/***/ }),
/* 299 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isURL;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

var _isFQDN = __webpack_require__(66);

var _isFQDN2 = _interopRequireDefault(_isFQDN);

var _isIP = __webpack_require__(87);

var _isIP2 = _interopRequireDefault(_isIP);

var _merge = __webpack_require__(33);

var _merge2 = _interopRequireDefault(_merge);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var default_url_options = {
  protocols: ['http', 'https', 'ftp'],
  require_tld: true,
  require_protocol: false,
  require_host: true,
  require_valid_protocol: true,
  allow_underscores: false,
  allow_trailing_dot: false,
  allow_protocol_relative_urls: false
};

var wrapped_ipv6 = /^\[([^\]]+)\](?::([0-9]+))?$/;

function isRegExp(obj) {
  return Object.prototype.toString.call(obj) === '[object RegExp]';
}

function checkHost(host, matches) {
  for (var i = 0; i < matches.length; i++) {
    var match = matches[i];
    if (host === match || isRegExp(match) && match.test(host)) {
      return true;
    }
  }
  return false;
}

function isURL(url, options) {
  (0, _assertString2.default)(url);
  if (!url || url.length >= 2083 || /[\s<>]/.test(url)) {
    return false;
  }
  if (url.indexOf('mailto:') === 0) {
    return false;
  }
  options = (0, _merge2.default)(options, default_url_options);
  var protocol = void 0,
      auth = void 0,
      host = void 0,
      hostname = void 0,
      port = void 0,
      port_str = void 0,
      split = void 0,
      ipv6 = void 0;

  split = url.split('#');
  url = split.shift();

  split = url.split('?');
  url = split.shift();

  split = url.split('://');
  if (split.length > 1) {
    protocol = split.shift();
    if (options.require_valid_protocol && options.protocols.indexOf(protocol) === -1) {
      return false;
    }
  } else if (options.require_protocol) {
    return false;
  } else if (options.allow_protocol_relative_urls && url.substr(0, 2) === '//') {
    split[0] = url.substr(2);
  }
  url = split.join('://');

  split = url.split('/');
  url = split.shift();

  if (url === '' && !options.require_host) {
    return true;
  }

  split = url.split('@');
  if (split.length > 1) {
    auth = split.shift();
    if (auth.indexOf(':') >= 0 && auth.split(':').length > 2) {
      return false;
    }
  }
  hostname = split.join('@');

  port_str = ipv6 = null;
  var ipv6_match = hostname.match(wrapped_ipv6);
  if (ipv6_match) {
    host = '';
    ipv6 = ipv6_match[1];
    port_str = ipv6_match[2] || null;
  } else {
    split = hostname.split(':');
    host = split.shift();
    if (split.length) {
      port_str = split.join(':');
    }
  }

  if (port_str !== null) {
    port = parseInt(port_str, 10);
    if (!/^[0-9]+$/.test(port_str) || port <= 0 || port > 65535) {
      return false;
    }
  }

  if (!(0, _isIP2.default)(host) && !(0, _isFQDN2.default)(host, options) && (!ipv6 || !(0, _isIP2.default)(ipv6, 6)) && host !== 'localhost') {
    return false;
  }

  host = host || ipv6;

  if (options.host_whitelist && !checkHost(host, options.host_whitelist)) {
    return false;
  }
  if (options.host_blacklist && checkHost(host, options.host_blacklist)) {
    return false;
  }

  return true;
}
module.exports = exports['default'];

/***/ }),
/* 300 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isMACAddress;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var macAddress = /^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$/;

function isMACAddress(str) {
  (0, _assertString2.default)(str);
  return macAddress.test(str);
}
module.exports = exports['default'];

/***/ }),
/* 301 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isBoolean;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function isBoolean(str) {
  (0, _assertString2.default)(str);
  return ['true', 'false', '1', '0'].indexOf(str) >= 0;
}
module.exports = exports['default'];

/***/ }),
/* 302 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isAlpha;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

var _alpha = __webpack_require__(88);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function isAlpha(str) {
  var locale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'en-US';

  (0, _assertString2.default)(str);
  if (locale in _alpha.alpha) {
    return _alpha.alpha[locale].test(str);
  }
  throw new Error('Invalid locale \'' + locale + '\'');
}
module.exports = exports['default'];

/***/ }),
/* 303 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isAlphanumeric;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

var _alpha = __webpack_require__(88);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function isAlphanumeric(str) {
  var locale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'en-US';

  (0, _assertString2.default)(str);
  if (locale in _alpha.alphanumeric) {
    return _alpha.alphanumeric[locale].test(str);
  }
  throw new Error('Invalid locale \'' + locale + '\'');
}
module.exports = exports['default'];

/***/ }),
/* 304 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isNumeric;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var numeric = /^[-+]?[0-9]+$/;

function isNumeric(str) {
  (0, _assertString2.default)(str);
  return numeric.test(str);
}
module.exports = exports['default'];

/***/ }),
/* 305 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isLowercase;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function isLowercase(str) {
  (0, _assertString2.default)(str);
  return str === str.toLowerCase();
}
module.exports = exports['default'];

/***/ }),
/* 306 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isUppercase;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function isUppercase(str) {
  (0, _assertString2.default)(str);
  return str === str.toUpperCase();
}
module.exports = exports['default'];

/***/ }),
/* 307 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isAscii;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable no-control-regex */
var ascii = /^[\x00-\x7F]+$/;
/* eslint-enable no-control-regex */

function isAscii(str) {
  (0, _assertString2.default)(str);
  return ascii.test(str);
}
module.exports = exports['default'];

/***/ }),
/* 308 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isVariableWidth;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

var _isFullWidth = __webpack_require__(89);

var _isHalfWidth = __webpack_require__(90);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function isVariableWidth(str) {
  (0, _assertString2.default)(str);
  return _isFullWidth.fullWidth.test(str) && _isHalfWidth.halfWidth.test(str);
}
module.exports = exports['default'];

/***/ }),
/* 309 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isMultibyte;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable no-control-regex */
var multibyte = /[^\x00-\x7F]/;
/* eslint-enable no-control-regex */

function isMultibyte(str) {
  (0, _assertString2.default)(str);
  return multibyte.test(str);
}
module.exports = exports['default'];

/***/ }),
/* 310 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isSurrogatePair;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var surrogatePair = /[\uD800-\uDBFF][\uDC00-\uDFFF]/;

function isSurrogatePair(str) {
  (0, _assertString2.default)(str);
  return surrogatePair.test(str);
}
module.exports = exports['default'];

/***/ }),
/* 311 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isInt;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var int = /^(?:[-+]?(?:0|[1-9][0-9]*))$/;
var intLeadingZeroes = /^[-+]?[0-9]+$/;

function isInt(str, options) {
  (0, _assertString2.default)(str);
  options = options || {};

  // Get the regex to use for testing, based on whether
  // leading zeroes are allowed or not.
  var regex = options.hasOwnProperty('allow_leading_zeroes') && !options.allow_leading_zeroes ? int : intLeadingZeroes;

  // Check min/max/lt/gt
  var minCheckPassed = !options.hasOwnProperty('min') || str >= options.min;
  var maxCheckPassed = !options.hasOwnProperty('max') || str <= options.max;
  var ltCheckPassed = !options.hasOwnProperty('lt') || str < options.lt;
  var gtCheckPassed = !options.hasOwnProperty('gt') || str > options.gt;

  return regex.test(str) && minCheckPassed && maxCheckPassed && ltCheckPassed && gtCheckPassed;
}
module.exports = exports['default'];

/***/ }),
/* 312 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isFloat;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var float = /^(?:[-+])?(?:[0-9]+)?(?:\.[0-9]*)?(?:[eE][\+\-]?(?:[0-9]+))?$/;

function isFloat(str, options) {
  (0, _assertString2.default)(str);
  options = options || {};
  if (str === '' || str === '.') {
    return false;
  }
  return float.test(str) && (!options.hasOwnProperty('min') || str >= options.min) && (!options.hasOwnProperty('max') || str <= options.max) && (!options.hasOwnProperty('lt') || str < options.lt) && (!options.hasOwnProperty('gt') || str > options.gt);
}
module.exports = exports['default'];

/***/ }),
/* 313 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isDecimal;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var decimal = /^[-+]?([0-9]+|\.[0-9]+|[0-9]+\.[0-9]+)$/;

function isDecimal(str) {
  (0, _assertString2.default)(str);
  return str !== '' && decimal.test(str);
}
module.exports = exports['default'];

/***/ }),
/* 314 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isDivisibleBy;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

var _toFloat = __webpack_require__(84);

var _toFloat2 = _interopRequireDefault(_toFloat);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function isDivisibleBy(str, num) {
  (0, _assertString2.default)(str);
  return (0, _toFloat2.default)(str) % parseInt(num, 10) === 0;
}
module.exports = exports['default'];

/***/ }),
/* 315 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isHexColor;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var hexcolor = /^#?([0-9A-F]{3}|[0-9A-F]{6})$/i;

function isHexColor(str) {
  (0, _assertString2.default)(str);
  return hexcolor.test(str);
}
module.exports = exports['default'];

/***/ }),
/* 316 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isMD5;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var md5 = /^[a-f0-9]{32}$/;

function isMD5(str) {
  (0, _assertString2.default)(str);
  return md5.test(str);
}
module.exports = exports['default'];

/***/ }),
/* 317 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports.default = isJSON;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function isJSON(str) {
  (0, _assertString2.default)(str);
  try {
    var obj = JSON.parse(str);
    return !!obj && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object';
  } catch (e) {/* ignore */}
  return false;
}
module.exports = exports['default'];

/***/ }),
/* 318 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isEmpty;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function isEmpty(str) {
  (0, _assertString2.default)(str);
  return str.length === 0;
}
module.exports = exports['default'];

/***/ }),
/* 319 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports.default = isLength;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable prefer-rest-params */
function isLength(str, options) {
  (0, _assertString2.default)(str);
  var min = void 0;
  var max = void 0;
  if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {
    min = options.min || 0;
    max = options.max;
  } else {
    // backwards compatibility: isLength(str, min [, max])
    min = arguments[1];
    max = arguments[2];
  }
  var surrogatePairs = str.match(/[\uD800-\uDBFF][\uDC00-\uDFFF]/g) || [];
  var len = str.length - surrogatePairs.length;
  return len >= min && (typeof max === 'undefined' || len <= max);
}
module.exports = exports['default'];

/***/ }),
/* 320 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isUUID;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var uuid = {
  3: /^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,
  4: /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,
  5: /^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,
  all: /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i
};

function isUUID(str) {
  var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'all';

  (0, _assertString2.default)(str);
  var pattern = uuid[version];
  return pattern && pattern.test(str);
}
module.exports = exports['default'];

/***/ }),
/* 321 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isMongoId;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

var _isHexadecimal = __webpack_require__(91);

var _isHexadecimal2 = _interopRequireDefault(_isHexadecimal);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function isMongoId(str) {
  (0, _assertString2.default)(str);
  return (0, _isHexadecimal2.default)(str) && str.length === 24;
}
module.exports = exports['default'];

/***/ }),
/* 322 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isDate;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

var _isISO = __webpack_require__(92);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getTimezoneOffset(str) {
  var iso8601Parts = str.match(_isISO.iso8601);
  var timezone = void 0,
      sign = void 0,
      hours = void 0,
      minutes = void 0;
  if (!iso8601Parts) {
    str = str.toLowerCase();
    timezone = str.match(/(?:\s|gmt\s*)(-|\+)(\d{1,4})(\s|$)/);
    if (!timezone) {
      return str.indexOf('gmt') !== -1 ? 0 : null;
    }
    sign = timezone[1];
    var offset = timezone[2];
    if (offset.length === 3) {
      offset = '0' + offset;
    }
    if (offset.length <= 2) {
      hours = 0;
      minutes = parseInt(offset, 10);
    } else {
      hours = parseInt(offset.slice(0, 2), 10);
      minutes = parseInt(offset.slice(2, 4), 10);
    }
  } else {
    timezone = iso8601Parts[21];
    if (!timezone) {
      // if no hour/minute was provided, the date is GMT
      return !iso8601Parts[12] ? 0 : null;
    }
    if (timezone === 'z' || timezone === 'Z') {
      return 0;
    }
    sign = iso8601Parts[22];
    if (timezone.indexOf(':') !== -1) {
      hours = parseInt(iso8601Parts[23], 10);
      minutes = parseInt(iso8601Parts[24], 10);
    } else {
      hours = 0;
      minutes = parseInt(iso8601Parts[23], 10);
    }
  }
  return (hours * 60 + minutes) * (sign === '-' ? 1 : -1);
}

function isDate(str) {
  (0, _assertString2.default)(str);
  var normalizedDate = new Date(Date.parse(str));
  if (isNaN(normalizedDate)) {
    return false;
  }

  // normalizedDate is in the user's timezone. Apply the input
  // timezone offset to the date so that the year and day match
  // the input
  var timezoneOffset = getTimezoneOffset(str);
  if (timezoneOffset !== null) {
    var timezoneDifference = normalizedDate.getTimezoneOffset() - timezoneOffset;
    normalizedDate = new Date(normalizedDate.getTime() + 60000 * timezoneDifference);
  }

  var day = String(normalizedDate.getDate());
  var dayOrYear = void 0,
      dayOrYearMatches = void 0,
      year = void 0;
  // check for valid double digits that could be late days
  // check for all matches since a string like '12/23' is a valid date
  // ignore everything with nearby colons
  dayOrYearMatches = str.match(/(^|[^:\d])[23]\d([^T:\d]|$)/g);
  if (!dayOrYearMatches) {
    return true;
  }
  dayOrYear = dayOrYearMatches.map(function (digitString) {
    return digitString.match(/\d+/g)[0];
  }).join('/');

  year = String(normalizedDate.getFullYear()).slice(-2);
  if (dayOrYear === day || dayOrYear === year) {
    return true;
  } else if (dayOrYear === '' + day / year || dayOrYear === '' + year / day) {
    return true;
  }
  return false;
}
module.exports = exports['default'];

/***/ }),
/* 323 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isAfter;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

var _toDate = __webpack_require__(64);

var _toDate2 = _interopRequireDefault(_toDate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function isAfter(str) {
  var date = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : String(new Date());

  (0, _assertString2.default)(str);
  var comparison = (0, _toDate2.default)(date);
  var original = (0, _toDate2.default)(str);
  return !!(original && comparison && original > comparison);
}
module.exports = exports['default'];

/***/ }),
/* 324 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isBefore;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

var _toDate = __webpack_require__(64);

var _toDate2 = _interopRequireDefault(_toDate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function isBefore(str) {
  var date = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : String(new Date());

  (0, _assertString2.default)(str);
  var comparison = (0, _toDate2.default)(date);
  var original = (0, _toDate2.default)(str);
  return !!(original && comparison && original < comparison);
}
module.exports = exports['default'];

/***/ }),
/* 325 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports.default = isIn;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

var _toString = __webpack_require__(65);

var _toString2 = _interopRequireDefault(_toString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function isIn(str, options) {
  (0, _assertString2.default)(str);
  var i = void 0;
  if (Object.prototype.toString.call(options) === '[object Array]') {
    var array = [];
    for (i in options) {
      if ({}.hasOwnProperty.call(options, i)) {
        array[i] = (0, _toString2.default)(options[i]);
      }
    }
    return array.indexOf(str) >= 0;
  } else if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {
    return options.hasOwnProperty(str);
  } else if (options && typeof options.indexOf === 'function') {
    return options.indexOf(str) >= 0;
  }
  return false;
}
module.exports = exports['default'];

/***/ }),
/* 326 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isCreditCard;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable max-len */
var creditCard = /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|(222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\d{3})\d{11})|62[0-9]{14}$/;
/* eslint-enable max-len */

function isCreditCard(str) {
  (0, _assertString2.default)(str);
  var sanitized = str.replace(/[^0-9]+/g, '');
  if (!creditCard.test(sanitized)) {
    return false;
  }
  var sum = 0;
  var digit = void 0;
  var tmpNum = void 0;
  var shouldDouble = void 0;
  for (var i = sanitized.length - 1; i >= 0; i--) {
    digit = sanitized.substring(i, i + 1);
    tmpNum = parseInt(digit, 10);
    if (shouldDouble) {
      tmpNum *= 2;
      if (tmpNum >= 10) {
        sum += tmpNum % 10 + 1;
      } else {
        sum += tmpNum;
      }
    } else {
      sum += tmpNum;
    }
    shouldDouble = !shouldDouble;
  }
  return !!(sum % 10 === 0 ? sanitized : false);
}
module.exports = exports['default'];

/***/ }),
/* 327 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isISIN;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var isin = /^[A-Z]{2}[0-9A-Z]{9}[0-9]$/;

function isISIN(str) {
  (0, _assertString2.default)(str);
  if (!isin.test(str)) {
    return false;
  }

  var checksumStr = str.replace(/[A-Z]/g, function (character) {
    return parseInt(character, 36);
  });

  var sum = 0;
  var digit = void 0;
  var tmpNum = void 0;
  var shouldDouble = true;
  for (var i = checksumStr.length - 2; i >= 0; i--) {
    digit = checksumStr.substring(i, i + 1);
    tmpNum = parseInt(digit, 10);
    if (shouldDouble) {
      tmpNum *= 2;
      if (tmpNum >= 10) {
        sum += tmpNum + 1;
      } else {
        sum += tmpNum;
      }
    } else {
      sum += tmpNum;
    }
    shouldDouble = !shouldDouble;
  }

  return parseInt(str.substr(str.length - 1), 10) === (10000 - sum) % 10;
}
module.exports = exports['default'];

/***/ }),
/* 328 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isISBN;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var isbn10Maybe = /^(?:[0-9]{9}X|[0-9]{10})$/;
var isbn13Maybe = /^(?:[0-9]{13})$/;
var factor = [1, 3];

function isISBN(str) {
  var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';

  (0, _assertString2.default)(str);
  version = String(version);
  if (!version) {
    return isISBN(str, 10) || isISBN(str, 13);
  }
  var sanitized = str.replace(/[\s-]+/g, '');
  var checksum = 0;
  var i = void 0;
  if (version === '10') {
    if (!isbn10Maybe.test(sanitized)) {
      return false;
    }
    for (i = 0; i < 9; i++) {
      checksum += (i + 1) * sanitized.charAt(i);
    }
    if (sanitized.charAt(9) === 'X') {
      checksum += 10 * 10;
    } else {
      checksum += 10 * sanitized.charAt(9);
    }
    if (checksum % 11 === 0) {
      return !!sanitized;
    }
  } else if (version === '13') {
    if (!isbn13Maybe.test(sanitized)) {
      return false;
    }
    for (i = 0; i < 12; i++) {
      checksum += factor[i % 2] * sanitized.charAt(i);
    }
    if (sanitized.charAt(12) - (10 - checksum % 10) % 10 === 0) {
      return !!sanitized;
    }
  }
  return false;
}
module.exports = exports['default'];

/***/ }),
/* 329 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isISSN;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var issn = '^\\d{4}-?\\d{3}[\\dX]$';

function isISSN(str) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  (0, _assertString2.default)(str);
  var testIssn = issn;
  testIssn = options.require_hyphen ? testIssn.replace('?', '') : testIssn;
  testIssn = options.case_sensitive ? new RegExp(testIssn) : new RegExp(testIssn, 'i');
  if (!testIssn.test(str)) {
    return false;
  }
  var issnDigits = str.replace('-', '');
  var position = 8;
  var checksum = 0;
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = issnDigits[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var digit = _step.value;

      var digitValue = digit.toUpperCase() === 'X' ? 10 : +digit;
      checksum += digitValue * position;
      --position;
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  return checksum % 11 === 0;
}
module.exports = exports['default'];

/***/ }),
/* 330 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isMobilePhone;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable max-len */
var phones = {
  'ar-DZ': /^(\+?213|0)(5|6|7)\d{8}$/,
  'ar-SY': /^(!?(\+?963)|0)?9\d{8}$/,
  'ar-SA': /^(!?(\+?966)|0)?5\d{8}$/,
  'en-US': /^(\+?1)?[2-9]\d{2}[2-9](?!11)\d{6}$/,
  'cs-CZ': /^(\+?420)? ?[1-9][0-9]{2} ?[0-9]{3} ?[0-9]{3}$/,
  'de-DE': /^(\+?49[ \.\-])?([\(]{1}[0-9]{1,6}[\)])?([0-9 \.\-\/]{3,20})((x|ext|extension)[ ]?[0-9]{1,4})?$/,
  'da-DK': /^(\+?45)?(\d{8})$/,
  'el-GR': /^(\+?30)?(69\d{8})$/,
  'en-AU': /^(\+?61|0)4\d{8}$/,
  'en-GB': /^(\+?44|0)7\d{9}$/,
  'en-HK': /^(\+?852\-?)?[569]\d{3}\-?\d{4}$/,
  'en-IN': /^(\+?91|0)?[789]\d{9}$/,
  'en-NG': /^(\+?234|0)?[789]\d{9}$/,
  'en-NZ': /^(\+?64|0)2\d{7,9}$/,
  'en-ZA': /^(\+?27|0)\d{9}$/,
  'en-ZM': /^(\+?26)?09[567]\d{7}$/,
  'es-ES': /^(\+?34)?(6\d{1}|7[1234])\d{7}$/,
  'fi-FI': /^(\+?358|0)\s?(4(0|1|2|4|5)?|50)\s?(\d\s?){4,8}\d$/,
  'fr-FR': /^(\+?33|0)[67]\d{8}$/,
  'he-IL': /^(\+972|0)([23489]|5[0248]|77)[1-9]\d{6}/,
  'hu-HU': /^(\+?36)(20|30|70)\d{7}$/,
  'it-IT': /^(\+?39)?\s?3\d{2} ?\d{6,7}$/,
  'ja-JP': /^(\+?81|0)\d{1,4}[ \-]?\d{1,4}[ \-]?\d{4}$/,
  'ms-MY': /^(\+?6?01){1}(([145]{1}(\-|\s)?\d{7,8})|([236789]{1}(\s|\-)?\d{7}))$/,
  'nb-NO': /^(\+?47)?[49]\d{7}$/,
  'nl-BE': /^(\+?32|0)4?\d{8}$/,
  'nn-NO': /^(\+?47)?[49]\d{7}$/,
  'pl-PL': /^(\+?48)? ?[5-8]\d ?\d{3} ?\d{2} ?\d{2}$/,
  'pt-BR': /^(\+?55|0)\-?[1-9]{2}\-?[2-9]{1}\d{3,4}\-?\d{4}$/,
  'pt-PT': /^(\+?351)?9[1236]\d{7}$/,
  'ro-RO': /^(\+?4?0)\s?7\d{2}(\/|\s|\.|\-)?\d{3}(\s|\.|\-)?\d{3}$/,
  'en-PK': /^((\+92)|(0092))-{0,1}\d{3}-{0,1}\d{7}$|^\d{11}$|^\d{4}-\d{7}$/,
  'ru-RU': /^(\+?7|8)?9\d{9}$/,
  'sr-RS': /^(\+3816|06)[- \d]{5,9}$/,
  'tr-TR': /^(\+?90|0)?5\d{9}$/,
  'vi-VN': /^(\+?84|0)?((1(2([0-9])|6([2-9])|88|99))|(9((?!5)[0-9])))([0-9]{7})$/,
  'zh-CN': /^(\+?0?86\-?)?1[345789]\d{9}$/,
  'zh-TW': /^(\+?886\-?|0)?9\d{8}$/
};
/* eslint-enable max-len */

// aliases
phones['en-CA'] = phones['en-US'];
phones['fr-BE'] = phones['nl-BE'];
phones['zh-HK'] = phones['en-HK'];

function isMobilePhone(str, locale) {
  (0, _assertString2.default)(str);
  if (locale in phones) {
    return phones[locale].test(str);
  }
  return false;
}
module.exports = exports['default'];

/***/ }),
/* 331 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isCurrency;

var _merge = __webpack_require__(33);

var _merge2 = _interopRequireDefault(_merge);

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function currencyRegex(options) {
  var symbol = '(\\' + options.symbol.replace(/\./g, '\\.') + ')' + (options.require_symbol ? '' : '?'),
      negative = '-?',
      whole_dollar_amount_without_sep = '[1-9]\\d*',
      whole_dollar_amount_with_sep = '[1-9]\\d{0,2}(\\' + options.thousands_separator + '\\d{3})*',
      valid_whole_dollar_amounts = ['0', whole_dollar_amount_without_sep, whole_dollar_amount_with_sep],
      whole_dollar_amount = '(' + valid_whole_dollar_amounts.join('|') + ')?',
      decimal_amount = '(\\' + options.decimal_separator + '\\d{2})?';
  var pattern = whole_dollar_amount + decimal_amount;

  // default is negative sign before symbol, but there are two other options (besides parens)
  if (options.allow_negatives && !options.parens_for_negatives) {
    if (options.negative_sign_after_digits) {
      pattern += negative;
    } else if (options.negative_sign_before_digits) {
      pattern = negative + pattern;
    }
  }

  // South African Rand, for example, uses R 123 (space) and R-123 (no space)
  if (options.allow_negative_sign_placeholder) {
    pattern = '( (?!\\-))?' + pattern;
  } else if (options.allow_space_after_symbol) {
    pattern = ' ?' + pattern;
  } else if (options.allow_space_after_digits) {
    pattern += '( (?!$))?';
  }

  if (options.symbol_after_digits) {
    pattern += symbol;
  } else {
    pattern = symbol + pattern;
  }

  if (options.allow_negatives) {
    if (options.parens_for_negatives) {
      pattern = '(\\(' + pattern + '\\)|' + pattern + ')';
    } else if (!(options.negative_sign_before_digits || options.negative_sign_after_digits)) {
      pattern = negative + pattern;
    }
  }

  /* eslint-disable prefer-template */
  return new RegExp('^' +
  // ensure there's a dollar and/or decimal amount, and that
  // it doesn't start with a space or a negative sign followed by a space
  '(?!-? )(?=.*\\d)' + pattern + '$');
  /* eslint-enable prefer-template */
}

var default_currency_options = {
  symbol: '$',
  require_symbol: false,
  allow_space_after_symbol: false,
  symbol_after_digits: false,
  allow_negatives: true,
  parens_for_negatives: false,
  negative_sign_before_digits: false,
  negative_sign_after_digits: false,
  allow_negative_sign_placeholder: false,
  thousands_separator: ',',
  decimal_separator: '.',
  allow_space_after_digits: false
};

function isCurrency(str, options) {
  (0, _assertString2.default)(str);
  options = (0, _merge2.default)(options, default_currency_options);
  return currencyRegex(options).test(str);
}
module.exports = exports['default'];

/***/ }),
/* 332 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isBase64;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var notBase64 = /[^A-Z0-9+\/=]/i;

function isBase64(str) {
  (0, _assertString2.default)(str);
  var len = str.length;
  if (!len || len % 4 !== 0 || notBase64.test(str)) {
    return false;
  }
  var firstPaddingChar = str.indexOf('=');
  return firstPaddingChar === -1 || firstPaddingChar === len - 1 || firstPaddingChar === len - 2 && str[len - 1] === '=';
}
module.exports = exports['default'];

/***/ }),
/* 333 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isDataURI;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var dataURI = /^\s*data:([a-z]+\/[a-z0-9\-\+]+(;[a-z\-]+=[a-z0-9\-]+)?)?(;base64)?,[a-z0-9!\$&',\(\)\*\+,;=\-\._~:@\/\?%\s]*\s*$/i; // eslint-disable-line max-len

function isDataURI(str) {
  (0, _assertString2.default)(str);
  return dataURI.test(str);
}
module.exports = exports['default'];

/***/ }),
/* 334 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = trim;

var _rtrim = __webpack_require__(94);

var _rtrim2 = _interopRequireDefault(_rtrim);

var _ltrim = __webpack_require__(93);

var _ltrim2 = _interopRequireDefault(_ltrim);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function trim(str, chars) {
  return (0, _rtrim2.default)((0, _ltrim2.default)(str, chars), chars);
}
module.exports = exports['default'];

/***/ }),
/* 335 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
      value: true
});
exports.default = escape;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function escape(str) {
      (0, _assertString2.default)(str);
      return str.replace(/&/g, '&amp;').replace(/"/g, '&quot;').replace(/'/g, '&#x27;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\//g, '&#x2F;').replace(/\\/g, '&#x5C;').replace(/`/g, '&#96;');
}
module.exports = exports['default'];

/***/ }),
/* 336 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
      value: true
});
exports.default = unescape;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function unescape(str) {
      (0, _assertString2.default)(str);
      return str.replace(/&amp;/g, '&').replace(/&quot;/g, '"').replace(/&#x27;/g, "'").replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&#x2F;/g, '/').replace(/&#96;/g, '`');
}
module.exports = exports['default'];

/***/ }),
/* 337 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = stripLow;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

var _blacklist = __webpack_require__(95);

var _blacklist2 = _interopRequireDefault(_blacklist);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function stripLow(str, keep_new_lines) {
  (0, _assertString2.default)(str);
  var chars = keep_new_lines ? '\\x00-\\x09\\x0B\\x0C\\x0E-\\x1F\\x7F' : '\\x00-\\x1F\\x7F';
  return (0, _blacklist2.default)(str, chars);
}
module.exports = exports['default'];

/***/ }),
/* 338 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = whitelist;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function whitelist(str, chars) {
  (0, _assertString2.default)(str);
  return str.replace(new RegExp('[^' + chars + ']+', 'g'), '');
}
module.exports = exports['default'];

/***/ }),
/* 339 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isWhitelisted;

var _assertString = __webpack_require__(3);

var _assertString2 = _interopRequireDefault(_assertString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function isWhitelisted(str, chars) {
  (0, _assertString2.default)(str);
  for (var i = str.length - 1; i >= 0; i--) {
    if (chars.indexOf(str[i]) === -1) {
      return false;
    }
  }
  return true;
}
module.exports = exports['default'];

/***/ }),
/* 340 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = normalizeEmail;

var _isEmail = __webpack_require__(85);

var _isEmail2 = _interopRequireDefault(_isEmail);

var _merge = __webpack_require__(33);

var _merge2 = _interopRequireDefault(_merge);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var default_normalize_email_options = {
  // The following options apply to all email addresses
  // Lowercases the local part of the email address.
  // Please note this may violate RFC 5321 as per http://stackoverflow.com/a/9808332/192024).
  // The domain is always lowercased, as per RFC 1035
  all_lowercase: true,

  // The following conversions are specific to GMail
  // Lowercases the local part of the GMail address (known to be case-insensitive)
  gmail_lowercase: true,
  // Removes dots from the local part of the email address, as that's ignored by GMail
  gmail_remove_dots: true,
  // Removes the subaddress (e.g. "+foo") from the email address
  gmail_remove_subaddress: true,
  // Conversts the googlemail.com domain to gmail.com
  gmail_convert_googlemaildotcom: true,

  // The following conversions are specific to Outlook.com / Windows Live / Hotmail
  // Lowercases the local part of the Outlook.com address (known to be case-insensitive)
  outlookdotcom_lowercase: true,
  // Removes the subaddress (e.g. "+foo") from the email address
  outlookdotcom_remove_subaddress: true,

  // The following conversions are specific to Yahoo
  // Lowercases the local part of the Yahoo address (known to be case-insensitive)
  yahoo_lowercase: true,
  // Removes the subaddress (e.g. "-foo") from the email address
  yahoo_remove_subaddress: true,

  // The following conversions are specific to iCloud
  // Lowercases the local part of the iCloud address (known to be case-insensitive)
  icloud_lowercase: true,
  // Removes the subaddress (e.g. "+foo") from the email address
  icloud_remove_subaddress: true
};

// List of domains used by iCloud
var icloud_domains = ['icloud.com', 'me.com'];

// List of domains used by Outlook.com and its predecessors
// This list is likely incomplete.
// Partial reference:
// https://blogs.office.com/2013/04/17/outlook-com-gets-two-step-verification-sign-in-by-alias-and-new-international-domains/
var outlookdotcom_domains = ['hotmail.at', 'hotmail.be', 'hotmail.ca', 'hotmail.cl', 'hotmail.co.il', 'hotmail.co.nz', 'hotmail.co.th', 'hotmail.co.uk', 'hotmail.com', 'hotmail.com.ar', 'hotmail.com.au', 'hotmail.com.br', 'hotmail.com.gr', 'hotmail.com.mx', 'hotmail.com.pe', 'hotmail.com.tr', 'hotmail.com.vn', 'hotmail.cz', 'hotmail.de', 'hotmail.dk', 'hotmail.es', 'hotmail.fr', 'hotmail.hu', 'hotmail.id', 'hotmail.ie', 'hotmail.in', 'hotmail.it', 'hotmail.jp', 'hotmail.kr', 'hotmail.lv', 'hotmail.my', 'hotmail.ph', 'hotmail.pt', 'hotmail.sa', 'hotmail.sg', 'hotmail.sk', 'live.be', 'live.co.uk', 'live.com', 'live.com.ar', 'live.com.mx', 'live.de', 'live.es', 'live.eu', 'live.fr', 'live.it', 'live.nl', 'msn.com', 'outlook.at', 'outlook.be', 'outlook.cl', 'outlook.co.il', 'outlook.co.nz', 'outlook.co.th', 'outlook.com', 'outlook.com.ar', 'outlook.com.au', 'outlook.com.br', 'outlook.com.gr', 'outlook.com.pe', 'outlook.com.tr', 'outlook.com.vn', 'outlook.cz', 'outlook.de', 'outlook.dk', 'outlook.es', 'outlook.fr', 'outlook.hu', 'outlook.id', 'outlook.ie', 'outlook.in', 'outlook.it', 'outlook.jp', 'outlook.kr', 'outlook.lv', 'outlook.my', 'outlook.ph', 'outlook.pt', 'outlook.sa', 'outlook.sg', 'outlook.sk', 'passport.com'];

// List of domains used by Yahoo Mail
// This list is likely incomplete
var yahoo_domains = ['rocketmail.com', 'yahoo.ca', 'yahoo.co.uk', 'yahoo.com', 'yahoo.de', 'yahoo.fr', 'yahoo.in', 'yahoo.it', 'ymail.com'];

function normalizeEmail(email, options) {
  options = (0, _merge2.default)(options, default_normalize_email_options);

  if (!(0, _isEmail2.default)(email)) {
    return false;
  }

  var raw_parts = email.split('@');
  var domain = raw_parts.pop();
  var user = raw_parts.join('@');
  var parts = [user, domain];

  // The domain is always lowercased, as it's case-insensitive per RFC 1035
  parts[1] = parts[1].toLowerCase();

  if (parts[1] === 'gmail.com' || parts[1] === 'googlemail.com') {
    // Address is GMail
    if (options.gmail_remove_subaddress) {
      parts[0] = parts[0].split('+')[0];
    }
    if (options.gmail_remove_dots) {
      parts[0] = parts[0].replace(/\./g, '');
    }
    if (!parts[0].length) {
      return false;
    }
    if (options.all_lowercase || options.gmail_lowercase) {
      parts[0] = parts[0].toLowerCase();
    }
    parts[1] = options.gmail_convert_googlemaildotcom ? 'gmail.com' : parts[1];
  } else if (~icloud_domains.indexOf(parts[1])) {
    // Address is iCloud
    if (options.icloud_remove_subaddress) {
      parts[0] = parts[0].split('+')[0];
    }
    if (!parts[0].length) {
      return false;
    }
    if (options.all_lowercase || options.icloud_lowercase) {
      parts[0] = parts[0].toLowerCase();
    }
  } else if (~outlookdotcom_domains.indexOf(parts[1])) {
    // Address is Outlook.com
    if (options.outlookdotcom_remove_subaddress) {
      parts[0] = parts[0].split('+')[0];
    }
    if (!parts[0].length) {
      return false;
    }
    if (options.all_lowercase || options.outlookdotcom_lowercase) {
      parts[0] = parts[0].toLowerCase();
    }
  } else if (~yahoo_domains.indexOf(parts[1])) {
    // Address is Yahoo
    if (options.yahoo_remove_subaddress) {
      var components = parts[0].split('-');
      parts[0] = components.length > 1 ? components.slice(0, -1).join('-') : components[0];
    }
    if (!parts[0].length) {
      return false;
    }
    if (options.all_lowercase || options.yahoo_lowercase) {
      parts[0] = parts[0].toLowerCase();
    }
  } else if (options.all_lowercase) {
    // Any other address
    parts[0] = parts[0].toLowerCase();
  }
  return parts.join('@');
}
module.exports = exports['default'];

/***/ }),
/* 341 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _ = __webpack_require__(2);

function stringBytes(c) {
  var n = c.length;
  var len = 0;
  for (var i = 0; i < n; i += 1) {
    var s = c.charCodeAt(i);
    while (s > 0) {
      len += 1;
      /* eslint no-bitwise: 0 */
      s >>= 8;
    }
  }
  return len;
}

function isNumeric(n) {
  return !isNaN(parseFloat(n)) && isFinite(n);
}

module.exports = {
  required: { type: 'isRequired', message: _.$trans('PLEASE_INPUT') },
  isEmail: { type: 'isEmail', message: _.$trans('FORMAT_ERROR') },
  isURL: { type: 'isURL', message: _.$trans('FORMAT_ERROR') },
  isInt: function isInt(_min, _max, message) {
    var min = _min;
    var max = _max;
    min = isNumeric(min) ? min / 1 : -Infinity;
    max = isNumeric(max) ? max / 1 : Infinity;
    return {
      type: 'isInt',
      message: message || _.$trans('VALUE_ERROR'),
      options: { min: min, max: max }
    };
  },
  isFloat: function isFloat(_min, _max, message) {
    var min = _min;
    var max = _max;
    min = isNumeric(min) ? min / 1 : -Infinity;
    max = isNumeric(max) ? max / 1 : Infinity;
    return {
      type: 'isFloat',
      message: message || _.$trans('VALUE_ERROR'),
      options: { min: min, max: max }
    };
  },
  byteLen: function byteLen(_min, _max, message) {
    var min = _min;
    var max = _max;
    min = isNumeric(min) ? min / 1 : 0;
    max = isNumeric(max) ? max / 1 : Infinity;
    return {
      message: message || _.$trans('LENGTH_ERROR'),
      method: function method() {
        var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

        var len = stringBytes(value);
        return len >= min && len <= max;
      }
    };
  }
};

/***/ }),
/* 342 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = {
  /**
     *  测试数据:
     *  1, +1, -1, ++1, ++++, 1++, 1+1, 001, 01
     * */
  int: function int(_value) {
    var value = _value.replace(/[^\d+-]/g, '');

    var regexp = /[+-]?\d*/;
    var match = regexp.exec(value);
    if (match) value = match[0];

    if (value && !isNaN(value)) value = parseInt(value);
    return value;
  },

  /**
     *  测试数据:
     *  1.123, +1.123, -1.123, ++1.123, 1+++.23+, 1++.23, 1+1.23, 132.12.12
     * */
  float: function float(_value, decimalDigits) {
    /* eslint no-useless-escape: 0 */
    var value = _value.replace(/[^\d+-\.]/g, '');

    var regexp = /([+-]?\d*(\.\d*)?)/;
    var match = regexp.exec(value);
    if (match) value = match[0];

    // 这里没使用toFixed, 是因为不希望四舍五入,不断输入最后一位数字会一直变大
    var digits = value.split('.');
    if (digits[1] && decimalDigits) {
      value = digits[0] + '.' + digits[1].substring(0, decimalDigits);
    }

    return value;
  },
  default: function _default(value) {
    return value;
  }
};

/***/ }),
/* 343 */
/***/ (function(module, exports) {

module.exports = function() {
	throw new Error("define cannot be used indirect");
};


/***/ }),
/* 344 */
/***/ (function(module, exports) {

module.exports = "<label class=\"kl-numberinput {class}\" r-hide={!visible}>\n    <kl-input value={value | number} placeholder={placeholder} autofocus={autofocus} readonly={readonly} disabled={disabled} />\n    <a class=\"kl-btn kl-btn-default\" is-dis={disabled} on-click={this.add(1)}><kl-icon type=\"solid-arrow-up\" /></a>\n    <a class=\"kl-btn kl-btn-default\" is-dis={disabled} on-click={this.add(-1)}><kl-icon type=\"solid-arrow-down\" /></a>\n</label>\n\n{#if tip && !hideTip}\n<span class=\"kl-tip kl-tip--{state}\">\n    <kl-icon type={state} />\n    <span class=\"kl-tip__msg\">{tip}</span>\n</span>\n{/if}\n"

/***/ }),
/* 345 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _create = __webpack_require__(43);

var _create2 = _interopRequireDefault(_create);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * ------------------------------------------------------------
 * TimePicker 时间选择
 * @author   sensen(rainforest92@126.com)
 * ------------------------------------------------------------
 */

var Component = __webpack_require__(1);
var template = __webpack_require__(346);
var _ = __webpack_require__(2);
__webpack_require__(78);

/**
 * @class TimePicker
 * @extend Component
 * @param {object}        [options.data]                    = 绑定属性
 * @param {string}        [options.data.time=00:00]       <=> 当前的时间值
 * @param {string}        [options.data.minTime=00:00]    => 最小时间
 * @param {string}        [options.data.maxTime=23:59]    => 最大时间
 * @param {boolean}       [options.data.autofocus=false]    => 是否自动获得焦点
 * @param {boolean}       [options.data.readonly=false]     => 是否只读
 * @param {boolean}       [options.data.disabled=false]     => 是否禁用
 * @param {boolean}       [options.data.visible=true]       => 是否显示
 * @param {string}        [options.data.class]           => 补充class
 * @param {boolean}       [options.data.disabledHours=false]   => 是否禁用小时输入框
 * @param {boolean}       [options.data.disabledMinutes=false]   => 是否禁用分钟输入框
 * @param {boolean}       [options.data.disabledSeconds=false]   => 是否禁用秒输入框
 */
var TimePicker = Component.extend({
  name: 'time-picker',
  template: _.compressHtml(template),
  /**
   * @protected
   */
  config: function config() {
    _.extend(this.data, {
      time: '00:00:00',
      hour: 0,
      minute: 0,
      seconds: 0,
      minTime: '00:00:00',
      maxTime: '23:59:59',
      autofocus: false
    });
    this.supr();

    this.$watch('time', function (newValue, oldValue) {
      if (oldValue === undefined) {
        this.updateHMS(this.data.time);
        return;
      }

      if (!newValue) throw new TypeError('Invalid Time');

      // 如果超出时间范围，则设置为范围边界的时间
      var isOutOfRange = this.isOutOfRange(newValue);
      if (isOutOfRange) return this.data.time = isOutOfRange;

      this.updateHMS(newValue);

      /**
       * @event change 时间改变时触发
       * @property {object} sender 事件发送对象
       * @property {object} time 改变后的时间
       */
      this.$emit('change', {
        sender: this,
        time: newValue
      });
    });

    this.$watch(['hour', 'minute', 'seconds'], function (_hour, _minute, _seconds) {
      var hour = _hour;
      var minute = _minute;
      var seconds = _seconds;
      hour += '';
      minute += '';
      seconds += '';
      this.data.time = (hour.length > 1 ? hour : '0' + hour) + ':' + (minute.length > 1 ? minute : '0' + minute) + ':' + (seconds.length > 1 ? seconds : '0' + seconds);
    });

    this.$watch(['minTime', 'maxTime'], function (minTime, maxTime) {
      if (!minTime) throw new TypeError('Invalid Time');
      if (!maxTime) throw new TypeError('Invalid Time');

      if (minTime > maxTime) {
        throw new TimePicker.TimeRangeError(minTime, maxTime);
      }

      // 如果超出时间范围，则设置为范围边界的时间
      var isOutOfRange = this.isOutOfRange(this.data.time);
      if (isOutOfRange) this.data.time = isOutOfRange;
    });
  },
  updateHMS: function updateHMS(value) {
    var time = value.split(':');
    this.data.hour = +time[0];
    this.data.minute = +time[1];
    this.data.seconds = +time[2];
  },

  /**
   * @method isOutOfRange(time) 是否超出规定的时间范围
   * @public
   * @param {Time} time 待测的时间
   * @return {boolean|Time} time 如果没有超出时间范围，则返回false；如果超出时间范围，则返回范围边界的时间
   */
  isOutOfRange: function isOutOfRange(time) {
    var minTime = this.data.minTime;
    var maxTime = this.data.maxTime;

    // minTime && time < minTime && minTime，先判断是否为空，再判断是否超出范围，如果超出则返回范围边界的时间
    return minTime && time < minTime && minTime || maxTime && time > maxTime && maxTime;
  }
});

var TimeRangeError = function TimeRangeError(minTime, maxTime) {
  this.name = 'TimeRangeError';
  this.message = 'Wrong Time Range where `minTime` is ' + minTime + ' and `maxTime` is ' + maxTime + '!';
};

TimeRangeError.prototype = (0, _create2.default)(Error.prototype);
TimeRangeError.prototype.constructor = TimeRangeError;
TimePicker.TimeRangeError = TimeRangeError.prototype.constructor;

module.exports = TimePicker;

/***/ }),
/* 346 */
/***/ (function(module, exports) {

module.exports = "<span class=\"kl-timepicker {class}\" r-hide={!visible}>\n\t<number-input min=\"0\" max=\"23\" format=\"00\" value={hour} readonly={readonly} disabled={disabled || disabledHours} autofocus={autofocus} />\n\t<span>:</span>\n\t<number-input min=\"0\" max=\"59\" format=\"00\" value={minute} readonly={readonly} disabled={disabled || disabledMinutes} />\n\t<span>:</span>\n\t<number-input min=\"0\" max=\"59\" format=\"00\" value={seconds} readonly={readonly} disabled={disabled || disabledSeconds} />\n</span>"

/***/ }),
/* 347 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
  * Reqwest! A general purpose XHR connection manager
  * license MIT (c) Dustin Diaz 2015
  * https://github.com/ded/reqwest
  */

!function (name, context, definition) {
  if (typeof module != 'undefined' && module.exports) module.exports = definition()
  else if (true) !(__WEBPACK_AMD_DEFINE_FACTORY__ = (definition),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
				__WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))
  else context[name] = definition()
}('reqwest', this, function () {

  var context = this

  if ('window' in context) {
    var doc = document
      , byTag = 'getElementsByTagName'
      , head = doc[byTag]('head')[0]
  } else {
    var XHR2
    try {
      XHR2 = __webpack_require__(348)
    } catch (ex) {
      throw new Error('Peer dependency `xhr2` required! Please npm install xhr2')
    }
  }


  var httpsRe = /^http/
    , protocolRe = /(^\w+):\/\//
    , twoHundo = /^(20\d|1223)$/ //http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request
    , readyState = 'readyState'
    , contentType = 'Content-Type'
    , requestedWith = 'X-Requested-With'
    , uniqid = 0
    , callbackPrefix = 'reqwest_' + (+new Date())
    , lastValue // data stored by the most recent JSONP callback
    , xmlHttpRequest = 'XMLHttpRequest'
    , xDomainRequest = 'XDomainRequest'
    , noop = function () {}

    , isArray = typeof Array.isArray == 'function'
        ? Array.isArray
        : function (a) {
            return a instanceof Array
          }

    , defaultHeaders = {
          'contentType': 'application/x-www-form-urlencoded'
        , 'requestedWith': xmlHttpRequest
        , 'accept': {
              '*':  'text/javascript, text/html, application/xml, text/xml, */*'
            , 'xml':  'application/xml, text/xml'
            , 'html': 'text/html'
            , 'text': 'text/plain'
            , 'json': 'application/json, text/javascript'
            , 'js':   'application/javascript, text/javascript'
          }
      }

    , xhr = function(o) {
        // is it x-domain
        if (o['crossOrigin'] === true) {
          var xhr = context[xmlHttpRequest] ? new XMLHttpRequest() : null
          if (xhr && 'withCredentials' in xhr) {
            return xhr
          } else if (context[xDomainRequest]) {
            return new XDomainRequest()
          } else {
            throw new Error('Browser does not support cross-origin requests')
          }
        } else if (context[xmlHttpRequest]) {
          return new XMLHttpRequest()
        } else if (XHR2) {
          return new XHR2()
        } else {
          return new ActiveXObject('Microsoft.XMLHTTP')
        }
      }
    , globalSetupOptions = {
        dataFilter: function (data) {
          return data
        }
      }

  function succeed(r) {
    var protocol = protocolRe.exec(r.url)
    protocol = (protocol && protocol[1]) || context.location.protocol
    return httpsRe.test(protocol) ? twoHundo.test(r.request.status) : !!r.request.response
  }

  function handleReadyState(r, success, error) {
    return function () {
      // use _aborted to mitigate against IE err c00c023f
      // (can't read props on aborted request objects)
      if (r._aborted) return error(r.request)
      if (r._timedOut) return error(r.request, 'Request is aborted: timeout')
      if (r.request && r.request[readyState] == 4) {
        r.request.onreadystatechange = noop
        if (succeed(r)) success(r.request)
        else
          error(r.request)
      }
    }
  }

  function setHeaders(http, o) {
    var headers = o['headers'] || {}
      , h

    headers['Accept'] = headers['Accept']
      || defaultHeaders['accept'][o['type']]
      || defaultHeaders['accept']['*']

    var isAFormData = typeof FormData !== 'undefined' && (o['data'] instanceof FormData);
    // breaks cross-origin requests with legacy browsers
    if (!o['crossOrigin'] && !headers[requestedWith]) headers[requestedWith] = defaultHeaders['requestedWith']
    if (!headers[contentType] && !isAFormData) headers[contentType] = o['contentType'] || defaultHeaders['contentType']
    for (h in headers)
      headers.hasOwnProperty(h) && 'setRequestHeader' in http && http.setRequestHeader(h, headers[h])
  }

  function setCredentials(http, o) {
    if (typeof o['withCredentials'] !== 'undefined' && typeof http.withCredentials !== 'undefined') {
      http.withCredentials = !!o['withCredentials']
    }
  }

  function generalCallback(data) {
    lastValue = data
  }

  function urlappend (url, s) {
    return url + (/\?/.test(url) ? '&' : '?') + s
  }

  function handleJsonp(o, fn, err, url) {
    var reqId = uniqid++
      , cbkey = o['jsonpCallback'] || 'callback' // the 'callback' key
      , cbval = o['jsonpCallbackName'] || reqwest.getcallbackPrefix(reqId)
      , cbreg = new RegExp('((^|\\?|&)' + cbkey + ')=([^&]+)')
      , match = url.match(cbreg)
      , script = doc.createElement('script')
      , loaded = 0
      , isIE10 = navigator.userAgent.indexOf('MSIE 10.0') !== -1

    if (match) {
      if (match[3] === '?') {
        url = url.replace(cbreg, '$1=' + cbval) // wildcard callback func name
      } else {
        cbval = match[3] // provided callback func name
      }
    } else {
      url = urlappend(url, cbkey + '=' + cbval) // no callback details, add 'em
    }

    context[cbval] = generalCallback

    script.type = 'text/javascript'
    script.src = url
    script.async = true
    if (typeof script.onreadystatechange !== 'undefined' && !isIE10) {
      // need this for IE due to out-of-order onreadystatechange(), binding script
      // execution to an event listener gives us control over when the script
      // is executed. See http://jaubourg.net/2010/07/loading-script-as-onclick-handler-of.html
      script.htmlFor = script.id = '_reqwest_' + reqId
    }

    script.onload = script.onreadystatechange = function () {
      if ((script[readyState] && script[readyState] !== 'complete' && script[readyState] !== 'loaded') || loaded) {
        return false
      }
      script.onload = script.onreadystatechange = null
      script.onclick && script.onclick()
      // Call the user callback with the last value stored and clean up values and scripts.
      fn(lastValue)
      lastValue = undefined
      head.removeChild(script)
      loaded = 1
    }

    // Add the script to the DOM head
    head.appendChild(script)

    // Enable JSONP timeout
    return {
      abort: function () {
        script.onload = script.onreadystatechange = null
        err({}, 'Request is aborted: timeout', {})
        lastValue = undefined
        head.removeChild(script)
        loaded = 1
      }
    }
  }

  function getRequest(fn, err) {
    var o = this.o
      , method = (o['method'] || 'GET').toUpperCase()
      , url = typeof o === 'string' ? o : o['url']
      // convert non-string objects to query-string form unless o['processData'] is false
      , data = (o['processData'] !== false && o['data'] && typeof o['data'] !== 'string')
        ? reqwest.toQueryString(o['data'])
        : (o['data'] || null)
      , http
      , sendWait = false

    // if we're working on a GET request and we have data then we should append
    // query string to end of URL and not post data
    if ((o['type'] == 'jsonp' || method == 'GET') && data) {
      url = urlappend(url, data)
      data = null
    }

    if (o['type'] == 'jsonp') return handleJsonp(o, fn, err, url)

    // get the xhr from the factory if passed
    // if the factory returns null, fall-back to ours
    http = (o.xhr && o.xhr(o)) || xhr(o)

    http.open(method, url, o['async'] === false ? false : true)
    setHeaders(http, o)
    setCredentials(http, o)
    if (context[xDomainRequest] && http instanceof context[xDomainRequest]) {
        http.onload = fn
        http.onerror = err
        // NOTE: see
        // http://social.msdn.microsoft.com/Forums/en-US/iewebdevelopment/thread/30ef3add-767c-4436-b8a9-f1ca19b4812e
        http.onprogress = function() {}
        sendWait = true
    } else {
      http.onreadystatechange = handleReadyState(this, fn, err)
    }
    o['before'] && o['before'](http)
    if (sendWait) {
      setTimeout(function () {
        http.send(data)
      }, 200)
    } else {
      http.send(data)
    }
    return http
  }

  function Reqwest(o, fn) {
    this.o = o
    this.fn = fn

    init.apply(this, arguments)
  }

  function setType(header) {
    // json, javascript, text/plain, text/html, xml
    if (header === null) return undefined; //In case of no content-type.
    if (header.match('json')) return 'json'
    if (header.match('javascript')) return 'js'
    if (header.match('text')) return 'html'
    if (header.match('xml')) return 'xml'
  }

  function init(o, fn) {

    this.url = typeof o == 'string' ? o : o['url']
    this.timeout = null

    // whether request has been fulfilled for purpose
    // of tracking the Promises
    this._fulfilled = false
    // success handlers
    this._successHandler = function(){}
    this._fulfillmentHandlers = []
    // error handlers
    this._errorHandlers = []
    // complete (both success and fail) handlers
    this._completeHandlers = []
    this._erred = false
    this._responseArgs = {}

    var self = this

    fn = fn || function () {}

    if (o['timeout']) {
      this.timeout = setTimeout(function () {
        timedOut()
      }, o['timeout'])
    }

    if (o['success']) {
      this._successHandler = function () {
        o['success'].apply(o, arguments)
      }
    }

    if (o['error']) {
      this._errorHandlers.push(function () {
        o['error'].apply(o, arguments)
      })
    }

    if (o['complete']) {
      this._completeHandlers.push(function () {
        o['complete'].apply(o, arguments)
      })
    }

    function complete (resp) {
      o['timeout'] && clearTimeout(self.timeout)
      self.timeout = null
      while (self._completeHandlers.length > 0) {
        self._completeHandlers.shift()(resp)
      }
    }

    function success (resp) {
      var type = o['type'] || resp && setType(resp.getResponseHeader('Content-Type')) // resp can be undefined in IE
      resp = (type !== 'jsonp') ? self.request : resp
      // use global data filter on response text
      var filteredResponse = globalSetupOptions.dataFilter(resp.responseText, type)
        , r = filteredResponse
      try {
        resp.responseText = r
      } catch (e) {
        // can't assign this in IE<=8, just ignore
      }
      if (r) {
        switch (type) {
        case 'json':
          try {
            resp = context.JSON ? context.JSON.parse(r) : eval('(' + r + ')')
          } catch (err) {
            return error(resp, 'Could not parse JSON in response', err)
          }
          break
        case 'js':
          resp = eval(r)
          break
        case 'html':
          resp = r
          break
        case 'xml':
          resp = resp.responseXML
              && resp.responseXML.parseError // IE trololo
              && resp.responseXML.parseError.errorCode
              && resp.responseXML.parseError.reason
            ? null
            : resp.responseXML
          break
        }
      }

      self._responseArgs.resp = resp
      self._fulfilled = true
      fn(resp)
      self._successHandler(resp)
      while (self._fulfillmentHandlers.length > 0) {
        resp = self._fulfillmentHandlers.shift()(resp)
      }

      complete(resp)
    }

    function timedOut() {
      self._timedOut = true
      self.request.abort()
    }

    function error(resp, msg, t) {
      resp = self.request
      self._responseArgs.resp = resp
      self._responseArgs.msg = msg
      self._responseArgs.t = t
      self._erred = true
      while (self._errorHandlers.length > 0) {
        self._errorHandlers.shift()(resp, msg, t)
      }
      complete(resp)
    }

    this.request = getRequest.call(this, success, error)
  }

  Reqwest.prototype = {
    abort: function () {
      this._aborted = true
      this.request.abort()
    }

  , retry: function () {
      init.call(this, this.o, this.fn)
    }

    /**
     * Small deviation from the Promises A CommonJs specification
     * http://wiki.commonjs.org/wiki/Promises/A
     */

    /**
     * `then` will execute upon successful requests
     */
  , then: function (success, fail) {
      success = success || function () {}
      fail = fail || function () {}
      if (this._fulfilled) {
        this._responseArgs.resp = success(this._responseArgs.resp)
      } else if (this._erred) {
        fail(this._responseArgs.resp, this._responseArgs.msg, this._responseArgs.t)
      } else {
        this._fulfillmentHandlers.push(success)
        this._errorHandlers.push(fail)
      }
      return this
    }

    /**
     * `always` will execute whether the request succeeds or fails
     */
  , always: function (fn) {
      if (this._fulfilled || this._erred) {
        fn(this._responseArgs.resp)
      } else {
        this._completeHandlers.push(fn)
      }
      return this
    }

    /**
     * `fail` will execute when the request fails
     */
  , fail: function (fn) {
      if (this._erred) {
        fn(this._responseArgs.resp, this._responseArgs.msg, this._responseArgs.t)
      } else {
        this._errorHandlers.push(fn)
      }
      return this
    }
  , 'catch': function (fn) {
      return this.fail(fn)
    }
  }

  function reqwest(o, fn) {
    return new Reqwest(o, fn)
  }

  // normalize newline variants according to spec -> CRLF
  function normalize(s) {
    return s ? s.replace(/\r?\n/g, '\r\n') : ''
  }

  function serial(el, cb) {
    var n = el.name
      , t = el.tagName.toLowerCase()
      , optCb = function (o) {
          // IE gives value="" even where there is no value attribute
          // 'specified' ref: http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-862529273
          if (o && !o['disabled'])
            cb(n, normalize(o['attributes']['value'] && o['attributes']['value']['specified'] ? o['value'] : o['text']))
        }
      , ch, ra, val, i

    // don't serialize elements that are disabled or without a name
    if (el.disabled || !n) return

    switch (t) {
    case 'input':
      if (!/reset|button|image|file/i.test(el.type)) {
        ch = /checkbox/i.test(el.type)
        ra = /radio/i.test(el.type)
        val = el.value
        // WebKit gives us "" instead of "on" if a checkbox has no value, so correct it here
        ;(!(ch || ra) || el.checked) && cb(n, normalize(ch && val === '' ? 'on' : val))
      }
      break
    case 'textarea':
      cb(n, normalize(el.value))
      break
    case 'select':
      if (el.type.toLowerCase() === 'select-one') {
        optCb(el.selectedIndex >= 0 ? el.options[el.selectedIndex] : null)
      } else {
        for (i = 0; el.length && i < el.length; i++) {
          el.options[i].selected && optCb(el.options[i])
        }
      }
      break
    }
  }

  // collect up all form elements found from the passed argument elements all
  // the way down to child elements; pass a '<form>' or form fields.
  // called with 'this'=callback to use for serial() on each element
  function eachFormElement() {
    var cb = this
      , e, i
      , serializeSubtags = function (e, tags) {
          var i, j, fa
          for (i = 0; i < tags.length; i++) {
            fa = e[byTag](tags[i])
            for (j = 0; j < fa.length; j++) serial(fa[j], cb)
          }
        }

    for (i = 0; i < arguments.length; i++) {
      e = arguments[i]
      if (/input|select|textarea/i.test(e.tagName)) serial(e, cb)
      serializeSubtags(e, [ 'input', 'select', 'textarea' ])
    }
  }

  // standard query string style serialization
  function serializeQueryString() {
    return reqwest.toQueryString(reqwest.serializeArray.apply(null, arguments))
  }

  // { 'name': 'value', ... } style serialization
  function serializeHash() {
    var hash = {}
    eachFormElement.apply(function (name, value) {
      if (name in hash) {
        hash[name] && !isArray(hash[name]) && (hash[name] = [hash[name]])
        hash[name].push(value)
      } else hash[name] = value
    }, arguments)
    return hash
  }

  // [ { name: 'name', value: 'value' }, ... ] style serialization
  reqwest.serializeArray = function () {
    var arr = []
    eachFormElement.apply(function (name, value) {
      arr.push({name: name, value: value})
    }, arguments)
    return arr
  }

  reqwest.serialize = function () {
    if (arguments.length === 0) return ''
    var opt, fn
      , args = Array.prototype.slice.call(arguments, 0)

    opt = args.pop()
    opt && opt.nodeType && args.push(opt) && (opt = null)
    opt && (opt = opt.type)

    if (opt == 'map') fn = serializeHash
    else if (opt == 'array') fn = reqwest.serializeArray
    else fn = serializeQueryString

    return fn.apply(null, args)
  }

  reqwest.toQueryString = function (o, trad) {
    var prefix, i
      , traditional = trad || false
      , s = []
      , enc = encodeURIComponent
      , add = function (key, value) {
          // If value is a function, invoke it and return its value
          value = ('function' === typeof value) ? value() : (value == null ? '' : value)
          s[s.length] = enc(key) + '=' + enc(value)
        }
    // If an array was passed in, assume that it is an array of form elements.
    if (isArray(o)) {
      for (i = 0; o && i < o.length; i++) add(o[i]['name'], o[i]['value'])
    } else {
      // If traditional, encode the "old" way (the way 1.3.2 or older
      // did it), otherwise encode params recursively.
      for (prefix in o) {
        if (o.hasOwnProperty(prefix)) buildParams(prefix, o[prefix], traditional, add)
      }
    }

    // spaces should be + according to spec
    return s.join('&').replace(/%20/g, '+')
  }

  function buildParams(prefix, obj, traditional, add) {
    var name, i, v
      , rbracket = /\[\]$/

    if (isArray(obj)) {
      // Serialize array item.
      for (i = 0; obj && i < obj.length; i++) {
        v = obj[i]
        if (traditional || rbracket.test(prefix)) {
          // Treat each array item as a scalar.
          add(prefix, v)
        } else {
          buildParams(prefix + '[' + (typeof v === 'object' ? i : '') + ']', v, traditional, add)
        }
      }
    } else if (obj && obj.toString() === '[object Object]') {
      // Serialize object item.
      for (name in obj) {
        buildParams(prefix + '[' + name + ']', obj[name], traditional, add)
      }

    } else {
      // Serialize scalar item.
      add(prefix, obj)
    }
  }

  reqwest.getcallbackPrefix = function () {
    return callbackPrefix
  }

  // jQuery and Zepto compatibility, differences can be remapped here so you can call
  // .ajax.compat(options, callback)
  reqwest.compat = function (o, fn) {
    if (o) {
      o['type'] && (o['method'] = o['type']) && delete o['type']
      o['dataType'] && (o['type'] = o['dataType'])
      o['jsonpCallback'] && (o['jsonpCallbackName'] = o['jsonpCallback']) && delete o['jsonpCallback']
      o['jsonp'] && (o['jsonpCallback'] = o['jsonp'])
    }
    return new Reqwest(o, fn)
  }

  reqwest.ajaxSetup = function (options) {
    options = options || {}
    for (var k in options) {
      globalSetupOptions[k] = options[k]
    }
  }

  return reqwest
});


/***/ }),
/* 348 */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),
/* 349 */
/***/ (function(module, exports) {

module.exports = "<div class=\"kl-dropdown {class}\" is-dis={disabled} r-hide={!visible} ref=\"element\">\n    <div class=\"kl-dropdown__hd\" is-dis={disabled} on-click={this.toggle()}>\n        {#if this.$body}\n            {#inc this.$body}\n        {#else}\n            <a class=\"kl-btn\" title={title || this.$trans('DROPDOWN_LIST')}>{title || this.$trans('DROPDOWN_LIST')} <kl-icon type=\"solid-arrow-down\"></kl-icon></a>\n        {/if}\n    </div>\n    {#if open}\n    <div class=\"kl-dropdown__bd\" r-animation=\"on: enter; class: animated fadeInY fast; on: leave; class: animated fadeOutY fast;\">\n        <ul class=\"kl-listview\">\n            {#list source as item}\n            <li is-dis={item.disabled} is-divider={item.divider} title={item.name} on-click={this.select(item)}>{#if @(itemTemplate)}{#inc @(itemTemplate)}{#else}{item.name}{/if}</li>\n            {/list}\n        </ul>\n    </div>\n    {/if}\n</div>"

/***/ }),
/* 350 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * ------------------------------------------------------------
 * Select2Group 多级选择2
 * @author   sensen(rainforest92@126.com)
 * ------------------------------------------------------------
 */

var Component = __webpack_require__(1);
var template = __webpack_require__(351);
var _ = __webpack_require__(2);
var Validation = __webpack_require__(9);
var validationMixin = __webpack_require__(6);

/**
 * @class SelectGroup
 * @extend Component
 * @param {object}            [options.data]                    = 绑定属性
 * @param {object[]}          [options.data.source=[]]          <=> 数据源
 * @param {string}            [options.data.source[].name]      => 每项的内容
 * @param {boolean}           [options.data.source[].disabled=false]  => 禁用此项
 * @param {boolean}           [options.data.source[].divider=false]   => 设置此项为分隔线
 * @param {number}            [options.data.depth=1]            => 层级数
 * @param {boolean}           [options.data.required]           => 是否必填
 * @param {object}            [options.data.selected=[]]        <=  最后的选择项
 * @param {object[]}          [options.data.selecteds=[]]       <=> 所有的选择项
 * @param {string[]|number[]} [options.data.values=[]]          <=> 所有的选择值
 * @param {string}            [options.data.key=id]             => 数据项的键
 * @param {string[]}          [options.data.placeholders=[]]    => 默认项的文字
 * @param {boolean}           [options.data.hideTip=false]      => 是否显示校验错误信息
 * @param {boolean}           [options.data.readonly=false]     => 是否只读
 * @param {boolean}           [options.data.disabled=false]     => 是否禁用
 * @param {boolean}           [options.data.visible=true]       => 是否显示
 * @param {string}            [options.data.class]              => 补充class
 * @param {object}            [options.service]                 @=> 数据服务
 */
var SelectGroup = Component.extend({
  name: 'select.group',
  template: template,
  /**
     * @protected
     */
  config: function config() {
    _.extend(this.data, {
      // @inherited source: [],
      hideTip: false,
      depth: 1,
      sources: [],
      selected: undefined,
      selecteds: [],
      key: 'id',
      values: [],
      placeholders: [],
      required: false
    });
    this.supr();

    this.$watch('selected', function (newValue, oldValue) {
      /**
             * @event change 最后的选择项改变时触发
             * @property {object} sender 事件发送对象
             * @property {object} selected 最后的选择项
             * @property {object} selecteds 所有的选择项
             * @property {string} key 数据项的键
             * @property {string[]|number[]} values 所有的选择值
             */
      this.$emit('change', {
        sender: this,
        selected: newValue,
        selecteds: this.data.selecteds,
        key: this.data.key,
        values: this.data.values
      });

      this.data.tip && this.validate();
    });

    this.data.sources[0] = this.data.source;

    this.initValidation();
  },

  /**
     * @private
     */
  _onChange: function _onChange(item, level) {
    // 由内部<select2>控制
    // if(this.data.readonly || this.data.disabled || (item && (item.disabled || item.divider)))
    //     return;

    this.data.sources[level + 1] = item ? item.children : undefined;
    for (var i = level + 2; i < this.data.depth; i++) {
      this.data.sources[i] = undefined;
    }

    if (level === this.data.depth - 1) this.data.selected = item;

    /**
         * @event select 选择某一项时触发
         * @property {object} sender 事件发送对象
         * @property {object} selected 当前选择项
         * @property {object} level 当前选择的层级
         */
    this.$emit('select', {
      sender: this,
      selected: item,
      selecteds: this.data.selecteds,
      level: level
    });
  },

  /**
     * @method validate() 根据required验证组件的值是否正确
     * @public
     * @return {object} result 结果
     */
  validate: function validate(on) {
    var data = this.data,
        result = { success: true, message: '' },
        values = this.data.values,
        depth = this.data.depth;

    if (data.required && values.length < depth) {
      result.success = false;
      result.message = this.data.message || this.$trans('PLEASE_SELECT');
      this.data.state = 'error';
    } else {
      result.success = true;
      result.message = '';
      this.data.state = '';
    }
    this.data.tip = result.message;

    this.$emit('validate', {
      sender: this,
      on: on,
      result: result
    });

    return result;
  }
});

SelectGroup.use(validationMixin);
module.exports = SelectGroup;

/***/ }),
/* 351 */
/***/ (function(module, exports) {

module.exports = "<div class=\"kl-selectgroup kl-selectgroup--{state} {class}\" r-hide={!visible} r-width=\"{width}\">\n    {#list 0..(depth - 1) as i}\n    <kl-select size={size} source={sources[i]} selected={selecteds[i]} key={key} value={values[i]} readonly={readonly} disabled={disabled} placeholder={placeholders[i]} on-change={this._onChange($event.selected, i)} />\n    {/list}\n</div>\n{#if tip && !hideTip}\n<span class=\"kl-tip kl-tip--{state} animated\" r-animation=\"on:enter;class:fadeInY;\">\n            <kl-icon type={state} />\n            <span class=\"kl-tip__msg\">{tip}</span>\n        </span>\n{/if}\n"

/***/ }),
/* 352 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * ------------------------------------------------------------
 * Suggest   自动提示
 * @author   sensen(rainforest92@126.com)
 * ------------------------------------------------------------
 */

var Dropdown = __webpack_require__(34);
var template = __webpack_require__(353);
var _ = __webpack_require__(2);
var Validation = __webpack_require__(9);
var validationMixin = __webpack_require__(6);

/**
 * @class Suggest
 * @extend Dropdown
 * @param {object}        [options.data]                          = 绑定属性
 * @param {object[]}      [options.data.source=[]]                <=> 数据源
 * @param {string}        [options.data.source[].name]            => 每项的内容
 * @param {string}        [options.data.key=id]                   => 数据项的键
 * @param {string}        [options.data.nameKey=name]             => 数据项的name键
 * @param {boolean}       [options.data.source[].disabled=false]  => 禁用此项
 * @param {object}        [options.data.selected=null]            <=> 当前选择项
 * @param {string}        [options.data.value]                    <=> 文本框中的值
 * @param {string}        [options.data.id]                       <=> 选项的id值;
 * @param {string}        [options.data.placeholder=请输入]      => 文本框的占位文字
 * @param {number}        [options.data.maxlength]                => 文本框的最大长度
 * @param {number}        [options.data.startLength=0]            => 开始提示长度。当输入长度>=该值后开始提示
 * @param {string}        [options.data.matchType=all]            => 匹配方式，`all`表示匹配全局，`start`表示只匹配开头，`end`表示只匹配结尾
 * @param {boolean}       [options.data.strict]                   => 是否为严格模式。当为严格模式时，`value`属性必须在source中选择，否则为空。
 * @param {boolean}       [options.data.autofocus]                => 是否自动获得焦点
 * @param {string}        [options.data.itemTemplate=null]        @=> 单项模板
 * @param {boolean}       [options.data.hideTip=false]            => 是否显示校验错误信息
 * @param {boolean}       [options.data.open]                     <=> 当前为展开/收起状态
 * @param {boolean}       [options.data.readonly]                 => 是否只读
 * @param {boolean}       [options.data.disabled]                 => 是否禁用
 * @param {boolean}       [options.data.visible=true]             => 是否显示
 * @param {string}        [options.data.class]                 => 补充class
 * @param {object}        [options.service]                       @=> 数据服务
 */
var Suggest = Dropdown.extend({
  name: 'suggest',
  template: template,
  /**
     * @protected
     */
  config: function config() {
    _.extend(this.data, {
      // @inherited source: [],
      // @inherited open: false,
      hideTip: false,
      selected: null,
      value: '',
      id: '',
      key: 'id',
      nameKey: 'name',
      placeholder: this.$trans('PLEASE_SELECT'),
      maxlength: undefined,
      startLength: 0,
      delay: 300,
      matchType: 'all',
      strict: false,
      autofocus: false,
      required: false
    });
    this.supr();

    this.initValidation();

    this.$watch('id', function (id) {
      var source = this.data.source || [],
          key = this.data.key,
          nameKey = this.data.nameKey;

      var crt = source.find(function (item) {
        return item[key] == id;
      });
      this.$update('value', crt ? crt[nameKey] : '');
    });
  },

  /**
     * @protected
     */
  init: function init() {
    var id = this.data.id,
        source = this.data.source;

    if (id && source) {
      var selected = source.filter(function (item) {
        return item[this.data.key] == id;
      })[0];
      if (selected) {
        this.data.selected = selected;
        this.data.value = selected[this.data.nameKey];
      }
    }
  },

  /**
     * @method select(item) 选择某一项
     * @public
     * @param  {object} item 选择项
     * @return {void}
     */
  select: function select(item) {
    if (this.data.readonly || this.data.disabled || item.disabled || item.divider) {
      this.$emit('select', {
        sender: this,
        selected: item,
        disabled: true
      });
      return;
    }

    this.data.selected = item;
    this.data.value = item[this.data.nameKey];
    this.data.id = item[this.data.key];

    /**
         * @event select 选择某一项时触发
         * @property {object} sender 事件发送对象
         * @property {object} selected 当前选择项
         */
    this.$emit('select', {
      sender: this,
      selected: item
    });
    this.toggle(false);
  },

  /**
     * @method toggle(open) 展开/收起
     * @public
     * @param  {boolean} open 展开/收起状态。如果无此参数，则在两种状态之间切换。
     * @return {void}
     */
  toggle: function toggle(open, _isInput) {
    if (this.data.readonly || this.data.disabled) return;

    if (open === undefined) open = !this.data.open;
    this.data.open = open;

    var index = Dropdown.opens.indexOf(this);
    if (open && index < 0) Dropdown.opens.push(this);else if (!open && index >= 0) {
      Dropdown.opens.splice(index, 1);

      if (!_isInput && this.data.strict) {
        this.data.value = this.data.selected ? this.data.selected[this.data.nameKey] : '';
      }
    }

    /**
         * @event toggle  展开/收起时触发
         * @property {object} sender 事件发送对象
         * @property {object} open 展开/收起状态
         */
    this.$emit('toggle', {
      sender: this,
      open: open
    });
  },

  /**
     * @private
     */
  _onInput: function _onInput($event) {
    var value = this.data.value || '';

    if (value.length >= this.data.startLength) {
      this.toggle(true);
      if (this.service) this.$updateSource();
    } else this.toggle(false, true);
  },

  /**
     * @private
     */
  _onBlur: function _onBlur($event) {},

  /**
     * @private
     */
  getParams: function getParams() {
    return { value: this.data.value };
  },

  /**
     * @private
     */
  filter: function filter(item) {
    var value = this.data.value;

    if (!value && this.data.startLength) return false;

    if (this.data.matchType === 'all') {
      return item[this.data.nameKey].indexOf(value) >= 0;
    } else if (this.data.matchType === 'startLength') {
      return item[this.data.nameKey].slice(0, value.length) === value;
    } else if (this.data.matchType === 'end') {
      return item[this.data.nameKey].slice(-value.length) === value;
    }
  },

  /**
     * @method validate() 根据验证组件的值是否正确
     * @public
     * @return {object} result 结果
     */
  validate: function validate(on) {
    if (!this.data.required) {
      return { success: true };
    }

    var result = { success: true, message: '' },
        value = this.data.value,
        value = typeof value === 'undefined' ? '' : '' + value;

    if (!value.length) {
      result.success = false;
      result.message = this.data.message || this.$trans('PLEASE_SELECT');
      this.data.state = 'error';
    } else {
      result.success = true;
      result.message = '';
      this.data.state = '';
    }
    this.data.tip = result.message;

    this.$emit('validate', {
      sender: this,
      on: on,
      result: result
    });

    return result;
  }
});

Suggest.use(validationMixin);
module.exports = Suggest;

/***/ }),
/* 353 */
/***/ (function(module, exports) {

module.exports = "<div class=\"kl-dropdown kl-suggest {class}\" is-dis={disabled} r-hide={!visible} ref=\"element\">\n    <div class=\"kl-dropdown__hd\" is-dis={disabled} on-click={this.toggle()}>\n        <kl-input placeholder={placeholder} maxlength={maxlength} autofocus={autofocus} r-model={value} on-focus={this._onInput($event)} on-keyup={this._onInput($event)} on-blur={this._onBlur($event)} ref=\"input\" readonly={readonly} disabled={disabled}></kl-input>\n    </div>\n    {#if open}\n    <div class=\"kl-dropdown__bd\" r-animation=\"on: enter; class: animated fadeInY fast; on: leave; class: animated fadeOutY fast;\">\n        <ul class=\"kl-listview kl-suggest__listview\">\n            {#list source as item}\n            {#if this.filter(item)}\n            <li is-dis={item.disabled} is-divider={item.divider} title={item[nameKey]} on-click={this.select(item)}>{#if @(itemTemplate)}{#inc @(itemTemplate)}{#else}{item[nameKey]}{/if}</li>\n            {/if}\n            {/list}\n        </ul>\n    </div>\n    {/if}\n</div>\n{#if tip && !hideTip}\n<span class=\"kl-tip kl-tip--{state} animated\" r-animation=\"on:enter;class:fadeInY;\">\n            <kl-icon type={state} />\n            <span class=\"kl-tip__msg\">{tip}</span>\n        </span>\n{/if}\n"

/***/ }),
/* 354 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * ------------------------------------------------------------
 * TreeSelect 树型选择
 * @author   sensen(rainforest92@126.com)
 * ------------------------------------------------------------
 */

var Dropdown = __webpack_require__(34);
var Validation = __webpack_require__(9);
var validationMixin = __webpack_require__(6);
var template = __webpack_require__(355);
var _ = __webpack_require__(2);
var Treeview = __webpack_require__(96);

/**
 * @class TreeSelect
 * @extend Select
 * @param {object}          [options.data]                          = 绑定属性
 * @param {object[]}        [options.data.source=[]]                <=> 数据源
 * @param {string}          [options.data.source[].name]            => 每项的内容
 * @param {boolean}         [options.data.source[].disabled=false]  => 禁用此项
 * @param {boolean}         [options.data.source[].divider=false]   => 设置此项为分隔线
 * @param {string}          [options.data.key=id]                   => 数据项的键
 * @param {string}          [options.data.nameKey=name]             => 数据项的name键
 * @param {string}          [options.data.childKey=children]        => 数据子项的键
 * @param {string}          [options.data.value=null]               <=> 当前选择值
 * @param {object}          [options.data.selected=null]            <=> 当前选择项
 * @param {string}          [options.data.separator=,]              => 多选时value分隔符
 * @param {string}          [options.data.placeholder=请选择]      => 默认项的文字
 * @param {boolean}         [options.data.hierarchical=false]       @=> 是否分级动态加载，需要service
 * @param {boolean}         [options.data.readonly=false]           => 是否只读
 * @param {boolean}         [options.data.multiple=false]           => 是否多选
 * @param {boolean}         [options.data.disabled=false]           => 是否禁用
 * @param {boolean}         [options.data.visible=true]             => 是否显示
 * @param {string}          [options.data.class]                 => 补充class
 * @param {object}          [options.service]                       @=> 数据服务
 */

// TODO: value 数据回显
var TreeSelect = Dropdown.extend({
  name: 'tree.select',
  template: template,
  config: function config(data) {
    _.extend(this.data, {
      // @inherited source: [],
      // @inherited open: false,
      multiple: false,
      value: null,
      selected: null,
      separator: ',',
      placeholder: this.$trans('PLEASE_SELECT'),
      key: 'id',
      nameKey: 'name',
      childKey: 'children',
      hierarchical: false,
      updateAuto: false
    });
    this.supr();

    this.initValidation();
  },

  computed: {
    phShow: function phShow(data) {
      if (!data.selected) return data.placeholder;
      if (Array.isArray(data.selected)) {
        return data.selected.map(function (d) {
          return d[data.nameKey];
        }).join(data.separator);
      }
      return data.selected[data.nameKey];
    }
  }
});

TreeSelect.use(validationMixin);
module.exports = TreeSelect;

/***/ }),
/* 355 */
/***/ (function(module, exports) {

module.exports = "<div class=\"kl-dropdown {class}\" is-dis={disabled} r-hide={!visible} ref=\"element\">\n    <div class=\"kl-dropdown__hd\" is-dis={disabled} on-click={this.toggle()}>\n        <kl-icon type=\"solid-arrow-down\"></kl-icon>\n        <span>{phShow}</span>\n    </div>\n    {#if open}\n    <div class=\"kl-dropdown__bd\" r-animation=\"on: enter; class: animated fadeInY fast; on: leave; class: animated fadeOutY fast;\">\n        <kl-tree-view key={key} separator={separator} nameKey={nameKey} childKey={childKey} source={source} selected={selected} value={value} multiple={multiple} hierarchical={hierarchical} service={service} on-select={this.select($event.selected)} />\n    </div>\n    {/if}\n</div>\n"

/***/ }),
/* 356 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var SourceComponent = __webpack_require__(16);
var template = __webpack_require__(357);
var _ = __webpack_require__(2);

/**
 * @class KLTree
 * @extend SourceComponent
 * @private
 */
var KLTree = SourceComponent.extend({
  name: 'kl-tree',
  template: template,
  /**
     * @protected
     */
  config: function config() {
    _.extend(this.data, {
      // @inherited source: [],
      itemTemplate: null,
      visible: false,
      multiple: false,
      level: 1
    });
    this.supr();

    this.$ancestor = this.$parent.$ancestor;
    this.service = this.$ancestor.service;
    this.data.itemTemplate = this.$ancestor.data.itemTemplate;
    this.data.hierarchical = this.$ancestor.data.hierarchical;

    this.$watch('visible', function (newValue) {
      if (!this.data.hierarchical) return;

      if (!newValue || this.$parent.name !== 'kl-tree') return;

      this.$updateSource(function () {
        this.data.hierarchical = false;
      });
    });

    this.$watch('value', function (newValue) {
      var _this = this;

      if (newValue === null || newValue === undefined) {
        return;
      }
      var _data = this.data,
          source = _data.source,
          separator = _data.separator,
          key = _data.key;

      var newValueArr = ('' + newValue).split(separator);
      source.forEach(function (item) {
        if (newValueArr.includes('' + item[key])) {
          _this._onItemCheckedChange({ checked: true }, item);
        }
      });
    });
  },

  /**
     * @override
     */
  getParams: function getParams() {
    if (this.data.parent) {
      return _.extend({ parentId: this.data.parent.id }, this.$ancestor.getParams());
    }
  },

  /**
     * @method $updateSource() 从service中更新数据源
     * @public
     * @deprecated
     * @return {SourceComponent} this
     */
  $updateSource: function $updateSource() {
    var self = this;
    this.service.getList(this.getParams(), function (result) {
      // 给每个节点item添加parent
      result.forEach(function (item) {
        item.parent = self.data.parent;
      });

      self.$update('source', result);

      self.$emit('updateSource', {
        sender: this,
        result: result
      });
    });
    return this;
  },

  /**
     * @note 移交$ancestor处理
     */
  select: function select() {
    var _$ancestor;

    (_$ancestor = this.$ancestor).select.apply(_$ancestor, arguments);
  },
  check: function check($event) {
    $event.e.stopPropagation();
    this._setSelected({});
  },
  _setSelected: function _setSelected(event) {
    var self = this;
    setTimeout(function () {
      self.$emit('setselected', event);
    }, 0);
  },
  stopPropagation: function stopPropagation(e) {
    e.stopPropagation();
  },

  /**
     * @private
     */
  _onItemCheckedChange: function _onItemCheckedChange($event, item) {
    var checked = $event.checked;
    item.checked = checked;
    if (checked !== null && item[this.data.childKey]) {
      item[this.data.childKey].forEach(function (child) {
        if (child.disabled || child.readonly) return;
        child.checked = checked;
      });
    }

    var parent = this.data.parent;
    if (parent && parent.checked !== item.checked) {
      var checkedCount = 0;
      parent[this.data.childKey].forEach(function (child) {
        if (child.checked) checkedCount += 1;else if (child.checked === null) checkedCount += 0.5;
      });

      if (checkedCount === 0) parent.checked = false;else if (checkedCount === parent[this.data.childKey].length) {
        parent.checked = true;
      } else parent.checked = null;
    }
  }
});

module.exports = KLTree;

/***/ }),
/* 357 */
/***/ (function(module, exports) {

module.exports = "<ul class=\"kl-treeview-list\" r-class={{'kl-treeview-list--child': !!parent}} r-hide={!visible} r-animation=\"on:enter;collapse:on;on:leave;collapse:off;\">\n\t{#list source as item}\n\t<li>\n\t\t<div class=\"kl-treeview-list-item\"\n         r-style={{'padding-left':  level == 1 ? '8px' : (multiple ? 24 : 16) * (level - 1) + 'px'}}\n         is-sel={this.$ancestor.data.selected === item}\n         is-dis={item.disabled}\n         on-click={this.select(item)}\n      >\n      <kl-icon type=\"solid-arrow-right\"\n               class=\"kl-treeview-list-item__arrow {item.open ? 'is-open' : ''}\"\n               color=\"{(item.childrenCount || (item.children && item.children.length)) ? '#333': 'transparent'}\" />\n\t\t\t{#if multiple}\n\t\t\t<kl-check class=\"kl-treeview-list-item__check\" checked={item.checked} on-check={this.check($event)} disabled={item.disabled} on-change={this._onItemCheckedChange($event, item)} />\n\t\t\t{/if}\n\t\t\t<div class=\"kl-treeview-list-item__name\" title={item[nameKey]}>\n          {#if @(itemTemplate)}\n            {#inc @(itemTemplate)}\n          {#else}\n            {item[nameKey]}{#inc body}\n          {/if}\n      </div>\n\t\t</div>\n\t\t{#if item.childrenCount || (item.children && item.children.length)}\n      <kl-tree childKey={childKey} nameKey={nameKey} source={item.children} body={body} value={value} separator={separator} key={key}\n               visible={item.open} parent={item} multiple={multiple} level={level+1}\n               on-setselected={this._setSelected($event)} />\n    {/if}\n\t</li>\n\t{/list}\n</ul>\n"

/***/ }),
/* 358 */
/***/ (function(module, exports) {

module.exports = "<div class=\"kl-treeview {class}\" r-class={ {'kl-treeview--multiple': multiple} } r-hide={!visible}>\n\t<kl-tree body={this.$body}\n             source={source}\n             childKey={childKey}\n             nameKey={nameKey}\n             key={key}\n             separator={separator}\n             visible\n             multiple={multiple}\n             value={value}\n             selected={selected}\n             on-setselected={this.setSelected($event)} />\n</div>\n"

/***/ }),
/* 359 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * ------------------------------------------------------------
 * Uploader  上传
 * @author   sensen(rainforest92@126.com)
 * ------------------------------------------------------------
 */

var Component = __webpack_require__(1);
var template = __webpack_require__(360);
var _ = __webpack_require__(2);

var SIZE_UNITS = {
  kB: 1000,
  MB: 1000 * 1000,
  GB: 1000 * 1000 * 1000
};

/**
 * @class Uploader
 * @extend Component
 * @param {object}            [options.data]                    = 绑定属性
 * @param {string}            [options.data.title]              => 按钮文字
 * @param {string}            [options.data.url]                => 上传路径
 * @param {string}            [options.data.dataType=json]      => 数据类型。可以是：`text`、`xml`、`json`、`script`。
 * @param {object}            [options.data.data]               => 附加数据
 * @param {string}            [options.data.name=file]          => 上传文件的name
 * @param {string|string[]}   [options.data.extensions]         => 可上传的扩展名。默认为空，表示可上传任意文件类型的文件；可以为字符串，多个扩展名用`,`隔开，如：'png,jpg,gif'；也可以为数组，如：['png', 'jpg', 'gif']。
 * @param {string|number}     [options.data.maxSize]            => 可上传的最大文件大小。默认为空，表示可上传任意大小的文件；如果为数字，则表示单位为字节；如果为字符串，可以添加以下单位：`kB`、`MB`、`GB`。
 * @param {boolean}           [options.data.disabled=false]     => 是否禁用
 * @param {boolean}           [options.data.visible=true]       => 是否显示
 * @param {string}            [options.data.class]              => 补充class
 */
var Uploader = Component.extend({
  name: 'uploader',
  template: template,
  /**
     * @protected
     */
  config: function config() {
    _.extend(this.data, {
      title: '',
      url: '',
      contentType: 'multipart/form-data',
      dataType: 'json',
      data: {},
      name: 'file',
      extensions: null,
      maxSize: '',
      _sending: false,
      _id: new Date().getTime()
    });
    this.supr();
  },

  /**
     * @method upload() 弹出文件对话框并且上传文件
     * @public
     * @return {void}
     */
  upload: function upload() {
    if (this.data.disabled || this.data._sending) return;

    this.$refs.file.click();
  },
  _checkExtensions: function _checkExtensions(file) {
    if (!this.data.extensions) return true;

    var fileName = file.name;
    var ext = fileName.substring(fileName.lastIndexOf('.') + 1, fileName.length).toLowerCase();

    var extensions = this.data.extensions;
    if (typeof extensions === 'string') extensions = extensions.split(',');

    if (extensions.indexOf(ext) >= 0) return true;

    /**
         * @event error 上传错误时触发
         * @property {object} sender 事件发送对象
         * @property {object} name ExtensionError
         * @property {object} message 错误信息
         * @property {object} extensions 可上传的扩展名
         */
    this.$emit('error', {
      sender: this,
      name: 'ExtensionError',
      message: '\u53EA\u80FD\u4E0A\u4F20' + extensions.join(', ') + '\u7C7B\u578B\u7684\u6587\u4EF6\uFF01',
      extensions: extensions
    });

    return false;
  },
  _checkSize: function _checkSize(file) {
    if (!this.data.maxSize && this.data.maxSize !== 0) return true;

    var maxSize = void 0;
    if (!isNaN(this.data.maxSize)) maxSize = +this.data.maxSize;else {
      var unit = this.data.maxSize.slice(-2);
      if (!SIZE_UNITS[unit]) throw new Error('Unknown unit!');

      maxSize = this.data.maxSize.slice(0, -2) * SIZE_UNITS[unit];
    }

    if (file.size <= maxSize) return true;

    /**
         * @event error 上传错误时触发
         * @property {object} sender 事件发送对象
         * @property {object} name SizeError
         * @property {object} message 错误信息
         * @property {object} maxSize 可上传的最大文件大小
         * @property {object} size 当前文件大小
         */
    this.$emit('error', {
      sender: this,
      name: 'SizeError',
      message: '文件大小超出限制！',
      maxSize: this.data.maxSize,
      size: file.size
    });

    return false;
  },

  /**
     * @method _submit() 提交表单
     * @private
     * @return {void}
     */
  _submit: function _submit() {
    var file = this.$refs.file.files ? this.$refs.file.files[0] : {
      name: this.$refs.file.value,
      size: 0
    };

    if (!file || !file.name || !this._checkExtensions(file) || !this._checkSize(file)) {
      return;
    }

    this.data._sending = true;
    /**
         * @event sending 发送前触发
         * @property {object} sender 事件发送对象
         * @property {object} data 待发送的数据
         */
    this.$emit('sending', {
      sender: this,
      data: this.data.data
    });

    this.$refs.form.submit();
  },
  _onLoad: function _onLoad() {
    var $iframe = this.$refs.iframe;
    var $file = this.$refs.file;

    if (!this.data._sending) return;
    this.data._sending = false;

    var xml = {};
    if ($iframe.contentWindow) {
      xml.responseText = $iframe.contentWindow.document.body ? $iframe.contentWindow.document.body.innerText : null;
      xml.responseXML = $iframe.contentWindow.document.XMLDocument ? $iframe.contentWindow.document.XMLDocument : $iframe.contentWindow.document;
    } else if ($iframe.contentDocument) {
      xml.responseText = $iframe.contentDocument.document.body ? $iframe.contentDocument.document.body.innerText : null;
      xml.responseXML = $iframe.contentDocument.document.XMLDocument ? $iframe.contentDocument.document.XMLDocument : $iframe.contentDocument.document;
    }

    if (!xml.responseText) {
      /**
             * @event error 上传错误时触发
             * @property {object} sender 事件发送对象
             * @property {object} name ResponseError
             * @property {object} message 错误信息
             */
      return this.$emit('error', {
        sender: this,
        name: 'ResponseError',
        message: 'No responseText!'
      });
    }

    /**
         * @event complete 上传完成时触发
         * @property {object} sender 事件发送对象
         * @property {object} xml 返回的xml
         */
    this.$emit('complete', {
      sender: this,
      xml: xml
    });

    /**
         * @event success 上传成功时触发
         * @property {object} sender 事件发送对象
         * @property {object} data 返回的数据
         */
    this.$emit('success', {
      sender: this,
      data: this._parseData(xml, this.data.dataType)
    });
  },

  /**
     * @method _parseData(xml, type) 解析接收的数据
     * @private
     * @param  {object} xml 接收的xml
     * @param  {object} type 数据类型
     * @return {object|string} 解析后的数据
     */
  _parseData: function _parseData(xml, type) {
    if (type === 'text') return xml.responseText;else if (type === 'xml') return xml.responseXML;else if (type === 'json') {
      var data = xml.responseText;
      try {
        data = JSON.parse(data);
      } catch (e) {}

      return data;
    } else if (type === 'script') return eval(xml.responseText);
    return xml.responseText;
  }
});

module.exports = Uploader;

/***/ }),
/* 360 */
/***/ (function(module, exports) {

module.exports = "<div class=\"kl-uploader {class}\" r-hide={!visible}>\n    <div on-click={this.upload()}>\n        {#if this.$body}\n            {#inc this.$body}\n        {#else}\n            <a class=\"u-btn\">{title || this.$trans('UPLOAD')}</a>\n        {/if}\n    </div>\n    <form method=\"POST\" action={url} target=\"iframe{_id}\" enctype={contentType} ref=\"form\">\n        {#if !_sending}\n        <!-- IE需要重置input[type=file] -->\n        <input type=\"file\" multiple=\"multiple\" name={name} ref=\"file\" on-change={this._submit()}>\n        {/if}\n        {#list Object.keys(data) as key}\n        <input type=\"hidden\" name={key} value={data[key]}>\n        {/list}\n    </form>\n    <iframe name=\"iframe{_id}\" on-load={this._onLoad()} ref=\"iframe\" />\n</div>\n"

/***/ }),
/* 361 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * ------------------------------------------------------------
 * Input   输入扩展
 * @author   sensen(rainforest92@126.com)
 * ------------------------------------------------------------
 */

var Component = __webpack_require__(1);

/**
 * @class UIGroup
 * @extend Component
 * @param {object}          [options.data]                    = 绑定属性
 * @param {string}          [options.data.class]              => 补充class
 */
var UIGroup = Component.extend({
  name: 'ui.group',
  template: '<span class="kl-old-group {class}">{#inc this.$body}</span>',
  /**
     * @protected
     */
  config: function config() {
    this.defaults({});

    this.supr();
  }
});

module.exports = UIGroup;

/***/ }),
/* 362 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * ------------------------------------------------------------
 * Collapse  折叠面板
 * @author   sensen(rainforest92@126.com)
 * ------------------------------------------------------------
 */

var Component = __webpack_require__(1);
var template = __webpack_require__(363);
var _ = __webpack_require__(2);

var Panel = __webpack_require__(67);

/**
 * @class Collapse
 * @extend Component
 * @param {object}            [options.data]                      = 绑定属性
 * @param {boolean}           [options.data.accordion=false]      => 是否每次只展开一个
 * @param {boolean}           [options.data.disabled=false]       => 是否禁用
 * @param {boolean}           [options.data.visible=true]         => 是否显示
 * @param {string}            [options.data.class]                => 补充class
 */
var Collapse = Component.extend({
  name: 'collapse',
  template: template,
  /**
     * @protected
     */
  config: function config() {
    _.extend(this.data, {
      panels: [],
      accordion: false
    });
    this.supr();
  }
});

module.exports = Collapse;

/***/ }),
/* 363 */
/***/ (function(module, exports) {

module.exports = "<div class=\"kl-collapse {class}\" is-dis={disabled} r-hide={!visible}>\n    {#inc this.$body}\n</div>\n"

/***/ }),
/* 364 */
/***/ (function(module, exports) {

module.exports = "<div class=\"kl-panel {class}\" r-hide={!visible} is-dis={disabled}>\n\n    <div class=\"kl-panel__hd f-cb\" on-click={this.toggle()}>\n\t    <span class=\"kl-panel__hd-tt\">\n\t\t\t<i class=\"kl-icon\" r-class=\"{{'kl-icon-chevron-circle-down':open, 'kl-icon-chevron-circle-up':!open}}\"></i>\n\t\t\t {title}\n\t\t</span>\n        {#if this.$tools}\n\t\t<div class=\"kl-panel__hd-tools\" on-click={this.stopPropagation($event)}>\n\t\t\t{#inc this.$tools.$body}\n\t\t</div>\n\t\t{/if}\n    </div>\n\n\t<div class=\"kl-panel__bd\" r-hide={!open} r-animation=\"on: enter; class: animated fadeIn; on: leave; class: animated fadeOut;\">\n\t\t{#inc this.$body}\n\t</div>\n\n\t{#if this.$foot}\n\t<div class=\"kl-panel__ft\">\n\t\t{#inc this.$foot.$body}\n\t</div>\n\t{/if}\n</div>\n"

/***/ }),
/* 365 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * ------------------------------------------------------------
 * Gotop  回到顶部
 * @author   sensen(rainforest92@126.com)
 * ------------------------------------------------------------
 */

var Component = __webpack_require__(1);
var template = __webpack_require__(366);
var _ = __webpack_require__(2);

/**
 * @class Gotop
 * @param {object}        [options.data]                          = 绑定属性
 * @param {string}        [options.data.position=bottomright]     => 组件的位置，可选参数：`topcenter`、`topleft`、`topright`、`bottomcenter`、`bottomleft`、`bottomright`、`static`
 * @param {boolean}       [options.data.disabled=false]           => 是否禁用
 * @param {boolean}       [options.data.visible=true]             => 是否显示
 * @param {string}        [options.data.class]                    => 补充class
 */
var Gotop = Component.extend({
  name: 'gotop',
  template: template,
  /**
     * @protected
     */
  config: function config() {
    _.extend(this.data, {
      position: 'bottomright'
    });
    this.supr();
  },

  /**
     * @method gotop() 回到顶部
     * @public
     * @return {void}
     */
  gotop: function gotop() {
    if (this.data.disabled) return;

    document.body.scrollTop = 0;
  }
});

module.exports = Gotop;

/***/ }),
/* 366 */
/***/ (function(module, exports) {

module.exports = "<a class=\"kl-gotop kl-gotop--{position} {class}\" r-hide={!visible} on-click={this.gotop()}>\n    {#if this.$body}\n        {#inc this.$body}\n    {#else}\n        <kl-icon type={arrow-up} />\n    {/if}\n</a>\n"

/***/ }),
/* 367 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/* eslint-disable */
/**
 * ----------------------------------------------------
 * PathTool    快捷键复制当前页面的 js 路径和 ftl 路径
 * ----------------------------------------------------
 */

'use stict';

var Clipboard = __webpack_require__(368);

/**
 * 获取 js 路径快捷键 ctrl + alt + shift + c
 * 获取 ftl 路径快捷键 ctrl + alt + shift + d
 */

var PathTool = function PathTool(Comp) {
  Comp.implement({
    events: {
      $init: function $init() {
        console.log('init');
        var jCopy = new Clipboard('#j-copy');
        var jsLink = location.href.replace(/([A-Z])/g, '.$1').toLowerCase();
        jsLink = jsLink.replace('/backend', '');
        jsLink = jsLink.substring(jsLink.indexOf('/')).replace('/', 'page/') + '/index';
        var ftlLink = jsLink.replace('page/', 'pages/');
        jsLink += '/entry';
        document.addEventListener('keydown', function (event) {
          if (event.ctrlKey && event.altKey && event.shiftKey && event.keyCode == 67) {
            var para = document.createElement('button');
            para.setAttribute('data-clipboard-text', jsLink);
            para.id = 'j-copy';
            document.body.appendChild(para);
            para.click();
          } else if (event.ctrlKey && event.altKey && event.shiftKey && event.keyCode == 68) {
            var para = document.createElement('button');
            para.setAttribute('data-clipboard-text', ftlLink);
            para.id = 'j-copy';
            document.body.appendChild(para);
            para.click();
          }
        });
        jCopy.on('success', function (e) {
          var copy = document.getElementById('j-copy');
          if (copy) {
            document.body.removeChild(copy);
          }
        });
      }
    }
  });
};

module.exports = PathTool;

/***/ }),
/* 368 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {
    if (true) {
        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [module, __webpack_require__(369), __webpack_require__(371), __webpack_require__(372)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
    } else if (typeof exports !== "undefined") {
        factory(module, require('./clipboard-action'), require('tiny-emitter'), require('good-listener'));
    } else {
        var mod = {
            exports: {}
        };
        factory(mod, global.clipboardAction, global.tinyEmitter, global.goodListener);
        global.clipboard = mod.exports;
    }
})(this, function (module, _clipboardAction, _tinyEmitter, _goodListener) {
    'use strict';

    var _clipboardAction2 = _interopRequireDefault(_clipboardAction);

    var _tinyEmitter2 = _interopRequireDefault(_tinyEmitter);

    var _goodListener2 = _interopRequireDefault(_goodListener);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        };
    }

    var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
        return typeof obj;
    } : function (obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _createClass = function () {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
            }
        }

        return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
        };
    }();

    function _possibleConstructorReturn(self, call) {
        if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }

    function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true
            }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }

    var Clipboard = function (_Emitter) {
        _inherits(Clipboard, _Emitter);

        /**
         * @param {String|HTMLElement|HTMLCollection|NodeList} trigger
         * @param {Object} options
         */
        function Clipboard(trigger, options) {
            _classCallCheck(this, Clipboard);

            var _this = _possibleConstructorReturn(this, (Clipboard.__proto__ || Object.getPrototypeOf(Clipboard)).call(this));

            _this.resolveOptions(options);
            _this.listenClick(trigger);
            return _this;
        }

        /**
         * Defines if attributes would be resolved using internal setter functions
         * or custom functions that were passed in the constructor.
         * @param {Object} options
         */


        _createClass(Clipboard, [{
            key: 'resolveOptions',
            value: function resolveOptions() {
                var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

                this.action = typeof options.action === 'function' ? options.action : this.defaultAction;
                this.target = typeof options.target === 'function' ? options.target : this.defaultTarget;
                this.text = typeof options.text === 'function' ? options.text : this.defaultText;
                this.container = _typeof(options.container) === 'object' ? options.container : document.body;
            }
        }, {
            key: 'listenClick',
            value: function listenClick(trigger) {
                var _this2 = this;

                this.listener = (0, _goodListener2.default)(trigger, 'click', function (e) {
                    return _this2.onClick(e);
                });
            }
        }, {
            key: 'onClick',
            value: function onClick(e) {
                var trigger = e.delegateTarget || e.currentTarget;

                if (this.clipboardAction) {
                    this.clipboardAction = null;
                }

                this.clipboardAction = new _clipboardAction2.default({
                    action: this.action(trigger),
                    target: this.target(trigger),
                    text: this.text(trigger),
                    container: this.container,
                    trigger: trigger,
                    emitter: this
                });
            }
        }, {
            key: 'defaultAction',
            value: function defaultAction(trigger) {
                return getAttributeValue('action', trigger);
            }
        }, {
            key: 'defaultTarget',
            value: function defaultTarget(trigger) {
                var selector = getAttributeValue('target', trigger);

                if (selector) {
                    return document.querySelector(selector);
                }
            }
        }, {
            key: 'defaultText',
            value: function defaultText(trigger) {
                return getAttributeValue('text', trigger);
            }
        }, {
            key: 'destroy',
            value: function destroy() {
                this.listener.destroy();

                if (this.clipboardAction) {
                    this.clipboardAction.destroy();
                    this.clipboardAction = null;
                }
            }
        }], [{
            key: 'isSupported',
            value: function isSupported() {
                var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['copy', 'cut'];

                var actions = typeof action === 'string' ? [action] : action;
                var support = !!document.queryCommandSupported;

                actions.forEach(function (action) {
                    support = support && !!document.queryCommandSupported(action);
                });

                return support;
            }
        }]);

        return Clipboard;
    }(_tinyEmitter2.default);

    /**
     * Helper function to retrieve attribute value.
     * @param {String} suffix
     * @param {Element} element
     */
    function getAttributeValue(suffix, element) {
        var attribute = 'data-clipboard-' + suffix;

        if (!element.hasAttribute(attribute)) {
            return;
        }

        return element.getAttribute(attribute);
    }

    module.exports = Clipboard;
});

/***/ }),
/* 369 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {
    if (true) {
        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [module, __webpack_require__(370)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
    } else if (typeof exports !== "undefined") {
        factory(module, require('select'));
    } else {
        var mod = {
            exports: {}
        };
        factory(mod, global.select);
        global.clipboardAction = mod.exports;
    }
})(this, function (module, _select) {
    'use strict';

    var _select2 = _interopRequireDefault(_select);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        };
    }

    var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
        return typeof obj;
    } : function (obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _createClass = function () {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
            }
        }

        return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
        };
    }();

    var ClipboardAction = function () {
        /**
         * @param {Object} options
         */
        function ClipboardAction(options) {
            _classCallCheck(this, ClipboardAction);

            this.resolveOptions(options);
            this.initSelection();
        }

        /**
         * Defines base properties passed from constructor.
         * @param {Object} options
         */


        _createClass(ClipboardAction, [{
            key: 'resolveOptions',
            value: function resolveOptions() {
                var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

                this.action = options.action;
                this.container = options.container;
                this.emitter = options.emitter;
                this.target = options.target;
                this.text = options.text;
                this.trigger = options.trigger;

                this.selectedText = '';
            }
        }, {
            key: 'initSelection',
            value: function initSelection() {
                if (this.text) {
                    this.selectFake();
                } else if (this.target) {
                    this.selectTarget();
                }
            }
        }, {
            key: 'selectFake',
            value: function selectFake() {
                var _this = this;

                var isRTL = document.documentElement.getAttribute('dir') == 'rtl';

                this.removeFake();

                this.fakeHandlerCallback = function () {
                    return _this.removeFake();
                };
                this.fakeHandler = this.container.addEventListener('click', this.fakeHandlerCallback) || true;

                this.fakeElem = document.createElement('textarea');
                // Prevent zooming on iOS
                this.fakeElem.style.fontSize = '12pt';
                // Reset box model
                this.fakeElem.style.border = '0';
                this.fakeElem.style.padding = '0';
                this.fakeElem.style.margin = '0';
                // Move element out of screen horizontally
                this.fakeElem.style.position = 'absolute';
                this.fakeElem.style[isRTL ? 'right' : 'left'] = '-9999px';
                // Move element to the same position vertically
                var yPosition = window.pageYOffset || document.documentElement.scrollTop;
                this.fakeElem.style.top = yPosition + 'px';

                this.fakeElem.setAttribute('readonly', '');
                this.fakeElem.value = this.text;

                this.container.appendChild(this.fakeElem);

                this.selectedText = (0, _select2.default)(this.fakeElem);
                this.copyText();
            }
        }, {
            key: 'removeFake',
            value: function removeFake() {
                if (this.fakeHandler) {
                    this.container.removeEventListener('click', this.fakeHandlerCallback);
                    this.fakeHandler = null;
                    this.fakeHandlerCallback = null;
                }

                if (this.fakeElem) {
                    this.container.removeChild(this.fakeElem);
                    this.fakeElem = null;
                }
            }
        }, {
            key: 'selectTarget',
            value: function selectTarget() {
                this.selectedText = (0, _select2.default)(this.target);
                this.copyText();
            }
        }, {
            key: 'copyText',
            value: function copyText() {
                var succeeded = void 0;

                try {
                    succeeded = document.execCommand(this.action);
                } catch (err) {
                    succeeded = false;
                }

                this.handleResult(succeeded);
            }
        }, {
            key: 'handleResult',
            value: function handleResult(succeeded) {
                this.emitter.emit(succeeded ? 'success' : 'error', {
                    action: this.action,
                    text: this.selectedText,
                    trigger: this.trigger,
                    clearSelection: this.clearSelection.bind(this)
                });
            }
        }, {
            key: 'clearSelection',
            value: function clearSelection() {
                if (this.trigger) {
                    this.trigger.focus();
                }

                window.getSelection().removeAllRanges();
            }
        }, {
            key: 'destroy',
            value: function destroy() {
                this.removeFake();
            }
        }, {
            key: 'action',
            set: function set() {
                var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'copy';

                this._action = action;

                if (this._action !== 'copy' && this._action !== 'cut') {
                    throw new Error('Invalid "action" value, use either "copy" or "cut"');
                }
            },
            get: function get() {
                return this._action;
            }
        }, {
            key: 'target',
            set: function set(target) {
                if (target !== undefined) {
                    if (target && (typeof target === 'undefined' ? 'undefined' : _typeof(target)) === 'object' && target.nodeType === 1) {
                        if (this.action === 'copy' && target.hasAttribute('disabled')) {
                            throw new Error('Invalid "target" attribute. Please use "readonly" instead of "disabled" attribute');
                        }

                        if (this.action === 'cut' && (target.hasAttribute('readonly') || target.hasAttribute('disabled'))) {
                            throw new Error('Invalid "target" attribute. You can\'t cut text from elements with "readonly" or "disabled" attributes');
                        }

                        this._target = target;
                    } else {
                        throw new Error('Invalid "target" value, use a valid Element');
                    }
                }
            },
            get: function get() {
                return this._target;
            }
        }]);

        return ClipboardAction;
    }();

    module.exports = ClipboardAction;
});

/***/ }),
/* 370 */
/***/ (function(module, exports) {

function select(element) {
    var selectedText;

    if (element.nodeName === 'SELECT') {
        element.focus();

        selectedText = element.value;
    }
    else if (element.nodeName === 'INPUT' || element.nodeName === 'TEXTAREA') {
        var isReadOnly = element.hasAttribute('readonly');

        if (!isReadOnly) {
            element.setAttribute('readonly', '');
        }

        element.select();
        element.setSelectionRange(0, element.value.length);

        if (!isReadOnly) {
            element.removeAttribute('readonly');
        }

        selectedText = element.value;
    }
    else {
        if (element.hasAttribute('contenteditable')) {
            element.focus();
        }

        var selection = window.getSelection();
        var range = document.createRange();

        range.selectNodeContents(element);
        selection.removeAllRanges();
        selection.addRange(range);

        selectedText = selection.toString();
    }

    return selectedText;
}

module.exports = select;


/***/ }),
/* 371 */
/***/ (function(module, exports) {

function E () {
  // Keep this empty so it's easier to inherit from
  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)
}

E.prototype = {
  on: function (name, callback, ctx) {
    var e = this.e || (this.e = {});

    (e[name] || (e[name] = [])).push({
      fn: callback,
      ctx: ctx
    });

    return this;
  },

  once: function (name, callback, ctx) {
    var self = this;
    function listener () {
      self.off(name, listener);
      callback.apply(ctx, arguments);
    };

    listener._ = callback
    return this.on(name, listener, ctx);
  },

  emit: function (name) {
    var data = [].slice.call(arguments, 1);
    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();
    var i = 0;
    var len = evtArr.length;

    for (i; i < len; i++) {
      evtArr[i].fn.apply(evtArr[i].ctx, data);
    }

    return this;
  },

  off: function (name, callback) {
    var e = this.e || (this.e = {});
    var evts = e[name];
    var liveEvents = [];

    if (evts && callback) {
      for (var i = 0, len = evts.length; i < len; i++) {
        if (evts[i].fn !== callback && evts[i].fn._ !== callback)
          liveEvents.push(evts[i]);
      }
    }

    // Remove event from queue to prevent memory leak
    // Suggested by https://github.com/lazd
    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910

    (liveEvents.length)
      ? e[name] = liveEvents
      : delete e[name];

    return this;
  }
};

module.exports = E;


/***/ }),
/* 372 */
/***/ (function(module, exports, __webpack_require__) {

var is = __webpack_require__(373);
var delegate = __webpack_require__(374);

/**
 * Validates all params and calls the right
 * listener function based on its target type.
 *
 * @param {String|HTMLElement|HTMLCollection|NodeList} target
 * @param {String} type
 * @param {Function} callback
 * @return {Object}
 */
function listen(target, type, callback) {
    if (!target && !type && !callback) {
        throw new Error('Missing required arguments');
    }

    if (!is.string(type)) {
        throw new TypeError('Second argument must be a String');
    }

    if (!is.fn(callback)) {
        throw new TypeError('Third argument must be a Function');
    }

    if (is.node(target)) {
        return listenNode(target, type, callback);
    }
    else if (is.nodeList(target)) {
        return listenNodeList(target, type, callback);
    }
    else if (is.string(target)) {
        return listenSelector(target, type, callback);
    }
    else {
        throw new TypeError('First argument must be a String, HTMLElement, HTMLCollection, or NodeList');
    }
}

/**
 * Adds an event listener to a HTML element
 * and returns a remove listener function.
 *
 * @param {HTMLElement} node
 * @param {String} type
 * @param {Function} callback
 * @return {Object}
 */
function listenNode(node, type, callback) {
    node.addEventListener(type, callback);

    return {
        destroy: function() {
            node.removeEventListener(type, callback);
        }
    }
}

/**
 * Add an event listener to a list of HTML elements
 * and returns a remove listener function.
 *
 * @param {NodeList|HTMLCollection} nodeList
 * @param {String} type
 * @param {Function} callback
 * @return {Object}
 */
function listenNodeList(nodeList, type, callback) {
    Array.prototype.forEach.call(nodeList, function(node) {
        node.addEventListener(type, callback);
    });

    return {
        destroy: function() {
            Array.prototype.forEach.call(nodeList, function(node) {
                node.removeEventListener(type, callback);
            });
        }
    }
}

/**
 * Add an event listener to a selector
 * and returns a remove listener function.
 *
 * @param {String} selector
 * @param {String} type
 * @param {Function} callback
 * @return {Object}
 */
function listenSelector(selector, type, callback) {
    return delegate(document.body, selector, type, callback);
}

module.exports = listen;


/***/ }),
/* 373 */
/***/ (function(module, exports) {

/**
 * Check if argument is a HTML element.
 *
 * @param {Object} value
 * @return {Boolean}
 */
exports.node = function(value) {
    return value !== undefined
        && value instanceof HTMLElement
        && value.nodeType === 1;
};

/**
 * Check if argument is a list of HTML elements.
 *
 * @param {Object} value
 * @return {Boolean}
 */
exports.nodeList = function(value) {
    var type = Object.prototype.toString.call(value);

    return value !== undefined
        && (type === '[object NodeList]' || type === '[object HTMLCollection]')
        && ('length' in value)
        && (value.length === 0 || exports.node(value[0]));
};

/**
 * Check if argument is a string.
 *
 * @param {Object} value
 * @return {Boolean}
 */
exports.string = function(value) {
    return typeof value === 'string'
        || value instanceof String;
};

/**
 * Check if argument is a function.
 *
 * @param {Object} value
 * @return {Boolean}
 */
exports.fn = function(value) {
    var type = Object.prototype.toString.call(value);

    return type === '[object Function]';
};


/***/ }),
/* 374 */
/***/ (function(module, exports, __webpack_require__) {

var closest = __webpack_require__(375);

/**
 * Delegates event to a selector.
 *
 * @param {Element} element
 * @param {String} selector
 * @param {String} type
 * @param {Function} callback
 * @param {Boolean} useCapture
 * @return {Object}
 */
function delegate(element, selector, type, callback, useCapture) {
    var listenerFn = listener.apply(this, arguments);

    element.addEventListener(type, listenerFn, useCapture);

    return {
        destroy: function() {
            element.removeEventListener(type, listenerFn, useCapture);
        }
    }
}

/**
 * Finds closest match and invokes callback.
 *
 * @param {Element} element
 * @param {String} selector
 * @param {String} type
 * @param {Function} callback
 * @return {Function}
 */
function listener(element, selector, type, callback) {
    return function(e) {
        e.delegateTarget = closest(e.target, selector);

        if (e.delegateTarget) {
            callback.call(element, e);
        }
    }
}

module.exports = delegate;


/***/ }),
/* 375 */
/***/ (function(module, exports) {

var DOCUMENT_NODE_TYPE = 9;

/**
 * A polyfill for Element.matches()
 */
if (typeof Element !== 'undefined' && !Element.prototype.matches) {
    var proto = Element.prototype;

    proto.matches = proto.matchesSelector ||
                    proto.mozMatchesSelector ||
                    proto.msMatchesSelector ||
                    proto.oMatchesSelector ||
                    proto.webkitMatchesSelector;
}

/**
 * Finds the closest parent that matches a selector.
 *
 * @param {Element} element
 * @param {String} selector
 * @return {Function}
 */
function closest (element, selector) {
    while (element && element.nodeType !== DOCUMENT_NODE_TYPE) {
        if (typeof element.matches === 'function' &&
            element.matches(selector)) {
          return element;
        }
        element = element.parentNode;
    }
}

module.exports = closest;


/***/ }),
/* 376 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * ------------------------------------------------------------
 * PanelTool 面板操作
 * @author   sensen(rainforest92@126.com)
 * ------------------------------------------------------------
 */

var Component = __webpack_require__(1);
var Panel = __webpack_require__(67);
var _ = __webpack_require__(2);

/**
 * @class Panel
 * @extend Component
 * @param {object}            [options.data]                = 绑定属性
 * @param {boolean}           [options.data.foot=false]     => true: 放在panel_ft的位置; false: 放在头部位置;
 */
var PanelTool = Component.extend({
  name: 'panel.tool',
  /**
   * @protected
   */
  config: function config() {
    _.extend(this.data, {
      foot: false
    });
    this.supr();

    if (this.$outer && this.$outer instanceof Panel) {
      if (this.data.foot) {
        this.$outer.$foot = this;
      } else {
        this.$outer.$tools = this;
      }
    }
  }
});

module.exports = PanelTool;

/***/ }),
/* 377 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Component = __webpack_require__(1);
var template = __webpack_require__(378);
var _ = __webpack_require__(2);

/**
 * @class KLMask 已经与KLLoading合并, 请勿使用
 * @extend Component
 * @param {object}            [options.data]                      = 绑定数据
 * @param {string}            [options.data.content]              => 内容模板,纯文本或者html代码片段
 * @param {boolean}           [options.data.closable=true]       => 点击空白区域是否可关闭遮罩框，`true`是，`false`否
 * @param {string}            [options.data.class]                => 补充`class`
 */
var KLMask = Component.extend({
  name: 'kl-mask',
  template: template,
  config: function config() {
    _.extend(this.data, {
      closable: true
    });
    this.supr();
  },
  init: function init() {
    this.supr();

    // 如果不是内嵌组件，则嵌入到document.body中
    if (this.$root === this) this.$inject(document.body);
  },
  _handleClick: function _handleClick(e) {
    if (/m-mask/.test(e.target.className)) {
      if (this.data.closable) this.close();
    }
  },

  /**
     * @method close(data) 关闭遮罩
     * @public
     * @param  {object} data 额外数据
     * @return {void}
     */
  close: function close(data) {
    /**
         * @event close 关闭遮罩时触发
         * @property {object} data  {sender, data} 事件对象，包括额外数据和事件本身
         */
    this.$emit('close', {
      sender: this,
      data: data
    });
    this.destroy();
  }
});

module.exports = KLMask;

/***/ }),
/* 378 */
/***/ (function(module, exports) {

module.exports = "<div class=\"kl-mask {class}\" on-click={this._handleClick($event)}>\n  {#if content}{#inc @(content)}{/if}\n</div>\n"

/***/ }),
/* 379 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _ = __webpack_require__(2);
var ajax = __webpack_require__(46);
var Validation = __webpack_require__(9);
var ValidationMixin = __webpack_require__(6);

var template = __webpack_require__(380);

/**
 * @class KLForm
 * @extend Validation
 * @param {object}      [options.data]                    = 绑定属性
 * @param {string}      [options.data.service]            => 全站异步获取source的接口地址
 * @param {string}      [options.data.class]              => 扩展样式
 * @param {boolean}     [options.data.inline]          => 如果true,kl-form-item按照inline-block排列
 * @param {string}      [options.data.sourcePath=data]    => 获取到select数据后,读取json数据的路径
 * @param {string/number} [options.data.labelSize]     => 批量设置kl-form-item的labelSize,取值与kl-form-item的labelSize相同
 * @param {string/number} [options.data.labelLineHeight]  => 批量设置kl-form-item的labelLineHeight,取值与kl-form-item的labelLineHeight相同
 * @param {string/number} [options.data.layout]  => 排列方式: 默认(横着排)/vertical/inline;
 */

/**
 * @class KLFormItem
 * @extend Validation
 * @param {object}        [options.data]                    = 绑定属性
 * @param {string}        [options.data.title]              => label显示的文字
 * @param {string}        [options.data.titleTemplate]      => title 模板
 * @param {string}        [options.data.descTemplate]       => 说明区块模板
 * @param {number}        [options.data.cols]               => [deprecated]布局列数, 请使用布局组件代替直接设置cols属性
 * @param {number}        [options.data.labelCols]          => [deprecated]如果有title, label占的列数, 建议使用labelSize
 * @param {string/number} [options.data.labelSize=200]      => 如果有title, label占的宽度,可以是px单位的数字,也可以是sm, md, lg, xlg
 * @param {string}        [options.data.labelLineHeight='2.5'] => label line-height 属性: 可以是数字值,也可以是sm(值:1), md(值:1.6), lg(值:2.5)
 * @param {string}        [options.data.textAlign=none]     => label text-align 属性：none/left/right
 * @param {boolean}       [options.data.required=false]     => 是否必选项
 * @param {string}        [options.data.tip]                => 字段说明
 * @param {string}        [options.data.class]              => 样式扩展
 * @param {string}        [options.data.layout]          => 排列方式: 默认(横着排)/vertical/inline;
 * @param {string}        [options.data.sourceKey]          => 异步获取下拉列表接口的索引值
 */

var KLForm = Validation.extend({
  name: 'kl-form',
  template: template,
  selectors: [],
  config: function config(data) {
    _.extend(data, {
      service: null,
      sourcePath: 'data',
      class: ''
    });

    this.supr(data);
    this.__reqSourceOnce = _.debounce(this.__reqSource.bind(this), 200, false);
  },
  init: function init() {
    this.supr();

    this.initValidation();

    this.$watch('this.controls.length', function () {
      this.initSelectorSource();
      this.initFormItem();
    });
  },
  initFormItem: function initFormItem() {
    var controls = this.controls;
    var _data = this.data,
        labelSize = _data.labelSize,
        labelLineHeight = _data.labelLineHeight,
        layout = _data.layout;

    labelSize && controls.forEach(function ($component) {
      if (!$component.data.labelSize) {
        $component.$update('labelSize', labelSize);
      }
    });
    labelLineHeight && controls.forEach(function ($component) {
      if (!$component.data.labelLineHeight) {
        $component.$update('labelLineHeight', labelLineHeight);
      }
    });
    layout && controls.forEach(function ($component) {
      if (!$component.data.layout) {
        $component.$update('layout', layout);
      }
    });
  },
  initSelectorSource: function initSelectorSource() {
    var controls = this.controls;
    this.selectors = controls.filter(function ($formitem) {
      return !!$formitem.data.sourceKey;
    });

    if (!this.data.service || !this.selectors.length) {
      return;
    }
    this.__reqSourceOnce();
  },
  __getSourceKeys: function __getSourceKeys() {
    return this.selectors.map(function ($formitem) {
      return $formitem.data.sourceKey;
    });
  },
  __reqSource: function __reqSource() {
    var self = this;
    var keys = this.__getSourceKeys();

    window.NEKSelects = window.NEKSelects || {};
    keys = keys.filter(function (key) {
      return !window.NEKSelects[key];
    });

    this.selectors.forEach(function ($formitem) {
      var key = $formitem.data.sourceKey;
      var source = window.NEKSelects[key] || [];
      self.__updateSource($formitem, key, source);
    });

    if (!keys.length) {
      return;
    }
    this.keys = keys;
    ajax.request({
      url: this.data.service,
      method: 'get',
      type: 'json',
      data: {
        keys: keys.join(',')
      },
      success: this.__cbReqSource.bind(this)
    });
  },
  __cbReqSource: function __cbReqSource(json) {
    var self = this;
    var path = this.data.sourcePath;
    var result = (path === '' ? json : json[path]) || {};

    this.selectors.forEach(function ($formitem) {
      var key = $formitem.data.sourceKey;
      var source = result[key] || [];
      self.__updateSource($formitem, key, source);
    });
    /**
       * @event KLForm#sourceCompleted kl-form自动获取sourceKey异步数据后触发
       * @property {object} sender 事件发送对象
       * @property {object} result 所有异步数据
       */
    this.$emit('sourceCompleted', {
      sender: this,
      result: window.NEKSelects
    });
  },
  __updateSource: function __updateSource($formitem, key, source) {
    var $selectItem = $formitem.controls[0];

    /* 三种情况不给组件赋值:1. kl-form-item下面没有选项组件; 2. source为空 3. 选项组件的source属性已经有值 */
    if (!$selectItem || !source.length || $selectItem.data.source.length) {
      return;
    }
    $selectItem.data.source = _.clone(source);
    window.NEKSelects[key] = _.clone(source);
    $selectItem.$update();
  }
});

/**
 * @method KLForm#validate() 验证所有表单组件
 * @return {object} conclusion 结果说明
 */
KLForm.use(ValidationMixin);

module.exports = KLForm;

/***/ }),
/* 380 */
/***/ (function(module, exports) {

module.exports = "<form class=\"kl-form f-row f-cb {class}\" r-class=\"{{'kl-form--inline':!!inline}}\">\n    {#if this.controls && this.controls.length === 1}\n    <input style=\"display: none;\" />\n    {/if}\n\t{#inc this.$body}\n</form>\n"

/***/ }),
/* 381 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _ = __webpack_require__(2);
var Validation = __webpack_require__(9);
var validationMixin = __webpack_require__(6);

var template = __webpack_require__(382);

/**
 * @class KLFormItem
 * @extend Validation
   * @param {object}        [options.data]                    = 绑定属性
   * @param {string}        [options.data.title]              => label显示的文字
   * @param {string}        [options.data.titleTemplate]      => title 模板
   * @param {string}        [options.data.descTemplate]       => 说明区块模板
   * @param {number}        [options.data.cols]               => [deprecated]布局列数, 请使用布局组件代替直接设置cols属性
   * @param {number}        [options.data.labelCols]          => [deprecated]如果有title, label占的列数, 建议使用labelSize
   * @param {string|number} [options.data.labelSize=200]      => 如果有title, label占的宽度,可以是px单位的数字,也可以是sm, md, lg, xlg
   * @param {string}        [options.data.labelLineHeight="2.5"] => label line-height 属性: 可以是数字值,也可以是sm(值:1), md(值:1.6), lg(值:2.5)
   * @param {string}        [options.data.textAlign=none]     => label text-align 属性：none/left/right
   * @param {boolean}       [options.data.required=false]     => 是否必选项
   * @param {string}        [options.data.tip]                => 字段说明
   * @param {string}        [options.data.class]              => 样式扩展
   * @param {string}        [options.data.layout='']          => 排列方式: 默认(横着排)/vertical/inline;
   * @param {string}        [options.data.sourceKey]          => 异步获取下拉列表接口的索引值
 */
var KLFormItem = Validation.extend({
  name: 'kl-form-item',
  template: template,
  config: function config(data) {
    _.extend(data, {
      textAlign: 'right',
      labelCols: ''
    });
    this.supr(data);

    this.initValidation();
  },
  init: function init() {
    var parentValidator = this._parentValidator;
    this.$watch('this.controls.length', function () {
      if (parentValidator && parentValidator.initSelectorSource) {
        parentValidator.initSelectorSource();
      }
      if (parentValidator && parentValidator.initFormItem) {
        parentValidator.initFormItem();
      }
    });

    this.$watch('required', function () {
      this.initValidateRule();
    });
  },
  initValidateRule: function initValidateRule() {
    if (!this.controls.length) {
      return;
    }

    var self = this;
    var controls = this.controls || [];
    var message = this.data.message;
    controls.forEach(function ($component) {
      if (self.data.required) {
        $component.data.required = true;
        $component.data.message = $component.data.message || message;
        $component.$update();
      } else {
        $component.$update('required', false);
      }
    });
  }
});

KLFormItem.directive('cols', function (ele, cols) {
  this.$watch(cols, function (ncols) {
    ele.className = ele.className.replace(/(\s)?kl-col(-\d*)?/gim, '');
    if (ncols) {
      ele.classList.add('kl-col', 'kl-col-' + ncols);
    }
  });
});

KLFormItem.directive('size', function (ele, size) {
  this.$watch(size, function (newValue, oldValue) {
    if (!newValue) {
      return;
    }

    if (parseInt(newValue)) {
      ele.style.width = parseInt(newValue) + 'px';
    } else {
      ele.style.width = '';
      ele.classList.remove(oldValue);
      ele.classList.add('kl-form-item__tt--' + newValue);
    }
  });
});

KLFormItem.directive('lineHeight', function (ele, lineHeight) {
  this.$watch(lineHeight, function (newValue, oldValue) {
    if (!newValue) {
      return;
    }

    if (parseFloat(newValue)) {
      ele.style.lineHeight = newValue;
    } else {
      ele.style.lineHeight = '';
      ele.classList.remove(oldValue);
      ele.classList.add('kl-form-item__tt--lh-' + newValue);
    }
  });
});

KLFormItem.use(validationMixin);

module.exports = KLFormItem;

/***/ }),
/* 382 */
/***/ (function(module, exports) {

module.exports = "<div class=\"kl-form-item kl-form-item--{layout} {class}\" cols=\"{cols}\">\n  <!--title区块-->\n  {#if title || titleTemplate}\n  <label class=\"kl-form-item__tt\" cols=\"{labelCols}\" size=\"{labelSize}\" lineHeight=\"{labelLineHeight}\" style=\"text-align:{textAlign}\">\n      <span class=\"kl-form-item__rqr\" r-hide=\"{!required}\">&#42;</span>\n      {#if title}\n        {title}\n      {#else}\n        {#inc titleTemplate}\n      {/if}\n      {#if tip}<kl-tooltip tip=\"{tip}\"><kl-icon type=\"warning\" class=\"kl-form-item__info\" /></kl-tooltip>{/if}\n  </label>\n  {/if}\n  <!--内容区块-->\n  <span class=\"kl-form-item__ct\">\n    {#inc this.$body}\n\n    <!--说明区块-->\n    {#if descTemplate}\n      <div lineHeight=\"{labelLineHeight}\" class=\"kl-form-item__desc\">\n        {#inc descTemplate}\n      </div>\n    {/if}\n  </span>\n</div>\n"

/***/ }),
/* 383 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * @file KLTag 标签
 * @author nupthale<nupthale@163.com>
 */

var Component = __webpack_require__(1);
var template = __webpack_require__(384);

/**
 * @class KLTag
 * @extend Component
 * @param {object}      [options.data]                = 绑定属性
 * @param {string}      [options.data.class]          => 补充class
 * @param {string}      [options.data.type=default]   => 样式, default/primary/warning
 * @param {boolean}      [options.data.closable=false]   => 标签是否可以移除
 */
var KLTag = Component.extend({
  name: 'kl-tag',
  template: template,
  config: function config() {
    this.defaults({
      class: '',
      type: 'default',
      closable: false
    });
    this.supr();
  },
  close: function close(e) {
    /**
     * @event KLTag#close 关闭标签事件
     * @property {object} sender tag的this引用
     * @property {object} e event对象
     */
    this.$emit('close', {
      sender: this,
      e: e
    });
  }
});

module.exports = KLTag;

/***/ }),
/* 384 */
/***/ (function(module, exports) {

module.exports = "<span class=\"kl-tag kl-tag--{type}\">\n  {#inc this.$body}\n  {#if closable}\n    <kl-icon class=\"kl-tag__close\" type=\"cross\" on-click={this.close($event)} />\n  {/if}\n</span>"

/***/ }),
/* 385 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * @file KLCheck 多选按钮
 * @author sensen <rainforest92@126.com>
 */

var Component = __webpack_require__(1);
var template = __webpack_require__(386);
var _ = __webpack_require__(2);

/**
 * @class KLCheck
 * @extend Component
 * @param {object}      options.data                    = 绑定属性
 * @param {string}      [options.data.name]             => 多选按钮的文字
 * @param {boolean}     [options.data.checked=false]    <=> 多选按钮的选择状态。`false`表示未选，`true`表示已选，`null`表示半选。
 * @param {boolean}     [options.data.block=false]      => 是否以block方式显示
 * @param {boolean}     [options.data.readonly=false]   => 是否只读
 * @param {boolean}     [options.data.disabled=false]   => 是否禁用
 * @param {boolean}     [options.data.visible=true]     => 是否显示
 * @param {string}      [options.data.class]            => 补充class
 * @param {string}      [options.data.contentTemplate]  => 内容模板，用于支持复杂内容的自定义。
 */
var KLCheck = Component.extend({
  name: 'kl-check',
  template: template,
  config: function config() {
    _.extend(this.data, {
      name: '',
      checked: false,
      block: false
    });
    this.supr();

    this.$watch('checked', function (newValue, oldValue) {
      if (oldValue === undefined) return;

      /**
         * @event KLCheck#change 选中状态改变时触发
         * @property {object} sender 事件发送对象
         * @property {object} date 改变后的选中状态
         */
      this.$emit('change', {
        sender: this,
        checked: newValue
      });
    });
  },
  check: function check(_checked, e) {
    if (this.data.readonly || this.data.disabled) return;

    var checked = _checked;

    if (checked === undefined) checked = !this.data.checked;
    this.data.checked = checked;

    /**
       * @event KLCheck#check 改变选中状态时触发
       * @property {object} sender 事件发送对象
       * @property {boolean} checked 选中状态
       */
    this.$emit('check', {
      sender: this,
      checked: checked,
      e: e
    });
    return false;
  }
});

module.exports = KLCheck;

/***/ }),
/* 386 */
/***/ (function(module, exports) {

module.exports = "<label class=\"kl-check {class}\" is-chk={checked} is-dis={disabled}\n       r-class={ {'is-part': checked === null, 'kl-check--block': block} } r-hide={!visible} title={name} on-click={this.check(undefined, $event)}>\n    <div class=\"kl-check__box\"><kl-icon type=\"tick\" /></div>{#if this.$body}{#inc this.$body}{#else}{name}{/if}\n</label>\n"

/***/ }),
/* 387 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * @file KLCheckGroup 输入扩展
 * @author   sensen <rainforest92@126.com>
 */

var SourceComponent = __webpack_require__(16);
var template = __webpack_require__(388);
var validationMixin = __webpack_require__(6);

/**
 * @class KLCheckGroup
 * @extend SourceComponent
 * @param {object}    [options.data]                    = 绑定属性
 * @param {object[]}  [options.data.source=[]]          <=> 数据源
 * @param {string}    [options.data.value]           <=> 选择的值,separator间隔的id值
 * @param {string}    [options.data.source[].name=[]]   => 每项的内容
 * @param {string}    [options.data.key=id]             => 数据项的键
 * @param {string}    [options.data.separator=,]      => value的分割符号
 * @param {string}    [options.data.nameKey=name]       => 数据项的name键
 * @param {number}    [options.data.min]                => 最少选几项
 * @param {number}    [options.data.max]                => 最多选几项
 * @param {boolean}   [options.data.required]           => 是否必选
 * @param {string}    [options.data.message]            => 校验错误提示信息
 * @param {boolean}   [options.data.hideTip=false]      => 是否显示校验错误信息
 * @param {boolean}   [options.data.block=false]        => 多行显示
 * @param {boolean}   [options.data.readonly=false]     => 是否只读
 * @param {boolean}   [options.data.disabled=false]     => 是否禁用
 * @param {boolean}   [options.data.visible=true]       => 是否显示
 * @param {string}    [options.data.class]              => 补充class
 * @param {object}    [options.service]                 @=> 数据服务
 * @param {string}    [options.data.source.contentTemplate]  => 内容模板，用于支持复杂内容的自定义。
 */
var KLCheckGroup = SourceComponent.extend({
  name: 'kl-check-group',
  template: template,
  config: function config() {
    this.defaults({
      // @inherited source: [],
      block: false,
      hideTip: false,
      source: [],
      min: 0,
      max: 1000,
      nameKey: 'name',
      key: 'id',
      value: '',
      separator: ','
    });
    this.supr();

    this.initValidation();
  },
  init: function init() {
    this.$watch('source', function (source) {
      if (!source || !(source instanceof Array)) {
        return console.error('source of check.group is not an array');
      }

      var _data = this.data,
          key = _data.key,
          separator = _data.separator,
          _data$value = _data.value,
          value = _data$value === undefined ? '' : _data$value;

      var values = value.split(separator);

      source.forEach(function (item) {
        if (values.indexOf('' + item[key]) !== -1) {
          item.checked = true;
        }
      });
    });
    this.$watch('value', function (newValue) {
      var source = this.data.source;
      if (newValue === undefined || newValue === null) return;

      if (source) {
        var _data2 = this.data,
            key = _data2.key,
            separator = _data2.separator;

        var value = newValue || '';
        var values = value.split(separator);
        source.forEach(function (item) {
          if (values.indexOf('' + item[key]) !== -1) {
            item.checked = true;
          } else {
            item.checked = false;
          }
        });
      }
    });
  },
  validate: function validate() {
    var data = this.data;
    // 如果是readonly或者disabled状态, 无需验证
    if (data.readonly || data.disabled) {
      return {
        success: true
      };
    }

    var source = this.data.source;
    var result = { success: true, message: '' };
    var required = this.data.required;
    var min = this.data.min ? this.data.min : required / 1;
    var max = this.data.max;
    var checked = source.filter(function (item) {
      return !!item.checked;
    });
    var len = checked.length;

    if (len < min || len > max) {
      result.success = false;
      result.message = this.data.message || '\u8BF7\u9009\u62E9(' + min + ',' + max + ']\u4E2A\u9009\u9879';
      this.data.state = 'error';
    } else {
      result.success = true;
      result.message = '';
      this.data.state = '';
    }
    this.data.tip = result.message;
    /**
    * @event KLCheckGroup#validate 验证组件时触发
    * @property {object} sender 事件发送对象
    * @property {object} result 验证结果
    */
    this.$emit('validate', {
      sender: this,
      result: result
    });

    return result;
  },

  /**
     * @method _onCheck() 点击check时,改变对应的value值
     * @private
     */
  _onCheck: function _onCheck(item) {
    item.checked = !item.checked;

    var _data3 = this.data,
        key = _data3.key,
        separator = _data3.separator,
        source = _data3.source;

    var checkedList = source.filter(function (_item) {
      return _item.checked;
    });
    var ids = checkedList.map(function (_item) {
      return _item[key];
    });

    this.$update('value', ids.join(separator));

    this.data.tip && this.validate();
  }
});

KLCheckGroup.use(validationMixin);
module.exports = KLCheckGroup;

/***/ }),
/* 388 */
/***/ (function(module, exports) {

module.exports = "<div class=\"kl-unitgroup kl-unitgroup--{size} {class}\" r-hide={!visible} r-width=\"{width}\">\n\t<div class=\"kl-unitgroup__wrap\">\n\t    {#list source as item}\n\t        <kl-check name={item[nameKey]} checked={item.checked} disabled={disabled} block={block} on-check={this._onCheck(item)} >{#if item['contentTemplate']}{#inc @(item['contentTemplate'])}{#else}{item[nameKey]}{/if}\n\t\t\t</kl-check>\n\t    {/list}\n\t</div>\n\t{#if tip && !hideTip}<span class=\"kl-tip kl-tip--{state} aniamted\" r-animation=\"on:enter;class:fadeInY;on:leave;class:fadeOutY;\"><kl-icon type={state} /><span class=\"tip\">{tip}</span></span>{/if}\n</div>"

/***/ }),
/* 389 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * @file KLDatePicker 日期选择
 * @author   sensen<rainforest92@126.com>
 */

var Dropdown = __webpack_require__(34);
var template = __webpack_require__(390);
var _ = __webpack_require__(2);

var filter = __webpack_require__(80);
var Calendar = __webpack_require__(391);
var bowser = __webpack_require__(23);
var moment = __webpack_require__(0);
var polyfill = __webpack_require__(220);

var Validation = __webpack_require__(9);
var validationMixin = __webpack_require__(6);

/**
 * @class KLDatePicker
 * @extend Dropdown
 * @param {object}        [options.data] = 绑定属性
 * @param {object}        [options.data.date=null]        <=> 当前选择的日期时间
 * @param {boolean}       [options.data.showTime=false]   => 是否显示时间选择
 * @param {string}        [options.data.defaultTime=null]  => 首次默认的时分秒, 格式为字符串"hh:mm:ss"
 * @param {string}        [options.data.placeholder=请输入] => 文本框的占位文字
 * @param {Date/string}   [options.data.minDate=null]     => 最小日期时间，如果为空则不限制
 * @param {Date/string}   [options.data.maxDate=null]     => 最大日期时间，如果为空则不限制
 * @param {boolean}       [options.data.hideTip=false]    => 是否显示校验错误信息
 * @param {boolean}       [options.data.autofocus=false]  => 是否自动获得焦点
 * @param {boolean}       [options.data.required=false]   => 是否必填
 * @param {boolean}       [options.data.readonly=false]   => 是否只读
 * @param {boolean}       [options.data.disabled=false]   => 是否禁用
 * @param {boolean}       [options.data.disabledHours=false]   => 是否禁用小时输入框
 * @param {boolean}       [options.data.disabledMinutes=false]   => 是否禁用分钟输入框
 * @param {boolean}       [options.data.disabledSeconds=false]   => 是否禁用秒输入框
 * @param {boolean}       [options.data.visible=true]     => 是否显示
 * @param {string}        [options.data.size]             => 组件大小, sm/lg控制整体尺寸，smw/mdw/lgw控制宽度大小
 * @param {number}        [options.data.width]            => 组件宽度
 * @param {string}        [options.data.class]            => 补充class
 */
var KLDatePicker = Dropdown.extend({
  name: 'kl-date-picker',
  template: template,
  config: function config() {
    _.extend(this.data, {
      // @inherited source: [],
      // @inherited open: false,
      hideTip: false,
      minDate: null,
      maxDate: null,
      placeholder: this.$trans('PLEASE_SELECT'),
      date: null,
      defaultTime: null,
      _date: undefined,
      _time: undefined,
      autofocus: false,
      required: false,
      showTime: false,
      open: false
    });
    this.supr();

    this.$watch('date', function (newValue) {
      if (!newValue && this.data.defaultTime) {
        this.data._time = this.data.defaultTime;
      }

      // 字符类型自动转为日期类型
      if (typeof newValue === 'string') {
        if (bowser.msie && bowser.version <= 9) {
          return this.data.date = polyfill.StringDate(newValue);
        }
        return this.data.date = newValue ? new Date(newValue) : new Date();
      } else if (typeof newValue === 'number') {
        return this.data.date = new Date(newValue);
      }

      if (newValue === 'Invalid Date' || newValue === 'NaN') {
        throw new TypeError('Invalid Date');
      }

      // 如果不为空并且超出日期范围，则设置为范围边界的日期
      if (newValue) {
        var isOutOfRange = this.isOutOfRange(newValue);
        if (isOutOfRange) return this.data.date = isOutOfRange;
      }

      if (newValue) {
        // this.data.date.setSeconds(0);
        this.data.date.setMilliseconds(0);
        this.data._date = new Date(newValue);
        this.data._time = filter.format(newValue, 'HH:mm:ss');
      }

      /**
       * @event KLDatePicker#change 日期时间改变时触发
       * @property {object} sender 事件发送对象
       * @property {object} date 改变后的日期时间
       */
      this.$emit('change', {
        sender: this,
        date: newValue
      });

      this.data.tip && this.validate();
    });

    this.$watch('minDate', function (newValue) {
      if (!newValue) return;

      if (typeof newValue === 'string') {
        if (bowser.msie && bowser.version <= 9) {
          return this.data.date = polyfill.StringDate(newValue);
        }
        return this.data.minDate = new Date(newValue);
      }

      if (typeof newValue === 'number') {
        return this.data.minDate = new Date(newValue);
      }

      if (newValue === 'Invalid Date' || newValue === 'NaN') {
        throw new TypeError('Invalid Date');
      }
    });

    this.$watch('maxDate', function (newValue) {
      if (!newValue) return;

      if (typeof newValue === 'string') {
        if (bowser.msie && bowser.version <= 9) {
          return this.data.date = polyfill.StringDate(newValue);
        }
        return this.data.maxDate = new Date(newValue);
      }

      if (typeof newValue === 'number') {
        return this.data.maxDate = new Date(newValue);
      }

      if (newValue === 'Invalid Date' || newValue === 'NaN') {
        throw new TypeError('Invalid Date');
      }
    });

    this.$watch(['minDate', 'maxDate'], function (minDate, maxDate) {
      if (!(minDate && minDate instanceof Date || maxDate && maxDate instanceof Date)) {
        return;
      }

      if (minDate && maxDate && minDate - maxDate > 0) {
        throw new Calendar.DateRangeError(minDate, maxDate);
      }

      // 如果不为空并且超出日期范围，则设置为范围边界的日期
      if (this.data.date) {
        var isOutOfRange = this.isOutOfRange(this.data.date);
        if (isOutOfRange) return this.data.date = isOutOfRange;
      }
    });

    this.initValidation();
  },
  select: function select(date, time) {
    if (this.data.readonly || this.data.disabled || this.isOutOfRange(date)) {
      return;
    }
    this._onDateTimeChange(date, time);
    if (!this.data.showTime) {
      this._onOk();
    }
  },
  onConfirm: function onConfirm() {
    if (this.data.readonly || this.data.disabled || this.isOutOfRange(this.date)) {
      return;
    }
    this._onOk();
  },
  _onClose: function _onClose() {
    this.toggle(false);
  },
  _onOk: function _onOk() {
    this.date || this._onDateTimeChange(this.data._date, this.data._time);
    this.data.date = this.date;
    this.data.time = this.time;
    /**
     * @event KLDatePicker#select 选择某一项时触发
     * @property {object} sender 事件发送对象
     * @property {object} date 当前选择项
     */
    this.$emit('select', {
      sender: this,
      date: this.data.date
    });

    this.toggle(false);
  },
  _onDateTimeChange: function _onDateTimeChange(date, _time) {
    this.time = _time || '00:00:00';
    // this.data.time
    this.date = new Date(date);
    var time = this.time.split(':');
    this.date.setHours(time[0]);
    this.date.setMinutes(time[1]);
    this.date.setSeconds(time[2]);
  },
  _onInput: function _onInput($event) {
    var value = $event.target.value;
    var date = value ? new Date(value) : null;
    if (date !== 'Invalid Date') this.data.date = date;else {
      $event.target.value = filter.format(this.data.date, 'yyyy-MM-dd HH:mm:ss');
    }
  },
  isOutOfRange: function isOutOfRange(date) {
    var minDate = this.data.minDate;
    var maxDate = this.data.maxDate;

    // minDate && date < minDate && minDate，先判断是否为空，再判断是否超出范围，如果超出则返回范围边界的日期时间。
    return minDate && moment(date).isBefore(minDate, 'day') && minDate || maxDate && moment(date).isAfter(maxDate, 'day') && maxDate;
  },
  validate: function validate(on) {
    var data = this.data;
    var date = data.date || '';

    // 如果是readonly或者disabled状态, 无需验证
    if (data.readonly || data.disabled) {
      return {
        success: true
      };
    }

    var result = date ? Validation.validate(date.toString(), [{ type: 'isDate', message: '请填写' }]) : { success: false };
    if (data.required && !result.success) {
      result.success = false;
      result.message = this.data.message || '请填写';
      this.data.state = 'error';
    } else {
      result.success = true;
      result.message = '';
      this.data.state = '';
    }
    this.data.tip = result.message;

    this.$emit('validate', {
      sender: this,
      on: on,
      result: result
    });

    return result;
  }
});

KLDatePicker.use(validationMixin);
module.exports = KLDatePicker;

/***/ }),
/* 390 */
/***/ (function(module, exports) {

module.exports = "<div class=\"kl-datepicker kl-datepicker--{size} {class}\" r-width=\"{width}\">\n  <div class=\"kl-dropdown\" is-dis={disabled} r-hide={!visible} ref=\"element\">\n    <div class=\"kl-dropdown__hd\">\n      {#if showTime}\n      <label class=\"kl-input\">\n        <input class=\"kl-input-wrap__inner kl-input-wrap__inner--{state}\" placeholder={placeholder} value={date | format: 'yyyy-MM-dd HH:mm:ss'} ref=\"input\"\n        autofocus={autofocus} readonly={readonly} disabled={disabled} on-focus={this.toggle(true)} on-change={this._onInput($event)} >\n      </label>\n      {#else}\n      <label class=\"kl-input\">\n        <input class=\"kl-input-wrap__inner kl-input-wrap__inner--{state}\" placeholder={placeholder} value={date | format: 'yyyy-MM-dd'} ref=\"input\"\n        autofocus={autofocus} readonly={readonly} disabled={disabled} on-focus={this.toggle(true)} on-change={this._onInput($event)} >\n      </label>\n      {/if}\n    </div>\n    <div class=\"kl-dropdown__bd\" r-hide={!open}>\n      <calendar lang={lang} minDate={minDate} maxDate={maxDate} date={_date} on-select={this.select($event.date, _time)}>\n        {#if showTime}\n        <time-picker size=\"sm\" time={_time} on-change={this._onDateTimeChange(_date, _time)}\n                     disabledHours={disabledHours}\n                     disabledMinutes={disabledMinutes}\n                     disabledSeconds={disabledSeconds}\n        />\n        <div class=\"kl-dropdown__ft\">\n          <kl-button size=\"sm\" class=\"kl-datepicker__confirmBtn\" on-click={this.onConfirm()} title={this.$trans('CONFIRM')} />\n        </div>\n        {/if}\n      </calendar>\n    </div>\n  </div>\n  {#if tip && !hideTip}\n    <span class=\"kl-tip kl-tip--{state} animated\" r-animation=\"on:enter;class:fadeInY;on:leave;class:fadeOutY;\">\n      <kl-icon type={state} />\n      <span class=\"kl-tip__msg\">{tip}</span>\n    </span>\n  {/if}\n</div>\n"

/***/ }),
/* 391 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _create = __webpack_require__(43);

var _create2 = _interopRequireDefault(_create);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * ------------------------------------------------------------
 * Calendar  日历
 * @author   sensen(rainforest92@126.com)
 * ------------------------------------------------------------
 */

var Component = __webpack_require__(1);
var template = __webpack_require__(392);
var _ = __webpack_require__(2);

var bowser = __webpack_require__(23);
var moment = __webpack_require__(0);
var polyfill = __webpack_require__(220);

var MS_OF_DAY = 24 * 3600 * 1000;

/**
 * @class Calendar
 * @extend Component
 * @param {object}        [options.data]                  = 绑定属性
 * @param {Date|string}   [options.data.date]             <=> 当前选择的日期，默认当前日期
 * @param {Date|string}   [options.data.minDate=null]     => 最小日期，如果为空则不限制
 * @param {Date|string}   [options.data.maxDate=null]     => 最大日期，如果为空则不限制
 * @param {boolean}       [options.data.readonly=false]   => 是否只读
 * @param {boolean}       [options.data.disabled=false]   => 是否禁用
 * @param {boolean}       [options.data.visible=true]     => 是否显示
 * @param {string}        [options.data.class]            => 补充class
 */
var Calendar = Component.extend({
  name: 'calendar',
  template: _.compressHtml(template),
  /**
     * @protected
     */
  config: function config() {
    _.extend(this.data, {
      date: null,
      minDate: null,
      maxDate: null,
      _days: []
    });
    this.supr();

    this.$watch('date', function (newValue, oldValue) {
      // 字符类型自动转为日期类型
      if (typeof newValue === 'string') {
        if (bowser.msie && bowser.version <= 9) {
          return this.data.date = polyfill.StringDate(newValue);
        }
        return this.data.date = newValue ? new Date(newValue) : new Date();
      } else if (typeof newValue === 'number') {
        return this.data.date = new Date(newValue);
      }

      // 如果newValue为空， 则自动转到今天
      if (!newValue) {
        return this.data.date = new Date(
        /* eslint no-bitwise: 0 */
        (new Date() / MS_OF_DAY >> 0) * MS_OF_DAY);
      }

      if (newValue === 'Invalid Date') throw new TypeError('Invalid Date');

      // 如果超出日期范围，则设置为范围边界的日期
      var isOutOfRange = this.isOutOfRange(newValue);
      if (isOutOfRange) {
        this.data.date = isOutOfRange;

        // 防止第二次刷新同月
        this._update();
        return;
      }

      if (!oldValue || !oldValue.getFullYear) this._update();else if (newValue.getFullYear() !== oldValue.getFullYear() || newValue.getMonth() !== oldValue.getMonth()) {
        this._update();
      }

      /**
             * @event change 日期改变时触发
             * @property {object} sender 事件发送对象
             * @property {object} date 改变后的日期
             */
      this.$emit('change', {
        sender: this,
        date: newValue
      });
    });

    this.$watch('minDate', function (newValue) {
      if (!newValue) return;

      if (typeof newValue === 'string') {
        if (bowser.msie && bowser.version <= 9) {
          return this.data.date = polyfill.StringDate(newValue);
        }
        return this.data.minDate = new Date(newValue);
      }

      if (newValue === 'Invalid Date') throw new TypeError('Invalid Date');
    });

    this.$watch('maxDate', function (newValue) {
      if (!newValue) return;

      if (typeof newValue === 'string') {
        if (bowser.msie && bowser.version <= 9) {
          return this.data.date = polyfill.StringDate(newValue);
        }
        return this.data.maxDate = new Date(newValue);
      }

      if (newValue === 'Invalid Date') throw new TypeError('Invalid Date');
    });

    this.$watch(['minDate', 'maxDate'], function (minDate, maxDate) {
      if (!(minDate && minDate instanceof Date || maxDate && maxDate instanceof Date)) {
        return;
      }

      if (minDate && maxDate) {
        if (minDate / MS_OF_DAY >> 0 > maxDate / MS_OF_DAY >> 0) {
          throw new Calendar.DateRangeError(minDate, maxDate);
        }
      }

      // 如果超出日期范围，则设置为范围边界的日期
      var isOutOfRange = this.isOutOfRange(this.data.date);
      if (isOutOfRange) this.data.date = isOutOfRange;
    });
  },

  /**
     * @method _update() 日期改变后更新日历
     * @private
     * @return {void}
     */
  _update: function _update() {
    this.data._days = [];
    var date = this.data.date;
    var month = date.getMonth();
    var mfirst = new Date(date);
    mfirst.setDate(1);
    var mfirstTime = +mfirst;
    var nfirst = new Date(mfirst);
    nfirst.setMonth(month + 1);
    nfirst.setDate(1);
    var nfirstTime = +nfirst;
    var lastTime = nfirstTime + ((7 - nfirst.getDay()) % 7 - 1) * MS_OF_DAY;
    var num = -mfirst.getDay();
    var tmpTime = void 0;
    var tmp = void 0;
    do {
      tmpTime = mfirstTime + num * MS_OF_DAY;
      num += 1;
      tmp = new Date(tmpTime);
      this.data._days.push(tmp);
    } while (tmpTime < lastTime);
  },

  /**
     * @method addYear(year) 调整年份
     * @public
     * @param  {number} [year=0] 加/减的年份
     * @return {Date} date 计算后的日期
     */
  addYear: function addYear(year) {
    if (this.data.readonly || this.data.disabled || !year) return;

    if (isNaN(year)) throw new TypeError(year + ' is not a number!');

    var date = new Date(this.data.date);
    var oldMonth = date.getMonth();
    date.setFullYear(date.getFullYear() + year);
    if (date.getMonth() !== oldMonth) date.setDate(0);

    return this.data.date = date;
  },

  /**
     * @method addMonth(month) 调整月份
     * @public
     * @param  {number} [month=0] 加/减的月份
     * @return {Date} date 计算后的日期
     */
  addMonth: function addMonth(month) {
    if (this.data.readonly || this.data.disabled || !month) return;

    if (isNaN(month)) throw new TypeError(month + ' is not a number!');

    var date = new Date(this.data.date);
    var correctMonth = date.getMonth() + month;
    date.setMonth(correctMonth);
    // 如果跳月，则置为上一个月
    if ((date.getMonth() - correctMonth) % 12) date.setDate(0);

    return this.data.date = date;
  },

  /**
     * @method select(date) 选择一个日期
     * @public
     * @param  {Date} date 选择的日期
     * @return {void}
     */
  select: function select(date, e) {
    e.stopPropagation();
    if (this.data.readonly || this.data.disabled || this.isOutOfRange(date)) {
      return;
    }
    this.data.date = new Date(date);

    /**
         * @event select 选择某一个日期时触发
         * @property {object} sender 事件发送对象
         * @property {object} date 当前选择的日期
         */
    this.$emit('select', {
      sender: this,
      date: date
    });
  },

  /**
     * @method goToday() 回到今天
     * @public
     * @return {void}
     */
  goToday: function goToday() {
    if (this.data.readonly || this.data.disabled) return;

    this.data.date = new Date((new Date() / MS_OF_DAY >> 0) * MS_OF_DAY);
  },

  /**
     * @method isOutOfRange(date) 是否超出规定的日期范围
     * @public
     * @param {Date} date 待测的日期
     * @return {boolean|Date} date 如果没有超出日期范围，则返回false；如果超出日期范围，则返回范围边界的日期
     */
  isOutOfRange: function isOutOfRange(date) {
    var minDate = this.data.minDate;
    var maxDate = this.data.maxDate;

    // minDate && date < minDate && minDate，先判断是否为空，再判断是否超出范围，如果超出则返回范围边界的日期
    return minDate && moment(date).isBefore(minDate, 'day') && minDate || maxDate && moment(date).isAfter(maxDate, 'day') && maxDate;
  }
});

var DateRangeError = function DateRangeError(minDate, maxDate) {
  this.name = 'DateRangeError';
  this.message = 'Wrong Date Range where `minDate` is ' + minDate + ' and `maxDate` is ' + maxDate + '!';
};
DateRangeError.prototype = (0, _create2.default)(RangeError.prototype);
DateRangeError.prototype.constructor = DateRangeError;
Calendar.DateRangeError = DateRangeError.prototype.constructor;

module.exports = Calendar;

/***/ }),
/* 392 */
/***/ (function(module, exports) {

module.exports = "<div class=\"kl-calendar {class}\" is-dis={disabled} r-hide={!visible}>\n    <div class=\"kl-calendar-hd\">\n        <span class=\"kl-calendar-hd__prev\">\n            <span class=\"kl-calendar__item\" on-click={this.addYear(-1)}><kl-icon type=\"arrow-left-double\" /></span>\n            <span class=\"kl-calendar__item\" on-click={this.addMonth(-1)}><kl-icon type=\"arrow-left-small\" /></span>\n        </span>\n        <span>{date | format: 'yyyy-MM'}</span>\n        <span class=\"kl-calendar-hd__next\">\n            <span class=\"kl-calendar__item\" on-click={this.addMonth(1)}><kl-icon type=\"arrow-right-small\" /></span>\n            <span class=\"kl-calendar__item\" on-click={this.addYear(1)}><kl-icon type=\"arrow-right-double\" /></span>\n        </span>\n    </div>\n    <div class=\"kl-calendar-bd\">\n        <div class=\"kl-calendar-week\">\n          <span class=\"kl-calendar__item\">{this.$trans('CAL_SUNDAY')}</span>\n          <span class=\"kl-calendar__item\">{this.$trans('CAL_MONDAY')}</span>\n          <span class=\"kl-calendar__item\">{this.$trans('CAL_TUESDAY')}</span>\n          <span class=\"kl-calendar__item\">{this.$trans('CAL_WENSDAY')}</span>\n          <span class=\"kl-calendar__item\">{this.$trans('CAL_THURSDAY')}</span>\n          <span class=\"kl-calendar__item\">{this.$trans('CAL_FRIDAY')}</span>\n          <span class=\"kl-calendar__item\">{this.$trans('CAL_SATURDAY')}</span>\n        </div>\n        <div>\n          {#list _days as day}\n          <span class=\"kl-calendar__item\" is-sel={date.toDateString() === day.toDateString()}\n              is-dis={!!this.isOutOfRange(day)}\n              r-class={ {'is-muted': date.getMonth() !== day.getMonth()} }\n              on-click={this.select(day, $event)}>{day | format: 'dd'}</span>\n          {/list}\n        </div>\n        {#inc this.$body}\n    </div>\n</div>"

/***/ }),
/* 393 */
/***/ (function(module, exports) {

module.exports = function(module) {
	if(!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if(!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),
/* 394 */
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./af": 97,
	"./af.js": 97,
	"./ar": 98,
	"./ar-dz": 99,
	"./ar-dz.js": 99,
	"./ar-kw": 100,
	"./ar-kw.js": 100,
	"./ar-ly": 101,
	"./ar-ly.js": 101,
	"./ar-ma": 102,
	"./ar-ma.js": 102,
	"./ar-sa": 103,
	"./ar-sa.js": 103,
	"./ar-tn": 104,
	"./ar-tn.js": 104,
	"./ar.js": 98,
	"./az": 105,
	"./az.js": 105,
	"./be": 106,
	"./be.js": 106,
	"./bg": 107,
	"./bg.js": 107,
	"./bm": 108,
	"./bm.js": 108,
	"./bn": 109,
	"./bn.js": 109,
	"./bo": 110,
	"./bo.js": 110,
	"./br": 111,
	"./br.js": 111,
	"./bs": 112,
	"./bs.js": 112,
	"./ca": 113,
	"./ca.js": 113,
	"./cs": 114,
	"./cs.js": 114,
	"./cv": 115,
	"./cv.js": 115,
	"./cy": 116,
	"./cy.js": 116,
	"./da": 117,
	"./da.js": 117,
	"./de": 118,
	"./de-at": 119,
	"./de-at.js": 119,
	"./de-ch": 120,
	"./de-ch.js": 120,
	"./de.js": 118,
	"./dv": 121,
	"./dv.js": 121,
	"./el": 122,
	"./el.js": 122,
	"./en-au": 123,
	"./en-au.js": 123,
	"./en-ca": 124,
	"./en-ca.js": 124,
	"./en-gb": 125,
	"./en-gb.js": 125,
	"./en-ie": 126,
	"./en-ie.js": 126,
	"./en-il": 127,
	"./en-il.js": 127,
	"./en-nz": 128,
	"./en-nz.js": 128,
	"./eo": 129,
	"./eo.js": 129,
	"./es": 130,
	"./es-do": 131,
	"./es-do.js": 131,
	"./es-us": 132,
	"./es-us.js": 132,
	"./es.js": 130,
	"./et": 133,
	"./et.js": 133,
	"./eu": 134,
	"./eu.js": 134,
	"./fa": 135,
	"./fa.js": 135,
	"./fi": 136,
	"./fi.js": 136,
	"./fo": 137,
	"./fo.js": 137,
	"./fr": 138,
	"./fr-ca": 139,
	"./fr-ca.js": 139,
	"./fr-ch": 140,
	"./fr-ch.js": 140,
	"./fr.js": 138,
	"./fy": 141,
	"./fy.js": 141,
	"./gd": 142,
	"./gd.js": 142,
	"./gl": 143,
	"./gl.js": 143,
	"./gom-latn": 144,
	"./gom-latn.js": 144,
	"./gu": 145,
	"./gu.js": 145,
	"./he": 146,
	"./he.js": 146,
	"./hi": 147,
	"./hi.js": 147,
	"./hr": 148,
	"./hr.js": 148,
	"./hu": 149,
	"./hu.js": 149,
	"./hy-am": 150,
	"./hy-am.js": 150,
	"./id": 151,
	"./id.js": 151,
	"./is": 152,
	"./is.js": 152,
	"./it": 153,
	"./it.js": 153,
	"./ja": 154,
	"./ja.js": 154,
	"./jv": 155,
	"./jv.js": 155,
	"./ka": 156,
	"./ka.js": 156,
	"./kk": 157,
	"./kk.js": 157,
	"./km": 158,
	"./km.js": 158,
	"./kn": 159,
	"./kn.js": 159,
	"./ko": 160,
	"./ko.js": 160,
	"./ky": 161,
	"./ky.js": 161,
	"./lb": 162,
	"./lb.js": 162,
	"./lo": 163,
	"./lo.js": 163,
	"./lt": 164,
	"./lt.js": 164,
	"./lv": 165,
	"./lv.js": 165,
	"./me": 166,
	"./me.js": 166,
	"./mi": 167,
	"./mi.js": 167,
	"./mk": 168,
	"./mk.js": 168,
	"./ml": 169,
	"./ml.js": 169,
	"./mn": 170,
	"./mn.js": 170,
	"./mr": 171,
	"./mr.js": 171,
	"./ms": 172,
	"./ms-my": 173,
	"./ms-my.js": 173,
	"./ms.js": 172,
	"./mt": 174,
	"./mt.js": 174,
	"./my": 175,
	"./my.js": 175,
	"./nb": 176,
	"./nb.js": 176,
	"./ne": 177,
	"./ne.js": 177,
	"./nl": 178,
	"./nl-be": 179,
	"./nl-be.js": 179,
	"./nl.js": 178,
	"./nn": 180,
	"./nn.js": 180,
	"./pa-in": 181,
	"./pa-in.js": 181,
	"./pl": 182,
	"./pl.js": 182,
	"./pt": 183,
	"./pt-br": 184,
	"./pt-br.js": 184,
	"./pt.js": 183,
	"./ro": 185,
	"./ro.js": 185,
	"./ru": 186,
	"./ru.js": 186,
	"./sd": 187,
	"./sd.js": 187,
	"./se": 188,
	"./se.js": 188,
	"./si": 189,
	"./si.js": 189,
	"./sk": 190,
	"./sk.js": 190,
	"./sl": 191,
	"./sl.js": 191,
	"./sq": 192,
	"./sq.js": 192,
	"./sr": 193,
	"./sr-cyrl": 194,
	"./sr-cyrl.js": 194,
	"./sr.js": 193,
	"./ss": 195,
	"./ss.js": 195,
	"./sv": 196,
	"./sv.js": 196,
	"./sw": 197,
	"./sw.js": 197,
	"./ta": 198,
	"./ta.js": 198,
	"./te": 199,
	"./te.js": 199,
	"./tet": 200,
	"./tet.js": 200,
	"./tg": 201,
	"./tg.js": 201,
	"./th": 202,
	"./th.js": 202,
	"./tl-ph": 203,
	"./tl-ph.js": 203,
	"./tlh": 204,
	"./tlh.js": 204,
	"./tr": 205,
	"./tr.js": 205,
	"./tzl": 206,
	"./tzl.js": 206,
	"./tzm": 207,
	"./tzm-latn": 208,
	"./tzm-latn.js": 208,
	"./tzm.js": 207,
	"./ug-cn": 209,
	"./ug-cn.js": 209,
	"./uk": 210,
	"./uk.js": 210,
	"./ur": 211,
	"./ur.js": 211,
	"./uz": 212,
	"./uz-latn": 213,
	"./uz-latn.js": 213,
	"./uz.js": 212,
	"./vi": 214,
	"./vi.js": 214,
	"./x-pseudo": 215,
	"./x-pseudo.js": 215,
	"./yo": 216,
	"./yo.js": 216,
	"./zh-cn": 217,
	"./zh-cn.js": 217,
	"./zh-hk": 218,
	"./zh-hk.js": 218,
	"./zh-tw": 219,
	"./zh-tw.js": 219
};
function webpackContext(req) {
	return __webpack_require__(webpackContextResolve(req));
};
function webpackContextResolve(req) {
	var id = map[req];
	if(!(id + 1)) // check for number or string
		throw new Error("Cannot find module '" + req + "'.");
	return id;
};
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 394;

/***/ }),
/* 395 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * @file KLRadioGroup 输入扩展
 * @author   sensen<rainforest92@126.com>
 */

var SourceComponent = __webpack_require__(16);
var template = __webpack_require__(396);
var _ = __webpack_require__(2);
var validationMixin = __webpack_require__(6);

/**
 * @class KLRadioGroup
 * @extend SourceComponent
 * @param {object}        [options.data]                  = 绑定属性
 * @param {object[]}      [options.data.source=[]]        <=> 数据源
 * @param {string}        [options.data.nameKey=name]     => 数据项的name键
 * @param {string}        [options.data.key=id]           => 数据项的key键
 * @param {string}        [options.data.source[].name]    => 每项的内容
 * @param {object}        [options.data.selected]         <=> 当前选择的对象
 * @param {number/string} [options.data.value]            <=> 当前选择的值
 * @param {boolean}       [options.data.block=false]      => 多行显
 * @param {boolean}       [options.data.required=false]   => 是否必选
 * @param {string}        [options.data.message]          => 验证错误提示
 * @param {boolean}       [options.data.hideTip=false]    => 是否显示校验错误信息
 * @param {boolean}       [options.data.readonly=false]   => 是否只读
 * @param {boolean}       [options.data.disabled=false]   => 是否禁用
 * @param {boolean}       [options.data.visible=true]     => 是否显
 * @param {string}        [options.data.class]            => 补充class
 * @param {object}        [options.service]               @=> 数据服务
 * @param {string}        [options.data.source.contentTemplate]  => 内容模板，用于支持复杂内容的自定义。
 */
var KLRadioGroup = SourceComponent.extend({
  name: 'kl-radio-group',
  template: template,

  config: function config() {
    _.extend(this.data, {
      // @inherited source: [],
      hideTip: false,
      selected: null,
      _radioGroupId: new Date(),
      required: false,
      nameKey: 'name',
      key: 'id',
      contentTemplate: ''
    });
    this.supr();

    this.initValidation();

    this.$watch('value', function (newValue) {
      var data = this.data;
      var source = data.source;
      if (newValue === undefined || newValue === null) return;
      if (source) {
        var key = data.key;
        source.forEach(function (item) {
          if (item[key] === 0 && newValue === '') {
            return false;
          } else if (newValue === item[key]) {
            data.selected = item;
          }
          return undefined;
        });
      }
    });

    this.$watch('source', function (source) {
      if (!source || !(source instanceof Array)) {
        return console.error('source of radio.group is not an array');
      }

      if (source) {
        var data = this.data;
        var key = data.key,
            value = data.value;

        source.forEach(function (item) {
          if (item[key] === 0 && value === '') {
            return false;
          } else if (value === item[key]) {
            data.selected = item;
          }
          return undefined;
        });
      }
      return undefined;
    });
  },
  select: function select(item) {
    if (this.data.readonly || this.data.disabled) return;

    var data = this.data;
    var key = data.key;
    var nameKey = data.nameKey;
    var value = item[key];
    data.value = value === undefined ? item[nameKey] : value;

    data.selected = item;
    /**
         * @event KLRadioGroup#select 选择某一项时触发
         * @property {object} sender 事件发送对象
         * @property {object} selected 当前选择
         */
    this.$emit('select', {
      sender: this,
      selected: item
    });

    this.data.tip && this.validate();
  },
  validate: function validate(on) {
    var data = this.data;
    var result = { success: true, message: '' };
    var selected = data.selected;

    // 如果是readonly或者disabled状态, 无需验证
    if (data.readonly || data.disabled) {
      return {
        success: true
      };
    }

    if (data.required && !selected) {
      result.success = false;
      result.message = this.data.message || this.$trans('PLEASE_SELECT');
      this.data.state = 'error';
    } else {
      result.success = true;
      result.message = '';
      this.data.state = '';
    }
    this.data.tip = result.message;
    /**
         * @event KLRadilGroup#validate 选择某一项时触发
         * @property {object} sender 事件发送对象
         * @property {object} result 验证结果
         */
    this.$emit('validate', {
      sender: this,
      on: on,
      result: result
    });

    return result;
  }
});

KLRadioGroup.use(validationMixin);
module.exports = KLRadioGroup;

/***/ }),
/* 396 */
/***/ (function(module, exports) {

module.exports = "<div class=\"kl-unitgroup kl-unitgroup--{size} {class}\" r-hide={!visible} r-width=\"{width}\">\n\t<div class=\"kl-unitgroup__wrap\">\n\t    {#list source as item}\n\t    <label class=\"kl-radio\" title={item[nameKey]} is-sel={item === selected} is-dis={disabled} r-class={ {'kl-radio--block': block} } on-click={this.select(item)}>\n\t\t\t<div class=\"kl-radio__box\">\n\t\t\t\t<kl-icon type=\"radio\" />\n\t\t\t</div>{#if item['contentTemplate']}{#inc @(item['contentTemplate'])}{#else}{item[nameKey]}{/if}\n\t\t</label>\n\t    {/list}\n\t</div>\n\t{#if tip && !hideTip}\n\t\t<span class=\"kl-tip kl-tip--{state} animated\" r-animation=\"on:enter;class:fadeInY;on:leave;class:fadeOutY;\">\n\t\t\t<kl-icon type={state} />\n\t\t\t<span class=\"tip\">{tip}</span>\n\t\t</span>\n\t{/if}\n</div>\n"

/***/ }),
/* 397 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * @file KLMultiSelect 多级选择
 * @author   lilang
 */

var Dropdown = __webpack_require__(34);
__webpack_require__(9);
var validationMixin = __webpack_require__(6);
var template = __webpack_require__(398);
var _ = __webpack_require__(2);

/**
 * @class KLMultiSelect
 * @extend Dropdown
 * @param {object}          [options.data]                          = 绑定属性
 * @param {object[]}        [options.data.source=[]]                <=> 数据源
 * @param {string}          [options.data.source[].name]            => 每项的内容
 * @param {string}          [options.data.key=id]                   => 数据项的键
 * @param {string}          [options.data.nameKey=name]             => 数据项的name键
 * @param {string}          [options.data.childKey=children]        => 数据子项的键
 * @param {boolean}         [options.data.onlyChild=true]           => 在单选模式下，是否只允许选中末级
 * @param {string}          [options.data.value=null]               <=> 当前选择值
 * @param {string}          [options.data.rootValue=null]           <=> 模式2种的选择值(具体见文档 demo)
 * @param {string}          [options.data.showRoot=false]           => 是否用模式2(具体见文档 demo)，这种模式下如果 value 和 rootValue 都传入，回显以 rootValue 为准
 * @param {object}          [options.data.selected=null]            <=> 当前选择项
 * @param {string}          [options.data.placeholder='']           => 默认提示
 * @param {string}          [options.data.separator=,]              => 多选时value分隔符
 * @param {boolean}         [options.data.showPath=false]           => 单选时是否展示路径
 * @param {string}          [options.data.placement=top]            => 单选时展示路径的 tooltip 位置，只有在showPath=true的时候生效，如果填 false 则不展示 tooltip
 * @param {string}          [options.data.pathString='>']           => 链接每一级路径的字符串，避免名字中包含该字符串
 * @param {boolean}         [options.data.showPathName=false]       => 是否用 path 代替原来的 namekey 显示
 * @param {boolean}         [options.data.readonly=false]           => 是否只读
 * @param {boolean}         [options.data.multiple=false]           => 是否多选
 * @param {boolean}         [options.data.disabled=false]           => 是否禁用
 * @param {string}          [options.data.size]                     => 组件大小, sm/lg控制整体尺寸，smw/mdw/lgw控制宽度大小
 * @param {boolean}         [options.data.visible=true]             => 是否显示
 * @param {string}          [options.data.class]                    => 补充class
 * @param {number}          [options.data.width]                    => 组件宽度
 */

var KLMultiSelect = Dropdown.extend({
  name: 'kl-multi-select',
  template: template,
  config: function config(data) {
    var _this = this;

    _.extend(this.data, {
      // @inherited source: [],
      // @inherited open: false,
      multiple: false,
      value: null,
      rootValue: null,
      selected: [],
      rootSelected: [],
      separator: ',',
      placeholder: '',
      key: 'id',
      nameKey: 'name',
      childKey: 'children',
      checkKey: 'checked',
      hierarchical: false,
      updateAuto: false,
      showPathName: false,
      onlyChild: true,
      pathString: '>',
      placement: 'top',
      showPath: false,
      LI_WEITH: 137
    });
    data._source = _.clone(data.source || []);
    data.tree = [data._source, [], [], [], [], [], [], [], [], []];
    data.search = ['', '', '', '', '', '', '', '', '', ''];
    data.empty = [];
    this.$watch('source', function (newValue) {
      if (!(newValue instanceof Array)) {
        throw new TypeError('`source` is not an Array!');
      }
      data._source = _.clone(data.source || []);
      this.addPath();
      data.tree[0] = data._source;
      if (data._source && data._source.length) {
        if (data.showRoot) {
          this.initRootSelected();
        } else {
          this.initSelected();
        }
      }
      this.$update();
    });
    this.$watch('value', function (newValue, oldValue) {
      if (data._source && data._source.length) {
        this.initSelected();
      }
      if (oldValue !== null && oldValue !== undefined) {
        /**
         * @event KLMultiSelect#value 改变时触发
         * @property {object} sender 事件发送对象
         * @property {object} value 当前 value 的值
         */
        this.$emit('change', {
          sender: this,
          value: newValue,
          key: data.key
        });
        if (data.source && data.source.length) {
          this.validate();
        }
      }
      this.$update();
    });

    this.$watch('rootValue', function (newValue, oldValue) {
      if (data._source && data._source.length && data.showRoot) {
        _this.initRootSelected();
      }
      if (oldValue !== null && oldValue !== undefined) {
        /**
         * @event KLMultiSelect#rootValue 改变时触发
         * @property {object} sender 事件发送对象
         * @property {object} value 当前 value 的值
         */
        _this.$emit('rootChange', {
          sender: _this,
          value: newValue,
          key: data.key
        });
      }
      _this.$update();
    });
    this.supr();

    this.initValidation();
  },
  toggle: function toggle(open) {
    this.supr(open);
  },

  // 处理 source ，给每一项添加 path
  addPath: function addPath() {
    var data = this.data;
    var dealPath = function dealPath(array, path) {
      array.forEach(function (item) {
        item.path = path ? path + data.pathString + item[data.nameKey] : item[data.nameKey];
        if (item[data.childKey] && item[data.childKey].length) {
          dealPath(item[data.childKey], item.path);
        }
      });
    };
    dealPath(data._source, '');
  },

  // 以 value 为标准，对整个 source 数组的每一项进行检测，value 里面是否包含这一项，设置 checked 是 true 还是 false
  initSelected: function initSelected() {
    var data = this.data;
    if (data.value !== null && data.value !== undefined) {
      var _list = data.value.toString().split(data.separator);
      var _checkedItem = function _checkedItem(list) {
        list.map(function (item2) {
          if (item2[data.childKey] && item2[data.childKey].length) {
            _checkedItem(item2[data.childKey]);
            if (!data.multiple && !data.onlyChild) {
              if (_list.indexOf((item2[data.key].toString() || '').toString()) > -1 || _list.indexOf(item2[data.key].toString()) > -1) {
                item2[data.checkKey] = true;
              } else {
                item2[data.checkKey] = false;
              }
            }
          } else if (_list.indexOf((item2[data.key].toString() || '').toString()) > -1 || _list.indexOf(item2[data.key].toString()) > -1) {
            item2[data.checkKey] = true;
          } else {
            item2[data.checkKey] = false;
          }
          return undefined;
        });
      };
      var _checkedSelf = function _checkedSelf(list) {
        list.map(function (item) {
          if (item[data.childKey] && item[data.childKey].length) {
            _checkedSelf(item[data.childKey]);
            if (item[data.childKey].every(function (item2) {
              return item2[data.checkKey];
            })) {
              item[data.checkKey] = true;
            } else if (item[data.childKey].some(function (item2) {
              return item2[data.checkKey] === true || item2[data.checkKey] === null;
            })) {
              item[data.checkKey] = null;
            } else {
              item[data.checkKey] = false;
            }
          }
          return undefined;
        });
      };
      _checkedItem(data._source);
      if (data.multiple) {
        _checkedSelf(data._source);
      }
      this.watchValue();
    } else {
      data.value = '';
    }
    this.$update();
  },

  // 将 rootValue 转换成对应的 value
  initRootSelected: function initRootSelected() {
    var data = this.data;
    var self = this;
    if (data.rootValue !== undefined && data.rootValue !== null) {
      var _list = data.rootValue.split(data.separator);
      var _checkItem = function _checkItem(list) {
        list.map(function (item) {
          if (_list.indexOf(item[data.key].toString()) > -1) {
            item.checked = true;
            self.setCheck(item[data.childKey], true);
          } else if (item[data.childKey] && item[data.childKey].length) {
            _checkItem(item[data.childKey]);
          }
          return undefined;
        });
      };
      _checkItem(data._source);
      this.watchValue();
    } else {
      data.rootValue = '';
    }
    this.$update();
  },
  viewCate: function viewCate(cate, level, show, e) {
    var _this2 = this;

    e && e.stopPropagation();
    var data = this.data;
    if (data.disabled || data.readonly) {
      return;
    }
    data.tree[level + 1] = cate[data.childKey] || [];
    // 将本级和下一级的active都置为false
    for (var i = level; i < level + 2; i += 1) {
      data.tree[i].forEach(function (item) {
        item.active = false;
      });
    }
    // 当前项active设为true
    cate.active = true;

    // 将下一级后面的都置空
    for (var _i = level + 2; _i < data.tree.length; _i += 1) {
      data.tree[_i] = [];
    }

    // 处理路径逻辑
    var pathArray = [];
    var path = [];
    data.tree.map(function (item, index) {
      if (index <= level) {
        item.map(function (item2) {
          if (item2.active) {
            pathArray.push(item2);
            path.push(item2[data.nameKey]);
          }
          return undefined;
        });
      }
      return undefined;
    });
    path = path.join(data.pathString);

    if (!show && !data.multiple && (!(cate[data.childKey] && cate[data.childKey].length) || !data.onlyChild)) {
      data.value = cate[data.key].toString();
      if (data.showPath && !data.multiple) {
        cate.path = path;
        cate.pathArray = pathArray;
      }
      data.selected = [cate];
      data.open = false;
      /**
             * @event KLMultiSelect#select 选择某一项时触发
             * @property {object} sender 事件发送对象
             * @property {object} selected 当前选择项
             */
      this.$emit('select', {
        sender: this,
        selected: cate
      });
    }
    setTimeout(function () {
      _this2.scroll(level);
    }, 0);
  },
  scroll: function scroll(level) {
    var data = this.data;
    var target = document.getElementsByClassName('kl-scroll-wrap')[0];
    var startWidth = target.scrollLeft;
    var WIDTH = (level - 1) * data.LI_WEITH;
    var TIME = 300;
    var start = null;
    var frameFunc = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (func) {
      window.setTimeout(func, 1000 / 45);
    };
    function step(timestamp) {
      if (start === null) start = timestamp;
      var progress = timestamp - start;
      target.scrollLeft = startWidth + parseFloat(progress / TIME) * (WIDTH - startWidth);
      if (progress < TIME) {
        frameFunc(step);
      }
    }
    frameFunc(step);
    this.$update();
  },
  checkCate: function checkCate(cate, level, checked) {
    var _checked = !checked;
    var data = this.data;
    if (data.disabled || data.readonly) {
      return;
    }
    cate[data.checkKey] = _checked;
    this.setCheck(cate[data.childKey], _checked);

    for (var i = level - 1; i >= 0; i -= 1) {
      data.tree[i].forEach(function (item) {
        if (item.active) {
          var checkedCount = 0;
          item[data.childKey].forEach(function (child) {
            if (child.checked) checkedCount += 1;else if (child.checked === null) checkedCount += 0.5;
          });

          if (checkedCount === 0) item.checked = false;else if (checkedCount === item[data.childKey].length) {
            item.checked = true;
          } else item.checked = null;
        }
      });
    }
    this.$emit('select', {
      sender: this,
      selected: cate
    });
    this.watchValue();
  },

  // 循环列表获取 value 值和 rootValue 值
  watchValue: function watchValue() {
    var data = this.data;
    data.selected = [];
    var _value = [];
    data.rootSelected = [];
    var _rootValue = [];
    var _getChecked = function _getChecked(list) {
      list.map(function (item) {
        if (item[data.childKey] && item[data.childKey].length) {
          _getChecked(item[data.childKey]);
          if (item[data.checkKey] && !data.multiple && !data.onlyChild) {
            _value.push(item[data.key].toString());
            data.selected.push(item);
          }
        } else if (item[data.checkKey]) {
          _value.push(item[data.key].toString());
          data.selected.push(item);
        }
        return undefined;
      });
    };
    var _getRootChecked = function _getRootChecked(list) {
      list.map(function (item) {
        if (item.checked) {
          _rootValue.push(item[data.key]).toString();
          data.rootSelected.push(item);
        } else if (item[data.childKey] && item[data.childKey].length) {
          _getRootChecked(item[data.childKey]);
        }
        return undefined;
      });
    };
    _getChecked(data._source);
    if (_value.length) {
      data.value = _value.join([data.separator]);
    } else {
      data.value = '';
    }
    if (data.showRoot) {
      _getRootChecked(data._source);
      if (_rootValue.length) {
        data.rootValue = _rootValue.join([data.separator]);
      } else {
        data.rootValue = '';
      }
    }
    this.$update();
  },

  // 循环设置类目及其子类目的check状态
  setCheck: function setCheck(category, value) {
    var data = this.data;
    var self = this;
    if (!category) return;
    category.forEach(function (item) {
      item[data.checkKey] = value;
      if (item[data.childKey]) self.setCheck(item[data.childKey], value);
    });
  },

  // 删除某一项
  delete: function _delete(event, item) {
    var data = this.data;
    event && event.stopPropagation();
    if (data.disabled || data.readonly) {
      return;
    }
    this.toggle(true);
    var _list = data.value.toString().split(data.separator);
    // 如果是模式2，把删除的 item 的所有子项的 id 从 value 中去除，然后把当前的 id 从 rootValue 中去除
    if (data.showRoot) {
      this.deleteRoot(item);
      return;
    }
    var _index = _list.indexOf(item[data.key].toString() || '');
    if (_index > -1) {
      _list.splice(_index, 1);
    }
    data.value = _list.join(data.separator);
    this.initSelected();
    this.watchValue();
  },
  deleteRoot: function deleteRoot(item) {
    var data = this.data;
    var _list = data.value.toString().split(data.separator);
    var _index = void 0;
    var calcValue = function calcValue(list) {
      list.map(function (child) {
        if (child[data.childKey] && child[data.childKey].length) {
          calcValue(child[data.childKey]);
        } else {
          _index = _list.indexOf(child[data.key].toString() || '');
          if (_index > -1) {
            _list.splice(_index, 1);
          }
        }
        return undefined;
      });
    };
    if (item[data.childKey] && item[data.childKey].length) {
      calcValue(item[data.childKey]);
    } else {
      _index = _list.indexOf(item[data.key].toString() || '');
      if (_index > -1) {
        _list.splice(_index, 1);
      }
    }
    data.value = _list.join(data.separator);
    var _rootList = data.rootValue.toString().split(data.separator);
    _index = _rootList.indexOf(item[data.key].toString() || '');
    if (_index > -1) {
      _rootList.splice(_index, 1);
    }
    data.rootValue = _rootList.join(data.separator);
    this.initSelected();
    this.watchValue();
  },
  validate: function validate(on) {
    var data = this.data;

    // 如果是readonly或者disabled状态, 无需验证
    if (data.readonly || data.disabled) {
      return {
        success: true
      };
    }

    var result = { success: true, message: '' };
    var value = this.data.value;

    value = typeof value === 'undefined' ? '' : '' + value;
    if (data.required && !value.length) {
      result.success = false;
      result.message = data.message || this.$trans('PLEASE_SELECT');
      data.state = 'error';
    } else {
      result.success = true;
      result.message = '';
      data.state = '';
    }
    data.tip = result.message;

    this.$emit('validate', {
      sender: this,
      on: on,
      result: result
    });

    return result;
  }
}).filter('search', function (category, search, level) {
  var data = this.data;
  var target = [];
  if (category && category.filter) {
    target = category.filter(function (item) {
      if (!item[data.nameKey]) return true;
      return item[data.nameKey].toUpperCase().indexOf(search.toUpperCase()) !== -1;
    });
  }
  if (target.length) {
    data.empty[level] = false;
    return target;
  }
  data.empty[level] = true;
  return [];
});

KLMultiSelect.use(validationMixin);
module.exports = KLMultiSelect;

/***/ }),
/* 398 */
/***/ (function(module, exports) {

module.exports = "<div class=\"kl-dropdown kl-select kl-select--{size} kl-select--{state} kl-multi-select {class}\" r-width={width} r-hide={!visible} ref=\"element\">\n    <div class=\"kl-dropdown__hd\" is-dis={disabled} r-class={{'is-active':open}} on-click={this.toggle(!open, $event)}>\n        {#if showRoot}\n            {#list rootSelected as item}\n                {#if showPath && placement}\n                <kl-tooltip tip={item.path} placement={placement}>\n                    <span class=\"kl-select__tag\" r-class={{'kl-select__tag--more':item[nameKey].length >= 15}}>{showPathName ? item.path : item[nameKey]}\n                        <kl-icon type=\"cross\" on-click={this.delete($event, item)} />\n                    </span>\n                </kl-tooltip>\n                {#else}\n                <span class=\"kl-select__tag\" r-class={{'kl-select__tag--more':item[nameKey].length >= 15}}>{showPathName ? item.path : item[nameKey]}\n                    <kl-icon type=\"cross\" on-click={this.delete($event, item)} />\n                </span>\n                {/if}\n            {/list}\n        {#else}\n            {#list selected as item}\n                {#if showPath && placement}\n                <kl-tooltip tip={item.path} placement={placement}>\n                    <span class=\"kl-select__tag\" r-class={{'kl-select__tag--more':item[nameKey].length >= 15}}>{showPathName ? item.path : item[nameKey]}\n                        <kl-icon type=\"cross\" on-click={this.delete($event, item)} />\n                    </span>\n                </kl-tooltip>\n                {#else}\n                <span class=\"kl-select__tag\" r-class={{'kl-select__tag--more':item[nameKey].length >= 15}}>{showPathName ? item.path : item[nameKey]}\n                    <kl-icon type=\"cross\" on-click={this.delete($event, item)} />\n                </span>\n                {/if}\n            {/list}\n        {/if}\n        <span class=\"kl-multi-select__placeholder\" r-hide={open || !placeholder || selected.length}>{placeholder}</span>\n        <kl-icon fontSize=12 type=\"arrow-down\" class=\"f-fr kl-multi-select__angle {open ? 'kl-multi-select__angle--transform' : ''}\"/>\n    </div>\n    {#if open}\n    <div class=\"kl-dropdown__bd\" r-animation=\"on: enter; class: animated fadeInY fast; on: leave; class: animated fadeOutY fast;\">\n        <div class=\"kl-multi-select-cate-wrap\">\n            <kl-scroll wrapMaxHeight=\"261px\" ref=\"scroll\">\n              {#list 0..9 as level}\n              {#if tree[level] && tree[level].length}\n              <ul class=\"kl-multi-select-cate-inner\" r-animation=\"on: leave; class: animated fadeOutX fast;\">\n                  <kl-input value={search[level]}  readonly={readonly}></kl-input>\n                  <kl-scroll class=\"kl-multi-select-cate-inner-scroll\" wrapMaxHeight=\"225px\">\n                  {#list tree[level] | search : search[level],level as cate}\n                  {#if !filter || (filter && filter(cate))}\n\n                  <li class=\"f-csp kl-multi-select-cate {cate.active ? 'kl-multi-select-cate--active' : ''}\" on-click={this.viewCate(cate, level)}>\n                    {#if multiple}\n                    <kl-check checked={cate[checkKey]} on-check={this.checkCate(cate, level, cate[checkKey])}  readonly={readonly} ></kl-check>\n                      {/if}\n                      <span {#if !multiple} class=\"kl-multi-select-cate__name\"  {/if}>{cate[nameKey]}</span>\n                      {#if cate[childKey] && cate[childKey].length}<span class=\"kl-multi-select-cate__more\" r-class={{'kl-multi-select-cate__more--child': !multiple && !onlyChild}}{#if !multiple && !onlyChild} on-click={this.viewCate(cate, level, true, $event)} {/if}><kl-icon type=\"arrow-right\" /></span>{/if}\n                  </li>\n                  {/if}\n                  {/list}\n                  </kl-scroll>\n                  {#if empty[level]}\n                  <li class=\"f-csp\">无任何匹配选项</li>\n                  {/if}\n              </ul>\n              {/if}\n              {/list}\n            </kl-scroll>\n        </div>\n    </div>\n    {/if}\n</div>\n{#if tip && !hideTip}\n    <span class=\"kl-tip kl-tip--{state} animated\" r-animation=\"on:enter;class:fadeInY;on:leave;class:fadeOutY;\">\n        <kl-icon type={state} />\n        <span class=\"kl-tip__msg\">{tip}</span>\n    </span>\n{/if}\n"

/***/ }),
/* 399 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * @file KLButton 按钮
 * @author Cody Chan <int64ago@gmail.com>
 */

var validator = __webpack_require__(83);
var bowser = __webpack_require__(23);
var Component = __webpack_require__(1);
var template = __webpack_require__(400);
var _ = __webpack_require__(2);

/**
 * @class KLButton
 * @param {object}      [options.data]                = 绑定属性
 * @param {string}      [options.data.title=确定]      => 按钮标题
 * @param {string}      [options.data.type=default]   => 按钮样式, default/primary/warning
 * @param {string}      [options.data.size=normal]    => 按钮大小, sm/lg
 * @param {string}      [options.data.icon]           => 按钮图标;
 * @param {string}      [options.data.link]           => 按钮的链接
 * @param {string}      [options.data.target=_self]   => 按钮链接的打开方式
 * @param {string}      [options.data.download]       => 下载链接
 * @param {boolean}     [options.data.loading=false]  => 是否正在加载
 * @param {boolean}     [options.data.disabled=false] => 禁止按钮
 * @param {boolean}     [options.data.class=false]    => 样式扩展
 */

var KLButton = Component.extend({
  name: 'kl-button',
  template: template,
  config: function config() {
    _.extend(this.data, {
      title: this.$trans('CONFIRM'),
      type: 'default',
      size: 'normal',
      icon: '',
      loading: false,
      disabled: false,
      target: '_self'
    });
    this.supr();
  },
  init: function init() {
    this.supr();
    this.$watch('download', function (url) {
      if (validator.isURL(url)) {
        if (bowser.chrome) {
          var a = document.createElement('a');
          a.href = url;
          a.download = url;
          a.click();
        } else {
          location.href = url;
        }
        this.data.download = '';
      }
    });
  },

  /**
   * @event KLButton#click 按钮点击事件
   * @property {object} sender 事件发送对象
   * @property {object} e event对象
   */
  onClick: function onClick(e) {
    var loading = this.data.loading;
    if (!loading) {
      this.$emit('click', {
        sender: this,
        e: e
      });
    }
    return !!this.data.link;
  },
  onMouseUp: function onMouseUp(e) {
    e.target.blur();
  }
});

module.exports = KLButton;

/***/ }),
/* 400 */
/***/ (function(module, exports) {

module.exports = "{#if link}\n<a href={link || 'javascript:;'} target={target} class=\"kl-btn kl-btn--{type} kl-btn--{size} {class}\"\n    on-mouseup={this.onMouseUp($event)}\n    on-click={this.onClick($event)}>\n    {#if icon && !loading}<kl-icon type={icon} />{/if}\n    {#if loading}<kl-icon type=\"loading\" />{/if}\n    {title}\n</a>\n{#else}\n<button class=\"kl-btn kl-btn--{type} kl-btn--{size} {class}\"\n    on-mouseup={this.onMouseUp($event)}\n    on-click={this.onClick($event)} {#if loading || disabled}disabled{/if} type=\"button\">\n    {#if icon && !loading}<kl-icon type={icon} />{/if}\n    {#if loading}<kl-icon type=\"loading\" />{/if}\n    {title}\n</button>\n{/if}\n\n"

/***/ }),
/* 401 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _KLDrop = __webpack_require__(24);

var _KLDrop2 = _interopRequireDefault(_KLDrop);

var _KLDropHeader = __webpack_require__(35);

var _KLDropHeader2 = _interopRequireDefault(_KLDropHeader);

var _sourceComponent = __webpack_require__(16);

var _sourceComponent2 = _interopRequireDefault(_sourceComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var template = __webpack_require__(404); /**
                                         * @file Select2  选择扩展
                                         * @author   sensen(rainforest92@126.com)
                                         */

var _ = __webpack_require__(2);
__webpack_require__(9);
var validationMixin = __webpack_require__(6);
var Multiple = __webpack_require__(405);
var PrivateMethod = __webpack_require__(406);

/**
 * @class KLSelect
 * @extend Dropdown
 * @param {object}            [options.data]                          = 绑定属性
 * @param {object[]}          [options.data.source=[]]                <=> 数据源
 * @param {string}            [options.data.source[].name]            => 每项的内容
 * @param {boolean}           [options.data.source[].disabled=false]  => 禁用此项
 * @param {string}            [options.data.source[].tip]             => 禁用此项显示的提示，如果没有则不显示
 * @param {string}            [options.data.source[].placement]       => 禁用此项显示提示的方向，默认下方
 * @param {function}          [options.data.filter]                   => 如果传了该参数会对 source 数组的每一项 item 进行 filter(item) 返回 true 则显示，否则不显示
 * @param {boolean}           [options.data.source[].divider=false]   => 设置此项为分隔线
 * @param {object}            [options.data.selected]                 <=> 当前选择项
 * @param {string/number}     [options.data.value]                    <=> 当前选择值
 * @param {string}            [options.data.key=id]                   => 数据项的键
 * @param {string}            [options.data.nameKey=name]             => 数据项的name键
 * @param {string}            [options.data.placeholder=请选择]        => 默认项的文字，如果`placeholder`为空并且没有选择项时，将会自动选中第一项。
 * @param {boolean}           [options.data.hideTip=false]            => 是否显示校验错误信息
 * @param {string}            [options.data.clearable=false]          => 单选时是否有清空按钮
 * @param {boolean}           [options.data.required=false]           => 是否必填
 * @param {boolean}           [options.data.readonly=false]           => 是否只读
 * @param {boolean}           [options.data.disabled=false]           => 是否禁用
 * @param {boolean}           [options.data.visible=true]             => 是否显示
 * @param {string}            [options.data.class]                    => 补充class
 * @param {object}            [options.service]                       @=> 数据服务
 * @param {boolean}           [options.data.canSearch=false]          => 是否可搜索
 * @param {boolean}           [options.data.isCaseSensitive=false]    => 是否区分大小写
 * @param {boolean}           [options.data.noMatchText=无匹配项]      => 搜索无结果文案
 * @param {Number}            [options.data.delaySearch=300]          => 异步搜索的延迟
 * @param {Number}            [options.data.maxShowCount=1000]        => 最大展示条数
 * @param {boolean}           [options.data.multiple=false]           => 是否多选
 * @param {boolean}           [options.data.tags=false]               => 是否用数字标签代替多行显示
 * @param {string}            [options.data.separator=,]              => 多选value分隔符
 * @param {boolean}           [options.data.selectedClose=true]       => 多选时选中非全部和请选择项时 是否关闭
 * @param {boolean}           [options.data.canSelectAll=true]        => 是否有全选
 * @param {string}            [options.data.size]                     => 组件大小, sm/lg控制整体尺寸，smw/mdw/lgw控制宽度大小
 * @param {number}            [options.data.width]                    => 组件宽度
 * @param {number}            [options.data.limit]                    => 在选项过多的时候可能会有性能问题，limit 用来限制显示的数量
 */

var KLSelect = _sourceComponent2.default.extend({
  name: 'kl-select',
  template: template,
  config: function config() {
    var _this = this;

    var data = this.data;
    _.extend(data, {
      appendToBody: false,
      placement: 'bottom',
      hideTip: false,
      selected: undefined,
      key: 'id',
      nameKey: 'name',
      value: undefined,

      // 搜索的文案
      searchValue: '',
      canSearch: undefined,
      filter: null,
      // 默认不区分大小写
      isCaseSensitive: false,
      noMatchText: this.$trans('NO_MATCH'),
      delaySearch: 300,
      maxShowCount: 1000,

      separator: ',',
      tags: false,
      multiple: false,
      selectedClose: false,
      canSelectAll: true,
      limit: null,

      placeholder: this.$trans('PLEASE_SELECT'),
      required: false,
      clearable: false,
      // 键盘事件当前对应的顺序
      key_index: -1
    });
    if (data.multiple && !Array.isArray(data.selected)) {
      data.selected = data.selected ? [data.selected] : [];
    }
    this.supr();

    this.$watch('selected', function (newValue, oldValue) {
      // 因为存在source异步获取的情况 如果source长度为0表示source还未获取
      if (oldValue === undefined && !(Array.isArray(data.source) && data.source.length)) {
        return;
      }
      // 多选下，同步数据且初始加载，selected设置默认[]不触发value同步,
      // 否则会丢失value默认值
      if (oldValue === undefined && data.multiple && Array.isArray(newValue) && newValue.length === 0) {
        return;
      }
      data.value = this.getValue();
      if (!newValue && data.multiple) {
        data.selected = [];
      }
      /**
       * @event KLSelect#change 选择项改变时触发
       * @property {object} sender 事件发送对象
       * @property {object} selected 改变后的选择项
       * @property {string} key 数据项的键
       * @property {string/number} value 改变后的选择值
       */
      this.$emit('change', {
        sender: this,
        selected: newValue,
        key: data.key,
        value: data.value
      });
    });

    this.$watch('value', function (newValue) {
      var source = data.source;
      var key = data.key;
      if (newValue === undefined || newValue === null) {
        data.selected = newValue;
        return;
      }

      if (source) {
        if (data.multiple) {
          var newValueArr = ('' + newValue).split(data.separator);
          data.selected = newValue ? source.filter(function (item) {
            return newValueArr.indexOf('' + item[key]) !== -1;
          }, this) : [];
        } else {
          data.selected = source.find(function (item) {
            return '' + item[key] === '' + newValue;
          }, this);
        }

        this.data.tip && this.validate();
      }
    });

    this.$watch('source', function (newValue) {
      if (newValue === undefined) {
        data.selected = undefined;
        return;
      }

      if (!(newValue instanceof Array)) {
        throw new TypeError('`source` is not an Array!');
      }

      var key = data.key;
      var nameKey = data.nameKey;
      var value = data.value;
      var itemHandleFn = function itemHandleFn(_value) {
        return _value;
      };
      if (newValue.length) {
        if (typeof newValue[0] === 'string' || typeof newValue[0] === 'number') {
          itemHandleFn = function itemHandleFn(_value) {
            var item = {};
            item[key] = _value;
            item[nameKey] = _value;
            return item;
          };
        } else if (!newValue[0].hasOwnProperty(key)) {
          itemHandleFn = function itemHandleFn(_value) {
            if (!_value.hasOwnProperty('divider')) {
              _value[key] = _value[nameKey];
            }
            return _value;
          };
        } else if (!newValue[0].hasOwnProperty(nameKey)) {
          itemHandleFn = function itemHandleFn(_value) {
            _value[nameKey] = _value[key];
            return _value;
          };
        }
        data.source = newValue.map(function (_value) {
          return itemHandleFn(_value);
        });
      }

      if (data.multiple) {
        if (value !== undefined && value !== null) {
          var valueArr = ('' + value).split(data.separator);
          data.selected = [].concat(value ? newValue.filter(function (item) {
            return valueArr.indexOf('' + item[key]) !== -1;
          }, this) || [] : []);
        } else if (data.selected) {
          data.selected = data.selected.filter(function (item) {
            return newValue.indexOf(item) !== -1;
          });
        }
      } else {
        if (value !== undefined && value !== null) {
          data.selected = newValue.find(function (item) {
            return '' + item[key] === '' + value;
          }, this);
        } else if (data.selected && newValue.indexOf(data.selected) < 0) {
          data.selected = undefined;
        }

        // 当placeholder为空时，自动选择第一项
        if (!data.placeholder && !data.selected) {
          data.selected = newValue[0];
        }
      }

      /**
             * 1.明确指定isCanSearch为true直接开始搜索项功能
             * 2.当选这项多余20个，没有指定可搜索时 自动开启
             */
      var canSearch = void 0;
      if (this.hasOwnProperty('__canSearch')) {
        canSearch = this.__canSearch;
      } else {
        this.__canSearch = data.canSearch;
        canSearch = this.__canSearch;
      }
      data.canSearch = canSearch === true || Array.isArray(newValue) && newValue.length > 20 && canSearch !== false;
    });

    this.$watch('multiple', function (newValue, oldValue) {
      if (oldValue === undefined) {
        return;
      }
      if (newValue) {
        if (!Array.isArray(data.selected)) {
          data.selected = data.selected ? [data.selected] : [];
        }
      } else {
        data.value = '';
      }
    });
    this.$watch('limit', function (newValue, oldValue) {
      if (oldValue === undefined) {
        return;
      }
      try {
        var _newValue = Number(newValue);
        if (isNaN(_newValue)) {
          console.error(this.$trans('LIMIT_ERROR'));
        }
      } catch (e) {
        console.error(this.$trans('LIMIT_ERROR'));
      }
    });
    var $updateSource = _.throttle(this.$updateSource.bind(this), data.delaySearch);
    this.$watch('searchValue', function (newValue, oldValue) {
      if (oldValue === undefined) {
        return;
      }
      data.key_index = -1;
      if (newValue) {
        /**
         * @event KLSelect#search 在搜索框输入的值变化后发生
         * @property {object} sender 事件发送对象
         * @property {string/number} value 输入的value
         */
        _this.$emit('search', {
          sender: _this,
          value: newValue
        });
      }
      if (_this.service && _this.service.getList) {
        $updateSource();
      }
    });

    this.initValidation();
    document.addEventListener('keydown', function (event) {
      return _this.keyup(event);
    });
  },
  select: function select(item) {
    var data = this.data;
    var multiple = data.multiple;
    if (data.readonly || data.disabled || item && (item.disabled || item.divider)) {
      return;
    }
    if (multiple) {
      var selected = data.selected;
      var indexOf = this.indexOf(selected, item);
      if (indexOf !== -1) {
        selected.splice(indexOf, 1);
      } else if (item) {
        selected.push(item);
      } else {
        selected.length = 0;
      }
    } else {
      data.selected = item;
    }

    /**
         * @event KLSelect#select 选择某一项时触发
         * @property {object} sender 事件发送对象
         * @property {object} selected 当前选择项
         */
    this.$emit('select', {
      sender: this,
      selected: item
    });
    if (multiple) {
      this.searchInputFocus();
      if (!data.selectedClose && item) {
        // 选择之后不清空已输入的内容
        // data.canSearch && this.clearSearchValue();
        return;
      }
    }
    this.toggle(false);
  },
  clearContent: function clearContent(e) {
    e && e.stopPropagation();
    this.data.searchValue = '';
  },
  selectNone: function selectNone(e) {
    e && e.stopPropagation();
    this.select(undefined);
    this.data.open = false;
  },
  toggle: function toggle(_open) {
    var data = this.data;
    data.canSearch && this.clearSearchValue();
    data.key_index = -1;

    var open = _open;
    if (open === undefined) open = !this.data.open;
    this.data.open = open;

    this.$emit('toggle', {
      sender: this,
      open: open
    });
  },
  validate: function validate(on) {
    var data = this.data;

    // 如果是readonly或者disabled状态, 无需验证
    if (data.readonly || data.disabled) {
      return {
        success: true
      };
    }

    var result = { success: true, message: '' };
    var value = this.data.value;

    value = value || value === 0 ? '' + value : '';
    if (data.required && !value.length) {
      result.success = false;
      result.message = data.message || this.$trans('PLEASE_SELECT');
      data.state = 'error';
    } else {
      result.success = true;
      result.message = '';
      data.state = '';
    }
    data.tip = result.message;

    this.$emit('validate', {
      sender: this,
      on: on,
      result: result
    });

    return result;
  }
}).component('kl-drop', _KLDrop2.default).component('kl-drop-header', _KLDropHeader2.default).use(Multiple).use(PrivateMethod).use(validationMixin);

module.exports = KLSelect;

/***/ }),
/* 402 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* WEBPACK VAR INJECTION */(function(global) {/**!
 * @fileOverview Kickass library to create and place poppers near their reference elements.
 * @version 1.14.3
 * @license
 * Copyright (c) 2016 Federico Zivolo and contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';

var longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];
var timeoutDuration = 0;
for (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {
  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {
    timeoutDuration = 1;
    break;
  }
}

function microtaskDebounce(fn) {
  var called = false;
  return function () {
    if (called) {
      return;
    }
    called = true;
    window.Promise.resolve().then(function () {
      called = false;
      fn();
    });
  };
}

function taskDebounce(fn) {
  var scheduled = false;
  return function () {
    if (!scheduled) {
      scheduled = true;
      setTimeout(function () {
        scheduled = false;
        fn();
      }, timeoutDuration);
    }
  };
}

var supportsMicroTasks = isBrowser && window.Promise;

/**
* Create a debounced version of a method, that's asynchronously deferred
* but called in the minimum time possible.
*
* @method
* @memberof Popper.Utils
* @argument {Function} fn
* @returns {Function}
*/
var debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;

/**
 * Check if the given variable is a function
 * @method
 * @memberof Popper.Utils
 * @argument {Any} functionToCheck - variable to check
 * @returns {Boolean} answer to: is a function?
 */
function isFunction(functionToCheck) {
  var getType = {};
  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';
}

/**
 * Get CSS computed property of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Eement} element
 * @argument {String} property
 */
function getStyleComputedProperty(element, property) {
  if (element.nodeType !== 1) {
    return [];
  }
  // NOTE: 1 DOM access here
  var css = getComputedStyle(element, null);
  return property ? css[property] : css;
}

/**
 * Returns the parentNode or the host of the element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} parent
 */
function getParentNode(element) {
  if (element.nodeName === 'HTML') {
    return element;
  }
  return element.parentNode || element.host;
}

/**
 * Returns the scrolling parent of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} scroll parent
 */
function getScrollParent(element) {
  // Return body, `getScroll` will take care to get the correct `scrollTop` from it
  if (!element) {
    return document.body;
  }

  switch (element.nodeName) {
    case 'HTML':
    case 'BODY':
      return element.ownerDocument.body;
    case '#document':
      return element.body;
  }

  // Firefox want us to check `-x` and `-y` variations as well

  var _getStyleComputedProp = getStyleComputedProperty(element),
      overflow = _getStyleComputedProp.overflow,
      overflowX = _getStyleComputedProp.overflowX,
      overflowY = _getStyleComputedProp.overflowY;

  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {
    return element;
  }

  return getScrollParent(getParentNode(element));
}

var isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);
var isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);

/**
 * Determines if the browser is Internet Explorer
 * @method
 * @memberof Popper.Utils
 * @param {Number} version to check
 * @returns {Boolean} isIE
 */
function isIE(version) {
  if (version === 11) {
    return isIE11;
  }
  if (version === 10) {
    return isIE10;
  }
  return isIE11 || isIE10;
}

/**
 * Returns the offset parent of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} offset parent
 */
function getOffsetParent(element) {
  if (!element) {
    return document.documentElement;
  }

  var noOffsetParent = isIE(10) ? document.body : null;

  // NOTE: 1 DOM access here
  var offsetParent = element.offsetParent;
  // Skip hidden elements which don't have an offsetParent
  while (offsetParent === noOffsetParent && element.nextElementSibling) {
    offsetParent = (element = element.nextElementSibling).offsetParent;
  }

  var nodeName = offsetParent && offsetParent.nodeName;

  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {
    return element ? element.ownerDocument.documentElement : document.documentElement;
  }

  // .offsetParent will return the closest TD or TABLE in case
  // no offsetParent is present, I hate this job...
  if (['TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {
    return getOffsetParent(offsetParent);
  }

  return offsetParent;
}

function isOffsetContainer(element) {
  var nodeName = element.nodeName;

  if (nodeName === 'BODY') {
    return false;
  }
  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;
}

/**
 * Finds the root node (document, shadowDOM root) of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} node
 * @returns {Element} root node
 */
function getRoot(node) {
  if (node.parentNode !== null) {
    return getRoot(node.parentNode);
  }

  return node;
}

/**
 * Finds the offset parent common to the two provided nodes
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element1
 * @argument {Element} element2
 * @returns {Element} common offset parent
 */
function findCommonOffsetParent(element1, element2) {
  // This check is needed to avoid errors in case one of the elements isn't defined for any reason
  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {
    return document.documentElement;
  }

  // Here we make sure to give as "start" the element that comes first in the DOM
  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;
  var start = order ? element1 : element2;
  var end = order ? element2 : element1;

  // Get common ancestor container
  var range = document.createRange();
  range.setStart(start, 0);
  range.setEnd(end, 0);
  var commonAncestorContainer = range.commonAncestorContainer;

  // Both nodes are inside #document

  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {
    if (isOffsetContainer(commonAncestorContainer)) {
      return commonAncestorContainer;
    }

    return getOffsetParent(commonAncestorContainer);
  }

  // one of the nodes is inside shadowDOM, find which one
  var element1root = getRoot(element1);
  if (element1root.host) {
    return findCommonOffsetParent(element1root.host, element2);
  } else {
    return findCommonOffsetParent(element1, getRoot(element2).host);
  }
}

/**
 * Gets the scroll value of the given element in the given side (top and left)
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @argument {String} side `top` or `left`
 * @returns {number} amount of scrolled pixels
 */
function getScroll(element) {
  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';

  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';
  var nodeName = element.nodeName;

  if (nodeName === 'BODY' || nodeName === 'HTML') {
    var html = element.ownerDocument.documentElement;
    var scrollingElement = element.ownerDocument.scrollingElement || html;
    return scrollingElement[upperSide];
  }

  return element[upperSide];
}

/*
 * Sum or subtract the element scroll values (left and top) from a given rect object
 * @method
 * @memberof Popper.Utils
 * @param {Object} rect - Rect object you want to change
 * @param {HTMLElement} element - The element from the function reads the scroll values
 * @param {Boolean} subtract - set to true if you want to subtract the scroll values
 * @return {Object} rect - The modifier rect object
 */
function includeScroll(rect, element) {
  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

  var scrollTop = getScroll(element, 'top');
  var scrollLeft = getScroll(element, 'left');
  var modifier = subtract ? -1 : 1;
  rect.top += scrollTop * modifier;
  rect.bottom += scrollTop * modifier;
  rect.left += scrollLeft * modifier;
  rect.right += scrollLeft * modifier;
  return rect;
}

/*
 * Helper to detect borders of a given element
 * @method
 * @memberof Popper.Utils
 * @param {CSSStyleDeclaration} styles
 * Result of `getStyleComputedProperty` on the given element
 * @param {String} axis - `x` or `y`
 * @return {number} borders - The borders size of the given axis
 */

function getBordersSize(styles, axis) {
  var sideA = axis === 'x' ? 'Left' : 'Top';
  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';

  return parseFloat(styles['border' + sideA + 'Width'], 10) + parseFloat(styles['border' + sideB + 'Width'], 10);
}

function getSize(axis, body, html, computedStyle) {
  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? html['offset' + axis] + computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')] + computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')] : 0);
}

function getWindowSizes() {
  var body = document.body;
  var html = document.documentElement;
  var computedStyle = isIE(10) && getComputedStyle(html);

  return {
    height: getSize('Height', body, html, computedStyle),
    width: getSize('Width', body, html, computedStyle)
  };
}

var classCallCheck = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

var createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();





var defineProperty = function (obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
};

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

/**
 * Given element offsets, generate an output similar to getBoundingClientRect
 * @method
 * @memberof Popper.Utils
 * @argument {Object} offsets
 * @returns {Object} ClientRect like output
 */
function getClientRect(offsets) {
  return _extends({}, offsets, {
    right: offsets.left + offsets.width,
    bottom: offsets.top + offsets.height
  });
}

/**
 * Get bounding client rect of given element
 * @method
 * @memberof Popper.Utils
 * @param {HTMLElement} element
 * @return {Object} client rect
 */
function getBoundingClientRect(element) {
  var rect = {};

  // IE10 10 FIX: Please, don't ask, the element isn't
  // considered in DOM in some circumstances...
  // This isn't reproducible in IE10 compatibility mode of IE11
  try {
    if (isIE(10)) {
      rect = element.getBoundingClientRect();
      var scrollTop = getScroll(element, 'top');
      var scrollLeft = getScroll(element, 'left');
      rect.top += scrollTop;
      rect.left += scrollLeft;
      rect.bottom += scrollTop;
      rect.right += scrollLeft;
    } else {
      rect = element.getBoundingClientRect();
    }
  } catch (e) {}

  var result = {
    left: rect.left,
    top: rect.top,
    width: rect.right - rect.left,
    height: rect.bottom - rect.top
  };

  // subtract scrollbar size from sizes
  var sizes = element.nodeName === 'HTML' ? getWindowSizes() : {};
  var width = sizes.width || element.clientWidth || result.right - result.left;
  var height = sizes.height || element.clientHeight || result.bottom - result.top;

  var horizScrollbar = element.offsetWidth - width;
  var vertScrollbar = element.offsetHeight - height;

  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`
  // we make this check conditional for performance reasons
  if (horizScrollbar || vertScrollbar) {
    var styles = getStyleComputedProperty(element);
    horizScrollbar -= getBordersSize(styles, 'x');
    vertScrollbar -= getBordersSize(styles, 'y');

    result.width -= horizScrollbar;
    result.height -= vertScrollbar;
  }

  return getClientRect(result);
}

function getOffsetRectRelativeToArbitraryNode(children, parent) {
  var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

  var isIE10 = isIE(10);
  var isHTML = parent.nodeName === 'HTML';
  var childrenRect = getBoundingClientRect(children);
  var parentRect = getBoundingClientRect(parent);
  var scrollParent = getScrollParent(children);

  var styles = getStyleComputedProperty(parent);
  var borderTopWidth = parseFloat(styles.borderTopWidth, 10);
  var borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);

  // In cases where the parent is fixed, we must ignore negative scroll in offset calc
  if (fixedPosition && parent.nodeName === 'HTML') {
    parentRect.top = Math.max(parentRect.top, 0);
    parentRect.left = Math.max(parentRect.left, 0);
  }
  var offsets = getClientRect({
    top: childrenRect.top - parentRect.top - borderTopWidth,
    left: childrenRect.left - parentRect.left - borderLeftWidth,
    width: childrenRect.width,
    height: childrenRect.height
  });
  offsets.marginTop = 0;
  offsets.marginLeft = 0;

  // Subtract margins of documentElement in case it's being used as parent
  // we do this only on HTML because it's the only element that behaves
  // differently when margins are applied to it. The margins are included in
  // the box of the documentElement, in the other cases not.
  if (!isIE10 && isHTML) {
    var marginTop = parseFloat(styles.marginTop, 10);
    var marginLeft = parseFloat(styles.marginLeft, 10);

    offsets.top -= borderTopWidth - marginTop;
    offsets.bottom -= borderTopWidth - marginTop;
    offsets.left -= borderLeftWidth - marginLeft;
    offsets.right -= borderLeftWidth - marginLeft;

    // Attach marginTop and marginLeft because in some circumstances we may need them
    offsets.marginTop = marginTop;
    offsets.marginLeft = marginLeft;
  }

  if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {
    offsets = includeScroll(offsets, parent);
  }

  return offsets;
}

function getViewportOffsetRectRelativeToArtbitraryNode(element) {
  var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  var html = element.ownerDocument.documentElement;
  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);
  var width = Math.max(html.clientWidth, window.innerWidth || 0);
  var height = Math.max(html.clientHeight, window.innerHeight || 0);

  var scrollTop = !excludeScroll ? getScroll(html) : 0;
  var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;

  var offset = {
    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,
    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,
    width: width,
    height: height
  };

  return getClientRect(offset);
}

/**
 * Check if the given element is fixed or is inside a fixed parent
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @argument {Element} customContainer
 * @returns {Boolean} answer to "isFixed?"
 */
function isFixed(element) {
  var nodeName = element.nodeName;
  if (nodeName === 'BODY' || nodeName === 'HTML') {
    return false;
  }
  if (getStyleComputedProperty(element, 'position') === 'fixed') {
    return true;
  }
  return isFixed(getParentNode(element));
}

/**
 * Finds the first parent of an element that has a transformed property defined
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} first transformed parent or documentElement
 */

function getFixedPositionOffsetParent(element) {
  // This check is needed to avoid errors in case one of the elements isn't defined for any reason
  if (!element || !element.parentElement || isIE()) {
    return document.documentElement;
  }
  var el = element.parentElement;
  while (el && getStyleComputedProperty(el, 'transform') === 'none') {
    el = el.parentElement;
  }
  return el || document.documentElement;
}

/**
 * Computed the boundaries limits and return them
 * @method
 * @memberof Popper.Utils
 * @param {HTMLElement} popper
 * @param {HTMLElement} reference
 * @param {number} padding
 * @param {HTMLElement} boundariesElement - Element used to define the boundaries
 * @param {Boolean} fixedPosition - Is in fixed position mode
 * @returns {Object} Coordinates of the boundaries
 */
function getBoundaries(popper, reference, padding, boundariesElement) {
  var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;

  // NOTE: 1 DOM access here

  var boundaries = { top: 0, left: 0 };
  var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);

  // Handle viewport case
  if (boundariesElement === 'viewport') {
    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);
  } else {
    // Handle other cases based on DOM element used as boundaries
    var boundariesNode = void 0;
    if (boundariesElement === 'scrollParent') {
      boundariesNode = getScrollParent(getParentNode(reference));
      if (boundariesNode.nodeName === 'BODY') {
        boundariesNode = popper.ownerDocument.documentElement;
      }
    } else if (boundariesElement === 'window') {
      boundariesNode = popper.ownerDocument.documentElement;
    } else {
      boundariesNode = boundariesElement;
    }

    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);

    // In case of HTML, we need a different computation
    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {
      var _getWindowSizes = getWindowSizes(),
          height = _getWindowSizes.height,
          width = _getWindowSizes.width;

      boundaries.top += offsets.top - offsets.marginTop;
      boundaries.bottom = height + offsets.top;
      boundaries.left += offsets.left - offsets.marginLeft;
      boundaries.right = width + offsets.left;
    } else {
      // for all the other DOM elements, this one is good
      boundaries = offsets;
    }
  }

  // Add paddings
  boundaries.left += padding;
  boundaries.top += padding;
  boundaries.right -= padding;
  boundaries.bottom -= padding;

  return boundaries;
}

function getArea(_ref) {
  var width = _ref.width,
      height = _ref.height;

  return width * height;
}

/**
 * Utility used to transform the `auto` placement to the placement with more
 * available space.
 * @method
 * @memberof Popper.Utils
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {
  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;

  if (placement.indexOf('auto') === -1) {
    return placement;
  }

  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);

  var rects = {
    top: {
      width: boundaries.width,
      height: refRect.top - boundaries.top
    },
    right: {
      width: boundaries.right - refRect.right,
      height: boundaries.height
    },
    bottom: {
      width: boundaries.width,
      height: boundaries.bottom - refRect.bottom
    },
    left: {
      width: refRect.left - boundaries.left,
      height: boundaries.height
    }
  };

  var sortedAreas = Object.keys(rects).map(function (key) {
    return _extends({
      key: key
    }, rects[key], {
      area: getArea(rects[key])
    });
  }).sort(function (a, b) {
    return b.area - a.area;
  });

  var filteredAreas = sortedAreas.filter(function (_ref2) {
    var width = _ref2.width,
        height = _ref2.height;
    return width >= popper.clientWidth && height >= popper.clientHeight;
  });

  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;

  var variation = placement.split('-')[1];

  return computedPlacement + (variation ? '-' + variation : '');
}

/**
 * Get offsets to the reference element
 * @method
 * @memberof Popper.Utils
 * @param {Object} state
 * @param {Element} popper - the popper element
 * @param {Element} reference - the reference element (the popper will be relative to this)
 * @param {Element} fixedPosition - is in fixed position mode
 * @returns {Object} An object containing the offsets which will be applied to the popper
 */
function getReferenceOffsets(state, popper, reference) {
  var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

  var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);
  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);
}

/**
 * Get the outer sizes of the given element (offset size + margins)
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Object} object containing width and height properties
 */
function getOuterSizes(element) {
  var styles = getComputedStyle(element);
  var x = parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);
  var y = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);
  var result = {
    width: element.offsetWidth + y,
    height: element.offsetHeight + x
  };
  return result;
}

/**
 * Get the opposite placement of the given one
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement
 * @returns {String} flipped placement
 */
function getOppositePlacement(placement) {
  var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };
  return placement.replace(/left|right|bottom|top/g, function (matched) {
    return hash[matched];
  });
}

/**
 * Get offsets to the popper
 * @method
 * @memberof Popper.Utils
 * @param {Object} position - CSS position the Popper will get applied
 * @param {HTMLElement} popper - the popper element
 * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)
 * @param {String} placement - one of the valid placement options
 * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper
 */
function getPopperOffsets(popper, referenceOffsets, placement) {
  placement = placement.split('-')[0];

  // Get popper node sizes
  var popperRect = getOuterSizes(popper);

  // Add position, width and height to our offsets object
  var popperOffsets = {
    width: popperRect.width,
    height: popperRect.height
  };

  // depending by the popper placement we have to compute its offsets slightly differently
  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;
  var mainSide = isHoriz ? 'top' : 'left';
  var secondarySide = isHoriz ? 'left' : 'top';
  var measurement = isHoriz ? 'height' : 'width';
  var secondaryMeasurement = !isHoriz ? 'height' : 'width';

  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;
  if (placement === secondarySide) {
    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];
  } else {
    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];
  }

  return popperOffsets;
}

/**
 * Mimics the `find` method of Array
 * @method
 * @memberof Popper.Utils
 * @argument {Array} arr
 * @argument prop
 * @argument value
 * @returns index or -1
 */
function find(arr, check) {
  // use native find if supported
  if (Array.prototype.find) {
    return arr.find(check);
  }

  // use `filter` to obtain the same behavior of `find`
  return arr.filter(check)[0];
}

/**
 * Return the index of the matching object
 * @method
 * @memberof Popper.Utils
 * @argument {Array} arr
 * @argument prop
 * @argument value
 * @returns index or -1
 */
function findIndex(arr, prop, value) {
  // use native findIndex if supported
  if (Array.prototype.findIndex) {
    return arr.findIndex(function (cur) {
      return cur[prop] === value;
    });
  }

  // use `find` + `indexOf` if `findIndex` isn't supported
  var match = find(arr, function (obj) {
    return obj[prop] === value;
  });
  return arr.indexOf(match);
}

/**
 * Loop trough the list of modifiers and run them in order,
 * each of them will then edit the data object.
 * @method
 * @memberof Popper.Utils
 * @param {dataObject} data
 * @param {Array} modifiers
 * @param {String} ends - Optional modifier name used as stopper
 * @returns {dataObject}
 */
function runModifiers(modifiers, data, ends) {
  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));

  modifiersToRun.forEach(function (modifier) {
    if (modifier['function']) {
      // eslint-disable-line dot-notation
      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');
    }
    var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation
    if (modifier.enabled && isFunction(fn)) {
      // Add properties to offsets to make them a complete clientRect object
      // we do this before each modifier to make sure the previous one doesn't
      // mess with these values
      data.offsets.popper = getClientRect(data.offsets.popper);
      data.offsets.reference = getClientRect(data.offsets.reference);

      data = fn(data, modifier);
    }
  });

  return data;
}

/**
 * Updates the position of the popper, computing the new offsets and applying
 * the new style.<br />
 * Prefer `scheduleUpdate` over `update` because of performance reasons.
 * @method
 * @memberof Popper
 */
function update() {
  // if popper is destroyed, don't perform any further update
  if (this.state.isDestroyed) {
    return;
  }

  var data = {
    instance: this,
    styles: {},
    arrowStyles: {},
    attributes: {},
    flipped: false,
    offsets: {}
  };

  // compute reference element offsets
  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);

  // compute auto placement, store placement inside the data object,
  // modifiers will be able to edit `placement` if needed
  // and refer to originalPlacement to know the original value
  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);

  // store the computed placement inside `originalPlacement`
  data.originalPlacement = data.placement;

  data.positionFixed = this.options.positionFixed;

  // compute the popper offsets
  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);

  data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute';

  // run the modifiers
  data = runModifiers(this.modifiers, data);

  // the first `update` will call `onCreate` callback
  // the other ones will call `onUpdate` callback
  if (!this.state.isCreated) {
    this.state.isCreated = true;
    this.options.onCreate(data);
  } else {
    this.options.onUpdate(data);
  }
}

/**
 * Helper used to know if the given modifier is enabled.
 * @method
 * @memberof Popper.Utils
 * @returns {Boolean}
 */
function isModifierEnabled(modifiers, modifierName) {
  return modifiers.some(function (_ref) {
    var name = _ref.name,
        enabled = _ref.enabled;
    return enabled && name === modifierName;
  });
}

/**
 * Get the prefixed supported property name
 * @method
 * @memberof Popper.Utils
 * @argument {String} property (camelCase)
 * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)
 */
function getSupportedPropertyName(property) {
  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];
  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);

  for (var i = 0; i < prefixes.length; i++) {
    var prefix = prefixes[i];
    var toCheck = prefix ? '' + prefix + upperProp : property;
    if (typeof document.body.style[toCheck] !== 'undefined') {
      return toCheck;
    }
  }
  return null;
}

/**
 * Destroy the popper
 * @method
 * @memberof Popper
 */
function destroy() {
  this.state.isDestroyed = true;

  // touch DOM only if `applyStyle` modifier is enabled
  if (isModifierEnabled(this.modifiers, 'applyStyle')) {
    this.popper.removeAttribute('x-placement');
    this.popper.style.position = '';
    this.popper.style.top = '';
    this.popper.style.left = '';
    this.popper.style.right = '';
    this.popper.style.bottom = '';
    this.popper.style.willChange = '';
    this.popper.style[getSupportedPropertyName('transform')] = '';
  }

  this.disableEventListeners();

  // remove the popper if user explicity asked for the deletion on destroy
  // do not use `remove` because IE11 doesn't support it
  if (this.options.removeOnDestroy) {
    this.popper.parentNode.removeChild(this.popper);
  }
  return this;
}

/**
 * Get the window associated with the element
 * @argument {Element} element
 * @returns {Window}
 */
function getWindow(element) {
  var ownerDocument = element.ownerDocument;
  return ownerDocument ? ownerDocument.defaultView : window;
}

function attachToScrollParents(scrollParent, event, callback, scrollParents) {
  var isBody = scrollParent.nodeName === 'BODY';
  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;
  target.addEventListener(event, callback, { passive: true });

  if (!isBody) {
    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);
  }
  scrollParents.push(target);
}

/**
 * Setup needed event listeners used to update the popper position
 * @method
 * @memberof Popper.Utils
 * @private
 */
function setupEventListeners(reference, options, state, updateBound) {
  // Resize event listener on window
  state.updateBound = updateBound;
  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });

  // Scroll event listener on scroll parents
  var scrollElement = getScrollParent(reference);
  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);
  state.scrollElement = scrollElement;
  state.eventsEnabled = true;

  return state;
}

/**
 * It will add resize/scroll events and start recalculating
 * position of the popper element when they are triggered.
 * @method
 * @memberof Popper
 */
function enableEventListeners() {
  if (!this.state.eventsEnabled) {
    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);
  }
}

/**
 * Remove event listeners used to update the popper position
 * @method
 * @memberof Popper.Utils
 * @private
 */
function removeEventListeners(reference, state) {
  // Remove resize event listener on window
  getWindow(reference).removeEventListener('resize', state.updateBound);

  // Remove scroll event listener on scroll parents
  state.scrollParents.forEach(function (target) {
    target.removeEventListener('scroll', state.updateBound);
  });

  // Reset state
  state.updateBound = null;
  state.scrollParents = [];
  state.scrollElement = null;
  state.eventsEnabled = false;
  return state;
}

/**
 * It will remove resize/scroll events and won't recalculate popper position
 * when they are triggered. It also won't trigger onUpdate callback anymore,
 * unless you call `update` method manually.
 * @method
 * @memberof Popper
 */
function disableEventListeners() {
  if (this.state.eventsEnabled) {
    cancelAnimationFrame(this.scheduleUpdate);
    this.state = removeEventListeners(this.reference, this.state);
  }
}

/**
 * Tells if a given input is a number
 * @method
 * @memberof Popper.Utils
 * @param {*} input to check
 * @return {Boolean}
 */
function isNumeric(n) {
  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);
}

/**
 * Set the style to the given popper
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element - Element to apply the style to
 * @argument {Object} styles
 * Object with a list of properties and values which will be applied to the element
 */
function setStyles(element, styles) {
  Object.keys(styles).forEach(function (prop) {
    var unit = '';
    // add unit if the value is numeric and is one of the following
    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {
      unit = 'px';
    }
    element.style[prop] = styles[prop] + unit;
  });
}

/**
 * Set the attributes to the given popper
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element - Element to apply the attributes to
 * @argument {Object} styles
 * Object with a list of properties and values which will be applied to the element
 */
function setAttributes(element, attributes) {
  Object.keys(attributes).forEach(function (prop) {
    var value = attributes[prop];
    if (value !== false) {
      element.setAttribute(prop, attributes[prop]);
    } else {
      element.removeAttribute(prop);
    }
  });
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} data.styles - List of style properties - values to apply to popper element
 * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The same data object
 */
function applyStyle(data) {
  // any property present in `data.styles` will be applied to the popper,
  // in this way we can make the 3rd party modifiers add custom styles to it
  // Be aware, modifiers could override the properties defined in the previous
  // lines of this modifier!
  setStyles(data.instance.popper, data.styles);

  // any property present in `data.attributes` will be applied to the popper,
  // they will be set as HTML attributes of the element
  setAttributes(data.instance.popper, data.attributes);

  // if arrowElement is defined and arrowStyles has some properties
  if (data.arrowElement && Object.keys(data.arrowStyles).length) {
    setStyles(data.arrowElement, data.arrowStyles);
  }

  return data;
}

/**
 * Set the x-placement attribute before everything else because it could be used
 * to add margins to the popper margins needs to be calculated to get the
 * correct popper offsets.
 * @method
 * @memberof Popper.modifiers
 * @param {HTMLElement} reference - The reference element used to position the popper
 * @param {HTMLElement} popper - The HTML element used as popper
 * @param {Object} options - Popper.js options
 */
function applyStyleOnLoad(reference, popper, options, modifierOptions, state) {
  // compute reference element offsets
  var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);

  // compute auto placement, store placement inside the data object,
  // modifiers will be able to edit `placement` if needed
  // and refer to originalPlacement to know the original value
  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);

  popper.setAttribute('x-placement', placement);

  // Apply `position` to popper before anything else because
  // without the position applied we can't guarantee correct computations
  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });

  return options;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function computeStyle(data, options) {
  var x = options.x,
      y = options.y;
  var popper = data.offsets.popper;

  // Remove this legacy support in Popper.js v2

  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {
    return modifier.name === 'applyStyle';
  }).gpuAcceleration;
  if (legacyGpuAccelerationOption !== undefined) {
    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');
  }
  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;

  var offsetParent = getOffsetParent(data.instance.popper);
  var offsetParentRect = getBoundingClientRect(offsetParent);

  // Styles
  var styles = {
    position: popper.position
  };

  // Avoid blurry text by using full pixel integers.
  // For pixel-perfect positioning, top/bottom prefers rounded
  // values, while left/right prefers floored values.
  var offsets = {
    left: Math.floor(popper.left),
    top: Math.round(popper.top),
    bottom: Math.round(popper.bottom),
    right: Math.floor(popper.right)
  };

  var sideA = x === 'bottom' ? 'top' : 'bottom';
  var sideB = y === 'right' ? 'left' : 'right';

  // if gpuAcceleration is set to `true` and transform is supported,
  //  we use `translate3d` to apply the position to the popper we
  // automatically use the supported prefixed version if needed
  var prefixedProperty = getSupportedPropertyName('transform');

  // now, let's make a step back and look at this code closely (wtf?)
  // If the content of the popper grows once it's been positioned, it
  // may happen that the popper gets misplaced because of the new content
  // overflowing its reference element
  // To avoid this problem, we provide two options (x and y), which allow
  // the consumer to define the offset origin.
  // If we position a popper on top of a reference element, we can set
  // `x` to `top` to make the popper grow towards its top instead of
  // its bottom.
  var left = void 0,
      top = void 0;
  if (sideA === 'bottom') {
    top = -offsetParentRect.height + offsets.bottom;
  } else {
    top = offsets.top;
  }
  if (sideB === 'right') {
    left = -offsetParentRect.width + offsets.right;
  } else {
    left = offsets.left;
  }
  if (gpuAcceleration && prefixedProperty) {
    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';
    styles[sideA] = 0;
    styles[sideB] = 0;
    styles.willChange = 'transform';
  } else {
    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties
    var invertTop = sideA === 'bottom' ? -1 : 1;
    var invertLeft = sideB === 'right' ? -1 : 1;
    styles[sideA] = top * invertTop;
    styles[sideB] = left * invertLeft;
    styles.willChange = sideA + ', ' + sideB;
  }

  // Attributes
  var attributes = {
    'x-placement': data.placement
  };

  // Update `data` attributes, styles and arrowStyles
  data.attributes = _extends({}, attributes, data.attributes);
  data.styles = _extends({}, styles, data.styles);
  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);

  return data;
}

/**
 * Helper used to know if the given modifier depends from another one.<br />
 * It checks if the needed modifier is listed and enabled.
 * @method
 * @memberof Popper.Utils
 * @param {Array} modifiers - list of modifiers
 * @param {String} requestingName - name of requesting modifier
 * @param {String} requestedName - name of requested modifier
 * @returns {Boolean}
 */
function isModifierRequired(modifiers, requestingName, requestedName) {
  var requesting = find(modifiers, function (_ref) {
    var name = _ref.name;
    return name === requestingName;
  });

  var isRequired = !!requesting && modifiers.some(function (modifier) {
    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;
  });

  if (!isRequired) {
    var _requesting = '`' + requestingName + '`';
    var requested = '`' + requestedName + '`';
    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');
  }
  return isRequired;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function arrow(data, options) {
  var _data$offsets$arrow;

  // arrow depends on keepTogether in order to work
  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {
    return data;
  }

  var arrowElement = options.element;

  // if arrowElement is a string, suppose it's a CSS selector
  if (typeof arrowElement === 'string') {
    arrowElement = data.instance.popper.querySelector(arrowElement);

    // if arrowElement is not found, don't run the modifier
    if (!arrowElement) {
      return data;
    }
  } else {
    // if the arrowElement isn't a query selector we must check that the
    // provided DOM node is child of its popper node
    if (!data.instance.popper.contains(arrowElement)) {
      console.warn('WARNING: `arrow.element` must be child of its popper element!');
      return data;
    }
  }

  var placement = data.placement.split('-')[0];
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;

  var isVertical = ['left', 'right'].indexOf(placement) !== -1;

  var len = isVertical ? 'height' : 'width';
  var sideCapitalized = isVertical ? 'Top' : 'Left';
  var side = sideCapitalized.toLowerCase();
  var altSide = isVertical ? 'left' : 'top';
  var opSide = isVertical ? 'bottom' : 'right';
  var arrowElementSize = getOuterSizes(arrowElement)[len];

  //
  // extends keepTogether behavior making sure the popper and its
  // reference have enough pixels in conjuction
  //

  // top/left side
  if (reference[opSide] - arrowElementSize < popper[side]) {
    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);
  }
  // bottom/right side
  if (reference[side] + arrowElementSize > popper[opSide]) {
    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];
  }
  data.offsets.popper = getClientRect(data.offsets.popper);

  // compute center of the popper
  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;

  // Compute the sideValue using the updated popper offsets
  // take popper margin in account because we don't have this info available
  var css = getStyleComputedProperty(data.instance.popper);
  var popperMarginSide = parseFloat(css['margin' + sideCapitalized], 10);
  var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width'], 10);
  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;

  // prevent arrowElement from being placed not contiguously to its popper
  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);

  data.arrowElement = arrowElement;
  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);

  return data;
}

/**
 * Get the opposite placement variation of the given one
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement variation
 * @returns {String} flipped placement variation
 */
function getOppositeVariation(variation) {
  if (variation === 'end') {
    return 'start';
  } else if (variation === 'start') {
    return 'end';
  }
  return variation;
}

/**
 * List of accepted placements to use as values of the `placement` option.<br />
 * Valid placements are:
 * - `auto`
 * - `top`
 * - `right`
 * - `bottom`
 * - `left`
 *
 * Each placement can have a variation from this list:
 * - `-start`
 * - `-end`
 *
 * Variations are interpreted easily if you think of them as the left to right
 * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`
 * is right.<br />
 * Vertically (`left` and `right`), `start` is top and `end` is bottom.
 *
 * Some valid examples are:
 * - `top-end` (on top of reference, right aligned)
 * - `right-start` (on right of reference, top aligned)
 * - `bottom` (on bottom, centered)
 * - `auto-right` (on the side with more space available, alignment depends by placement)
 *
 * @static
 * @type {Array}
 * @enum {String}
 * @readonly
 * @method placements
 * @memberof Popper
 */
var placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];

// Get rid of `auto` `auto-start` and `auto-end`
var validPlacements = placements.slice(3);

/**
 * Given an initial placement, returns all the subsequent placements
 * clockwise (or counter-clockwise).
 *
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement - A valid placement (it accepts variations)
 * @argument {Boolean} counter - Set to true to walk the placements counterclockwise
 * @returns {Array} placements including their variations
 */
function clockwise(placement) {
  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  var index = validPlacements.indexOf(placement);
  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));
  return counter ? arr.reverse() : arr;
}

var BEHAVIORS = {
  FLIP: 'flip',
  CLOCKWISE: 'clockwise',
  COUNTERCLOCKWISE: 'counterclockwise'
};

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function flip(data, options) {
  // if `inner` modifier is enabled, we can't use the `flip` modifier
  if (isModifierEnabled(data.instance.modifiers, 'inner')) {
    return data;
  }

  if (data.flipped && data.placement === data.originalPlacement) {
    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides
    return data;
  }

  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);

  var placement = data.placement.split('-')[0];
  var placementOpposite = getOppositePlacement(placement);
  var variation = data.placement.split('-')[1] || '';

  var flipOrder = [];

  switch (options.behavior) {
    case BEHAVIORS.FLIP:
      flipOrder = [placement, placementOpposite];
      break;
    case BEHAVIORS.CLOCKWISE:
      flipOrder = clockwise(placement);
      break;
    case BEHAVIORS.COUNTERCLOCKWISE:
      flipOrder = clockwise(placement, true);
      break;
    default:
      flipOrder = options.behavior;
  }

  flipOrder.forEach(function (step, index) {
    if (placement !== step || flipOrder.length === index + 1) {
      return data;
    }

    placement = data.placement.split('-')[0];
    placementOpposite = getOppositePlacement(placement);

    var popperOffsets = data.offsets.popper;
    var refOffsets = data.offsets.reference;

    // using floor because the reference offsets may contain decimals we are not going to consider here
    var floor = Math.floor;
    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);

    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);
    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);
    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);
    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);

    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;

    // flip the variation if required
    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;
    var flippedVariation = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);

    if (overlapsRef || overflowsBoundaries || flippedVariation) {
      // this boolean to detect any flip loop
      data.flipped = true;

      if (overlapsRef || overflowsBoundaries) {
        placement = flipOrder[index + 1];
      }

      if (flippedVariation) {
        variation = getOppositeVariation(variation);
      }

      data.placement = placement + (variation ? '-' + variation : '');

      // this object contains `position`, we want to preserve it along with
      // any additional property we may add in the future
      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));

      data = runModifiers(data.instance.modifiers, data, 'flip');
    }
  });
  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function keepTogether(data) {
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;

  var placement = data.placement.split('-')[0];
  var floor = Math.floor;
  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;
  var side = isVertical ? 'right' : 'bottom';
  var opSide = isVertical ? 'left' : 'top';
  var measurement = isVertical ? 'width' : 'height';

  if (popper[side] < floor(reference[opSide])) {
    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];
  }
  if (popper[opSide] > floor(reference[side])) {
    data.offsets.popper[opSide] = floor(reference[side]);
  }

  return data;
}

/**
 * Converts a string containing value + unit into a px value number
 * @function
 * @memberof {modifiers~offset}
 * @private
 * @argument {String} str - Value + unit string
 * @argument {String} measurement - `height` or `width`
 * @argument {Object} popperOffsets
 * @argument {Object} referenceOffsets
 * @returns {Number|String}
 * Value in pixels, or original string if no values were extracted
 */
function toValue(str, measurement, popperOffsets, referenceOffsets) {
  // separate value from unit
  var split = str.match(/((?:\-|\+)?\d*\.?\d*)(.*)/);
  var value = +split[1];
  var unit = split[2];

  // If it's not a number it's an operator, I guess
  if (!value) {
    return str;
  }

  if (unit.indexOf('%') === 0) {
    var element = void 0;
    switch (unit) {
      case '%p':
        element = popperOffsets;
        break;
      case '%':
      case '%r':
      default:
        element = referenceOffsets;
    }

    var rect = getClientRect(element);
    return rect[measurement] / 100 * value;
  } else if (unit === 'vh' || unit === 'vw') {
    // if is a vh or vw, we calculate the size based on the viewport
    var size = void 0;
    if (unit === 'vh') {
      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);
    } else {
      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);
    }
    return size / 100 * value;
  } else {
    // if is an explicit pixel unit, we get rid of the unit and keep the value
    // if is an implicit unit, it's px, and we return just the value
    return value;
  }
}

/**
 * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.
 * @function
 * @memberof {modifiers~offset}
 * @private
 * @argument {String} offset
 * @argument {Object} popperOffsets
 * @argument {Object} referenceOffsets
 * @argument {String} basePlacement
 * @returns {Array} a two cells array with x and y offsets in numbers
 */
function parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {
  var offsets = [0, 0];

  // Use height if placement is left or right and index is 0 otherwise use width
  // in this way the first offset will use an axis and the second one
  // will use the other one
  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;

  // Split the offset string to obtain a list of values and operands
  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)
  var fragments = offset.split(/(\+|\-)/).map(function (frag) {
    return frag.trim();
  });

  // Detect if the offset string contains a pair of values or a single one
  // they could be separated by comma or space
  var divider = fragments.indexOf(find(fragments, function (frag) {
    return frag.search(/,|\s/) !== -1;
  }));

  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {
    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');
  }

  // If divider is found, we divide the list of values and operands to divide
  // them by ofset X and Y.
  var splitRegex = /\s*,\s*|\s+/;
  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];

  // Convert the values with units to absolute pixels to allow our computations
  ops = ops.map(function (op, index) {
    // Most of the units rely on the orientation of the popper
    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';
    var mergeWithPrevious = false;
    return op
    // This aggregates any `+` or `-` sign that aren't considered operators
    // e.g.: 10 + +5 => [10, +, +5]
    .reduce(function (a, b) {
      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {
        a[a.length - 1] = b;
        mergeWithPrevious = true;
        return a;
      } else if (mergeWithPrevious) {
        a[a.length - 1] += b;
        mergeWithPrevious = false;
        return a;
      } else {
        return a.concat(b);
      }
    }, [])
    // Here we convert the string values into number values (in px)
    .map(function (str) {
      return toValue(str, measurement, popperOffsets, referenceOffsets);
    });
  });

  // Loop trough the offsets arrays and execute the operations
  ops.forEach(function (op, index) {
    op.forEach(function (frag, index2) {
      if (isNumeric(frag)) {
        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);
      }
    });
  });
  return offsets;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @argument {Number|String} options.offset=0
 * The offset value as described in the modifier description
 * @returns {Object} The data object, properly modified
 */
function offset(data, _ref) {
  var offset = _ref.offset;
  var placement = data.placement,
      _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;

  var basePlacement = placement.split('-')[0];

  var offsets = void 0;
  if (isNumeric(+offset)) {
    offsets = [+offset, 0];
  } else {
    offsets = parseOffset(offset, popper, reference, basePlacement);
  }

  if (basePlacement === 'left') {
    popper.top += offsets[0];
    popper.left -= offsets[1];
  } else if (basePlacement === 'right') {
    popper.top += offsets[0];
    popper.left += offsets[1];
  } else if (basePlacement === 'top') {
    popper.left += offsets[0];
    popper.top -= offsets[1];
  } else if (basePlacement === 'bottom') {
    popper.left += offsets[0];
    popper.top += offsets[1];
  }

  data.popper = popper;
  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function preventOverflow(data, options) {
  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);

  // If offsetParent is the reference element, we really want to
  // go one step up and use the next offsetParent as reference to
  // avoid to make this modifier completely useless and look like broken
  if (data.instance.reference === boundariesElement) {
    boundariesElement = getOffsetParent(boundariesElement);
  }

  // NOTE: DOM access here
  // resets the popper's position so that the document size can be calculated excluding
  // the size of the popper element itself
  var transformProp = getSupportedPropertyName('transform');
  var popperStyles = data.instance.popper.style; // assignment to help minification
  var top = popperStyles.top,
      left = popperStyles.left,
      transform = popperStyles[transformProp];

  popperStyles.top = '';
  popperStyles.left = '';
  popperStyles[transformProp] = '';

  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);

  // NOTE: DOM access here
  // restores the original style properties after the offsets have been computed
  popperStyles.top = top;
  popperStyles.left = left;
  popperStyles[transformProp] = transform;

  options.boundaries = boundaries;

  var order = options.priority;
  var popper = data.offsets.popper;

  var check = {
    primary: function primary(placement) {
      var value = popper[placement];
      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {
        value = Math.max(popper[placement], boundaries[placement]);
      }
      return defineProperty({}, placement, value);
    },
    secondary: function secondary(placement) {
      var mainSide = placement === 'right' ? 'left' : 'top';
      var value = popper[mainSide];
      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {
        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));
      }
      return defineProperty({}, mainSide, value);
    }
  };

  order.forEach(function (placement) {
    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';
    popper = _extends({}, popper, check[side](placement));
  });

  data.offsets.popper = popper;

  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function shift(data) {
  var placement = data.placement;
  var basePlacement = placement.split('-')[0];
  var shiftvariation = placement.split('-')[1];

  // if shift shiftvariation is specified, run the modifier
  if (shiftvariation) {
    var _data$offsets = data.offsets,
        reference = _data$offsets.reference,
        popper = _data$offsets.popper;

    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;
    var side = isVertical ? 'left' : 'top';
    var measurement = isVertical ? 'width' : 'height';

    var shiftOffsets = {
      start: defineProperty({}, side, reference[side]),
      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])
    };

    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);
  }

  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function hide(data) {
  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {
    return data;
  }

  var refRect = data.offsets.reference;
  var bound = find(data.instance.modifiers, function (modifier) {
    return modifier.name === 'preventOverflow';
  }).boundaries;

  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {
    // Avoid unnecessary DOM access if visibility hasn't changed
    if (data.hide === true) {
      return data;
    }

    data.hide = true;
    data.attributes['x-out-of-boundaries'] = '';
  } else {
    // Avoid unnecessary DOM access if visibility hasn't changed
    if (data.hide === false) {
      return data;
    }

    data.hide = false;
    data.attributes['x-out-of-boundaries'] = false;
  }

  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function inner(data) {
  var placement = data.placement;
  var basePlacement = placement.split('-')[0];
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;

  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;

  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;

  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);

  data.placement = getOppositePlacement(placement);
  data.offsets.popper = getClientRect(popper);

  return data;
}

/**
 * Modifier function, each modifier can have a function of this type assigned
 * to its `fn` property.<br />
 * These functions will be called on each update, this means that you must
 * make sure they are performant enough to avoid performance bottlenecks.
 *
 * @function ModifierFn
 * @argument {dataObject} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {dataObject} The data object, properly modified
 */

/**
 * Modifiers are plugins used to alter the behavior of your poppers.<br />
 * Popper.js uses a set of 9 modifiers to provide all the basic functionalities
 * needed by the library.
 *
 * Usually you don't want to override the `order`, `fn` and `onLoad` props.
 * All the other properties are configurations that could be tweaked.
 * @namespace modifiers
 */
var modifiers = {
  /**
   * Modifier used to shift the popper on the start or end of its reference
   * element.<br />
   * It will read the variation of the `placement` property.<br />
   * It can be one either `-end` or `-start`.
   * @memberof modifiers
   * @inner
   */
  shift: {
    /** @prop {number} order=100 - Index used to define the order of execution */
    order: 100,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: shift
  },

  /**
   * The `offset` modifier can shift your popper on both its axis.
   *
   * It accepts the following units:
   * - `px` or unitless, interpreted as pixels
   * - `%` or `%r`, percentage relative to the length of the reference element
   * - `%p`, percentage relative to the length of the popper element
   * - `vw`, CSS viewport width unit
   * - `vh`, CSS viewport height unit
   *
   * For length is intended the main axis relative to the placement of the popper.<br />
   * This means that if the placement is `top` or `bottom`, the length will be the
   * `width`. In case of `left` or `right`, it will be the height.
   *
   * You can provide a single value (as `Number` or `String`), or a pair of values
   * as `String` divided by a comma or one (or more) white spaces.<br />
   * The latter is a deprecated method because it leads to confusion and will be
   * removed in v2.<br />
   * Additionally, it accepts additions and subtractions between different units.
   * Note that multiplications and divisions aren't supported.
   *
   * Valid examples are:
   * ```
   * 10
   * '10%'
   * '10, 10'
   * '10%, 10'
   * '10 + 10%'
   * '10 - 5vh + 3%'
   * '-10px + 5vh, 5px - 6%'
   * ```
   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap
   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.
   * > More on this [reading this issue](https://github.com/FezVrasta/popper.js/issues/373)
   *
   * @memberof modifiers
   * @inner
   */
  offset: {
    /** @prop {number} order=200 - Index used to define the order of execution */
    order: 200,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: offset,
    /** @prop {Number|String} offset=0
     * The offset value as described in the modifier description
     */
    offset: 0
  },

  /**
   * Modifier used to prevent the popper from being positioned outside the boundary.
   *
   * An scenario exists where the reference itself is not within the boundaries.<br />
   * We can say it has "escaped the boundaries" — or just "escaped".<br />
   * In this case we need to decide whether the popper should either:
   *
   * - detach from the reference and remain "trapped" in the boundaries, or
   * - if it should ignore the boundary and "escape with its reference"
   *
   * When `escapeWithReference` is set to`true` and reference is completely
   * outside its boundaries, the popper will overflow (or completely leave)
   * the boundaries in order to remain attached to the edge of the reference.
   *
   * @memberof modifiers
   * @inner
   */
  preventOverflow: {
    /** @prop {number} order=300 - Index used to define the order of execution */
    order: 300,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: preventOverflow,
    /**
     * @prop {Array} [priority=['left','right','top','bottom']]
     * Popper will try to prevent overflow following these priorities by default,
     * then, it could overflow on the left and on top of the `boundariesElement`
     */
    priority: ['left', 'right', 'top', 'bottom'],
    /**
     * @prop {number} padding=5
     * Amount of pixel used to define a minimum distance between the boundaries
     * and the popper this makes sure the popper has always a little padding
     * between the edges of its container
     */
    padding: 5,
    /**
     * @prop {String|HTMLElement} boundariesElement='scrollParent'
     * Boundaries used by the modifier, can be `scrollParent`, `window`,
     * `viewport` or any DOM element.
     */
    boundariesElement: 'scrollParent'
  },

  /**
   * Modifier used to make sure the reference and its popper stay near eachothers
   * without leaving any gap between the two. Expecially useful when the arrow is
   * enabled and you want to assure it to point to its reference element.
   * It cares only about the first axis, you can still have poppers with margin
   * between the popper and its reference element.
   * @memberof modifiers
   * @inner
   */
  keepTogether: {
    /** @prop {number} order=400 - Index used to define the order of execution */
    order: 400,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: keepTogether
  },

  /**
   * This modifier is used to move the `arrowElement` of the popper to make
   * sure it is positioned between the reference element and its popper element.
   * It will read the outer size of the `arrowElement` node to detect how many
   * pixels of conjuction are needed.
   *
   * It has no effect if no `arrowElement` is provided.
   * @memberof modifiers
   * @inner
   */
  arrow: {
    /** @prop {number} order=500 - Index used to define the order of execution */
    order: 500,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: arrow,
    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */
    element: '[x-arrow]'
  },

  /**
   * Modifier used to flip the popper's placement when it starts to overlap its
   * reference element.
   *
   * Requires the `preventOverflow` modifier before it in order to work.
   *
   * **NOTE:** this modifier will interrupt the current update cycle and will
   * restart it if it detects the need to flip the placement.
   * @memberof modifiers
   * @inner
   */
  flip: {
    /** @prop {number} order=600 - Index used to define the order of execution */
    order: 600,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: flip,
    /**
     * @prop {String|Array} behavior='flip'
     * The behavior used to change the popper's placement. It can be one of
     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid
     * placements (with optional variations).
     */
    behavior: 'flip',
    /**
     * @prop {number} padding=5
     * The popper will flip if it hits the edges of the `boundariesElement`
     */
    padding: 5,
    /**
     * @prop {String|HTMLElement} boundariesElement='viewport'
     * The element which will define the boundaries of the popper position,
     * the popper will never be placed outside of the defined boundaries
     * (except if keepTogether is enabled)
     */
    boundariesElement: 'viewport'
  },

  /**
   * Modifier used to make the popper flow toward the inner of the reference element.
   * By default, when this modifier is disabled, the popper will be placed outside
   * the reference element.
   * @memberof modifiers
   * @inner
   */
  inner: {
    /** @prop {number} order=700 - Index used to define the order of execution */
    order: 700,
    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */
    enabled: false,
    /** @prop {ModifierFn} */
    fn: inner
  },

  /**
   * Modifier used to hide the popper when its reference element is outside of the
   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can
   * be used to hide with a CSS selector the popper when its reference is
   * out of boundaries.
   *
   * Requires the `preventOverflow` modifier before it in order to work.
   * @memberof modifiers
   * @inner
   */
  hide: {
    /** @prop {number} order=800 - Index used to define the order of execution */
    order: 800,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: hide
  },

  /**
   * Computes the style that will be applied to the popper element to gets
   * properly positioned.
   *
   * Note that this modifier will not touch the DOM, it just prepares the styles
   * so that `applyStyle` modifier can apply it. This separation is useful
   * in case you need to replace `applyStyle` with a custom implementation.
   *
   * This modifier has `850` as `order` value to maintain backward compatibility
   * with previous versions of Popper.js. Expect the modifiers ordering method
   * to change in future major versions of the library.
   *
   * @memberof modifiers
   * @inner
   */
  computeStyle: {
    /** @prop {number} order=850 - Index used to define the order of execution */
    order: 850,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: computeStyle,
    /**
     * @prop {Boolean} gpuAcceleration=true
     * If true, it uses the CSS 3d transformation to position the popper.
     * Otherwise, it will use the `top` and `left` properties.
     */
    gpuAcceleration: true,
    /**
     * @prop {string} [x='bottom']
     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.
     * Change this if your popper should grow in a direction different from `bottom`
     */
    x: 'bottom',
    /**
     * @prop {string} [x='left']
     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.
     * Change this if your popper should grow in a direction different from `right`
     */
    y: 'right'
  },

  /**
   * Applies the computed styles to the popper element.
   *
   * All the DOM manipulations are limited to this modifier. This is useful in case
   * you want to integrate Popper.js inside a framework or view library and you
   * want to delegate all the DOM manipulations to it.
   *
   * Note that if you disable this modifier, you must make sure the popper element
   * has its position set to `absolute` before Popper.js can do its work!
   *
   * Just disable this modifier and define you own to achieve the desired effect.
   *
   * @memberof modifiers
   * @inner
   */
  applyStyle: {
    /** @prop {number} order=900 - Index used to define the order of execution */
    order: 900,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: applyStyle,
    /** @prop {Function} */
    onLoad: applyStyleOnLoad,
    /**
     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier
     * @prop {Boolean} gpuAcceleration=true
     * If true, it uses the CSS 3d transformation to position the popper.
     * Otherwise, it will use the `top` and `left` properties.
     */
    gpuAcceleration: undefined
  }
};

/**
 * The `dataObject` is an object containing all the informations used by Popper.js
 * this object get passed to modifiers and to the `onCreate` and `onUpdate` callbacks.
 * @name dataObject
 * @property {Object} data.instance The Popper.js instance
 * @property {String} data.placement Placement applied to popper
 * @property {String} data.originalPlacement Placement originally defined on init
 * @property {Boolean} data.flipped True if popper has been flipped by flip modifier
 * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper.
 * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier
 * @property {Object} data.styles Any CSS property defined here will be applied to the popper, it expects the JavaScript nomenclature (eg. `marginBottom`)
 * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow, it expects the JavaScript nomenclature (eg. `marginBottom`)
 * @property {Object} data.boundaries Offsets of the popper boundaries
 * @property {Object} data.offsets The measurements of popper, reference and arrow elements.
 * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values
 * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values
 * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0
 */

/**
 * Default options provided to Popper.js constructor.<br />
 * These can be overriden using the `options` argument of Popper.js.<br />
 * To override an option, simply pass as 3rd argument an object with the same
 * structure of this object, example:
 * ```
 * new Popper(ref, pop, {
 *   modifiers: {
 *     preventOverflow: { enabled: false }
 *   }
 * })
 * ```
 * @type {Object}
 * @static
 * @memberof Popper
 */
var Defaults = {
  /**
   * Popper's placement
   * @prop {Popper.placements} placement='bottom'
   */
  placement: 'bottom',

  /**
   * Set this to true if you want popper to position it self in 'fixed' mode
   * @prop {Boolean} positionFixed=false
   */
  positionFixed: false,

  /**
   * Whether events (resize, scroll) are initially enabled
   * @prop {Boolean} eventsEnabled=true
   */
  eventsEnabled: true,

  /**
   * Set to true if you want to automatically remove the popper when
   * you call the `destroy` method.
   * @prop {Boolean} removeOnDestroy=false
   */
  removeOnDestroy: false,

  /**
   * Callback called when the popper is created.<br />
   * By default, is set to no-op.<br />
   * Access Popper.js instance with `data.instance`.
   * @prop {onCreate}
   */
  onCreate: function onCreate() {},

  /**
   * Callback called when the popper is updated, this callback is not called
   * on the initialization/creation of the popper, but only on subsequent
   * updates.<br />
   * By default, is set to no-op.<br />
   * Access Popper.js instance with `data.instance`.
   * @prop {onUpdate}
   */
  onUpdate: function onUpdate() {},

  /**
   * List of modifiers used to modify the offsets before they are applied to the popper.
   * They provide most of the functionalities of Popper.js
   * @prop {modifiers}
   */
  modifiers: modifiers
};

/**
 * @callback onCreate
 * @param {dataObject} data
 */

/**
 * @callback onUpdate
 * @param {dataObject} data
 */

// Utils
// Methods
var Popper = function () {
  /**
   * Create a new Popper.js instance
   * @class Popper
   * @param {HTMLElement|referenceObject} reference - The reference element used to position the popper
   * @param {HTMLElement} popper - The HTML element used as popper.
   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)
   * @return {Object} instance - The generated Popper.js instance
   */
  function Popper(reference, popper) {
    var _this = this;

    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    classCallCheck(this, Popper);

    this.scheduleUpdate = function () {
      return requestAnimationFrame(_this.update);
    };

    // make update() debounced, so that it only runs at most once-per-tick
    this.update = debounce(this.update.bind(this));

    // with {} we create a new object with the options inside it
    this.options = _extends({}, Popper.Defaults, options);

    // init state
    this.state = {
      isDestroyed: false,
      isCreated: false,
      scrollParents: []
    };

    // get reference and popper elements (allow jQuery wrappers)
    this.reference = reference && reference.jquery ? reference[0] : reference;
    this.popper = popper && popper.jquery ? popper[0] : popper;

    // Deep merge modifiers options
    this.options.modifiers = {};
    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {
      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});
    });

    // Refactoring modifiers' list (Object => Array)
    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {
      return _extends({
        name: name
      }, _this.options.modifiers[name]);
    })
    // sort the modifiers by order
    .sort(function (a, b) {
      return a.order - b.order;
    });

    // modifiers have the ability to execute arbitrary code when Popper.js get inited
    // such code is executed in the same order of its modifier
    // they could add new properties to their options configuration
    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!
    this.modifiers.forEach(function (modifierOptions) {
      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {
        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);
      }
    });

    // fire the first update to position the popper in the right place
    this.update();

    var eventsEnabled = this.options.eventsEnabled;
    if (eventsEnabled) {
      // setup event listeners, they will take care of update the position in specific situations
      this.enableEventListeners();
    }

    this.state.eventsEnabled = eventsEnabled;
  }

  // We can't use class properties because they don't get listed in the
  // class prototype and break stuff like Sinon stubs


  createClass(Popper, [{
    key: 'update',
    value: function update$$1() {
      return update.call(this);
    }
  }, {
    key: 'destroy',
    value: function destroy$$1() {
      return destroy.call(this);
    }
  }, {
    key: 'enableEventListeners',
    value: function enableEventListeners$$1() {
      return enableEventListeners.call(this);
    }
  }, {
    key: 'disableEventListeners',
    value: function disableEventListeners$$1() {
      return disableEventListeners.call(this);
    }

    /**
     * Schedule an update, it will run on the next UI update available
     * @method scheduleUpdate
     * @memberof Popper
     */


    /**
     * Collection of utilities useful when writing custom modifiers.
     * Starting from version 1.7, this method is available only if you
     * include `popper-utils.js` before `popper.js`.
     *
     * **DEPRECATION**: This way to access PopperUtils is deprecated
     * and will be removed in v2! Use the PopperUtils module directly instead.
     * Due to the high instability of the methods contained in Utils, we can't
     * guarantee them to follow semver. Use them at your own risk!
     * @static
     * @private
     * @type {Object}
     * @deprecated since version 1.8
     * @member Utils
     * @memberof Popper
     */

  }]);
  return Popper;
}();

/**
 * The `referenceObject` is an object that provides an interface compatible with Popper.js
 * and lets you use it as replacement of a real DOM node.<br />
 * You can use this method to position a popper relatively to a set of coordinates
 * in case you don't have a DOM node to use as reference.
 *
 * ```
 * new Popper(referenceObject, popperNode);
 * ```
 *
 * NB: This feature isn't supported in Internet Explorer 10
 * @name referenceObject
 * @property {Function} data.getBoundingClientRect
 * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.
 * @property {number} data.clientWidth
 * An ES6 getter that will return the width of the virtual reference element.
 * @property {number} data.clientHeight
 * An ES6 getter that will return the height of the virtual reference element.
 */


Popper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;
Popper.placements = placements;
Popper.Defaults = Defaults;

/* harmony default export */ __webpack_exports__["default"] = (Popper);
//# sourceMappingURL=popper.js.map

/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(222)))

/***/ }),
/* 403 */
/***/ (function(module, exports) {

module.exports = "<div class=\"kl-dropdown {class}\" r-width=\"{width}\">\n    <div class=\"kl-dropdown__header {headerClass}\" ref=\"reference\"\n        on-click=\"{this.onClick($event)}\">\n        {#if this.$header}\n            {#inc this.$header.$body}\n        {/if}\n    </div>\n    <div>\n        <kl-popper\n            class=\"kl-dropdown__footer\"\n            reference=\"{this.$refs.reference}\"\n            appendToBody=\"{appendToBody}\"\n            placement=\"{placement}\"\n            isShow=\"{isShow}\">\n                {#inc this.$body}\n        </kl-popper>\n    </div>\n</div>"

/***/ }),
/* 404 */
/***/ (function(module, exports) {

module.exports = "<kl-drop placement={placement} appendToBody={appendToBody} class=\"kl-select kl-select--{state} kl-select--{size} {class}\"\n\twidth={width}\n    isShow={open}\n    disabled={disabled}\n\ton-click={this.toggle(!open, $event)}>\n\t<kl-drop-header>\n\t\t{#if !multiple}\n\t\t\t<div class=\"kl-dropdown__hd\"\n\t\t\t\t r-class={{'is-active':open}}\n\t\t\t\t is-dis={disabled}\n\t\t\t\t title={selected?selected[nameKey]:placeholder}\n\t\t\t\t >\n\t\t\t\t<kl-icon fontSize=12 type=\"{open ? 'arrow-up' : 'arrow-down'}\" class=\"f-fr {clearable ? 'kl-select__hover--hide' : ''}\"/>\n\t\t\t\t{#if clearable}\n\t\t\t\t<kl-icon fontSize=15 type=\"error\" on-click={this.selectNone($event)} class=\"f-fr kl-select__hover--show\"/>\n\t\t\t\t{/if}\n\t\t\t\t{#if open && canSearch}\n\t\t\t\t<input disabled={disabled} readonly={readonly} type=\"text\" class={selected?'kl-select__input-inner kl-select__search':'kl-select__input-inner kl-select__search kl-select__multi-placeholder'} r-autofocus\n\t\t\t\t\t\tplaceholder={selected?selected[nameKey]:placeholder} r-model={searchValue}/>\n\t\t\t\t{/if}\n\t\t\t\t<!-- 下面用的 r-hide 是因为在 dropdown 基类里面会给 dom 绑定一个 click 事件然后判断事件的 $event 是不是这个 dropdown 的子节点，\n\t\t\t\t\t如果不是子节点就将 open 置为 false，如果用 if else 的话触发这个事件的时候节点已经不在了，所以会判断成在 dropdown 外面点击，就会出现展开马上又收起的问题 -->\n\t\t\t\t<span class={selected?'':'kl-select__multi-placeholder'} r-hide={open && canSearch}>{selected?selected[nameKey]:placeholder}</span>\n\t\t\t</div>\n\t\t{#else}\n\t\t\t<div class=\"kl-dropdown__hd\"\n\t\t\t\t r-class={{'is-active':open}}\n\t\t\t\t r-style={{'max-height': (open && canSearch) ? '116px' : '84px'}}\n\t\t\t\t {#if open && canSearch} style=\"min-height: 65px;\" {/if}>\n\t\t\t\t<kl-icon fontSize=12 type=\"{open ? 'arrow-up' : 'arrow-down'}\" class=\"f-fr {multiple ? 'kl-select__hover--hide' : ''}\"/>\n\n\t\t\t\t{#if open && canSearch}\n\t\t\t\t<div>\n\t\t\t\t\t<input disabled={disabled} readonly={readonly} type=\"text\" class=\"kl-select__input-inner kl-select__search kl-select__search--one\" ref=\"input\"\n\t\t\t\t\t\t   r-autofocus r-model={searchValue} on-click={this.searchClick($event)}/>\n\t\t\t\t\t<kl-icon fontSize=15 type=\"error\" on-click={this.clearContent($event)} class=\"kl-icon-remove-addclass \"/>\n\t\t\t\t</div>\n\t\t\t\t{/if}\n\t\t\t\t{#if tags && selected && selected.length > 0}\n\t\t\t\t\t<span class=\"kl-select__tag\" >\n\t\t\t\t\t\t{selected[0][nameKey]}\n\t\t\t\t\t\t<kl-icon type=\"cross\" is-dis={selected.disabled} on-click={this.removeSelected(selected,0,$event)} />\n\t\t\t\t\t</span>\n\t\t\t\t\t<span class=\"kl-select__tags\" >\n\t\t\t\t\t\t+ {selected.length}\n\t\t\t\t\t</span>\n\t\t\t\t{#else}\n\t\t\t\t\t{#list selected as item}\n\t\t\t\t\t\t<span class=\"kl-select__tag\" r-class={{'kl-select__tag--more':item[nameKey].length >= 15}}>\n\t\t\t\t\t\t\t{item[nameKey]}\n\t\t\t\t\t\t\t<kl-icon type=\"cross\" is-dis={item.disabled} on-click={this.removeSelected(selected,item_index,$event)} />\n\t\t\t\t\t\t</span>\n\t\t\t\t\t{/list}\n\t\t\t\t{/if}\n\t\t\t\t<span class='kl-select__multi-placeholder' r-hide={!(!open && (!selected || !selected.length))}>{placeholder}</span>\n\t\t\t</div>\n\t\t{/if}\n\n\t\t{#if tip && !hideTip}<span class=\"kl-tip kl-tip--{state} animated\" r-animation=\"on:enter;class:fadeInY;on:leave;class:fadeOutY;\"><kl-icon type={state} /><span class=\"tip\">{tip}</span></span>{/if}\n\t</kl-drop-header>\n\n\n \t<div class=\"kl-listview kl-select--listview\" ref=\"listview\">\n\t\t<kl-scroll wrapMaxHeight=\"200px\">\n\t\t\t<ul>\n\t\t\t{#if placeholder}\n\t\t\t<li is-hover={key_index == -1} class=\"kl-listview-item\" is-sel={multiple?(!selected || !selected.length):!selected} on-click={this.select(undefined)}>\n\t\t\t{placeholder}\n\t\t\t</li>\n\t\t\t{/if}\n\t\t\t{#list this.filterArray(source) as item}\n\t\t\t{#if (!filter || (filter && filter(item)))}\n\t\t\t{#if canSelectAll && multiple && item_index == 0 && (canSearch && !searchValue)}\n\t\t\t<li is-hover={key_index == 'all'} class=\"kl-listview-item\" on-click={this.selectAll(!selected ? true : selected.length!==this.filterData(source).length)}>\n\t\t\t<check disabled={disabled} checked={!selected ? false : selected.length===this.filterData(source).length} />\n\t\t\t{this.$trans('ALL')}\n\t\t\t</li>\n\t\t\t{/if}\n\t\t\t{#if item.disabled && item.tip}\n\t\t\t<kl-tooltip tip={item.tip} placement={item.placement||'top'}>\n\t\t\t\t<li is-dis={item.disabled} class=\"kl-listview-item\" is-divider={item.divider} is-sel={multiple?false:selected===item}\n\t\t\t\t\ttitle={item[nameKey]} on-click={this.select(item)}>\n\t\t\t\t{#if multiple && !item.divider}\n\t\t\t\t<check disabled={item.disabled} checked={multiple?this.indexOf(selected,item)!==-1:selected===item} />\n\t\t\t\t{/if}\n\t\t\t\t{#if @(itemTemplate)}\n\t\t\t\t{#inc @(itemTemplate)}\n\t\t\t\t{#else}\n\t\t\t\t{@(item[nameKey])}\n\t\t\t\t{/if}\n\t\t\t\t</li>\n\t\t\t</kl-tooltip>\n\t\t\t{#else}\n\t\t\t<li is-hover={key_index == item_index} class=\"kl-listview-item\"  is-dis={item.disabled} is-divider={item.divider} is-sel={multiple?false:selected===item}\n\t\t\ttitle={item[nameKey]} on-click={this.select(item)}>\n\t\t\t{#if multiple && !item.divider}\n\t\t\t<check disabled={item.disabled} checked={multiple?this.indexOf(selected,item)!==-1:selected===item} />\n\t\t\t{/if}\n\t\t\t{#if @(itemTemplate)}\n\t\t\t{#inc @(itemTemplate)}\n\t\t\t{#else}\n\t\t\t{@(item[nameKey])}\n\t\t\t{/if}\n\t\t\t</li>\n\t\t\t{/if}\n\t\t\t{/if}\n\t\t\t{#else}\n\t\t\t{#if searchValue}\n\t\t\t<li class=\"kl-listview-item\">\n\t\t\t\t{@(noMatchText)}\n\t\t\t</li>\n\t\t\t{/if}\n\t\t\t{/list}\n\t\t\t</ul>\n\t\t</kl-scroll>\n\t</div>\n</kl-drop>\n"

/***/ }),
/* 405 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * ------------------------------------------------------------
 * kl-select  多选的方法
 * ------------------------------------------------------------
 */

var util = __webpack_require__(223);

module.exports = function Multiple(Component) {
  Component.implement({
    selectAll: function selectAll(isSelected) {
      var data = this.data;
      if (isSelected) {
        data.selected = this.filterData(data.source);
      } else {
        data.selected = [];
      }
      this.toggle(false);
    },
    removeSelected: function removeSelected(selected, index, event) {
      event && event.stopPropagation();
      if (selected[index].disabled) return;
      selected.splice(index, 1);
      this.toggle(true);
      this.searchInputFocus();
    },
    backSearchValue: function backSearchValue(event, selected, searchValue) {
      var isBackSpaceKeyCode = 8;
      if (event.which === isBackSpaceKeyCode && !searchValue.trim()) {
        this.removeSelected(selected, selected.length - 1, event);
      }
    },
    searchClick: function searchClick(event) {
      event && event.stopPropagation();
      this.toggle(true);
      this.searchInputFocus();
    },
    searchInputFocus: function searchInputFocus() {
      this.$refs.input && this.$refs.input.focus();
    },
    clearSearchValue: function clearSearchValue() {
      var data = this.data;
      util.clearDataToNUll(data, 'searchValue', '');
    }
  }).directive({
    computedTextWidth: function computedTextWidth(element, value) {
      var getStrInDOMWidth = function getStrInDOMWidth(str) {
        var doc = document;
        var body = doc.body;
        var span = doc.createElement('span');
        span.style.whiteSpace = 'pre';
        span.style.visibility = 'hidden';
        span.innerText = str;
        body.appendChild(span);
        var width = span.getClientRects()[0].width;
        body.removeChild(span);
        return width;
      };
      this.$watch(value, function (newValue) {
        if (newValue) {
          element.style.width = getStrInDOMWidth(newValue) + 1 + 'px';
        } else {
          element.style.width = '';
        }
      });
    }
  });
};

/***/ }),
/* 406 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _stringify = __webpack_require__(44);

var _stringify2 = _interopRequireDefault(_stringify);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * ------------------------------------------------------------
 * kl-select  内部私有方法
 * ------------------------------------------------------------
 */

var util = __webpack_require__(223);

module.exports = function PrivateMethod(Component) {
  Component.implement({
    /**
     * 过滤可选的数据项
     * @param source
     * @returns {*}
     */
    filterData: function filterData(source) {
      return source.filter(function (item) {
        return !item.hasOwnProperty('divider') && !item.hasOwnProperty('disabled') || item.hasOwnProperty('divider') && !item.divider || item.hasOwnProperty('disabled') && !item.disabled;
      });
    },

    /**
     * 本地搜索时的过滤方法
     * @param source
     * @returns {*}
     */
    filterArray: function filterArray(source) {
      var data = this.data;
      if (this.service && this.service.getList) {
        return source;
      }
      if (!Array.isArray(source)) {
        return;
      }

      if (!data.canSearch) {
        return source;
      }
      var nameKey = data.nameKey;
      var searchValue = (data.searchValue || '').trim();
      var maxShowCount = data.maxShowCount;
      var isCaseSensitive = data.isCaseSensitive;
      searchValue = isCaseSensitive ? searchValue : searchValue.toLowerCase();
      var targetSource = source.filter(function (item, index) {
        var text = '' + item[nameKey];
        var value = isCaseSensitive ? text : text.toLowerCase();
        return searchValue && value.indexOf(searchValue) >= 0 || !searchValue && index < maxShowCount;
      });
      if (searchValue) {
        targetSource = targetSource.sort(function (pre, next) {
          return pre[data.nameKey].length - next[data.nameKey].length;
        });
      }
      if (data.limit) return targetSource.slice(0, data.limit);
      return targetSource;
    },

    /**
     * 获取 Map 在 List<Map> 中的索引，因为是数据，所以转化为字符串比较
     * @param source{List<Object>}
     * @param target{Object}
     * @returns {number}
     */
    indexOf: function indexOf(source, target) {
      var index = -1;
      if (Array.isArray(source)) {
        source.forEach(function (item, itemIndex) {
          if ((0, _stringify2.default)(item) === (0, _stringify2.default)(target)) {
            index = itemIndex;
          }
        });
      }
      return index;
    },

    /**
     * 用于获取选中项对应的索引，多个时以separator配置连接
     * @returns {*|string|string}
     */
    getValue: function getValue() {
      var data = this.data;
      var key = data.key;
      var separator = data.separator;
      return util.getSelectedTextByKey(data, function (selected) {
        return selected[key || data.nameKey];
      }, '', separator, key);
    },

    /**
     * 获取搜索值
     * @returns {{searchValue: (*|string)}}
     */
    params: function params() {
      return {
        searchValue: this.data.searchValue
      };
    },

    /**
     * 键盘事件
     */
    keyup: function keyup(event) {
      var data = this.data;
      if (data.open && [13, 27, 38, 40].indexOf(event.keyCode) > -1) {
        event.preventDefault();
        event.stopPropagation();
        switch (event.keyCode) {
          case 38:
            this.up();
            break;
          case 40:
            this.down();
            break;
          case 13:
            this.enter();
            break;
          case 27:
            data.open = false;
            this.$update();
            break;
          default:
        }
      }
    },

    /**
     * 键盘 arrow up 事件
     */
    up: function up() {
      var data = this.data;
      var all = data.canSelectAll && data.multiple && data.canSearch && !data.searchValue;
      if (data.key_index > 0) {
        data.key_index -= 1;
      } else if (data.key_index === 0) {
        data.key_index = all ? 'all' : -1;
      } else if (data.key_index === 'all') {
        data.key_index = -1;
      }
      var seeLength = Math.floor((this.$refs.listview.scrollTop + 4) / 38) - 1;
      if (data.placeholder) {
        seeLength -= 1;
      }
      if (all) {
        seeLength -= 1;
      }
      if (seeLength + 1 > data.key_index) {
        this.$refs.listview.scrollTop -= 38;
      }
      this.$update();
    },

    /**
     * 键盘 arrow down 事件
     */
    down: function down() {
      var data = this.data;
      var length = this.filterArray(data.source).length;
      var all = data.canSelectAll && data.multiple && data.canSearch && !data.searchValue;
      if (data.key_index >= 0 && data.key_index < length - 1) {
        data.key_index += 1;
      } else if (data.key_index === -1) {
        data.key_index = all ? 'all' : 0;
      } else if (data.key_index === 'all') {
        data.key_index = 0;
      }
      var seeLength = Math.floor((this.$refs.listview.scrollTop + 4) / 38);
      if (data.placeholder) {
        seeLength -= 1;
      }
      if (all) {
        seeLength -= 1;
      }
      if (seeLength + 4 < data.key_index) {
        this.$refs.listview.scrollTop += 38;
      }
      this.$update();
    },

    /**
     * 键盘 enter 事件
     */
    enter: function enter() {
      var data = this.data;
      var list = this.filterArray(data.source);
      if (data.key_index >= 0) {
        this.select(list[data.key_index]);
      } else if (data.key_index === -1) {
        this.select(undefined);
      } else {
        this.selectAll(data.selected.length !== this.filterData(data.source).length);
      }
      this.$update();
    }
  });
};

/***/ }),
/* 407 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * @file KLText  文本
 * @author   Cody Chan<int64ago@gmail.com>
 */

var Component = __webpack_require__(1);
var template = __webpack_require__(408);
var _ = __webpack_require__(2);

/**
 * @class KLText
 * @extend Component
 * @param {object}      [options.data]                = 绑定属性
 * @param {string}      [options.data.text=文本]      <=> 内容
 * @param {string}      [options.data.size]           => text大小 取值：xs、sm、lg、xl
 * @param {boolean}     [options.data.isBold=false]   => 是否加粗 取值：true-加粗 、false-不加粗
 * @param {string}      [options.data.align]          => 左右对齐方式 取值：left、center、right
 * @param {string}      [options.data.vertical]       => 上下对齐方式 取值：top、middle、bottom
 * @param {string}      [options.data.type=default]   => 文本样式 取值：default、primary、success、warning、error、inverse、muted
 * @param {string}      [options.dara.class]          => 自定义class
 * @param {string}      [options.data.url=javascript:;] =>连接的url 值为“javascript:”表示非链接文本
 * @param {string}      [options.data.target]        => a标签的target属性 取值：_blank、_self、_parent、_top
 */
var KLText = Component.extend({
  name: 'kl-text',
  template: template,
  config: function config() {
    _.extend(this.data, {
      text: '-',
      // default/primary/info/success/warning/error
      type: 'default',
      // xs/sm/lg/xl
      size: '',
      isBold: false,
      // tal/tac/tar/taj
      align: '',
      // vat/vam/vab
      vertical: '',
      /* eslint no-script-url: 0 */
      url: 'javascript:;',
      target: ''
    });
    this.supr();
  },
  onClick: function onClick(e) {
    this.$emit('click', e);
  }
});

module.exports = KLText;

/***/ }),
/* 408 */
/***/ (function(module, exports) {

module.exports = "<a href=\"{url}\" class=\"kl-text kl-text--{type} kl-text--{size} kl-text--{align} kl-text--{vertical} {class}\"\n   target=\"{target}\"\n   on-click={this.onClick($event)}\n   r-class={{'kl-text--unlink': url == 'javascript:;','kl-text--bold': isBold}}>\n  {#if this.$body}\n    {#inc this.$body}\n  {#else}\n    {#inc text}\n  {/if}\n</a>"

/***/ }),
/* 409 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * @file KLTextArea   输入扩展
 * @author   sensen(rainforest92@126.com)
 */

var Component = __webpack_require__(1);
var template = __webpack_require__(410);
var _ = __webpack_require__(2);
var Validation = __webpack_require__(9);
var validationMixin = __webpack_require__(6);
var calcTextareaHeight = __webpack_require__(411);

var bowser = __webpack_require__(23);

/**
 * @class KLTextArea
 * @extend Component
 * @param {object}        [options.data]                    = 绑定属性
 * @param {string}        [options.data.value]              <=> 文本框的值
 * @param {string}        [options.data.placeholder]         => 占位符
 * @param {number}        [options.data.maxlength]          => 文本框的最大长度
 * @param {object[]}      [options.data.rules=[]]           => 验证规则
 * @param {boolean}       [options.data.autofocus=false]    => 是否自动获得焦点
 * @param {number}        [options.data.width]              => 组件宽度
 * @param {boolean}       [options.data.required=false]     => 是否必填
 * @param {string}        [options.data.message]         => 必填校验失败提示的消息
 * @param {boolean}       [options.data.hideTip=false]      => 是否显示校验错误信息
 * @param {boolean}       [options.data.readonly=false]     => 是否只读
 * @param {boolean}       [options.data.disabled=false]     => 是否禁用
 * @param {boolean}       [options.data.visible=true]       => 是否显示
 * @param {string}        [options.data.size]               => 组件大小, sm/lg控制整体尺寸，smw/mdw/lgw控制宽度大小
 * @param {string}        [options.data.class]              => 补充class
 */
var KLTextArea = Component.extend({
  name: 'kl-textarea',
  template: template,
  config: function config() {
    _.extend(this.data, {
      hideTip: false,
      value: '',
      placeholder: '',
      state: '',
      maxlength: undefined,
      autosize: null,
      rules: [],
      autofocus: false,
      _eltIE9: bowser.msie && bowser.version <= 9,
      required: false,
      textareaCalcStyle: {}
    });

    this.supr();

    this.initValidation();
  },

  computed: {
    textareaStyle: function textareaStyle() {
      return this.merge({}, this.textareaCalcStyle, { resize: this.resize });
    }
  },
  init: function init() {
    this.resizeTextarea();
    this.$watch('required', function (value) {
      var rules = this.data.rules;
      var message = this.data.message || this.$trans('PLEASE_INPUT');
      if (value) {
        rules.push({ type: 'isRequired', message: message });
      } else {
        this.data.rules = rules.filter(function (rule) {
          return rule.type !== 'isRequired';
        });
      }
    });

    this.$watch('value', function () {
      this.resizeTextarea();
    });
  },
  resizeTextarea: function resizeTextarea() {
    var autosize = this.data.autosize;

    if (!autosize) {
      this.textareaCalcStyle = {
        minHeight: calcTextareaHeight(this.$refs.textarea).minHeight
      };
      return;
    }
    var minRows = autosize.minRows;
    var maxRows = autosize.maxRows;

    this.textareaCalcStyle = calcTextareaHeight(this.$refs.textarea, minRows, maxRows);
  },
  validate: function validate() {
    var on = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

    var data = this.data;
    // 如果是readonly或者disabled状态, 无需验证
    if (data.readonly || data.disabled) {
      return {
        success: true
      };
    }

    var value = data.value;
    var rules = data.rules;

    rules = rules.filter(function (rule) {
      return (rule.on || '').indexOf(on) >= 0;
    });
    if (!rules.length) {
      return { success: true };
    }
    var result = Validation.validate(value, rules);
    if (result.firstRule && !(result.firstRule.silentOn === true || typeof result.firstRule.silentOn === 'string' && result.firstRule.silentOn.indexOf(on) >= 0)) {
      this.data.tip = result.firstRule.message;
    } else this.data.tip = '';

    // @TODO
    if (!result.success) this.data.state = 'error';else {
      this.data.state = '';
    }

    this.$emit('validate', {
      sender: this,
      on: on,
      result: result
    });

    return result;
  },

  /**
    * @method KLTextArea#focus 原生focus方法
    * @param {method} 无 使 textarea 获取焦点
  */
  focus: function focus() {
    this.$refs.textarea.focus();
  },

  /**
    * @method KLTextArea#blur 原生blur方法
    * @param {method} 无 使 textarea 失去焦点
  */
  blur: function blur() {
    this.$refs.textarea.blur();
  },

  /**
    * @method KLTextArea#select 原生select方法
    * @param {method} 无 使 textarea 选中
  */
  select: function select() {
    this.$refs.textarea.select();
  },
  _onKeyUp: function _onKeyUp($event) {
    this.validate('keyup');
    /**
     * @event KLTextarea#keyup 原生keyup事件
     * @param {event} KeyBoardEvent 键盘事件
     */
    this.$emit('keyup', $event);
  },
  _onBlur: function _onBlur($event) {
    this.validate('blur');
    /**
     * @event KLTextarea#blur 原生blur事件
     * @param {event} MouseEvent 鼠标点击事件
     */
    this.$emit('blur', $event);
  },
  _onFocus: function _onFocus($event) {
    this.validate('focus');
    /**
     * @event KLTextarea#blur 原生focus事件
     * @param {event} MouseEvent 鼠标点击事件
     */
    this.$emit('focus', $event);
  },
  merge: function merge() {
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    for (var i = 1, j = args.length; i < j; i += 1) {
      var source = args[i] || {};
      for (var prop in source) {
        if (source.hasOwnProperty(prop)) {
          var value = source[prop];
          if (value !== undefined) {
            args[0][prop] = value;
          }
        }
      }
    }

    return args[0];
  }
});

KLTextArea.use(validationMixin);
module.exports = KLTextArea;

/***/ }),
/* 410 */
/***/ (function(module, exports) {

module.exports = "<label class=\"kl-textarea {class} kl-textarea--{size}\" r-hide={!visible} r-width=\"{width}\">\n    <textarea ref=\"textarea\" spellcheck=\"false\" class=\"kl-textarea__inner kl-textarea__inner--{state}\"\n              name={name} type={type} placeholder={placeholder} maxlength={maxlength} autofocus={autofocus} readonly={readonly} disabled={disabled}\n              r-model={value}\n              r-style={textareaStyle}\n              on-keyup={this._onKeyUp($event)} on-blur={this._onBlur($event)} on-change=\"change\" on-focus={this._onFocus($event)} ></textarea>\n  {#if maxlength && value}<span class=\"kl-textarea__length\">{value.length}/{maxlength}</span>{/if}\n  {#if _eltIE9 && !value}<span class=\"kl-textarea__placeholder\">{placeholder}</span>{/if}\n  {#if tip && !hideTip}\n    <span class=\"kl-tip kl-tip--{state}\">\n      <kl-icon type={state} />\n      <span class=\"kl-tip__msg\">{tip}</span>\n    </span>\n  {/if}\n</label>\n"

/***/ }),
/* 411 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var hiddenTextarea = void 0;

var HIDDEN_STYLE = '\n  height:0 !important;\n  visibility:hidden !important;\n  overflow:hidden !important;\n  position:absolute !important;\n  z-index:-1000 !important;\n  top:0 !important;\n  right:0 !important\n';

var CONTEXT_STYLE = ['letter-spacing', 'line-height', 'padding-top', 'padding-bottom', 'font-family', 'font-weight', 'font-size', 'text-rendering', 'text-transform', 'width', 'text-indent', 'padding-left', 'padding-right', 'border-width', 'box-sizing'];

function calculateNodeStyling(targetElement) {
  var style = window.getComputedStyle(targetElement);

  var boxSizing = style.getPropertyValue('box-sizing');

  var paddingSize = parseFloat(style.getPropertyValue('padding-bottom')) + parseFloat(style.getPropertyValue('padding-top'));

  var borderSize = parseFloat(style.getPropertyValue('border-bottom-width')) + parseFloat(style.getPropertyValue('border-top-width'));

  var contextStyle = CONTEXT_STYLE.map(function (name) {
    return name + ':' + style.getPropertyValue(name);
  }).join(';');

  return { contextStyle: contextStyle, paddingSize: paddingSize, borderSize: borderSize, boxSizing: boxSizing };
}

module.exports = function calcTextareaHeight(targetElement) {
  var minRows = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
  var maxRows = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

  if (!hiddenTextarea) {
    hiddenTextarea = document.createElement('textarea');
    document.body.appendChild(hiddenTextarea);
  }

  var _calculateNodeStyling = calculateNodeStyling(targetElement),
      paddingSize = _calculateNodeStyling.paddingSize,
      borderSize = _calculateNodeStyling.borderSize,
      boxSizing = _calculateNodeStyling.boxSizing,
      contextStyle = _calculateNodeStyling.contextStyle;

  hiddenTextarea.setAttribute('style', contextStyle + ';' + HIDDEN_STYLE);
  hiddenTextarea.value = targetElement.value || targetElement.placeholder || '';

  var height = hiddenTextarea.scrollHeight;
  var result = {};

  if (boxSizing === 'border-box') {
    height += borderSize;
  } else if (boxSizing === 'content-box') {
    height -= paddingSize;
  }

  hiddenTextarea.value = '';
  var singleRowHeight = hiddenTextarea.scrollHeight - paddingSize;

  if (minRows !== null) {
    var minHeight = singleRowHeight * minRows;
    if (boxSizing === 'border-box') {
      minHeight = minHeight + paddingSize + borderSize;
    }
    height = Math.max(minHeight, height);
    result.minHeight = minHeight + 'px';
  }
  if (maxRows !== null) {
    var maxHeight = singleRowHeight * maxRows;
    if (boxSizing === 'border-box') {
      maxHeight = maxHeight + paddingSize + borderSize;
    }
    height = Math.min(maxHeight, height);
  }
  result.height = height + 'px';
  hiddenTextarea.parentNode && hiddenTextarea.parentNode.removeChild(hiddenTextarea);
  hiddenTextarea = null;
  return result;
};

/***/ }),
/* 412 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * @file kl-upload 上传
 */

var _ = __webpack_require__(2);
var utils = __webpack_require__(47);
var Config = __webpack_require__(68);
var Component = __webpack_require__(1);
var UploadList = __webpack_require__(419);
var UploadCard = __webpack_require__(435);
var validationMixin = __webpack_require__(6);
var tpl = __webpack_require__(437);

/**
 * @class KLUpload
 * @extend Component
 * @param {object}     [options.data]                      = 绑定属性
 * @param {string}     [options.data.action]               => 必选，上传地址
 * @param {array}      [options.data.file-list]            => 上传的文件列表, 可以指定初始值，代表已经上传的文件，见demo，每次操作文件后，
 *                                                             都可以通过该参数绑定的变量，得到最新的文件列表，其中每个文件项包含下面的字段:
 *                                                             name: 文件名称
 *                                                             url: 文件的路径
 *                                                             flag: 0, 新增的文件; 1, 已经上传未被删除的文件，2，已经上传被删除的文件
 * @param {string}     [options.data.name=file]            => 可选，上传的文件字段名, 默认为'file'
 * @param {object}     [options.data.headers]              => 可选，设置上传的请求头部
 * @param {object}     [options.data.with-credentials=false]    => 可选，支持发送 cookie 凭证信息, 默认false
 * @param {boolean}    [options.data.multiple=false]       => 可选，是否支持多选, 可选值true/false，默认false单选
 * @param {object}     [options.data.data]                 => 可选，上传时附带的额外参数
 * @param {boolean}    [options.data.drag=false]           => 可选，是否支持拖拽上传，可选值true/false，默认false不支持拖拽
 * @param {string}     [options.data.accept=*]             => 可选，接受上传的文件类型, 同input的accept属性
 * @param {string}     [options.data.list-type=list]       => 可选，上传组件的展示形式, 可选值list/card，默认list
 * @param {number}     [options.data.num-min=-Infinity]    => 可选，指定的至少上传的文件个数，默认无限制
 * @param {number}     [options.data.num-max=Infinity]     => 可选，最大允许上传文件的个数，默认无限制
 * @param {number}     [options.data.num-perline]          => 可选，每行展示的文件个数，对于列表形式，默认无限制，根据父容器自动折行；
 *                                                             对于表单形式，默认每行展示5个
 * @param {string}     [options.data.max-size=1GB]         => 可选，上传文件大小的最大允许值, 支持数值大小以及KB,MB,GB为单元的指定
 * @param {boolean}    [options.data.readonly=false]       => 可选，是否开启预览模式，可选值true/false，true预览模式，只能预览和下载图片，
 *                                                             默认false，允许上传和删除图片
 * @param {boolean}    [options.data.hideTip=false]        => 是否显示校验错误信息，默认false显示
 * @param {number}     [options.data.image-width]          => 可选，指定上传图片文件的宽度, 值为数值，单位为px，如800
 * @param {number}     [options.data.image-height]         => 可选，指定上传图片文件的高度, 值为数值，单位为px, 如600
 * @param {string}     [options.data.image-scale]          => 可选，指定上传图片文件的宽高比, 值为冒号分隔的宽高比例字符串，如'4:3'
 * @param {string}     [options.data.class]                => 可选，组件最外层包裹元素样式扩展
 * @param {function}   [options.data.onLoadInterceptor=NULL]    => 可选，Http status介于200-300时触发，用于对响应数据拦截，response.code校验决定成功或失败，以及数据转换，详见demo基本形式
 * @param {function}   [options.data.onErrorInterceptor=NULL]   => 可选，Http status非200-300时触发，http状态失败的钩子
 * @param {function}   [options.data.before-upload]        => 可选，上传文件前的钩子，参数为上传的文件，返回同步校验信息或 Promise
 *                                                             对象，最终返回文件的字符串校验信息，如果为空，则继续进行文件的后续校验，
 *                                                             如果非空，则提示校验信息，并停止上传
 * @param {function}   [options.data.before-remove]        => 可选，删除文件时的钩子，参数结构同remove回调函数，返回同步删除确认信息或者
 *                                                             Promise 对象，最终返回的确认信息，如果为false，则停止删除；否则删除改文件
 * @param {boolean}    [options.data.autoUpload=false]     => 可选，选择文件后是否立即上传，如果设置为false, 新增文件的数据会维护在formData属性中
 * @param {FormData}    [options.data.formData=FormData]    => 可选，在autoUpload为false（非自动上传）模式下，新增文件的formData格式数据。
 *                                                             注：此处使用时，必须在外部初始化formData默认值，否则无法实现三层的双向数据绑定
 */

var KLUpload = Component.extend({
  name: 'kl-upload',
  template: tpl.replace(/([>}])\s*([<{])/g, '$1$2'),
  config: function config(data) {
    _.extend(data, {
      action: '',
      name: 'file',
      data: {},
      headers: {},
      withCredentials: false,
      multiple: false,
      drag: false,
      accept: '*',
      listType: 'list',
      fileList: [],
      numMin: -Infinity,
      numMax: Infinity,
      numPerline: Infinity,
      maxSize: Config.sizeMap.GB,
      readonly: false,
      hideTip: false,
      imageWidth: Infinity,
      imageHeight: Infinity,
      imageScale: '',
      class: '',
      encType: 'multipart/form-data',
      onLoadInterceptor: data.beforeOnLoad || null,
      onErrorInterceptor: data.beforeOnError || null,
      beforeUpload: null,
      beforeRemove: null,
      autoUpload: true,
      formData: new FormData()
    });
    this.preProcess(data);
    this.initValidation();

    this.supr(data);
  },
  onPreview: function onPreview(e) {
    /**
    * @event KLUpload#preview 上传预览点击事件
    * @param {object} sender 当前上传文件的实例
    * @param {object} file 当前上传的文件
    * @param {array} fileList 所有展示的文件列表
    * @param {string} status 上传的状态
    * @param {string} progress 上传的进度
    */
    this.$emit('preview', e);
  },
  preProcess: function preProcess(data) {
    if (typeof data.maxSize === 'number') {
      data.maxSize += '';
    }
    if (typeof data.imageWidth === 'string') {
      data.imageWidth = parseInt(data.imageWidth);
    }
    if (typeof data.imageHeight === 'string') {
      data.imageHeight = parseInt(data.imageHeight);
    }
  },
  init: function init(data) {
    this.initWatcher();
    this.addUploadHandler();
    this.supr(data);
  },
  initWatcher: function initWatcher() {
    var self = this;
    this.$watch('fileList', function () {
      self.data.tip = '';
    });
  },
  addUploadHandler: function addUploadHandler() {
    var self = this;
    var uploadInst = this.$refs.upload;
    var handlerList = ['success', 'progress', 'error', 'remove'];
    handlerList.forEach(function (handler) {
      var handlerFnName = handler;
      uploadInst.$on(handler, self['on' + utils.camelize(handlerFnName)].bind(self));
    });
  },
  onSuccess: function onSuccess(info) {
    /**
     * @event KLUpload#success 文件上传成功回调函数
     * @param {object} sender 当前上传文件的实例
     * @param {object} file 当前上传的文件
     * @param {array} fileList 所有展示的文件列表
     * @param {string} status 上传的状态
     * @param {string} progress 上传的进度
     */
    this.$emit('success', info);
  },
  onProgress: function onProgress(info) {
    /**
     * @event KLUpload#progress 文件上传进度回调函数
     * @param {object} sender 当前上传文件的实例
     * @param {object} file 当前上传的文件
     * @param {array} fileList 所有展示的文件列表
     * @param {string} status 上传的状态
     * @param {string} progress 上传的进度
     */
    this.$emit('progress', info);
  },
  onError: function onError(info) {
    /**
     * @event KLUpload#error 文件上传失败回调函数
     * @param {object} sender 当前上传文件的实例
     * @param {object} file 当前上传的文件
     * @param {array} fileList 所有展示的文件列表
     * @param {string} status 上传的状态
     * @param {string} progress 上传的进度
     */
    this.$emit('error', info);
  },
  onRemove: function onRemove(info) {
    /**
     * @event KLUpload#remove 上传文件删除回调函数
     * @param {object} sender 当前上传文件的实例
     * @param {object} file 当前上传的文件
     * @param {array} fileList 所有展示的文件列表
     * @param {string} status 上传的状态
     * @param {string} progress 上传的进度
     */
    this.$emit('remove', info);
  },
  validate: function validate() {
    var data = this.data;
    var result = { success: true, message: '' };

    function deletedFilter(file) {
      return file.flag !== Config.flagMap.DELETED;
    }

    var filteredFileList = data.fileList.filter(deletedFilter);

    if (filteredFileList.length < data.numMin) {
      result.success = false;
      result.message = this.$trans('PLEASE_UPLOAD_ATLEAST') + data.numMin + this.$trans('UNIT') + this.$trans('FILE');
      this.data.state = 'error';
    }

    data.tip = result.message;

    this.$emit('validate', {
      sender: this,
      result: result
    });

    return result;
  }
}).component('upload-list', UploadList).component('upload-card', UploadCard);

KLUpload.use(validationMixin);

module.exports = KLUpload;

/***/ }),
/* 413 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(414), __esModule: true };

/***/ }),
/* 414 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(39);
__webpack_require__(31);
module.exports = __webpack_require__(415);

/***/ }),
/* 415 */
/***/ (function(module, exports, __webpack_require__) {

var classof   = __webpack_require__(60)
  , ITERATOR  = __webpack_require__(7)('iterator')
  , Iterators = __webpack_require__(22);
module.exports = __webpack_require__(4).isIterable = function(it){
  var O = Object(it);
  return O[ITERATOR] !== undefined
    || '@@iterator' in O
    || Iterators.hasOwnProperty(classof(O));
};

/***/ }),
/* 416 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(417), __esModule: true };

/***/ }),
/* 417 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(418);
module.exports = __webpack_require__(4).Object.entries;

/***/ }),
/* 418 */
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/tc39/proposal-object-values-entries
var $export  = __webpack_require__(10)
  , $entries = __webpack_require__(72)(true);

$export($export.S, 'Object', {
  entries: function entries(it){
    return $entries(it);
  }
});

/***/ }),
/* 419 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 *  ------------------------------
 *  UploadList 上传
 *  ------------------------------
 */

var _ = __webpack_require__(2);
var UploadBase = __webpack_require__(224);
var tpl = __webpack_require__(434);

/**
 * @class UploadList
 * @extend UploadBase
 */
var UploadList = UploadBase.extend({
  template: tpl.replace(/([>}])\s*([<{])/g, '$1$2'),
  config: function config(data) {
    this.supr(data);

    _.extend(data, {
      numPerline: Infinity,
      fileUnitWidth: 50,
      fileUnitMargin: 25
    });
  },
  init: function init(data) {
    this.initData(data);
    this.supr(data);
  },
  initData: function initData(data) {
    data.inputWrapper = this.$refs.inputwrapper;
    data.filesWrapper = this.$refs.fileswrapper;
  }
});

module.exports = UploadList;

/***/ }),
/* 420 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(421), __esModule: true };

/***/ }),
/* 421 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(82);
__webpack_require__(31);
__webpack_require__(39);
__webpack_require__(422);
module.exports = __webpack_require__(4).Promise;

/***/ }),
/* 422 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY            = __webpack_require__(40)
  , global             = __webpack_require__(8)
  , ctx                = __webpack_require__(26)
  , classof            = __webpack_require__(60)
  , $export            = __webpack_require__(10)
  , isObject           = __webpack_require__(27)
  , aFunction          = __webpack_require__(49)
  , anInstance         = __webpack_require__(423)
  , forOf              = __webpack_require__(424)
  , speciesConstructor = __webpack_require__(425)
  , task               = __webpack_require__(227).set
  , microtask          = __webpack_require__(427)()
  , PROMISE            = 'Promise'
  , TypeError          = global.TypeError
  , process            = global.process
  , $Promise           = global[PROMISE]
  , process            = global.process
  , isNode             = classof(process) == 'process'
  , empty              = function(){ /* empty */ }
  , Internal, GenericPromiseCapability, Wrapper;

var USE_NATIVE = !!function(){
  try {
    // correct subclassing with @@species support
    var promise     = $Promise.resolve(1)
      , FakePromise = (promise.constructor = {})[__webpack_require__(7)('species')] = function(exec){ exec(empty, empty); };
    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;
  } catch(e){ /* empty */ }
}();

// helpers
var sameConstructor = function(a, b){
  // with library wrapper special case
  return a === b || a === $Promise && b === Wrapper;
};
var isThenable = function(it){
  var then;
  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
};
var newPromiseCapability = function(C){
  return sameConstructor($Promise, C)
    ? new PromiseCapability(C)
    : new GenericPromiseCapability(C);
};
var PromiseCapability = GenericPromiseCapability = function(C){
  var resolve, reject;
  this.promise = new C(function($$resolve, $$reject){
    if(resolve !== undefined || reject !== undefined)throw TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject  = $$reject;
  });
  this.resolve = aFunction(resolve);
  this.reject  = aFunction(reject);
};
var perform = function(exec){
  try {
    exec();
  } catch(e){
    return {error: e};
  }
};
var notify = function(promise, isReject){
  if(promise._n)return;
  promise._n = true;
  var chain = promise._c;
  microtask(function(){
    var value = promise._v
      , ok    = promise._s == 1
      , i     = 0;
    var run = function(reaction){
      var handler = ok ? reaction.ok : reaction.fail
        , resolve = reaction.resolve
        , reject  = reaction.reject
        , domain  = reaction.domain
        , result, then;
      try {
        if(handler){
          if(!ok){
            if(promise._h == 2)onHandleUnhandled(promise);
            promise._h = 1;
          }
          if(handler === true)result = value;
          else {
            if(domain)domain.enter();
            result = handler(value);
            if(domain)domain.exit();
          }
          if(result === reaction.promise){
            reject(TypeError('Promise-chain cycle'));
          } else if(then = isThenable(result)){
            then.call(result, resolve, reject);
          } else resolve(result);
        } else reject(value);
      } catch(e){
        reject(e);
      }
    };
    while(chain.length > i)run(chain[i++]); // variable length - can't use forEach
    promise._c = [];
    promise._n = false;
    if(isReject && !promise._h)onUnhandled(promise);
  });
};
var onUnhandled = function(promise){
  task.call(global, function(){
    var value = promise._v
      , abrupt, handler, console;
    if(isUnhandled(promise)){
      abrupt = perform(function(){
        if(isNode){
          process.emit('unhandledRejection', value, promise);
        } else if(handler = global.onunhandledrejection){
          handler({promise: promise, reason: value});
        } else if((console = global.console) && console.error){
          console.error('Unhandled promise rejection', value);
        }
      });
      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
    } promise._a = undefined;
    if(abrupt)throw abrupt.error;
  });
};
var isUnhandled = function(promise){
  if(promise._h == 1)return false;
  var chain = promise._a || promise._c
    , i     = 0
    , reaction;
  while(chain.length > i){
    reaction = chain[i++];
    if(reaction.fail || !isUnhandled(reaction.promise))return false;
  } return true;
};
var onHandleUnhandled = function(promise){
  task.call(global, function(){
    var handler;
    if(isNode){
      process.emit('rejectionHandled', promise);
    } else if(handler = global.onrejectionhandled){
      handler({promise: promise, reason: promise._v});
    }
  });
};
var $reject = function(value){
  var promise = this;
  if(promise._d)return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  promise._v = value;
  promise._s = 2;
  if(!promise._a)promise._a = promise._c.slice();
  notify(promise, true);
};
var $resolve = function(value){
  var promise = this
    , then;
  if(promise._d)return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  try {
    if(promise === value)throw TypeError("Promise can't be resolved itself");
    if(then = isThenable(value)){
      microtask(function(){
        var wrapper = {_w: promise, _d: false}; // wrap
        try {
          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
        } catch(e){
          $reject.call(wrapper, e);
        }
      });
    } else {
      promise._v = value;
      promise._s = 1;
      notify(promise, false);
    }
  } catch(e){
    $reject.call({_w: promise, _d: false}, e); // wrap
  }
};

// constructor polyfill
if(!USE_NATIVE){
  // 25.4.3.1 Promise(executor)
  $Promise = function Promise(executor){
    anInstance(this, $Promise, PROMISE, '_h');
    aFunction(executor);
    Internal.call(this);
    try {
      executor(ctx($resolve, this, 1), ctx($reject, this, 1));
    } catch(err){
      $reject.call(this, err);
    }
  };
  Internal = function Promise(executor){
    this._c = [];             // <- awaiting reactions
    this._a = undefined;      // <- checked in isUnhandled reactions
    this._s = 0;              // <- state
    this._d = false;          // <- done
    this._v = undefined;      // <- value
    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
    this._n = false;          // <- notify
  };
  Internal.prototype = __webpack_require__(428)($Promise.prototype, {
    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
    then: function then(onFulfilled, onRejected){
      var reaction    = newPromiseCapability(speciesConstructor(this, $Promise));
      reaction.ok     = typeof onFulfilled == 'function' ? onFulfilled : true;
      reaction.fail   = typeof onRejected == 'function' && onRejected;
      reaction.domain = isNode ? process.domain : undefined;
      this._c.push(reaction);
      if(this._a)this._a.push(reaction);
      if(this._s)notify(this, false);
      return reaction.promise;
    },
    // 25.4.5.1 Promise.prototype.catch(onRejected)
    'catch': function(onRejected){
      return this.then(undefined, onRejected);
    }
  });
  PromiseCapability = function(){
    var promise  = new Internal;
    this.promise = promise;
    this.resolve = ctx($resolve, promise, 1);
    this.reject  = ctx($reject, promise, 1);
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, {Promise: $Promise});
__webpack_require__(41)($Promise, PROMISE);
__webpack_require__(429)(PROMISE);
Wrapper = __webpack_require__(4)[PROMISE];

// statics
$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
  // 25.4.4.5 Promise.reject(r)
  reject: function reject(r){
    var capability = newPromiseCapability(this)
      , $$reject   = capability.reject;
    $$reject(r);
    return capability.promise;
  }
});
$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
  // 25.4.4.6 Promise.resolve(x)
  resolve: function resolve(x){
    // instanceof instead of internal slot check because we should fix it without replacement native Promise core
    if(x instanceof $Promise && sameConstructor(x.constructor, this))return x;
    var capability = newPromiseCapability(this)
      , $$resolve  = capability.resolve;
    $$resolve(x);
    return capability.promise;
  }
});
$export($export.S + $export.F * !(USE_NATIVE && __webpack_require__(228)(function(iter){
  $Promise.all(iter)['catch'](empty);
})), PROMISE, {
  // 25.4.4.1 Promise.all(iterable)
  all: function all(iterable){
    var C          = this
      , capability = newPromiseCapability(C)
      , resolve    = capability.resolve
      , reject     = capability.reject;
    var abrupt = perform(function(){
      var values    = []
        , index     = 0
        , remaining = 1;
      forOf(iterable, false, function(promise){
        var $index        = index++
          , alreadyCalled = false;
        values.push(undefined);
        remaining++;
        C.resolve(promise).then(function(value){
          if(alreadyCalled)return;
          alreadyCalled  = true;
          values[$index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if(abrupt)reject(abrupt.error);
    return capability.promise;
  },
  // 25.4.4.4 Promise.race(iterable)
  race: function race(iterable){
    var C          = this
      , capability = newPromiseCapability(C)
      , reject     = capability.reject;
    var abrupt = perform(function(){
      forOf(iterable, false, function(promise){
        C.resolve(promise).then(capability.resolve, reject);
      });
    });
    if(abrupt)reject(abrupt.error);
    return capability.promise;
  }
});

/***/ }),
/* 423 */
/***/ (function(module, exports) {

module.exports = function(it, Constructor, name, forbiddenField){
  if(!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)){
    throw TypeError(name + ': incorrect invocation!');
  } return it;
};

/***/ }),
/* 424 */
/***/ (function(module, exports, __webpack_require__) {

var ctx         = __webpack_require__(26)
  , call        = __webpack_require__(225)
  , isArrayIter = __webpack_require__(226)
  , anObject    = __webpack_require__(13)
  , toLength    = __webpack_require__(53)
  , getIterFn   = __webpack_require__(59)
  , BREAK       = {}
  , RETURN      = {};
var exports = module.exports = function(iterable, entries, fn, that, ITERATOR){
  var iterFn = ITERATOR ? function(){ return iterable; } : getIterFn(iterable)
    , f      = ctx(fn, that, entries ? 2 : 1)
    , index  = 0
    , length, step, iterator, result;
  if(typeof iterFn != 'function')throw TypeError(iterable + ' is not iterable!');
  // fast case for arrays with default iterator
  if(isArrayIter(iterFn))for(length = toLength(iterable.length); length > index; index++){
    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
    if(result === BREAK || result === RETURN)return result;
  } else for(iterator = iterFn.call(iterable); !(step = iterator.next()).done; ){
    result = call(iterator, f, step.value, entries);
    if(result === BREAK || result === RETURN)return result;
  }
};
exports.BREAK  = BREAK;
exports.RETURN = RETURN;

/***/ }),
/* 425 */
/***/ (function(module, exports, __webpack_require__) {

// 7.3.20 SpeciesConstructor(O, defaultConstructor)
var anObject  = __webpack_require__(13)
  , aFunction = __webpack_require__(49)
  , SPECIES   = __webpack_require__(7)('species');
module.exports = function(O, D){
  var C = anObject(O).constructor, S;
  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
};

/***/ }),
/* 426 */
/***/ (function(module, exports) {

// fast apply, http://jsperf.lnkit.com/fast-apply/5
module.exports = function(fn, args, that){
  var un = that === undefined;
  switch(args.length){
    case 0: return un ? fn()
                      : fn.call(that);
    case 1: return un ? fn(args[0])
                      : fn.call(that, args[0]);
    case 2: return un ? fn(args[0], args[1])
                      : fn.call(that, args[0], args[1]);
    case 3: return un ? fn(args[0], args[1], args[2])
                      : fn.call(that, args[0], args[1], args[2]);
    case 4: return un ? fn(args[0], args[1], args[2], args[3])
                      : fn.call(that, args[0], args[1], args[2], args[3]);
  } return              fn.apply(that, args);
};

/***/ }),
/* 427 */
/***/ (function(module, exports, __webpack_require__) {

var global    = __webpack_require__(8)
  , macrotask = __webpack_require__(227).set
  , Observer  = global.MutationObserver || global.WebKitMutationObserver
  , process   = global.process
  , Promise   = global.Promise
  , isNode    = __webpack_require__(29)(process) == 'process';

module.exports = function(){
  var head, last, notify;

  var flush = function(){
    var parent, fn;
    if(isNode && (parent = process.domain))parent.exit();
    while(head){
      fn   = head.fn;
      head = head.next;
      try {
        fn();
      } catch(e){
        if(head)notify();
        else last = undefined;
        throw e;
      }
    } last = undefined;
    if(parent)parent.enter();
  };

  // Node.js
  if(isNode){
    notify = function(){
      process.nextTick(flush);
    };
  // browsers with MutationObserver
  } else if(Observer){
    var toggle = true
      , node   = document.createTextNode('');
    new Observer(flush).observe(node, {characterData: true}); // eslint-disable-line no-new
    notify = function(){
      node.data = toggle = !toggle;
    };
  // environments with maybe non-completely correct, but existent Promise
  } else if(Promise && Promise.resolve){
    var promise = Promise.resolve();
    notify = function(){
      promise.then(flush);
    };
  // for other environments - macrotask based on:
  // - setImmediate
  // - MessageChannel
  // - window.postMessag
  // - onreadystatechange
  // - setTimeout
  } else {
    notify = function(){
      // strange IE + webpack dev server bug - use .call(global)
      macrotask.call(global, flush);
    };
  }

  return function(fn){
    var task = {fn: fn, next: undefined};
    if(last)last.next = task;
    if(!head){
      head = task;
      notify();
    } last = task;
  };
};

/***/ }),
/* 428 */
/***/ (function(module, exports, __webpack_require__) {

var hide = __webpack_require__(17);
module.exports = function(target, src, safe){
  for(var key in src){
    if(safe && target[key])target[key] = src[key];
    else hide(target, key, src[key]);
  } return target;
};

/***/ }),
/* 429 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global      = __webpack_require__(8)
  , core        = __webpack_require__(4)
  , dP          = __webpack_require__(12)
  , DESCRIPTORS = __webpack_require__(14)
  , SPECIES     = __webpack_require__(7)('species');

module.exports = function(KEY){
  var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];
  if(DESCRIPTORS && C && !C[SPECIES])dP.f(C, SPECIES, {
    configurable: true,
    get: function(){ return this; }
  });
};

/***/ }),
/* 430 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 *  ------------------------------
 *  FileUnit
 *  ------------------------------
 */

var Component = __webpack_require__(1);
var _ = __webpack_require__(2);
var tpl = __webpack_require__(431);
var utils = __webpack_require__(47);

var FileUnit = Component.extend({
  template: tpl.replace(/([>}])\s*([<{])/g, '$1$2'),
  config: function config(data) {
    _.extend(data, {
      file: {},
      action: '',
      url: '',
      name: '',
      readonly: false,
      headers: {},
      data: {}
    });

    _.extend(data, {
      info: '',
      status: '',
      progress: '0%',
      delConfirm: false
    });

    this.initData(data);

    this.supr(data);
  },
  initData: function initData(data) {
    var file = data.file;
    data.filename = file.name;
    data.type = file.type;

    if (!data.autoUpload) {
      this.$emit('success', {
        sender: this,
        file: data.file,
        status: data.status
      });
      return true;
    }
    // for initial uploaded files
    if (data.status === 'ready') {
      this.uploadFile(file.rawFile);
    }
  },
  uploadFile: function uploadFile(rawFile) {
    var self = this;
    var data = this.data;

    data.info = '';
    data.status = 'uploading';

    var options = {
      name: data.name || 'file',
      headers: data.headers,
      withCredentials: data.withCredentials,
      data: data.data,
      upload: {
        onprogress: function onprogress(e) {
          data.status = 'uploading';
          data.progress = parseInt((e.loaded / e.total || 0) * 100) + '%';
          self.$update();

          var emitItem = {
            sender: self,
            event: e,
            progress: data.progress,
            file: data.file,
            status: data.status
          };

          self.$emit('progress', emitItem);
        }
      },
      onload: function onload(e) {
        var target = e.target;
        var status = target.status;
        data.progress = '100%';
        var emitItem = {
          sender: self,
          event: e,
          progress: data.progress,
          file: data.file
        };

        var result = true;
        var response = {};
        try {
          response = JSON.parse(target.response);
        } catch (error) {
          console.log(error);
        }
        if (self.data.onLoadInterceptor) {
          result = self.data.onLoadInterceptor.call(self, response);
        }
        response.url = result && result.url || response.url;
        if (status >= 200 && status < 400 && result) {
          data.url = response.url;
          data.status = 'success';
          data.info = '';
          self.$update();

          emitItem.status = data.status;
          self.$emit('success', emitItem);
        } else {
          data.status = 'fail';
          data.info = self.$trans('UPLOAD_FAIL');
          self.$update();

          emitItem.status = data.status;
          self.$emit('error', emitItem);
        }
      },
      onerror: function onerror(e) {
        if (self.data.onErrorInterceptor) {
          self.data.onErrorInterceptor.call(self, e);
        }
        data.status = 'fail';
        data.info = self.$trans('UPLOAD_FAIL');
        self.$update();

        var emitItem = {
          sender: self,
          event: e,
          progress: data.progress,
          file: data.file,
          status: data.status
        };
        self.$emit('error', emitItem);
      }
    };

    utils.upload(data.action, rawFile, options);

    this.$update();
  },
  onRemove: function onRemove(e) {
    var self = this;
    var data = this.data;
    var emitItem = {
      sender: this,
      event: e,
      file: data.file,
      status: data.status
    };
    var beforeRemove = data.beforeRemove && data.beforeRemove(emitItem);

    if (beforeRemove && beforeRemove.then) {
      beforeRemove.then(function (removeConfirm) {
        if (removeConfirm !== false) {
          self.$emit('remove', emitItem);
        } else {
          return removeConfirm;
        }
      });
    } else if (beforeRemove !== false) {
      self.$emit('remove', emitItem);
    } else {
      return beforeRemove;
    }
  },
  onPreview: function onPreview(e) {
    var data = this.data;
    var emitItem = {
      sender: this,
      event: e,
      file: data.file,
      status: data.status
    };
    this.$emit('preview', emitItem);
  }
});

FileUnit.filter('download', function (url, filename) {
  var str = url.split('#')[0];
  if (/\?/g.test(url)) {
    str += '&download=' + filename;
  } else {
    str += '?download=' + filename;
  }
  if (url.split('#')[1]) {
    str += '#' + url.split('#')[1];
  }
  return str;
});

module.exports = FileUnit;

/***/ }),
/* 431 */
/***/ (function(module, exports) {

module.exports = "<div class=\"kl-upload-unit {file.class}\">\n    <div class=\"kl-upload-unit__content\">\n        {#if type === 'image'}\n            <div class=\"kl-upload-unit-imgwrap\" on-click={this.onPreview($event)}>\n                <img class=\"kl-upload-unit-imgwrap__img\" src={url} />\n            </div>\n        {#elseif type === 'unknown'}\n            <span class=\"kl-upload-unit__txt\" on-click={this.onPreview($event)}>{this.$trans('UNKNOWN')}</span>\n        {#elseif type === 'pdf'}\n            <span class=\"kl-upload-unit__txt\" on-click={this.onPreview($event)}>{type.toUpperCase()}</span>\n        {#else}<!-- TEXT, DOC, JS, HTML, AUDIO, VIDEO -->\n            <span class=\"kl-upload-unit__txt\" on-click={this.onPreview($event)}>{type.toUpperCase()}</span>\n        {/if}\n        <div class=\"kl-upload-unit__remove\" r-hide={readonly} on-click={this.onRemove($event)}><kl-icon type=\"error\" /></div>\n        <div>\n            {#if status === 'fail'}\n                <span class=\"kl-upload-unit-failed\" on-click={this.uploadFile(file)}>\n                    <span class=\"kl-upload-unit-failed__info\"><kl-icon type=\"refresh\" />{this.$trans('RETRY')}</span>\n                </span>\n            {#elseif status === 'uploading'}\n                <span class=\"kl-upload-unit-uploading\">\n                    <span class=\"kl-upload-unit-uploading__wrap\">\n                      <span class=\"kl-upload-unit-uploading__txt\">{progress || '0%'}</span>\n                      <kl-progress percent={progress || 0} size=\"sm\" class=\"kl-upload-unit-uploading__progress\" />\n                    </span>\n                </span>\n            {#elseif status === 'success'}\n                <span class=\"kl-upload-unit-uploaded\">\n                    <a class=\"kl-upload-unit-uploaded__zone\" href={url | download: filename} download={filename} target=\"_blank\"><kl-icon type=\"download\" />{this.$trans('DOWNLOAD_FILE')}</a>\n                </span>\n            {/if}\n        </div>\n    </div>\n    <div class=\"kl-upload-unit__name\" title={filename}>{filename}</div>\n    <div class=\"kl-upload-unit__info\">{info}</div>\n</div>\n"

/***/ }),
/* 432 */
/***/ (function(module, exports) {

module.exports = "<div class=\"kl-modal {class}\" r-anim='on:enter; class: modal_animated modal_zoomIn; on:leave; class: modal_animated modal_zoomOut;'>\n    <div class=\"kl-modal__dialog kl-modal__dialog--{modalType} {fullscreen ? 'kl-modal__dialog--fullscreen': ''}\" style=\"width: {width}px;\" ref=\"modalDialog\">\n        {#if modalType}\n        <div class=\"kl-modal-type\">\n            <kl-icon type={modalType} />\n            <div class=\"kl-modal-type__right\">\n                <h3 class=\"kl-modal-type__title\">{title}</h3>\n                <div class=\"kl-modal-type__bd\">\n                    {#if contentTemplate}{#inc @(contentTemplate)}{#else}{content}{/if}\n                </div>\n                {#if cancelButton && isCanClose}\n                    <kl-button title={cancelButton === true ? this.$trans('CANCEL') : cancelButton}\n                    on-click={this.close(false)} disabled={cancelDisabled} />\n                {/if}\n                {#if okButton}\n                    <kl-button type=\"primary\" title={okButton === true ? this.$trans('CONFIRM') : okButton} on-click={this.close(true, $event)} disabled={okDisabled} />\n                {/if}\n            </div>\n        </div>\n        {#else}\n        <kl-draggable disabled={!draggable} proxy={this.$refs.modalDialog} on-dragstart={this._onDragStart($event)}>\n        <div class=\"kl-modal__hd\">\n            {#if isCanClose}\n            <a class=\"kl-modal__close\" on-click={this.close(false)}><kl-icon type=\"cross\" /></a>\n            {/if}\n            <h3 class=\"kl-modal__title\">{title}</h3>\n        </div>\n        </kl-draggable>\n        <div class=\"kl-modal__bd\" {#if maxHeight || minHeight} style=\"max-height: {maxHeight}px; min-height: {minHeight}px; overflow: auto;\" {/if}>\n            {#if contentTemplate}{#inc @(contentTemplate)}{#else}{content}{/if}\n        </div>\n        {#if hasFooter}\n        <div class=\"kl-modal__ft\">\n\t        {#if footerTemplate}\n\t            {#inc @(footerTemplate)}\n\t        {#else}\n\t\t        {#if cancelButton && isCanClose}\n\t\t            <kl-button title={cancelButton === true ? this.$trans('CANCEL') : cancelButton}\n                    on-click={this.close(false)} disabled={cancelDisabled} />\n\t\t        {/if}\n\t\t        {#if okButton}\n                <kl-button type=\"primary\" title={okButton === true ? this.$trans('CONFIRM') : okButton} on-click={this.close(true, $event)} disabled={okDisabled} />\n\t\t        {/if}\n\t        {/if}\n        </div>\n        {/if}\n        {/if}\n    </div>\n</div>\n"

/***/ }),
/* 433 */
/***/ (function(module, exports) {

module.exports = "<div class=\"kl-image-preview\" on-mouseup={this.onMouseUp($event)}>\n      <div class=\"kl-image-preview__close\" on-click={this.onClose()}></div>\n      <div class=\"kl-image-preview-slide\" on-mousewheel={this.onMouseWheel($event)}>\n          <span class=\"kl-image-preview-slide-nav kl-image-preview-slide-nav--pre\" on-click={this.onPrev()}><kl-icon type=\"arrow-left\" class=\"kl-image-preview-slide-nav__icon\" /></span>\n          <ul class=\"kl-image-preview-slide-images\">\n              {#list imageList as img}\n                  <li class=\"kl-image-preview-slide-images-item\" ref=\"full-{img_index}\" r-class={{'is-current': img_index === curIndex}} r-hide={showVirtual} r-style={{opacity: img_index === curIndex ? 1 : 0}}>\n                      <img class=\"kl-image-preview-slide-images-item__img\" ref=\"full-img-{img_index}\" src={img.src} alt={img.name} draggable={false}/>\n                  </li>\n              {/list}\n          </ul>\n          <span class=\"kl-image-preview-slide-nav kl-image-preview-slide-nav--next\" on-click={this.onNext()}><kl-icon type=\"arrow-right\" class=\"kl-image-preview-slide-nav__icon\" /></span>\n          <ul class=\"kl-image-preview-slide-operate\">\n              {#list opList as op}\n                  <li class=\"kl-image-preview-slide-operate-item\" r-style={{\"margin-right\": op.name === 'zoomIn' ? '30px' : 0}}>\n                      {#if (imageList[curIndex].status === 'success' || imageList[curIndex].status === undefined) && op.name === 'remove'}\n                          <kl-icon type=\"download\" on-click={this.downloadFile(imageList[curIndex])} />\n                      {#elseif op.name === 'zoomIn'}\n                          <kl-icon type=\"{op.icon}\" on-click={this[op.fnName].bind(this)(curIndex)} />\n                          <span class=\"kl-image-preview-slide-operate-item__scale\">{parseInt(virtualInfo.scale * 100)}%</span>\n                      {#else}\n                          <kl-icon type=\"{op.icon}\" on-click={this[op.fnName].bind(this)(curIndex)} />\n                      {/if}\n                  </li>\n              {/list}\n          </ul>\n          <ul class=\"kl-image-preview-slide-stage\" ref=\"virtualzone\" r-style={{opacity: showVirtual ? 1 : 0}}>\n              <li ref=\"virtualimage\" class=\"kl-image-preview-slide-stage-imgwrap\" on-mousedown={this.onMouseDown($event)} on-mousemove={this.onMouseMove($event)} on-mouseup={this.onMouseUp($event)}>\n                  <img class=\"kl-image-preview-slide-stage-imgwrap__img\" src={imageList[curIndex].src} alt={imageList[curIndex].name} draggable={false}/>\n              </li>\n          </ul>\n      </div>\n      <div class=\"kl-image-preview-thumbnail\">\n          <div class=\"kl-image-preview-thumbnail__name\" title={imageList[curIndex].name}>{imageList[curIndex].name}</div>\n          <ul class=\"kl-image-preview-thumbnail-images\">\n              {#list imageList as img}\n                  <li class=\"kl-image-preview-thumbnail-images-item\" r-class={{'is-current': img_index === curIndex}} on-click={this.setCurrentTo(img_index)}>\n                      <img class=\"kl-image-preview-thumbnail-images-item__img\" src={img.src} alt={img.name} draggable={false}/>\n                  </li>\n              {/list}\n          </ul>\n      </div>\n</div>"

/***/ }),
/* 434 */
/***/ (function(module, exports) {

module.exports = "<div class=\"kl-upload-list\">\n    <ul ref=\"fileswrapper\" class=\"kl-upload-list-filelist\"\n        r-style={{\n            width: numPerline !== Infinity ? fileUnitWidth * numPerline + fileUnitMargin * (numPerline - 1) + 'px' : '100%'\n        }}>\n        {#list fileUnitList as fileunit}\n            <li class=\"kl-upload-list-filelist__item\"\n                r-style={{\n                    \"margin-right\": (fileunit_index && numPerline != Infinity && (fileunit_index + 1) % numPerline == 0) ? \"0\" : fileUnitMargin + \"px\"\n                }}>\n                  <file-unit\n                      file={fileunit}\n                      action={action}\n                      url={fileunit.url}\n                      name={name}\n                      status={fileunit.status}\n                      readonly={readonly}\n                      headers={headers}\n                      withCredentials={withCredentials}\n                      data={data}\n                      autoUpload={autoUpload}\n                      onLoadInterceptor={onLoadInterceptor}\n                      onErrorInterceptor={onErrorInterceptor}\n                      beforeRemove={beforeRemove}\n                      on-preview={this.onPreview($event)}\n                      on-progress={this.onProgress($event)}\n                      on-success={this.onSuccess($event)}\n                      on-error={this.onError($event)}\n                      on-remove={this.onRemove($event)}/>\n            </li>\n        {/list}\n        <li ref=\"inputwrapper\" class=\"kl-upload-list-filelist__item kl-upload-list-inputwrap\" r-hide={readonly || fileUnitList.length >= numMax} on-click={this.fileDialogOpen()}>\n            {#if this.$body}\n                {#inc this.$body}\n            {#else}\n                <div class=\"kl-upload-list-inputwrap__btn\"\n                     r-class={{dragover: dragover}}\n                     on-drop={this.onDrop($event)}\n                     on-dragenter={this.onDragEnter($event)}\n                     on-dragleave={this.onDragLeave($event)}\n                     on-dragover={this.onDragOver($event)}>\n                    <span class=\"kl-upload-list-inputwrap__cnt\"><kl-icon type=\"add\" />{this.$trans('UPLOAD_FILE')}</span>\n                </div>\n                <div class=\"kl-upload-list-inputwrap__info\">{preCheckInfo}</div>\n            {/if}\n        </li>\n    </ul>\n    <form method=\"POST\" action={url} target=\"iframe{_id}\" enctype={encType} ref=\"form\">\n        <input type=\"file\" name={name} ref=\"file\" multiple={multiple ? 'multiple' : ''} accept={accept} r-hide={true} on-change={this.fileSelect()}>\n        {#list Object.keys(data) as key}\n            <input type=\"hidden\" name={key} value={data[key]}>\n        {/list}\n    </form>\n    <div ref=\"imagepreview\"></div>\n</div>\n"

/***/ }),
/* 435 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 *  ------------------------------
 *  UploadCard 上传
 *  ------------------------------
 */

var _ = __webpack_require__(2);
var utils = __webpack_require__(47);
var UploadBase = __webpack_require__(224);
var Config = __webpack_require__(68);
var tpl = __webpack_require__(436);

/**
 * @class UploadCard
 * @extend UploadBase
 */

var UploadCard = UploadBase.extend({
  template: tpl.replace(/([>}])\s*([<{])/g, '$1$2'),
  computed: {
    entryFileInfo: {
      get: function get() {
        var lastFileUnit = this.data.fileUnitList.slice(-1)[0];
        return {
          name: lastFileUnit && lastFileUnit.name || '',
          type: lastFileUnit && lastFileUnit.type || '',
          src: lastFileUnit && lastFileUnit.url || ''
        };
      }
    },

    fileUnitListWidth: {
      get: function get() {
        var data = this.data;
        var fileUnitWidth = data.fileUnitWidth;
        var fileUnitMargin = data.fileUnitMargin;
        var numPerline = data.numPerline;

        if (!isFinite(numPerline)) {
          data.numPerline = 5;
          numPerline = data.numPerline;
        }

        return fileUnitWidth * numPerline + fileUnitMargin * (numPerline - 1);
      }
    }
  },
  config: function config(data) {
    this.supr(data);

    _.extend(data, {
      status: 'success',
      info: '',
      numPerline: 5,
      fileUnitWidth: 50,
      fileUnitMargin: 25,
      fileUnitListPadding: 22
    });
  },
  init: function init(data) {
    this.initFilesZone(data);

    this.supr(data);
  },
  initFilesZone: function initFilesZone(data) {
    data.filesWrapper = this.$refs.fileswrapper;
  },
  handleFiles: function handleFiles(files) {
    this.toggle(false);

    var self = this;
    var data = this.data;

    data.preCheckInfo = '';

    var fileList = [].slice.call(files);
    fileList.forEach(function (file) {
      if (data.fileUnitList.length < data.numMax) {
        var checker = self.preCheck(file);
        checker.then(function (preCheckInfo) {
          data.preCheckInfo = preCheckInfo;
          self.$update();
          if (!data.preCheckInfo) {
            var fileunit = {
              rawFile: file,
              name: file.name,
              url: window.URL.createObjectURL(file),
              type: self.getFileType(file),
              flag: Config.flagMap.ADDED,
              uid: utils.genUid(),
              status: 'ready'
            };
            data.fileUnitList.push(fileunit);
            self.updateFilesZone();
            self.$update();
          }
        });
      }
    });

    this.updateList();
  },
  onProgress: function onProgress(info) {
    var curFile = info.file;
    var data = this.data;
    var curIndex = -1;
    var lastIndex = -1;

    data.fileUnitList.forEach(function (item, index) {
      if (item.status === 'uploading') {
        lastIndex = index;
      }

      if (item.rawFile === curFile) {
        curIndex = index;
      }
    });

    if (curIndex >= lastIndex && data.status !== 'fail') {
      data.status = 'uploading';
      data.progress = info.progress;
      this.$update();
    }

    this.supr(info);
  },
  onSuccess: function onSuccess(info) {
    var data = this.data;
    var allUploaded = true;
    var hasFailed = false;
    data.fileUnitList.forEach(function (item) {
      allUploaded = allUploaded && item.status === 'success';
      hasFailed = hasFailed || item.status === 'fail';
    });

    if (allUploaded) {
      data.status = 'success';
    } else if (hasFailed) {
      data.status = 'fail';
    }

    this.supr(info);
  },
  onError: function onError(info) {
    var data = this.data;
    data.status = 'fail';
    data.info = this.$trans('UPLOAD_FAIL');

    this.supr(info);
  },
  onRemove: function onRemove(info) {
    var self = this;
    var inst = info.sender;
    var file = info.file;
    self.toggle(false);
    file.destroyed = true;

    if (file.flag === Config.flagMap.ORIGINAL) {
      file.flag = Config.flagMap.DELETED;
    }
    inst.destroy();
    self.updateList();
    this.$emit('remove', _.extend(info, {
      fileList: this.data.fileList
    }));

    self.updateFilesZone();
    resetStatus();

    function resetStatus() {
      var allUploaded = true;
      var hasFailed = false;
      self.data.fileUnitList.forEach(function (item) {
        allUploaded = allUploaded && item.status === 'success';
        hasFailed = hasFailed || item.status === 'fail';
      });

      if (allUploaded) {
        self.data.status = 'success';
      } else if (hasFailed) {
        self.data.status = 'fail';
      }

      self.$update();
    }
  },
  updateFilesZone: function updateFilesZone() {
    var data = this.data;
    var filesZone = this.$refs.fileszone;
    var entryWrapper = this.$refs.entrywrapper;
    var inputWrapper = this.$refs.inputwrapper;

    if (data.fileUnitList.length < data.numMax) {
      filesZone.style.width = '125px';
      entryWrapper.style['margin-right'] = '20px';
      inputWrapper.style.display = 'inline-block';
    } else if (data.fileUnitList.length === data.numMax) {
      filesZone.style.width = '50px';
      entryWrapper.style['margin-right'] = '0';
      inputWrapper.style.display = 'none';
    }
  },
  uploadFiles: function uploadFiles() {
    var self = this;
    var data = this.data;
    var fileUnitList = data.fileUnitList;

    data.status = 'success';
    data.info = '';

    fileUnitList.forEach(function (item, index) {
      if (item.status === 'fail') {
        var fileunit = self.$refs['fileunit' + index];
        if (fileunit) {
          var file = fileunit.data.file;
          if (file.rawFile) {
            fileunit.uploadFile(file.rawFile);
          }
        }
      }
    });
  },
  toggle: function toggle(open, e) {
    e && e.stopPropagation();

    var data = this.data;
    if (typeof open === 'undefined') {
      data.open = !data.open;
    } else {
      data.open = open;
    }

    this.setPosition(!data.open);

    var index = UploadCard.opens.indexOf(this);
    if (data.open && index < 0) {
      UploadCard.opens.push(this);
    } else if (!data.open && index >= 0) {
      UploadCard.opens.splice(index, 1);
    }
  },
  setPosition: function setPosition(hidden) {
    var filesBanner = this.$refs.filesbanner;
    var filesWrapper = this.$refs.fileswrapper;
    if (hidden) {
      filesBanner.style.left = '-9999px';
      filesWrapper.style.left = '-9999px';
      return;
    }
    this.setVerticalPosition();
    this.setHorizontalPosition();
  },
  setVerticalPosition: function setVerticalPosition() {
    var filesEntry = this.$refs.filesentry;
    var filesEntryCoors = filesEntry.getBoundingClientRect();
    var filesWrapper = this.$refs.fileswrapper;
    var filesWrapperCoors = filesWrapper.getBoundingClientRect();
    var viewHeight = document.documentElement.clientHeight;

    // show at vertical bottom side
    var vertical = 'bottom';
    // show at vertical top side
    var isVerticalTopSide = filesEntryCoors.top - filesWrapperCoors.height > 0;
    var isVerticalBottomSide = filesEntryCoors.bottom + filesWrapperCoors.height < viewHeight;
    if (isVerticalTopSide && !isVerticalBottomSide) {
      vertical = 'top';
    }

    if (vertical === 'bottom') {
      this.data.isTopBanner = false;
      filesWrapper.style.top = '53px';
      filesWrapper.style.bottom = 'auto';
      filesWrapper.style.boxShadow = 'auto';
      filesWrapper.style.boxShadow = '0 2px 3px 0 rgba(0,0,0,0.1)';
    } else {
      this.data.isTopBanner = true;
      filesWrapper.style.top = 'auto';
      filesWrapper.style.bottom = '53px';
      filesWrapper.style.boxShadow = '0 -2px 3px 0 rgba(0,0,0,0.1)';
    }
  },
  setHorizontalPosition: function setHorizontalPosition() {
    var filesEntry = this.$refs.filesentry;
    var filesEntryCoors = filesEntry.getBoundingClientRect();
    var filesBanner = this.$refs.filesbanner;
    var filesWrapper = this.$refs.fileswrapper;
    var filesWrapperCoors = filesWrapper.getBoundingClientRect();
    var viewWidth = document.documentElement.clientWidth;

    // show at central
    var horizontal = 'left';
    var offsetWidth = filesWrapperCoors.width / 2 - filesEntryCoors.width / 2;
    var isHorizontalLeftEdge = filesEntryCoors.left - offsetWidth < 0;
    var isHorizontalRightEdge = filesEntryCoors.right + offsetWidth > viewWidth;
    if (isHorizontalRightEdge) {
      horizontal = 'right';
    }
    var isHorizontalCenter = !isHorizontalLeftEdge && !isHorizontalRightEdge;
    if (isHorizontalCenter) {
      horizontal = 'central';
    }

    if (horizontal === 'left') {
      filesWrapper.style.left = '0';
      filesWrapper.style.right = 'auto';
    } else if (horizontal === 'right') {
      filesWrapper.style.left = 'auto';
      filesWrapper.style.right = '0';
    } else if (horizontal === 'central') {
      filesWrapper.style.left = '-' + offsetWidth + 'px';
    }

    filesBanner.style.left = '20px';
  }
});

UploadCard.opens = [];
var opens = UploadCard.opens;
document.addEventListener('click', function (e) {
  for (var len = opens.length, i = len - 1; i >= 0; i -= 1) {
    var close = true;

    var upload = opens[i];
    var uploadElement = upload.$refs && upload.$refs.element;
    var iterator = e.target;

    while (iterator) {
      if (uploadElement === iterator) {
        close = false;
        break;
      }
      iterator = iterator.parentElement;
    }

    if (close) {
      upload.toggle(false, e);
      upload.$update();
    }
  }
}, false);

module.exports = UploadCard;

/***/ }),
/* 436 */
/***/ (function(module, exports) {

module.exports = "<div class=\"kl-upload-card\" ref=\"element\">\n    <div class=\"kl-upload-card-files\" ref=\"fileszone\">\n        <div class=\"kl-upload-card-entry-wrap\" ref=\"entrywrapper\" r-hide={fileUnitList.length === 0} on-click={this.toggle(undefined, $event)}>\n            <div ref=\"filesentry\" class=\"kl-upload-card-entry-wrap__entry\">\n                {#if entryFileInfo.type === 'image'}\n                    <div class=\"kl-upload-card-imgwrap\">\n                        <img class=\"kl-upload-card-imgwrap__img\" src={entryFileInfo.src} alt={entryFileInfo.name}/>\n                    </div>\n                {#elseif entryFileInfo.type === 'unknown'}\n                    <span class=\"kl-upload-card__txt\">{this.$trans('UNKNOWN')}</span>\n                {#else} <!-- TEXT, DOC, JS, HTML -->\n                    <span class=\"kl-upload-card__txt\">{entryFileInfo.type.toUpperCase()}</span>\n                {/if}\n                <div>\n                    {#if status === 'fail'}\n                        <span class=\"kl-upload-unit-failed\" on-click={this.uploadFiles()}>\n                            <span class=\"kl-upload-unit-failed__info\"><kl-icon type=\"refresh\" />{this.$trans('RETRY')}</span>\n                        </span>\n                    {#elseif status === 'uploading'}\n                        <span class=\"kl-upload-unit-uploading\">\n                            <span class=\"kl-upload-unit-uploading__wrap\">\n                                <span class=\"kl-upload-unit-uploading__txt\">{progress || '0%'}</span>\n                                <kl-progress percent={progress || 0} size=\"sm\" class=\"kl-upload-unit-uploading__progress\" />\n                            </span>\n                        </span>\n                    {/if}\n                </div>\n                <span class=\"kl-upload-card__info\">{fileUnitList.length}</span>\n                <span ref=\"filesbanner\" class=\"kl-upload-card__banner\" r-class={{'is-top': isTopBanner}}></span>\n                <ul ref=\"fileswrapper\" class=\"kl-upload-list-filelist\" on-click={this.toggle(true, $event)}\n                    r-hide={fileUnitList.length === 0} r-style={{width: fileUnitListWidth + 'px'}}>\n                    {#list fileUnitList as fileunit}\n                        <li class=\"kl-upload-list-filelist__item\"\n                            r-style={{\n                                \"margin-left\": fileunit_index && fileunit_index % numPerline ? fileUnitMargin + \"px\" : \"auto\"\n                            }}>\n                            <file-unit ref=\"fileunit{fileunit_index}\"\n                                file={fileunit}\n                                action={action}\n                                url={fileunit.url}\n                                name={name}\n                                status={fileunit.status}\n                                readonly={readonly}\n                                headers={headers}\n                                withCredentials={withCredentials}\n                                data={data}\n                                onLoadInterceptor={onLoadInterceptor}\n                                onErrorInterceptor={onErrorInterceptor}\n                                beforeRemove={beforeRemove}\n                                on-preview={this.onPreview($event)}\n                                on-progress={this.onProgress($event)}\n                                on-success={this.onSuccess($event)}\n                                on-error={this.onError($event)}\n                                on-remove={this.onRemove($event)}/>\n                        </li>\n                    {/list}\n                </ul>\n            </div>\n            <div class=\"kl-upload-card-entry-wrap__info\">{info}</div>\n        </div>\n        <div ref=\"inputwrapper\" class=\"kl-upload-list-inputwrap\" r-hide={readonly || fileUnitList.length >= numMax} on-click={this.fileDialogOpen()}>\n            {#if this.$body}\n                {#inc this.$body}\n            {#else}\n                <div class=\"kl-upload-list-inputwrap__btn\"\n                     r-class={{dragover: dragover}}\n                     on-drop={this.onDrop($event)}\n                     on-dragenter={this.onDragEnter($event)}\n                     on-dragleave={this.onDragLeave($event)}\n                     on-dragover={this.onDragOver($event)}>\n                    <span class=\"kl-upload-list-inputwrap__cnt\"><kl-icon type=\"add\" />{this.$trans('UPLOAD_FILE')}</span>\n                </div>\n                <div class=\"kl-upload-list-inputwrap__info\">{preCheckInfo}</div>\n            {/if}\n        </div>\n    </div>\n    <form method=\"POST\" action={url} target=\"iframe{_id}\" enctype={contentType} ref=\"form\">\n        <input type=\"file\" name={name} ref=\"file\" multiple={multiple ? 'multiple' : ''} accept={accept} r-hide={true} on-change={this.fileSelect()}>\n        {#list Object.keys(data) as key}\n            <input type=\"hidden\" name={key} value={data[key]}>\n        {/list}\n    </form>\n    <div ref=\"imagepreview\"></div>\n</div>\n"

/***/ }),
/* 437 */
/***/ (function(module, exports) {

module.exports = "<div class=\"kl-upload {class}\">\n    {#if listType === 'list'}\n        <upload-list ref=\"upload\"\n            action={action}\n            name={name}\n            data={data}\n            headers={headers}\n            withCredentials={withCredentials}\n            multiple={multiple}\n            drag={drag}\n            accept={accept}\n            listType={listType}\n            fileList={fileList}\n            numMin={numMin}\n            numMax={numMax}\n            numPerline={numPerline}\n            maxSize={maxSize}\n            readonly={readonly}\n            imageWidth={imageWidth}\n            imageHeight={imageHeight}\n            imageScale={imageScale}\n            data={data}\n            on-preview={this.onPreview($event)}\n            encType={encType}\n            onLoadInterceptor={onLoadInterceptor}\n            onErrorInterceptor={onErrorInterceptor}\n            beforeUpload={beforeUpload}\n            beforeRemove={beforeRemove}\n            autoUpload={autoUpload}\n            formData={formData}/>\n    {#elseif listType === 'card'}\n        <upload-card ref=\"upload\"\n            action={action}\n            name={name}\n            data={data}\n            headers={headers}\n            withCredentials={withCredentials}\n            multiple={multiple}\n            drag={drag}\n            accept={accept}\n            listType={listType}\n            fileList={fileList}\n            numMin={numMin}\n            numMax={numMax}\n            numPerline={numPerline}\n            maxSize={maxSize}\n            readonly={readonly}\n            imageWidth={imageWidth}\n            imageHeight={imageHeight}\n            imageScale={imageScale}\n            data={data}\n            encType={encType}\n            on-preview={this.onPreview($event)}\n            onLoadInterceptor={onLoadInterceptor}\n            onErrorInterceptor={onErrorInterceptor}\n            beforeUpload={beforeUpload}\n            beforeRemove={beforeRemove}\n            autoUpload={autoUpload}\n            formData={formData}/>\n    {/if}\n</div>\n\n{#if tip && !hideTip}\n<span class=\"kl-tip kl-tip--{state} animated\" r-animation=\"on:enter;class:fadeInY;\">\n    <kl-icon type={state} />\n    <span class=\"kl-tip__msg\">{tip}</span>\n</span>\n{/if}\n"

/***/ }),
/* 438 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * @file KLSwitch  开关
 * @author nupthale<nupthale@163.com>
 */

var Component = __webpack_require__(1);
var template = __webpack_require__(439);

/**
 * @class KLSwitch
 * @extend Component
 * @param {object}      [options.data]                = 绑定属性
 * @param {string}      [options.data.class]               => 补充class
 * @param {boolean}     [options.data.disabled=false]      => 禁用开关
 * @param {boolean/string/number} [options.data.value=false]  <=> 选择的值
 * @param {boolean/string/number} [options.data.checkedValue=true]  => 选中时的值, 用于扩展value值类型
 * @param {boolean/string/number} [options.data.unCheckedValue=false]  => 非选中时的值, 用于扩展value值类型
 * @param {string}      [options.data.checkedText]  => 选中时的文字描述,可以是字符串模板
 * @param {string}      [options.data.unCheckedText]  => 非选中时的文字描述,可以是字符串模板
 * @param {string}      [options.data.size]  => 可选值sm
 */
var KLSwitch = Component.extend({
  name: 'kl-switch',
  template: template,
  config: function config() {
    this.defaults({
      class: '',
      disabled: false,
      value: false,
      checkedValue: true,
      unCheckedValue: false,
      checkedText: '',
      unCheckedText: '',
      size: ''
    });
    this.supr();
  },

  computed: {
    checked: function checked() {
      var data = this.data;

      return '' + data.value === '' + data.checkedValue;
    }
  },
  onChange: function onChange() {
    var data = this.data;

    data.value = '' + data.value === '' + data.checkedValue ? data.unCheckedValue : data.checkedValue;

    /**
     * @event KLSwitch#change 切换事件
     * @param {boolean} value 当前value的值
     */
    this.$emit('change', {
      value: data.value
    });
  }
});

module.exports = KLSwitch;

/***/ }),
/* 439 */
/***/ (function(module, exports) {

module.exports = "<label class=\"kl-switch kl-switch--{size} {class}\" is-dis={disabled} is-chk={checked}>\n  <input type=\"checkbox\" class=\"f-dn\" disabled={disabled} on-change={this.onChange($event)} />\n  <span class=\"kl-switch__slider\">\n    {#if checked && checkedText}\n      <span class=\"kl-switch__checkedText\">{#inc checkedText}</span>\n    {#elseif !checked && unCheckedText}\n      <span class=\"kl-switch__unCheckedText\">{#inc unCheckedText}</span>\n    {/if}\n  </span>\n</label>"

/***/ }),
/* 440 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * @file KLGroup     步骤条
 * @author   ziane(zianecui@gmail.com)
 */

var Component = __webpack_require__(1);
var template = __webpack_require__(441);
var _ = __webpack_require__(2);

var KLGroup = Component.extend({
  name: 'kl-group',
  template: template,
  $stepsNode: [],
  config: function config() {
    _.extend(this.data, {});
    this.supr();
  },
  init: function init() {
    this.supr();
  }
});

module.exports = KLGroup;

/***/ }),
/* 441 */
/***/ (function(module, exports) {

module.exports = "<div class=\"kl-group\">\n    {#inc this.$body}\n</div>\n"

/***/ }),
/* 442 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _component = __webpack_require__(1);

var _component2 = _interopRequireDefault(_component);

var _index = __webpack_require__(443);

var _index2 = _interopRequireDefault(_index);

var _index3 = __webpack_require__(231);

var _index4 = _interopRequireDefault(_index3);

var _index5 = __webpack_require__(233);

var _index6 = _interopRequireDefault(_index5);

var _index7 = __webpack_require__(24);

var _index8 = _interopRequireDefault(_index7);

var _index9 = __webpack_require__(35);

var _index10 = _interopRequireDefault(_index9);

var _validationMixin = __webpack_require__(6);

var _validationMixin2 = _interopRequireDefault(_validationMixin);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var KLTimePicker = _component2.default.extend({
    name: 'kl-time-picker',
    template: _index2.default,
    config: function config() {
        this.defaults({
            isShow: false,
            type: 'time',
            value: null,
            format: 'HH:mm:ss',
            placeholder: '请选择时间',
            disabledHours: [],
            disabledMinutes: [],
            disabledSeconds: [],
            hideDisabledOptions: false,
            confirm: false,
            steps: []
        });
        this.supr();

        this.initValidation();
    },
    onPick: function onPick(event) {
        this.$emit('pick', event);
    },
    getVisualValue: function getVisualValue(visualValue) {
        this.data.visualValue = visualValue;
    },
    resetValue: function resetValue(e) {
        e.stopPropagation();
        this.data.value = null;
    },
    validate: function validate(on) {
        var data = this.data;
        var date = data.date || '';

        if (data.readonly || data.disabled) {
            return {
                success: true
            };
        }

        var result = { success: true, message: '' };
        var value = this.data.value;

        if (data.required && (value === undefined || value === null)) {
            result.success = false;
            result.message = this.data.message || '请选择';
            this.data.state = 'error';
        } else {
            result.success = true;
            result.message = '';
            this.data.state = '';
        }
        this.data.tip = result.message;

        this.$emit('validate', {
            sender: this,
            on: on,
            result: result
        });

        return result;
    }
}).use(_validationMixin2.default).component('kl-drop', _index8.default).component('kl-drop-header', _index10.default).component('kl-time-range-panel', _index6.default).component('kl-time-panel', _index4.default); /* eslint-disable */


module.exports = KLTimePicker;

/***/ }),
/* 443 */
/***/ (function(module, exports) {

module.exports = "\n<kl-drop isShow={isShow} headerClass=\"kl-newdate-header\">\n    <kl-drop-header>\n        <div\n            class=\"kl-newdate-header-input\"\n            is-dis={disabled}\n        >\n            {visualValue ? visualValue : placeholder}\n            <kl-icon class=\"kl-newdate-header-input__icon\" type=\"time\" />\n            <kl-icon class=\"kl-newdate-header-input__icon-remove\" type=\"error\"\n                     on-click=\"{this.resetValue($event)}\" />\n        </div>\n    </kl-drop-header>\n    {#if type == 'timerange'}\n    <kl-time-range-panel\n        isShow={isShow}\n        value={value}\n        confirm=\"{confirm}\"\n        on-pick={this.onPick($event)}\n        on-format={this.getVisualValue($event)}\n        on-pickSuccess=\"{isShow = false}\"\n        ></kl-time-range-panel>\n    {#else}\n    <kl-time-panel\n        disabledHours=\"{disabledHours}\"\n        disabledMinutes=\"{disabledMinutes}\"\n        disabledSeconds=\"{disabledSeconds}\"\n        disabledMinutes=\"{disabledMinutes}\"\n        hideDisabledOptions=\"{hideDisabledOptions}\"\n        format=\"{format}\"\n        steps=\"{steps}\"\n\n        isShow={isShow}\n        value={value}\n        confirm=\"{confirm}\"\n        on-pick={this.onPick($event)}\n        on-format={this.getVisualValue($event)}\n        on-pickSuccess=\"{isShow = false}\"\n    ></kl-time-panel>\n    {/if}\n</kl-drop>\n{#if tip && !hideTip}\n    <span class=\"kl-tip kl-tip--{state} animated\" r-animation=\"on:enter;class:fadeInY;on:leave;class:fadeOutY;\">\n        <kl-icon type={state} />\n        <span class=\"kl-tip__msg\">{tip}</span>\n    </span>\n{/if}\n"

/***/ }),
/* 444 */
/***/ (function(module, exports) {

module.exports = "<div class=\"{prefixCls + '-body-wrapper'} f-cb\">\n    <div class=\"{prefixCls + '-body'}\">\n        {#if showDate}\n        <div class=\"{timePrefixCls + '-header'}\">{ visibleDate }</div>\n        {/if}\n        <div class=\"{prefixCls + '-content'}\">\n            <kl-time-spinner\n                ref=\"timeSpinner\"\n                show-seconds=\"{showSeconds}\"\n                steps=\"{steps}\"\n                hours=\"{timeSlots[0]}\"\n                minutes=\"{timeSlots[1]}\"\n                seconds=\"{timeSlots[2]}\"\n                disabled-hours=\"{disabledHMS.disabledHours}\"\n                disabled-minutes=\"{disabledHMS.disabledMinutes}\"\n                disabled-seconds=\"{disabledHMS.disabledSeconds}\"\n                hide-disabled-options=\"{hideDisabledOptions}\"\n\n                on-change=\"{this.onChange($event)}\"\n                on-pick-click=\"{this.onPickClick($event)}\"></kl-time-spinner>\n        </div>\n        {#if confirm}\n        <kl-date-confirm\n            on-pick-success=\"{this.onPickSuccess($event)}\"\n        ></kl-date-confirm>\n        {/if}\n    </div>\n</div>\n"

/***/ }),
/* 445 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _defineProperty = __webpack_require__(446);

var _defineProperty2 = _interopRequireDefault(_defineProperty);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (obj, key, value) {
  if (key in obj) {
    (0, _defineProperty2.default)(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
};

/***/ }),
/* 446 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(447), __esModule: true };

/***/ }),
/* 447 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(448);
var $Object = __webpack_require__(4).Object;
module.exports = function defineProperty(it, key, desc){
  return $Object.defineProperty(it, key, desc);
};

/***/ }),
/* 448 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(10);
// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
$export($export.S + $export.F * !__webpack_require__(14), 'Object', {defineProperty: __webpack_require__(12).f});

/***/ }),
/* 449 */
/***/ (function(module, exports) {

module.exports = "<div class=\"{classes}\">\n    <div class=\"{prefixCls + '-list'}\" ref=\"hours\">\n        <ul class=\"{prefixCls + '-list__ul'}\">\n            {#list hoursList as item}\n            <li class=\"{this.getCellCls(item)}\" r-hide=\"item.hide\" on-click=\"{this.onClick('hours', item, $event)}\">{ item.text | formatTime }</li>\n            {/list}\n        </ul>\n    </div>\n    <div class=\"{prefixCls+ '-list'}\" ref=\"minutes\">\n        <ul class=\"{prefixCls + '-list__ul'}\">\n            {#list minutesList as item}\n            <li class=\"{this.getCellCls(item)}\" r-hide=\"item.hide\" on-click=\"{this.onClick('minutes', item, $event)}\">{ item.text | formatTime }</li>\n            {/list}\n        </ul>\n    </div>\n    <div class=\"{prefixCls+ '-list'}\" r-hide=\"!showSeconds\" ref=\"seconds\">\n        <ul class=\"{prefixCls + '-list__ul'}\">\n            {#list secondsList as item}\n            <li class=\"{this.getCellCls(item)}\" r-hide=\"item.hide\" on-click=\"{this.onClick('seconds', item, $event)}\">{ item.text | formatTime }</li>\n            {/list}\n        </ul>\n    </div>\n</div>\n"

/***/ }),
/* 450 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _index = __webpack_require__(5);

var prefixCls = 'kl-time-picker-cells'; /* eslint-disable */

exports.default = function (Component) {
    Component.implement({
        getCellCls: function getCellCls(cell) {
            var selectedCellCls = cell.selected || cell.start || cell.end ? prefixCls + '__cell--selected' : '';
            var disabledCellCls = cell.disabled ? prefixCls + '__cell--disabled' : '';
            // const todayCellCls = cell.type === 'today' ? `${prefixCls}__cell--today` : '';
            // const prevMonthCellCls = cell.type === 'prevMonth' ? `${prefixCls}__cell--prev-month` : '';
            // const nextMonthCellCls = cell.type === 'nextMonth' ? `${prefixCls}__cell--next-month` : '';
            // const weekLabelCellCls = cell.type === 'weekLabel' ? `${prefixCls}__cell--week-label` : '';
            // const rangeCellCls = cell.range && !cell.start && !cell.end ? `${prefixCls}__cell--range` : '';
            // const focusedCls = clearHours(cell.date) === clearHours(this.data.focusedDate) ? `${prefixCls}__cell--focused` : '';

            // return `${prefixCls}__cell ${selectedCellCls} ${disabledCellCls} ${todayCellCls} ${prevMonthCellCls} ${nextMonthCellCls} ${weekLabelCellCls} ${rangeCellCls} ${focusedCls}`;
            return prefixCls + '__cell ' + selectedCellCls + ' ' + disabledCellCls;
        },
        getClasses: function getClasses() {
            var classes = '';
            if (this.data.showWeekNumbers) {
                classes = prefixCls + '-show-week-numbers';
            }

            return prefixCls + ' ' + classes;
        }
    });
};

/***/ }),
/* 451 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _from = __webpack_require__(452);

var _from2 = _interopRequireDefault(_from);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  } else {
    return (0, _from2.default)(arr);
  }
};

/***/ }),
/* 452 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(453), __esModule: true };

/***/ }),
/* 453 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(31);
__webpack_require__(454);
module.exports = __webpack_require__(4).Array.from;

/***/ }),
/* 454 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ctx            = __webpack_require__(26)
  , $export        = __webpack_require__(10)
  , toObject       = __webpack_require__(42)
  , call           = __webpack_require__(225)
  , isArrayIter    = __webpack_require__(226)
  , toLength       = __webpack_require__(53)
  , createProperty = __webpack_require__(455)
  , getIterFn      = __webpack_require__(59);

$export($export.S + $export.F * !__webpack_require__(228)(function(iter){ Array.from(iter); }), 'Array', {
  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
  from: function from(arrayLike/*, mapfn = undefined, thisArg = undefined*/){
    var O       = toObject(arrayLike)
      , C       = typeof this == 'function' ? this : Array
      , aLen    = arguments.length
      , mapfn   = aLen > 1 ? arguments[1] : undefined
      , mapping = mapfn !== undefined
      , index   = 0
      , iterFn  = getIterFn(O)
      , length, result, step, iterator;
    if(mapping)mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
    // if object isn't iterable or it's array with default iterator - use simple case
    if(iterFn != undefined && !(C == Array && isArrayIter(iterFn))){
      for(iterator = iterFn.call(O), result = new C; !(step = iterator.next()).done; index++){
        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
      }
    } else {
      length = toLength(O.length);
      for(result = new C(length); length > index; index++){
        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
      }
    }
    result.length = index;
    return result;
  }
});


/***/ }),
/* 455 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $defineProperty = __webpack_require__(12)
  , createDesc      = __webpack_require__(28);

module.exports = function(object, index, value){
  if(index in object)$defineProperty.f(object, index, createDesc(0, value));
  else object[index] = value;
};

/***/ }),
/* 456 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __WEBPACK_AMD_DEFINE_RESULT__;

/*eslint-disable*/
// 把 YYYY-MM-DD 改成了 yyyy-MM-dd
(function (main) {
    'use strict';

    /**
     * Parse or format dates
     * @class fecha
     */

    var fecha = {};
    var token = /d{1,4}|M{1,4}|yy(?:yy)?|S{1,3}|Do|ZZ|([HhMsDm])\1?|[aA]|"[^"]*"|'[^']*'/g;
    var twoDigits = /\d\d?/;
    var threeDigits = /\d{3}/;
    var fourDigits = /\d{4}/;
    var word = /[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i;
    var noop = function noop() {};

    function shorten(arr, sLen) {
        var newArr = [];
        for (var i = 0, len = arr.length; i < len; i++) {
            newArr.push(arr[i].substr(0, sLen));
        }
        return newArr;
    }

    function monthUpdate(arrName) {
        return function (d, v, i18n) {
            var index = i18n[arrName].indexOf(v.charAt(0).toUpperCase() + v.substr(1).toLowerCase());
            if (~index) {
                d.month = index;
            }
        };
    }

    function pad(val, len) {
        val = String(val);
        len = len || 2;
        while (val.length < len) {
            val = '0' + val;
        }
        return val;
    }

    var dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
    var monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
    var monthNamesShort = shorten(monthNames, 3);
    var dayNamesShort = shorten(dayNames, 3);
    fecha.i18n = {
        dayNamesShort: dayNamesShort,
        dayNames: dayNames,
        monthNamesShort: monthNamesShort,
        monthNames: monthNames,
        amPm: ['am', 'pm'],
        DoFn: function DoFn(D) {
            return D + ['th', 'st', 'nd', 'rd'][D % 10 > 3 ? 0 : (D - D % 10 !== 10) * D % 10];
        }
    };

    var formatFlags = {
        D: function D(dateObj) {
            return dateObj.getDay();
        },
        DD: function DD(dateObj) {
            return pad(dateObj.getDay());
        },
        Do: function Do(dateObj, i18n) {
            return i18n.DoFn(dateObj.getDate());
        },
        d: function d(dateObj) {
            return dateObj.getDate();
        },
        dd: function dd(dateObj) {
            return pad(dateObj.getDate());
        },
        ddd: function ddd(dateObj, i18n) {
            return i18n.dayNamesShort[dateObj.getDay()];
        },
        dddd: function dddd(dateObj, i18n) {
            return i18n.dayNames[dateObj.getDay()];
        },
        M: function M(dateObj) {
            return dateObj.getMonth() + 1;
        },
        MM: function MM(dateObj) {
            return pad(dateObj.getMonth() + 1);
        },
        MMM: function MMM(dateObj, i18n) {
            return i18n.monthNamesShort[dateObj.getMonth()];
        },
        MMMM: function MMMM(dateObj, i18n) {
            return i18n.monthNames[dateObj.getMonth()];
        },
        yy: function yy(dateObj) {
            return String(dateObj.getFullYear()).substr(2);
        },
        yyyy: function yyyy(dateObj) {
            return dateObj.getFullYear();
        },
        h: function h(dateObj) {
            return dateObj.getHours() % 12 || 12;
        },
        hh: function hh(dateObj) {
            return pad(dateObj.getHours() % 12 || 12);
        },
        H: function H(dateObj) {
            return dateObj.getHours();
        },
        HH: function HH(dateObj) {
            return pad(dateObj.getHours());
        },
        m: function m(dateObj) {
            return dateObj.getMinutes();
        },
        mm: function mm(dateObj) {
            return pad(dateObj.getMinutes());
        },
        s: function s(dateObj) {
            return dateObj.getSeconds();
        },
        ss: function ss(dateObj) {
            return pad(dateObj.getSeconds());
        },
        S: function S(dateObj) {
            return Math.round(dateObj.getMilliseconds() / 100);
        },
        SS: function SS(dateObj) {
            return pad(Math.round(dateObj.getMilliseconds() / 10), 2);
        },
        SSS: function SSS(dateObj) {
            return pad(dateObj.getMilliseconds(), 3);
        },
        a: function a(dateObj, i18n) {
            return dateObj.getHours() < 12 ? i18n.amPm[0] : i18n.amPm[1];
        },
        A: function A(dateObj, i18n) {
            return dateObj.getHours() < 12 ? i18n.amPm[0].toUpperCase() : i18n.amPm[1].toUpperCase();
        },
        ZZ: function ZZ(dateObj) {
            var o = dateObj.getTimezoneOffset();
            return (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4);
        }
    };

    var parseFlags = {
        d: [twoDigits, function (d, v) {
            d.day = v;
        }],
        M: [twoDigits, function (d, v) {
            d.month = v - 1;
        }],
        yy: [twoDigits, function (d, v) {
            var da = new Date(),
                cent = +('' + da.getFullYear()).substr(0, 2);
            d.year = '' + (v > 68 ? cent - 1 : cent) + v;
        }],
        h: [twoDigits, function (d, v) {
            d.hour = v;
        }],
        m: [twoDigits, function (d, v) {
            d.minute = v;
        }],
        s: [twoDigits, function (d, v) {
            d.second = v;
        }],
        yyyy: [fourDigits, function (d, v) {
            d.year = v;
        }],
        S: [/\d/, function (d, v) {
            d.millisecond = v * 100;
        }],
        SS: [/\d{2}/, function (d, v) {
            d.millisecond = v * 10;
        }],
        SSS: [threeDigits, function (d, v) {
            d.millisecond = v;
        }],
        D: [twoDigits, noop],
        ddd: [word, noop],
        MMM: [word, monthUpdate('monthNamesShort')],
        MMMM: [word, monthUpdate('monthNames')],
        a: [word, function (d, v, i18n) {
            var val = v.toLowerCase();
            if (val === i18n.amPm[0]) {
                d.isPm = false;
            } else if (val === i18n.amPm[1]) {
                d.isPm = true;
            }
        }],
        ZZ: [/[\+\-]\d\d:?\d\d/, function (d, v) {
            var parts = (v + '').match(/([\+\-]|\d\d)/gi),
                minutes;

            if (parts) {
                minutes = +(parts[1] * 60) + parseInt(parts[2], 10);
                d.timezoneOffset = parts[0] === '+' ? minutes : -minutes;
            }
        }]
    };
    parseFlags.DD = parseFlags.DD;
    parseFlags.dddd = parseFlags.ddd;
    parseFlags.Do = parseFlags.dd = parseFlags.d;
    parseFlags.mm = parseFlags.m;
    parseFlags.hh = parseFlags.H = parseFlags.HH = parseFlags.h;
    parseFlags.MM = parseFlags.M;
    parseFlags.ss = parseFlags.s;
    parseFlags.A = parseFlags.a;

    // Some common format strings
    fecha.masks = {
        'default': 'ddd MMM dd yyyy HH:mm:ss',
        shortDate: 'M/D/yy',
        mediumDate: 'MMM d, yyyy',
        longDate: 'MMMM d, yyyy',
        fullDate: 'dddd, MMMM d, yyyy',
        shortTime: 'HH:mm',
        mediumTime: 'HH:mm:ss',
        longTime: 'HH:mm:ss.SSS'
    };

    /***
     * Format a date
     * @method format
     * @param {Date|number} dateObj
     * @param {string} mask Format of the date, i.e. 'mm-dd-yy' or 'shortDate'
     */
    fecha.format = function (dateObj, mask, i18nSettings) {
        var i18n = i18nSettings || fecha.i18n;

        if (typeof dateObj === 'number') {
            dateObj = new Date(dateObj);
        }

        if (Object.prototype.toString.call(dateObj) !== '[object Date]' || isNaN(dateObj.getTime())) {
            throw new Error('Invalid Date in fecha.format');
        }

        mask = fecha.masks[mask] || mask || fecha.masks['default'];

        return mask.replace(token, function ($0) {
            return $0 in formatFlags ? formatFlags[$0](dateObj, i18n) : $0.slice(1, $0.length - 1);
        });
    };

    /**
     * Parse a date string into an object, changes - into /
     * @method parse
     * @param {string} dateStr Date string
     * @param {string} format Date parse format
     * @returns {Date|boolean}
     */
    fecha.parse = function (dateStr, format, i18nSettings) {
        var i18n = i18nSettings || fecha.i18n;

        if (typeof format !== 'string') {
            throw new Error('Invalid format in fecha.parse');
        }

        format = fecha.masks[format] || format;

        // Avoid regular expression denial of service, fail early for really long strings
        // https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS
        if (dateStr.length > 1000) {
            return false;
        }

        var isValid = true;
        var dateInfo = {};
        format.replace(token, function ($0) {
            if (parseFlags[$0]) {
                var info = parseFlags[$0];
                var index = dateStr.search(info[0]);
                if (!~index) {
                    isValid = false;
                } else {
                    dateStr.replace(info[0], function (result) {
                        info[1](dateInfo, result, i18n);
                        dateStr = dateStr.substr(index + result.length);
                        return result;
                    });
                }
            }

            return parseFlags[$0] ? '' : $0.slice(1, $0.length - 1);
        });

        if (!isValid) {
            return false;
        }

        var today = new Date();
        if (dateInfo.isPm === true && dateInfo.hour != null && +dateInfo.hour !== 12) {
            dateInfo.hour = +dateInfo.hour + 12;
        } else if (dateInfo.isPm === false && +dateInfo.hour === 12) {
            dateInfo.hour = 0;
        }

        var date;
        if (dateInfo.timezoneOffset != null) {
            dateInfo.minute = +(dateInfo.minute || 0) - +dateInfo.timezoneOffset;
            date = new Date(Date.UTC(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1, dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0));
        } else {
            date = new Date(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1, dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0);
        }
        return date;
    };

    /* istanbul ignore next */
    if (typeof module !== 'undefined' && module.exports) {
        module.exports = fecha;
    } else if (true) {
        !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {
            return fecha;
        }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
    } else {
        main.fecha = fecha;
    }
})(undefined);

/***/ }),
/* 457 */
/***/ (function(module, exports) {

module.exports = "<div class=\"{prefixCls}\">\n    {#if showTime}\n        <a class=\"{prefixCls}__time\" href=\"javascript:;\"\n           is-dis={timeDisabled}\n           on-click={this.onToggleTime()}>{isTime ? '选择日期' : '选择时间'}</a>\n    {/if}\n\n    <kl-button title=\"确认\" size=\"sm\" type=\"primary\" on-click={this.onSuccess()} />\n</div>\n"

/***/ }),
/* 458 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
/* eslint-disable */
var capitalize = exports.capitalize = function capitalize(str) {
    return str[0].toUpperCase() + str.slice(1);
};
var mergeDateHMS = exports.mergeDateHMS = function mergeDateHMS(date, hours, minutes, seconds) {
    var newDate = new Date(date.getTime());
    newDate.setHours(hours);
    newDate.setMinutes(minutes);
    newDate.setSeconds(seconds);
    return newDate;
};
var unique = exports.unique = function unique(el, i, arr) {
    return arr.indexOf(el) === i;
};
var returnFalse = exports.returnFalse = function returnFalse() {
    return false;
};

/***/ }),
/* 459 */
/***/ (function(module, exports) {

module.exports = "<div class=\"{classes} f-cb\">\n    <div class=\"{prefixCls}__body {prefixCls}__time-body\">\n        <div class=\"{prefixCls}__content {prefixCls}--content-left\">\n            <div class=\"{timePrefixCls}\">\n                {#if showDate}\n                {leftDatePanelLabel}\n                {#else}\n                开始时间\n                {/if}\n            </div>\n            <!-- hours=\"{value[0] && dateStart.getHours()}\" -->\n            <!-- minutes=\"{value[0] && dateStart.getMinutes()}\" -->\n            <!-- seconds=\"{value[0] && dateStart.getSeconds()}\" -->\n            <kl-time-spinner\n                ref=\"timeSpinner\"\n                steps=\"{steps}\"\n                show-seconds=\"{showSeconds}\"\n                hours=\"{dateStart.getHours()}\"\n                minutes=\"{dateStart.getMinutes()}\"\n                seconds=\"{dateStart.getSeconds()}\"\n                disabled-hours=\"{disabledHours}\"\n                disabled-minutes=\"{disabledMinutes}\"\n                disabled-seconds=\"{disabledSeconds}\"\n                hide-disabled-options=\"{hideDisabledOptions}\"\n\n                on-change=\"{this.onStartChange($event)}\"\n                on-pick-click=\"{this.onPickClick($event)}\"></kl-time-spinner>\n        </div>\n        <div class=\"{prefixCls}__content {prefixCls}--content-right\">\n            <div class=\"{timePrefixCls}\">\n                {#if showDate}\n                { rightDatePanelLabel }\n                {#else}\n                结束时间\n                {/if}\n            </div>\n            <!-- hours=\"{value[1] && dateEnd.getHours()}\" -->\n            <!-- minutes=\"{value[1] && dateEnd.getMinutes()}\" -->\n            <!-- seconds=\"{value[1] && dateEnd.getSeconds()}\" -->\n            <kl-time-spinner\n                ref=\"timeSpinnerEnd\"\n                steps=\"{steps}\"\n                show-seconds=\"{showSeconds}\"\n                hours=\"{dateEnd.getHours()}\"\n                minutes=\"{dateEnd.getMinutes()}\"\n                seconds=\"{dateEnd.getSeconds()}\"\n                disabled-hours=\"{disabledHours}\"\n                disabled-minutes=\"{disabledMinutes}\"\n                disabled-seconds=\"{disabledSeconds}\"\n                hide-disabled-options=\"{hideDisabledOptions}\"\n\n                on-change=\"{this.onEndChange($event)}\"\n                on-pick-click=\"{this.onPickClick($event)}\"></kl-time-spinner>\n        </div>\n        {#if confirm}\n        <kl-date-confirm\n            on-pick-success=\"{this.onPickSuccess($event)}\"\n        ></kl-date-confirm>\n        {/if}\n    </div>\n</div>\n"

/***/ }),
/* 460 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _keys = __webpack_require__(20);

var _keys2 = _interopRequireDefault(_keys);

var _utils = __webpack_require__(5);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var capitalize = function capitalize(str) {
    return str[0].toUpperCase() + str.slice(1);
}; /* eslint-disable */

exports.default = function (Component) {
    Component.implement({
        onPickSuccess: function onPickSuccess() {
            this.$emit('pick-success');
        },
        onPickClick: function onPickClick() {
            this.$emit('pick-click');
        },
        onStartChange: function onStartChange(date) {
            this.handleChange(date, {});
        },
        onEndChange: function onEndChange(date) {
            this.handleChange({}, date);
        },
        handleChange: function handleChange(start, end) {
            var emit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;

            var dateStart = new Date(this.data.dateStart);
            var dateEnd = new Date(this.data.dateEnd);

            (0, _keys2.default)(start).forEach(function (type) {
                dateStart['set' + capitalize(type)](start[type]);
            });

            (0, _keys2.default)(end).forEach(function (type) {
                dateEnd['set' + capitalize(type)](end[type]);
            });

            if (dateEnd < dateStart) dateEnd = dateStart;

            this.data.value = [this.formatDate(dateStart), this.formatDate(dateEnd)];
            this.getVisualValue(dateStart, dateEnd);
            if (emit) {
                this.$emit('pick', {
                    value: [dateStart, dateEnd],
                    type: 'time'
                });
            }
        },
        formatDate: function formatDate(value) {
            var store = this.data;

            var format = _utils.DEFAULT_FORMATS.timerange;

            var formatter = _utils.TYPE_VALUE_RESOLVER_MAP.timerange.formatter;

            return formatter(value, store.format || format);
        }
    });
};

/***/ }),
/* 461 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _component = __webpack_require__(1);

var _component2 = _interopRequireDefault(_component);

var _index = __webpack_require__(462);

var _index2 = _interopRequireDefault(_index);

var _index3 = __webpack_require__(463);

var _index4 = _interopRequireDefault(_index3);

var _index5 = __webpack_require__(478);

var _index6 = _interopRequireDefault(_index5);

var _index7 = __webpack_require__(24);

var _index8 = _interopRequireDefault(_index7);

var _index9 = __webpack_require__(35);

var _index10 = _interopRequireDefault(_index9);

var _validationMixin = __webpack_require__(6);

var _validationMixin2 = _interopRequireDefault(_validationMixin);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var KLDate = _component2.default.extend({
    name: 'kl-date',
    template: _index2.default,
    config: function config() {
        this.defaults({
            placement: 'bottom-start',
            appendToBody: false,
            isShow: false,
            isConfirm: false,
            steps: [],
            palceholder: '请选择日期',
            type: 'date',
            internalValue: [null],
            format: '',
            disabledDate: function disabledDate() {
                return false;
            },
            shortcuts: [],
            showWeekNumbers: false,
            splitPanels: false
        });
        this.supr();

        this.initValidation();
    },
    init: function init() {
        if (!this.data.format) {
            var formatMap = {
                'year': 'yyyy',
                'month': 'yyyy-MM',
                'date': 'yyyy-MM-dd',
                'daterange': 'yyyy-MM-dd',
                'datetime': 'yyyy-MM-dd HH:mm:ss',
                'datetimerange': 'yyyy-MM-dd HH:mm:ss'
            };

            this.data.format = formatMap[this.data.type];
        }
    },
    onPick: function onPick(event) {
        if (event.isShow == false) {
            this.data.isShow = event.isShow;
        }
        this.$emit('pick', event);
    },
    onShowVisualValue: function onShowVisualValue(visualValue) {
        this.data.visualValue = visualValue;
    },
    resetValue: function resetValue(e) {
        e.stopPropagation();
        this.data.value = null;
    },
    validate: function validate(on) {
        var data = this.data;
        var date = data.date || '';

        if (data.readonly || data.disabled) {
            return {
                success: true
            };
        }

        var result = { success: true, message: '' };
        var value = this.data.value;

        if (data.required && (value === undefined || value === null)) {
            result.success = false;
            result.message = this.data.message || '请选择';
            this.data.state = 'error';
        } else {
            result.success = true;
            result.message = '';
            this.data.state = '';
        }
        this.data.tip = result.message;

        this.$emit('validate', {
            sender: this,
            on: on,
            result: result
        });

        return result;
    }
}).use(_validationMixin2.default).component('kl-drop', _index8.default).component('kl-drop-header', _index10.default).component('kl-date-range-panel', _index6.default).component('kl-date-panel', _index4.default);

// components
/* eslint-disable */

module.exports = KLDate;

/***/ }),
/* 462 */
/***/ (function(module, exports) {

module.exports = "\n<kl-drop placement={placement} appendToBody=\"{appendToBody}\" isShow={isShow} headerClass=\"kl-newdate-header\">\n    <kl-drop-header>\n        <div\n            class=\"kl-newdate-header-input\"\n            is-dis={disabled}\n        >\n            {visualValue ? visualValue : placeholder}\n            <kl-icon class=\"kl-newdate-header-input__icon\" type=\"calendar\" />\n            <kl-icon class=\"kl-newdate-header-input__icon-remove\" type=\"error\"\n                 on-click=\"{this.resetValue($event)}\" />\n        </div>\n    </kl-drop-header>\n    {#if type == 'daterange' || type == 'datetimerange'}\n    <kl-date-range-panel\n        confirm=\"{confirm}\"\n        format=\"{format}\"\n        isShow={isShow}\n        value={value}\n        type=\"{type}\"\n        shortcuts=\"{shortcuts}\"\n        disabledDate=\"{disabledDate}\"\n        showWeekNumbers=\"{showWeekNumbers}\"\n        splitPanels=\"{splitPanels}\"\n        on-pick=\"{this.onPick($event)}\"\n        on-showVisualValue=\"{this.onShowVisualValue($event)}\"\n        on-pickSuccess=\"{isShow = false}\"\n        ></kl-date-range-panel>\n    {#else}\n    <kl-date-panel\n        confirm=\"{confirm}\"\n        format=\"{format}\"\n        isShow={isShow}\n        value={value}\n        selectionMode=\"{type}\"\n        shortcuts=\"{shortcuts}\"\n        disabledDate=\"{disabledDate}\"\n        showWeekNumbers=\"{showWeekNumbers}\"\n        on-pick=\"{this.onPick($event)}\"\n        on-showVisualValue=\"{this.onShowVisualValue($event)}\"\n        on-pickSuccess=\"{isShow = false}\"\n    ></kl-date-panel>\n    {/if}\n</kl-drop>\n{#if tip && !hideTip}\n    <span class=\"kl-tip kl-tip--{state} animated\" r-animation=\"on:enter;class:fadeInY;on:leave;class:fadeOutY;\">\n        <kl-icon type={state} />\n        <span class=\"kl-tip__msg\">{tip}</span>\n    </span>\n{/if}\n"

/***/ }),
/* 463 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _slicedToArray2 = __webpack_require__(25);

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _component = __webpack_require__(1);

var _component2 = _interopRequireDefault(_component);

var _index = __webpack_require__(464);

var _index2 = _interopRequireDefault(_index);

var _index3 = __webpack_require__(48);

var _index4 = _interopRequireDefault(_index3);

var _index5 = __webpack_require__(234);

var _index6 = _interopRequireDefault(_index5);

var _index7 = __webpack_require__(236);

var _index8 = _interopRequireDefault(_index7);

var _index9 = __webpack_require__(237);

var _index10 = _interopRequireDefault(_index9);

var _index11 = __webpack_require__(238);

var _index12 = _interopRequireDefault(_index11);

var _index13 = __webpack_require__(231);

var _index14 = _interopRequireDefault(_index13);

var _classes = __webpack_require__(475);

var _classes2 = _interopRequireDefault(_classes);

var _label = __webpack_require__(476);

var _label2 = _interopRequireDefault(_label);

var _pick = __webpack_require__(477);

var _pick2 = _interopRequireDefault(_pick);

var _index15 = __webpack_require__(5);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// mixins


// base components
/* eslint-disable */

// common
var prefixCls = 'kl-picker-panel';

// utils

var datePrefixCls = 'kl-picker-panel-body-header';

module.exports = _component2.default.extend({
    name: 'kl-date-panel',
    template: _index2.default,
    config: function config() {
        var _this = this;

        this.defaults({
            prefixCls: prefixCls,
            datePrefixCls: datePrefixCls,

            value: null,
            confirm: false,
            showTime: false,
            format: 'yyyy-MM-dd',
            selectionMode: 'date', // 'year', 'month', 'date', 'time'
            shortcuts: [],
            disabledDate: function disabledDate() {
                return false;
            },
            timePickerOptions: {},
            showWeekNumbers: false,
            startDate: new Date(),
            pickerType: '', // required
            focusedDate: new Date(), // required
            multiple: false
        });
        this.supr();
        this.initInternalData();

        this.$watch('value', function (newValue) {
            if (_this.data.currentView !== 'time' || !newValue) {
                _this.initInternalData();
            }
        });
    },


    /**
     * 获取
     * currentView: 控制当前展示项
     * internalValue:
     * panelDate: 展示的面板日期（通过这个值init日期面板）
     * pickerTable: 日期选择类型
     * datePanelLabel: 头部展示的内容
     */
    // value == '0' ????
    initInternalData: function initInternalData() {
        var _data = this.data,
            selectionMode = _data.selectionMode,
            value = _data.value;


        if (selectionMode == 'datetime') {
            this.data.currentView = 'date';
        } else {
            this.data.currentView = selectionMode || 'date';
        }

        if (!value && value !== 0 && value !== '0') {
            this.data.internalValue = [];
            this.data.panelDate = (0, _index15.initTimeDate)();
        } else if (Array.isArray(value)) {
            this.data.internalValue = value;
            this.data.panelDate = new Date(value);
        } else {
            this.data.internalValue = [new Date(value)];
            this.data.panelDate = new Date(value);
        }
        this.$emit('showVisualValue', this.formatDate(this.data.internalValue));

        this.setPickerTableType(this.data.currentView);
        this.getDatePanelLabel();
    },

    /**
     * 获取 datePanelLabel
     */
    getDatePanelLabel: function getDatePanelLabel() {
        var _this2 = this;

        var locale = 'zh-CN';
        var datePanelLabel = '[yyyy年] [m月]';
        var panelDate = this.data.panelDate;

        var _formatDateLabels = (0, _index15.formatDateLabels)(locale, datePanelLabel, panelDate),
            labels = _formatDateLabels.labels,
            separator = _formatDateLabels.separator;

        var handler = function handler(type) {
            return function () {
                return _this2.setPickerTableType(type);
            };
        };
        this.data.datePanelLabel = {
            separator: separator,
            labels: labels.map(function (obj) {
                return obj.handler = handler(obj.type), obj;
            })
        };
    },

    /**
     * pickerTable 获取 当前面板类型
     * @param currentView
     */
    setPickerTableType: function setPickerTableType(currentView) {
        this.data.pickerTable = currentView.match(/^time/) ? 'time-picker' : currentView + '-table';
    },
    onToggleTime: function onToggleTime() {
        this.data.currentView = this.data.currentView === 'time' ? 'date' : 'time';
    },
    parseDate: function parseDate(val, type, format, multiple) {
        // const { multiple, type, format } = this.data;

        var isRange = type.includes('range');
        var parser = (_index15.TYPE_VALUE_RESOLVER_MAP[type] || _index15.TYPE_VALUE_RESOLVER_MAP.default).parser;
        var formatType = format || _index15.DEFAULT_FORMATS[type];
        var multipleParser = _index15.TYPE_VALUE_RESOLVER_MAP.multiple.parser;

        if (val && type === 'time' && !(val instanceof Date)) {
            val = parser(val, formatType);
        } else if (multiple && val) {
            val = multipleParser(val, formatType);
        } else if (isRange) {
            if (!val) {
                val = [null, null];
            } else if (typeof val === 'string') {
                val = parser(val, formatType);
            } else if (type === 'timerange') {
                val = parser(val, formatType).map(function (v) {
                    return v || '';
                });
            } else {
                var _val = val,
                    _val2 = (0, _slicedToArray3.default)(_val, 2),
                    start = _val2[0],
                    end = _val2[1];

                if (start instanceof Date && end instanceof Date) {
                    val = val.map(function (date) {
                        return new Date(date);
                    });
                } else if (typeof start === 'string' && typeof end === 'string') {
                    val = parser(val.join(RANGE_SEPARATOR), formatType);
                } else if (!start || !end) {
                    val = [null, null];
                }
            }
        } else if (typeof val === 'string' && type.indexOf('time') !== 0) {
            val = parser(val, formatType) || null;
        }
        return isRange || multiple ? val || [] : [val];
    },
    formatDate: function formatDate(value) {
        var _data2 = this.data,
            multiple = _data2.multiple,
            format = _data2.format,
            selectionMode = _data2.selectionMode;


        var formattedType = _index15.DEFAULT_FORMATS[selectionMode];

        if (multiple) {
            var _formatter = _index15.TYPE_VALUE_RESOLVER_MAP.multiple.formatter;
            return _formatter(value, format || formattedType);
        }

        var _ref = _index15.TYPE_VALUE_RESOLVER_MAP[selectionMode] || _index15.TYPE_VALUE_RESOLVER_MAP.default,
            formatter = _ref.formatter;

        return formatter(value, format || formattedType);
    },
    onPickSuccess: function onPickSuccess(event) {
        this.$emit('pickSuccess', event);
    },
    onShortcutClick: function onShortcutClick(shortcut) {
        if (shortcut.value) {
            this.data.value = shortcut.value();

            this.$emit('pick', {
                value: shortcut.value(),
                isShow: false
            });
        }
        if (shortcut.onClick) shortcut.onClick(this);
    }
}).use(_classes2.default).use(_label2.default).use(_pick2.default).component('kl-date-table', _index6.default).component('kl-year-table', _index8.default).component('kl-month-table', _index10.default).component('kl-date-panel-label', _index12.default).component('kl-time-picker-panel', _index14.default).component('kl-confirm', _index4.default);

/***/ }),
/* 464 */
/***/ (function(module, exports) {

module.exports = "<div class=\"{this.getClasses()} f-cb\">\n    {#if shortcuts.length}\n    <div class=\"{prefixCls + '-sidebar'}\">\n        {#list shortcuts as shortcut}\n        <div\n            class=\"{prefixCls + '-shortcut'}\"\n            on-click=\"{this.onShortcutClick(shortcut)}\">{ shortcut.text }</div>\n        {/list}\n    </div>\n    {/if}\n\n\n    <div class=\"{prefixCls}__body\">\n        <div class=\"{datePrefixCls}\" r-hide=\"currentView === 'time'\">\n            <span\n                class=\"{this.iconBtnCls('prev', '-double')}\"\n                on-click=\"{this.changeYear(-1)}\"><kl-icon type=\"arrow-left-double\" /></span>\n            {#if pickerTable === 'date-table'}\n            <span\n                class=\"{this.iconBtnCls('prev')}\"\n                on-click=\"{this.changeMonth(-1)}\"\n                r-show=\"currentView === 'date'\"><kl-icon type=\"arrow-left-small\" /></span>\n            {/if}\n\n            <kl-date-panel-label\n                date-panel-label=\"{datePanelLabel}\"\n                current-view=\"{pickerTable.split('-').shift()}\"\n                date-prefix-cls=\"{datePrefixCls}\" />\n\n            <span\n                class=\"{this.iconBtnCls('next', '-double')}\"\n                on-click=\"{this.changeYear(+1)}\"><kl-icon type=\"arrow-right-double\" /></span>\n            {#if pickerTable === 'date-table'}\n            <span\n                class=\"{this.iconBtnCls('next')}\"\n                on-click=\"{this.changeMonth(+1)}\"\n                r-show=\"currentView === 'date'\"><kl-icon type=\"arrow-right-small\" /></span>\n            {/if}\n        </div>\n\n        <div class=\"{prefixCls}__body-content\">\n            {#if currentView !== 'time'}\n                {#if pickerTable == 'year-table'}\n                    <kl-year-table\n                        ref=\"pickerTable\"\n                        table-date=\"{panelDate}\"\n                        show-week-numbers=\"{showWeekNumbers}\"\n                        value=\"{internalValue}\"\n                        disabled-date=\"{disabledDate}\"\n\n                        focused-date=\"{focusedDate}\"\n                        selection-mode=\"{selectionMode}\"\n\n                        on-pick=\"{this.onPanelPickerHandlers($event)}\"\n                        on-pick-click=\"{this.onPickClick($event)}\"\n                    ></kl-year-table>\n                {/if}\n                {#if pickerTable == 'month-table'}\n                    <kl-month-table\n                        ref=\"pickerTable\"\n                        table-date=\"{panelDate}\"\n                        show-week-numbers=\"{showWeekNumbers}\"\n                        value=\"{internalValue}\"\n                        disabled-date=\"{disabledDate}\"\n\n                        selection-mode=\"{selectionMode}\"\n                        focused-date=\"{focusedDate}\"\n\n                        on-pick=\"{this.onPanelPickerHandlers($event)}\"\n                        on-pick-click=\"{this.onPickClick($event)}\"\n                    ></kl-month-table>\n                {/if}\n                {#if pickerTable == 'date-table'}\n                    <kl-date-table\n                        ref=\"pickerTable\"\n                        table-date=\"{panelDate}\"\n                        show-week-numbers=\"{showWeekNumbers}\"\n                        value=\"{internalValue}\"\n                        disabled-date=\"{disabledDate}\"\n\n                        selection-mode=\"{selectionMode}\"\n                        focused-date=\"{focusedDate}\"\n\n                        on-pick=\"{this.onPanelPickerHandlers($event)}\"\n                        on-pick-click=\"{this.onPickClick($event)}\"\n                    ></kl-date-table>\n                {/if}\n            {/if}\n        </div>\n\n        <div class=\"{prefixCls}__body-content\" r-hide=\"currentView !== 'time'\">\n            {#if currentView === 'time'}\n            <kl-time-picker-panel\n                ref=\"timePicker\"\n                value=\"{internalValue}\"\n                format=\"{format}\"\n                time-disabled=\"{timeDisabled}\"\n                disabled-date=\"{disabledDate}\"\n                focused-date=\"{focusedDate}\"\n\n                on-pick={this.getValue($event)}\n                on-pick-toggle-time=\"{this.onToggleTime($event)}\"\n            ></kl-time-picker-panel>\n\n            {/if}\n        </div>\n\n        {#if confirm || selectionMode === 'datetime'}\n        <kl-date-confirm\n            show-time=\"{selectionMode === 'datetime'}\"\n            is-time=\"{currentView === 'time'}\"\n            on-pick-toggle-time=\"{this.onToggleTime($event)}\"\n            on-pick-clear=\"{this.handlePickClear($event)}\"\n            on-pick-success=\"{this.onPickSuccess($event)}\"\n        ></kl-date-confirm>\n        {/if}\n    </div>\n</div>\n\n"

/***/ }),
/* 465 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _assign = __webpack_require__(32);

var _assign2 = _interopRequireDefault(_assign);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = _assign2.default || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

/***/ }),
/* 466 */
/***/ (function(module, exports) {

module.exports = "<div class=\"{this.getClasses()}\">\n    <div class=\"{prefixCls}-header\">\n        {#list headerDays as day }\n        <span class=\"{prefixCls}-header__cell\">\n            {day}\n        </span>\n        {/list}\n    </div>\n    {#list cells as cell by cell_item}\n        <span\n            class=\"{this.getCellCls(cell)}\"\n            on-click={this.onClick(cell, $event)}\n            on-mouseenter=\"{this.onMouseMove(cell)}\"\n            >\n            <em class=\"{prefixCls}__cell-em\">{ cell.desc }</em>\n        </span>\n    {/list}\n</div>\n\n"

/***/ }),
/* 467 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _index = __webpack_require__(5);

var prefixCls = 'kl-newdate-picker-cells'; /* eslint-disable */

exports.default = function (Component) {
  Component.implement({
    getCellCls: function getCellCls(cell) {
      var selectedCellCls = cell.selected || cell.start || cell.end ? prefixCls + '__cell--selected' : '';
      var disabledCellCls = cell.disabled ? prefixCls + '__cell--disabled' : '';
      var todayCellCls = cell.type === 'today' ? prefixCls + '__cell--today' : '';
      var prevMonthCellCls = cell.type === 'prevMonth' ? prefixCls + '__cell--prev-month' : '';
      var nextMonthCellCls = cell.type === 'nextMonth' ? prefixCls + '__cell--next-month' : '';
      var weekLabelCellCls = cell.type === 'weekLabel' ? prefixCls + '__cell--week-label' : '';
      var rangeCellCls = cell.range && !cell.start && !cell.end ? prefixCls + '__cell--range' : '';
      var focusedCls = (0, _index.clearHours)(cell.date) === (0, _index.clearHours)(this.data.focusedDate) ? prefixCls + '__cell--focused' : '';

      return prefixCls + '__cell ' + selectedCellCls + ' ' + disabledCellCls + ' ' + todayCellCls + ' ' + prevMonthCellCls + ' ' + nextMonthCellCls + ' ' + weekLabelCellCls + ' ' + rangeCellCls + ' ' + focusedCls;
    },
    getClasses: function getClasses() {
      var classes = '';
      if (this.data.showWeekNumbers) {
        classes = prefixCls + '--show-week-numbers';
      }

      return prefixCls + ' ' + classes;
    }
  });
};

/***/ }),
/* 468 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _index = __webpack_require__(5);

exports.default = function (Component) {
  Component.implement({
    onClick: function onClick(cell) {
      if (cell.disabled || cell.type === 'weekLabel') return;
      var newDate = new Date((0, _index.clearHours)(cell.date));

      this.$emit('pick', { value: newDate });
      this.$emit('pick-click');
    },
    onMouseMove: function onMouseMove(cell) {
      if (!this.data.rangeState.selecting) return;
      if (cell.disabled) return;
      var newDate = cell.date;
      this.$emit('change-range', newDate);
    }
  });
}; /* eslint-disable */

/***/ }),
/* 469 */
/***/ (function(module, exports) {

// calendar with 8 column x 7 rows

var oneDay = 1000 * 60 * 60 * 24;

function daysInMonth(year, month) {
    return new Date(year, month + 1, 0).getDate();
}

function getYear(year, month, weekNr){
	if (month === 0 && weekNr > 50) return year - 1;
	else if(month === 11 && weekNr < 10) return year + 1;
	else return year;
}

function getDateInfo(y, m, d, iso) {
	if (m > 11){
		m = 0;
		y++;
	}
    var currentDay = new Date(y, m, d);
    if (iso) currentDay.setDate(currentDay.getDate() + 4 - (currentDay.getDay() || 7));
    var year = iso ? currentDay.getFullYear() : y;
    var firstOfJanuary = new Date(year, 0, 1);
    var numberOfDays = 1 + Math.round((currentDay - firstOfJanuary) / oneDay);

    if (!iso) numberOfDays += firstOfJanuary.getDay();
	var w = Math.ceil(numberOfDays / 7);
    if (!iso) {
		var initialDay = new Date(y, m, d);
        var beginOfNextYear = new Date(y + 1, 0, 1);
        var startDayOfNextYear = beginOfNextYear.getDay();
        if (initialDay.getTime() >= beginOfNextYear.getTime() - (oneDay * startDayOfNextYear)) w = 1;
    }
	return w;
}

function getMonthCalender(year, month, iteratorFns){

	// config passed by binding
	var lang = this.lang || 'en';
	var onlyDays = this.onlyDays;
	var weekStart = typeof this.weekStart === 'undefined' ? 1 : this.weekStart;
	var iso = weekStart === 1;
	var cells = [];
	var monthStartDate = new Date(year, month, 1);	// make a date object
	var dayOfWeek = monthStartDate.getDay() || (iso ? 7 : 0);	// month week day for day 1
	var currentDay = weekStart - dayOfWeek; 		// starting position of first day in the week
	var weekNr = getDateInfo(year, month, 1, iso);	// get week number of month start
	var maxDays = daysInMonth(year, month);			// total days in current month
	var lastMonthMaxDays = daysInMonth(year, month - 1);
	var currentMonth, day, dayBefore;
	var currentYear = getYear(year, month, weekNr);

	var returnObject = {
		month: month,
		year: year,
		daysInMonth: maxDays
	};

	for (var i = 0; i < 7; i++){					// 7 rows in the calendar
		dayBefore = currentDay;
		for (var j = 0; j < 8; j++){				// 8 columns: week nr + 7 days p/ week
			if (i > 0 && j > 0) currentDay++;		// not first row, not week nr column

			if (currentDay > maxDays || currentDay < 1){ // day belongs to sibling month
				// calculate day in sibling month
				day = currentDay > maxDays ? currentDay - maxDays : lastMonthMaxDays + currentDay;
				currentMonth = currentDay > maxDays ? month + 1 : month - 1;
			} else {
				day = currentDay;
				currentMonth = month;
			}

			var type = (function(){
				if (j === 0) return 'weekLabel';
				else if (i === 0) return 'dayLabel';
				else if (currentDay < 1) return 'prevMonth';
				else if (currentDay > maxDays) return 'nextMonth';
				else return 'monthDay';
			})();
			var isDay = dayBefore !== currentDay && i > 0;

			var dayData = {
				desc: isDay ? day : weekNr,
				week: weekNr,
				type: type,
				format: iso ? 'ISO 8601' : 'US',
				date: isDay ? new Date(Date.UTC(year, currentMonth, day)) : false,
				year: currentYear,
				index: cells.length
			};

			if (iteratorFns){
				if (typeof iteratorFns === "function") dayData = iteratorFns.call(returnObject, dayData, lang);
				else iteratorFns.forEach(function(fn){
					dayData = fn.call(returnObject, dayData, lang);
				});
			}
			if (onlyDays && isDay) cells.push(dayData);	// add only days
			else if (!onlyDays) cells.push(dayData);	// add also week numbers and labels
		}
		if (i > 0) weekNr = getDateInfo(year, currentMonth, day + 1, iso);
		currentYear = getYear(year, month, weekNr);
	}

	returnObject.cells = cells;
	return returnObject;
}

module.exports = function (config){
	return getMonthCalender.bind(config);
}


/***/ }),
/* 470 */
/***/ (function(module, exports, __webpack_require__) {

// calendar with 8 column x 7 rows

var labels = __webpack_require__(471);

function isIterable(variable){
	if (variable == null) return false;
	if (variable.constructor === Array) return true;
	if (variable.constructor === Object) return true;
	return false;
}

function merge(_new, _old){
    for (var prop in _new){
        if (!_old[prop]) _old[prop] = _new[prop];
        else if (isIterable(_new[prop])) merge(_new[prop], _old[prop]);
    }
}

function addLabels(dayObject, lang){
	var cssClass = [labels.classes[dayObject.type]];

	if (dayObject.class) dayObject.class = (typeof dayObject.class == 'string' ? [dayObject.class] : dayObject.class).concat(cssClass);
	else dayObject.class = cssClass;

	if (dayObject.type.indexOf('Label') > 0){
		if (dayObject.index == 0 && labels.weekPlaceholder) dayObject.desc = labels.weekPlaceholder;
		else if (dayObject.index < 8) dayObject.desc = labels.columnNames[lang][dayObject.index];
		else if (dayObject.index % 8 == 0) dayObject.desc = dayObject.week;
	}

	if (dayObject.date) dayObject.monthName = labels.monthNames[lang][dayObject.date.getMonth()];
	if (!this.monthName) this.monthName = labels.monthNames[lang][this.month];
	if (!this.labels) this.labels = {
		monthNames: labels.monthNames[lang],
		columnNames: labels.columnNames[lang],
		classes: labels.classes
	}

	return dayObject;
}
addLabels.setLabels = function(newOptions){
	merge(newOptions, labels);
};

module.exports = addLabels;


/***/ }),
/* 471 */
/***/ (function(module, exports) {


module.exports = {
	weekPlaceholder: '',
	columnNames: {
		en: {
			0: 'w',
			1: 'monday',
			2: 'tuesday',
			3: 'wednesday',
			4: 'thursday',
			5: 'friday',
			6: 'saturday',
			7: 'sunday'
		},
		sv: {
			0: 'v',
			1: 'måndag',
			2: 'tisdag',
			3: 'onsdag',
			4: 'torsdag',
			5: 'fredag',
			6: 'lördag',
			7: 'söndag'
		},
		pt: {
			0: 's',
			1: 'segunda',
			2: 'terça',
			3: 'quarta',
			4: 'quinta',
			5: 'sexta',
			6: 'sábado',
			7: 'domingo'
		}
	},
	monthNames: {
		en: [
			"January",
			"February",
			"March",
			"April",
			"May",
			"June",
			"July",
			"August",
			"September",
			"October",
			"November",
			"December"
		],
		sv: [
			"januari",
			"februari",
			"mars",
			"april",
			"maj",
			"juni",
			"juli",
			"augusti",
			"september",
			"oktober",
			"november",
			"december"
		],
		pt: [
			"Janeiro",
			"Fevereiro",
			"Março",
			"Abril",
			"Maio",
			"Junho",
			"Julho",
			"Agosto",
			"Setembro",
			"Outubro",
			"Novembro",
			"Dezembro"
		]
	},
	classes: {
		dayLabel: 'day-of-week',
		weekLabel: 'week-number',
		prevMonth: 'inactive',
		nextMonth: 'inactive',
		monthDay: 'day-in-month'
	}
};


/***/ }),
/* 472 */
/***/ (function(module, exports) {

module.exports = "<div class=\"{classes}\">\n    {#list cells as cell}\n    <span\n        class=\"{this.getCellCls(cell)}\"\n        on-click=\"{this.handleClick(cell, $event)}\"\n        on-mouseenter=\"{this.handleMouseMove(cell)}\"\n    >\n        <em class=\"{prefixCls}-year__cell-em {prefixCls}__cell-em\">{ cell.date.getFullYear() }</em>\n    </span>\n    {/list}\n</div>\n"

/***/ }),
/* 473 */
/***/ (function(module, exports) {

module.exports = "<div class=\"{classes}\">\n    {#list cells as cell}\n    <span\n        class=\"{this.getCellCls(cell)}\"\n        on-click=\"{this.onClick(cell, $event)}\"\n        on-mouseenter=\"{this.onMouseMove(cell)}\"\n\n    >\n        <em class=\"{prefixCls}-month__cell-em {prefixCls}__cell-em\">{ cell.text }</em>\n    </span>\n    {/list}\n</div>\n"

/***/ }),
/* 474 */
/***/ (function(module, exports) {

module.exports = "<span>\n    {#if datePanelLabel}\n    <span\n        r-hide=\"!(datePanelLabel.labels[0].type === 'year' || currentView === 'date')\"\n        class=\"{datePrefixCls + '__label'}\"\n        on-click=\"{datePanelLabel.labels[0].handler()}\">{ datePanelLabel.labels[0].label }</span>\n    {/if}\n    {#if datePanelLabel && currentView === 'date'}\n        { datePanelLabel.separator }\n    {/if}\n\n    {#if datePanelLabel}\n    <span\n        r-hide=\"!(datePanelLabel.labels[1].type !== 'year' && currentView === 'date')\"\n        class=\"{datePrefixCls + '__label'}\"\n        on-click=\"{datePanelLabel.labels[1].handler()}\">{ datePanelLabel.labels[1].label }</span>\n    {/if}\n</span>\n"

/***/ }),
/* 475 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
/* eslint-disable */
var prefixCls = 'kl-picker-panel';
var datePrefixCls = 'kl-picker-panel-body-header';

exports.default = function (Component) {
    Component.implement({
        iconBtnCls: function iconBtnCls(direction) {
            var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';

            return [datePrefixCls + '__icon-btn', datePrefixCls + '__icon-btn--' + direction, datePrefixCls + '__icon-btn--' + direction + '-btn-arrow' + type].join(' ');
        },
        getClasses: function getClasses() {
            var hasSidebarCls = this.data.shortcuts.length ? prefixCls + '-with-sidebar' : '';
            return [prefixCls + '-body-wrapper', hasSidebarCls].join(' ');
        }
    });
};

/***/ }),
/* 476 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _index = __webpack_require__(5);

exports.default = function (Component) {
    Component.implement({
        changeYear: function changeYear(dir) {
            if (this.data.selectionMode === 'year' || this.data.pickerTable === 'year-table') {
                this.data.panelDate = new Date(this.data.panelDate.getFullYear() + dir * 10, 0, 1);
            } else {
                this.data.panelDate = (0, _index.siblingMonth)(this.data.panelDate, dir * 12);
            }

            // 更新 label
            this.getDatePanelLabel();
        },
        changeMonth: function changeMonth(dir) {
            this.data.panelDate = (0, _index.siblingMonth)(this.data.panelDate, dir);

            // 更新 label
            this.getDatePanelLabel();
        }
    });
}; /* eslint-disable */

/***/ }),
/* 477 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

/* eslint-disable */

exports.default = function (Component) {
    Component.implement({
        onPickClick: function onPickClick() {
            this.$emit('pick-click');
        },
        onPanelPickerHandlers: function onPanelPickerHandlers(e) {
            if (this.data.pickerTable === this.data.currentView + '-table') {
                this.getValue(e);
            } else {
                this.changePanel(e);
            }
        },

        /**
         * 获取到选到的日期
         */
        getValue: function getValue(e) {
            var value = e.value,
                type = e.type;
            var _data = this.data,
                selectionMode = _data.selectionMode,
                panelDate = _data.panelDate;


            if (selectionMode === 'year') value = new Date(value.getFullYear(), 0, 1);else if (selectionMode === 'month') value = new Date(panelDate.getFullYear(), value.getMonth(), 1);else value = new Date(value);

            this.data.internalValue = [value];
            this.data.panelDate = value;
            this.data.value = this.formatDate(value);
            this.getDatePanelLabel();

            this.$emit('showVisualValue', this.data.value);

            var isShow = true;
            if (selectionMode != 'datetime') {
                isShow = false;
            }
            this.$emit('pick', {
                value: value,
                isShow: isShow
            });
        },
        changePanel: function changePanel(e) {
            this.data.panelDate = e.value;
            this.getDatePanelLabel();
            if (this.data.pickerTable === 'year-table') this.data.pickerTable = 'month-table';else this.setPickerTableType(this.data.currentView);
        }
    });
};

/***/ }),
/* 478 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _slicedToArray2 = __webpack_require__(25);

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _component = __webpack_require__(1);

var _component2 = _interopRequireDefault(_component);

var _index = __webpack_require__(479);

var _index2 = _interopRequireDefault(_index);

var _index3 = __webpack_require__(48);

var _index4 = _interopRequireDefault(_index3);

var _index5 = __webpack_require__(234);

var _index6 = _interopRequireDefault(_index5);

var _index7 = __webpack_require__(236);

var _index8 = _interopRequireDefault(_index7);

var _index9 = __webpack_require__(237);

var _index10 = _interopRequireDefault(_index9);

var _index11 = __webpack_require__(238);

var _index12 = _interopRequireDefault(_index11);

var _index13 = __webpack_require__(233);

var _index14 = _interopRequireDefault(_index13);

var _classes = __webpack_require__(480);

var _classes2 = _interopRequireDefault(_classes);

var _label = __webpack_require__(481);

var _label2 = _interopRequireDefault(_label);

var _utils = __webpack_require__(482);

var _utils2 = _interopRequireDefault(_utils);

var _index15 = __webpack_require__(5);

var _utils3 = __webpack_require__(5);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// utils
var prefixCls = 'kl-picker-panel';

// mixins


// base components
/* eslint-disable */

// common

var datePrefixCls = 'kl-picker-panel-body-header';
module.exports = _component2.default.extend({
    name: 'kl-date-range-panel',
    template: _index2.default,
    computed: {
        isTime: function isTime() {
            return this.data.currentView === 'time';
        },
        leftDatePanelView: function leftDatePanelView() {
            return this.data.leftPickerTable.split('-').shift();
        },
        rightDatePanelView: function rightDatePanelView() {
            return this.data.rightPickerTable.split('-').shift();
        },
        timeDisabled: function timeDisabled() {
            return !(this.data.dates[0] && this.data.dates[1]);
        }
    },
    config: function config() {
        var _this = this;

        this.defaults({
            value: [],
            startDate: null,
            endDate: null,

            confirm: false,
            showTime: false,
            format: 'yyyy-MM-dd HH:mm:ss',
            type: 'daterange',
            selectionMode: 'date',
            shortcuts: [],
            disabledDate: function disabledDate() {
                return false;
            },
            timePickerOptions: {},
            showWeekNumbers: false,
            pickerType: '', // required
            focusedDate: new Date(), // required
            steps: [],
            splitPanels: false,
            prefixCls: prefixCls,
            datePrefixCls: datePrefixCls
        });
        this.supr();

        this.initInternalValue();
        this.getSelectionMode(this.data.type);

        this.$watch('value', function (newValue) {
            if (_this.data.currentView !== 'time' || !newValue) {
                _this.initInternalValue();
            }
        });
    },
    getSelectionMode: function getSelectionMode(type) {
        if (type.match(/^date/)) type = 'date';
        this.data.selectionMode = type;
    },
    initInternalValue: function initInternalValue() {

        this.data.dates = (0, _index15.parseValue)(this.data.value, 'daterange');
        this.data.currentView = this.data.selectionMode || 'range';
        this.data.leftPickerTable = this.data.selectionMode + '-table';
        this.data.rightPickerTable = this.data.selectionMode + '-table';

        this.$emit('showVisualValue', this.formatDate(this.data.dates));

        // this.data.internalValue = value || [];
        this.initPanelDate();
        this.initDatePanelLabel();
        this.initPanelPickerHandlers();
    },

    /**
     * 初始化panelDate值
     */
    initPanelDate: function initPanelDate() {
        var _data = this.data,
            value = _data.value,
            startDate = _data.startDate;

        var formattedValue = (0, _index15.parseValue)(value, 'daterange');

        var _map = (formattedValue || []).map(function (date) {
            return date || (0, _index15.initTimeDate)();
        }),
            _map2 = (0, _slicedToArray3.default)(_map, 2),
            minDate = _map2[0],
            maxDate = _map2[1];

        var leftPanelDate = startDate ? startDate : minDate;

        // this.data.leftPanelDate = leftPanelDate;
        // this.data.rightPanelDate = new Date(leftPanelDate.getFullYear(), leftPanelDate.getMonth() + 1, 1);
        this.setPanelDates(leftPanelDate);

        this.data.rangeState = {
            from: formattedValue[0],
            to: formattedValue[1],
            selecting: minDate && !maxDate
        };
    },
    setPanelDates: function setPanelDates(leftPanelDate) {
        this.data.leftPanelDate = leftPanelDate;
        var rightPanelDate = new Date(leftPanelDate.getFullYear(), leftPanelDate.getMonth() + 1, leftPanelDate.getDate());
        this.data.rightPanelDate = this.data.splitPanels ? new Date(Math.max(this.data.dates[1], rightPanelDate)) : rightPanelDate;
    },


    /**
     * 初始化 年月显示 的label 的配置
     */
    initDatePanelLabel: function initDatePanelLabel() {
        this.data.leftDatePanelLabel = this.getDatePanelLabel('left');
        this.data.rightDatePanelLabel = this.getDatePanelLabel('right');
    },

    // /**
    //  * 初始化面板选择类型
    //  */
    // initPickerTableType() {
    //     const tableType = `${this.data.currentView}-table`;
    //
    //     this.data.pickerTableType = {
    //         left: this.data.leftPickerTable !== tableType,
    //         right: this.data.rightPickerTable !== tableType,
    //     };
    // },
    /**
     * 初始化 日期点击时间
     */
    initPanelPickerHandlers: function initPanelPickerHandlers() {
        var tableType = this.data.currentView + '-table';
        this.data.pickerTableType = {
            left: this.data.leftPickerTable !== tableType,
            right: this.data.rightPickerTable !== tableType
        };

        this.data.panelPickerHandlers = {
            left: this.data.pickerTableType.left ? this.handlePreSelection.bind(this, 'left') : this.onRangePick.bind(this),
            right: this.data.pickerTableType.right ? this.handlePreSelection.bind(this, 'right') : this.onRangePick.bind(this)
        };
    },
    handlePreSelection: function handlePreSelection(panel, event) {
        this.data[panel + 'PanelDate'] = event.value;
        var currentViewType = this.data[panel + 'PickerTable'];

        if (currentViewType === 'year-table') {
            this.data[panel + 'PickerTable'] = 'month-table';
        } else {
            this.data[panel + 'PickerTable'] = this.data.currentView + '-table';
        }

        if (!this.data.splitPanels) {
            var otherPanel = panel === 'left' ? 'right' : 'left';
            this.data[otherPanel + 'PanelDate'] = event.value;
            this.changePanelDate(otherPanel, 'Month', 1, false);
        }
        this.initDatePanelLabel();
        this.initPanelPickerHandlers();
    },
    onPickClick: function onPickClick() {
        //
    },
    onChangeRange: function onChangeRange(val) {
        this.data.rangeState.to = val;
    },
    onToggleTime: function onToggleTime() {
        this.data.currentView = this.data.currentView === 'time' ? 'date' : 'time';
    },
    onRangePick: function onRangePick(e) {
        var value = e.value,
            type = e.type;

        if (this.data.rangeState.selecting || this.data.currentView === 'time') {
            if (this.data.currentView === 'time') {
                this.data.dates = value;
            } else {
                var _sort = [this.data.rangeState.from, value].sort(_index15.dateSorter),
                    _sort2 = (0, _slicedToArray3.default)(_sort, 2),
                    minDate = _sort2[0],
                    maxDate = _sort2[1];

                this.data.dates = [minDate, maxDate];
                this.data.rangeState = {
                    from: minDate,
                    to: maxDate,
                    selecting: false
                };
            }

            this.data.value = this.data.dates;

            var isShow = true;
            if (this.data.type != 'datetimerange') {
                isShow = false;
            }

            this.$emit('showVisualValue', this.formatDate(this.data.dates));
            this.$emit('pick', {
                value: this.data.dates,
                isShow: isShow,
                type: type || 'date'
            });
        } else {
            this.data.rangeState = {
                from: value,
                to: null,
                selecting: true
            };
        }
    },
    onPickSuccess: function onPickSuccess(event) {
        this.$emit('pickSuccess', event);
    },
    formatDate: function formatDate(value) {
        var _data2 = this.data,
            format = _data2.format,
            type = _data2.type;


        var formattedType = _utils3.DEFAULT_FORMATS[type];

        var _ref = _utils3.TYPE_VALUE_RESOLVER_MAP[type] || _utils3.TYPE_VALUE_RESOLVER_MAP.default,
            formatter = _ref.formatter;

        return formatter(value, format || formattedType);
    },
    onShortcutClick: function onShortcutClick(shortcut) {
        if (shortcut.value) {
            this.data.value = shortcut.value();
            this.$emit('pick', {
                value: shortcut.value(),
                isShow: false
            });
        }
        if (shortcut.onClick) shortcut.onClick(this);
    }
}).use(_classes2.default).use(_label2.default).use(_utils2.default).component('kl-date-table', _index6.default).component('kl-year-table', _index8.default).component('kl-month-table', _index10.default).component('kl-date-panel-label', _index12.default).component('kl-time-range-panel', _index14.default).component('kl-confirm', _index4.default);

/***/ }),
/* 479 */
/***/ (function(module, exports) {

module.exports = "<div class=\"{this.getClasses()} f-cb\">\n\n    {#if shortcuts.length}\n    <div class=\"{prefixCls + '-sidebar'}\">\n        {#list shortcuts as shortcut}\n        <div\n            class=\"{prefixCls + '-shortcut'}\"\n            on-click=\"{this.onShortcutClick(shortcut)}\">{ shortcut.text }</div>\n        {/list}\n    </div>\n    {/if}\n\n    <div class=\"{this.getPanelBodyClasses()}\">\n        <div class=\"{prefixCls + '__body-content' + ' ' + prefixCls + '__body-content-left'}\" r-hide=\"isTime\">\n            <div class=\"{datePrefixCls}\" r-hide=\"currentView === 'time'\">\n                <span\n                    class=\"{this.iconBtnCls('prev', '-double')}\"\n                    on-click=\"{this.prevYear('left')}\"><kl-icon type=\"arrow-left-double\" /></span>\n                {#if leftPickerTable === 'date-table'}\n                <span\n                    class=\"{this.iconBtnCls('prev')}\"\n                    on-click=\"{this.prevMonth('left')}\"\n                    r-hide=\"currentView !== 'date'\"><kl-icon type=\"arrow-left-small\" /></span>\n                {/if}\n                <kl-date-panel-label\n                    date-panel-label=\"{leftDatePanelLabel}\"\n                    current-view=\"{leftDatePanelView}\"\n                    date-prefix-cls=\"{datePrefixCls}\"></kl-date-panel-label>\n                {#if splitPanels || leftPickerTable !== 'date-table'}\n                <span\n                    class=\"{this.iconBtnCls('next', '-double')}\"\n                    on-click=\"{this.nextYear('left')}\"><kl-icon type=\"arrow-right-double\" /></span>\n                {/if}\n                {#if splitPanels && leftPickerTable === 'date-table'}\n                <span\n                    class=\"{this.iconBtnCls('next')}\"\n                    on-click=\"{this.nextMonth('left')}\"\n                    r-hide=\"currentView !== 'date'\"><kl-icon type=\"arrow-right-small\" /></span>\n                {/if}\n            </div>\n            {#if currentView !== 'time'}\n                {#if leftPickerTable == 'year-table'}\n                <kl-year-table\n                    ref=\"leftYearTable\"\n                    selection-mode=\"range\"\n                    table-date=\"{leftPanelDate}\"\n                    disabled-date=\"{disabledDate}\"\n                    range-state=\"{rangeState}\"\n                    show-week-numbers=\"{showWeekNumbers}\"\n                    value=\"{pickerTableType.left ? [dates[0]] : dates}\"\n                    focused-date=\"{focusedDate}\"\n                    on-change-range=\"{this.onChangeRange($event)}\"\n                    on-pick=\"{panelPickerHandlers.left($event)}\"\n                    on-pick-click=\"{this.onPickClick($event)}\"\n                ></kl-year-table>\n                {/if}\n                {#if leftPickerTable == 'month-table'}\n                <kl-month-table\n                    ref=\"leftYearTable\"\n                    selection-mode=\"range\"\n                    table-date=\"{leftPanelDate}\"\n                    disabled-date=\"{disabledDate}\"\n                    range-state=\"{rangeState}\"\n                    show-week-numbers=\"{showWeekNumbers}\"\n                    value=\"{pickerTableType.left ? [dates[0]] : dates}\"\n                    focused-date=\"{focusedDate}\"\n                    on-change-range=\"{this.onChangeRange($event)}\"\n                    on-pick=\"{panelPickerHandlers.left($event)}\"\n                    on-pick-click=\"{this.onPickClick($event)}\"\n                ></kl-month-table>\n                {/if}\n                {#if leftPickerTable == 'date-table'}\n                <kl-date-table\n                    ref=\"leftYearTable\"\n                    selection-mode=\"range\"\n                    table-date=\"{leftPanelDate}\"\n                    disabled-date=\"{disabledDate}\"\n                    range-state=\"{rangeState}\"\n                    show-week-numbers=\"{showWeekNumbers}\"\n                    value=\"{pickerTableType.left ? [dates[0]] : dates}\"\n                    focused-date=\"{focusedDate}\"\n                    on-change-range=\"{this.onChangeRange($event)}\"\n                    on-pick=\"{panelPickerHandlers.left($event)}\"\n                    on-pick-click=\"{this.onPickClick($event)}\"\n                ></kl-date-table>\n                {/if}\n            {/if}\n\n        </div>\n        <div class=\"{prefixCls + '__body-content' + ' ' + prefixCls + '__body-content-right'}\" r-hide=\"isTime\">\n            <div class=\"{datePrefixCls}\" r-hide=\"currentView === 'time'\">\n                {#if splitPanels || rightPickerTable !== 'date-table'}\n                <span\n                    class=\"{this.iconBtnCls('prev', '-double')}\"\n                    on-click=\"{this.prevYear('right')}\"><kl-icon type=\"arrow-left-double\" /></span>\n                {/if}\n                {#if splitPanels && rightPickerTable === 'date-table'}\n                <span\n                    class=\"{this.iconBtnCls('prev')}\"\n                    on-click=\"{this.prevMonth('right')}\"\n                    r-hide=\"currentView !== 'date'\"><kl-icon type=\"arrow-left-small\" /></span>\n                {/if}\n\n                <kl-date-panel-label\n                    date-panel-label=\"{rightDatePanelLabel}\"\n                    current-view=\"{rightDatePanelView}\"\n                    date-prefix-cls=\"{datePrefixCls}\"></kl-date-panel-label>\n\n                <span\n                    class=\"{this.iconBtnCls('next', '-double')}\"\n                    on-click=\"{this.nextYear('right')}\"><kl-icon type=\"arrow-right-double\" /></span>\n                {#if rightPickerTable === 'date-table'}\n                <span\n                    class=\"{this.iconBtnCls('next')}\"\n                    on-click=\"{this.nextMonth('right')}\"\n                    r-hide=\"currentView !== 'date'\"><kl-icon type=\"arrow-right-small\" /></span>\n                {/if}\n            </div>\n\n\n            {#if currentView !== 'time'}\n                {#if rightPickerTable == 'year-table'}\n                    <kl-year-table\n                        ref=\"rightYearTable\"\n                        selection-mode=\"range\"\n                        table-date=\"{rightPanelDate}\"\n                        range-state=\"{rangeState}\"\n                        disabled-date=\"{disabledDate}\"\n                        show-week-numbers=\"{showWeekNumbers}\"\n                        value=\"{pickerTableType.right ? [dates[dates.length - 1]] : dates}\"\n                        focused-date=\"{focusedDate}\"\n                        on-change-range=\"{this.onChangeRange($event)}\"\n                        on-pick=\"{panelPickerHandlers.right($event)}\"\n                        on-pick-click=\"{this.onPickClick($event)}\"\n                    ></kl-year-table>\n                {/if}\n                {#if rightPickerTable == 'month-table'}\n                    <kl-month-table\n                        ref=\"rightYearTable\"\n                        selection-mode=\"range\"\n                        table-date=\"{rightPanelDate}\"\n                        range-state=\"{rangeState}\"\n                        disabled-date=\"{disabledDate}\"\n                        show-week-numbers=\"{showWeekNumbers}\"\n                        value=\"{pickerTableType.right ? [dates[dates.length - 1]] : dates}\"\n                        focused-date=\"{focusedDate}\"\n                        on-change-range=\"{this.onChangeRange($event)}\"\n                        on-pick=\"{panelPickerHandlers.right($event)}\"\n                        on-pick-click=\"{this.onPickClick($event)}\"\n                    ></kl-month-table>\n                {/if}\n                {#if rightPickerTable == 'date-table'}\n                    <kl-date-table\n                        ref=\"rightYearTable\"\n                        selection-mode=\"range\"\n                        table-date=\"{rightPanelDate}\"\n                        range-state=\"{rangeState}\"\n                        disabled-date=\"{disabledDate}\"\n                        show-week-numbers=\"{showWeekNumbers}\"\n                        value=\"{pickerTableType.right ? [dates[dates.length - 1]] : dates}\"\n                        focused-date=\"{focusedDate}\"\n                        on-change-range=\"{this.onChangeRange($event)}\"\n                        on-pick=\"{panelPickerHandlers.right($event)}\"\n                        on-pick-click=\"{this.onPickClick($event)}\"\n                    ></kl-date-table>\n                {/if}\n            {/if}\n\n\n        </div>\n\n        <div class=\"{prefixCls}__body-content\" r-hide=\"!isTime\">\n            {#if currentView === 'time'}\n            <kl-time-range-panel\n                ref=\"timePicker\"\n                value=\"{dates}\"\n                format=\"{format}\"\n                time-disabled=\"{timeDisabled}\"\n                type=\"datetimerange\"\n\n                steps=\"{steps}\"\n\n                on-pick-click=\"{this.onPickClick($event)}\"\n                on-pick=\"{this.onRangePick($event)}\"\n                on-pick-success=\"{this.onPickSuccess($event)}\"\n                on-pick-toggle-time=\"{this.onToggleTime($event)}\"\n            ></kl-time-range-panel>\n            {/if}\n        </div>\n\n        {#if confirm || type === 'datetimerange'}\n        <kl-date-confirm\n            show-time=\"{type === 'datetimerange'}\"\n            is-time=\"{isTime}\"\n            time-disabled=\"{timeDisabled}\"\n\n            on-pick-toggle-time=\"{this.onToggleTime($event)}\"\n            on-pick-success=\"{this.onPickSuccess($event)}\"\n        ></kl-date-confirm>\n        {/if}\n    </div>\n</div>\n"

/***/ }),
/* 480 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
/* eslint-disable */
var prefixCls = 'kl-picker-panel';
var datePrefixCls = 'kl-picker-panel-body-header';

exports.default = function (Component) {
    Component.implement({
        iconBtnCls: function iconBtnCls(direction) {
            var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';

            return [datePrefixCls + '__icon-btn', datePrefixCls + '__icon-btn--' + direction, datePrefixCls + '__icon-btn--' + direction + '-btn-arrow' + type].join(' ');
        },
        getClasses: function getClasses() {
            return [prefixCls + '--body-wrapper', prefixCls + '--with-range', this.data.shortcuts.length ? prefixCls + '--with-sidebar' : '', this.data.showWeekNumbers ? datePrefixCls + '--with-week-numbers' : ''].join(' ');
        },
        getPanelBodyClasses: function getPanelBodyClasses() {
            return [prefixCls + '__body', this.data.showTime ? prefixCls + '-body-time ' + prefixCls + '-body-date' : ''].join(' ');
        }
    });
};

/***/ }),
/* 481 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

/* eslint-disable */
exports.default = function (Component) {
    Component.implement({
        /**
         * panel 面板位置
         * @param panel
         */
        prevYear: function prevYear(panel) {
            var increment = this.data.currentView === 'year' ? -10 : -1;
            this.changePanelDate(panel, 'FullYear', increment);
        },
        nextYear: function nextYear(panel) {
            var increment = this.data.currentView === 'year' ? 10 : 1;
            this.changePanelDate(panel, 'FullYear', increment);
        },
        prevMonth: function prevMonth(panel) {
            this.changePanelDate(panel, 'Month', -1);
        },
        nextMonth: function nextMonth(panel) {
            this.changePanelDate(panel, 'Month', 1);
        },

        /**
         * panel 面板位置 left/right
         * @param panel
         */
        changePanelDate: function changePanelDate(panel, type, increment) {
            var updateOtherPanel = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;

            var current = new Date(this.data[panel + 'PanelDate']);
            current['set' + type](current['get' + type]() + increment);
            this.data[panel + 'PanelDate'] = current;

            if (!updateOtherPanel) return;

            if (this.data.splitPanels) {
                // change other panel if dates overlap
                var otherPanel = panel === 'left' ? 'right' : 'left';
                if (panel === 'left' && this.data.leftPanelDate >= this.data.rightPanelDate) {
                    this.changePanelDate(otherPanel, type, 1);
                }
                if (panel === 'right' && this.data.rightPanelDate <= this.data.leftPanelDate) {
                    this.changePanelDate(otherPanel, type, -1);
                }
            } else {
                // keep the panels together
                var _otherPanel = panel === 'left' ? 'right' : 'left';
                var otherCurrent = new Date(this.data[_otherPanel + 'PanelDate']);
                otherCurrent['set' + type](otherCurrent['get' + type]() + increment);
                this.data[_otherPanel + 'PanelDate'] = otherCurrent;
            }

            this.initDatePanelLabel();
        }
    });
};

/***/ }),
/* 482 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _utils = __webpack_require__(5);

exports.default = function (Component) {
    Component.implement({
        /**
         * 获取 datePanelLabel
         */
        getDatePanelLabel: function getDatePanelLabel(direction) {
            var _this = this;

            var locale = 'zh-CN';
            var datePanelLabel = '[yyyy年] [m月]';
            var handler = function handler(type) {
                var fn = type === 'month' ? _this.showMonthPicker.bind(_this) : _this.showYearPicker.bind(_this);
                return function () {
                    return fn(direction);
                };
            };
            var panelDate = this.data[direction + 'PanelDate'];

            var _formatDateLabels = (0, _utils.formatDateLabels)(locale, datePanelLabel, panelDate),
                labels = _formatDateLabels.labels,
                separator = _formatDateLabels.separator;

            return {
                separator: separator,
                labels: labels.map(function (obj) {
                    return obj.handler = handler(obj.type), obj;
                })
            };
        },
        showYearPicker: function showYearPicker(panel) {
            this.data[panel + 'PickerTable'] = 'year-table';
            this.initPanelPickerHandlers();
        },
        showMonthPicker: function showMonthPicker(panel) {
            this.data[panel + 'PickerTable'] = 'month-table';
            this.initPanelPickerHandlers();
        }
    });
}; /* eslint-disable */

/***/ }),
/* 483 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * @file KLSidebar
 * @author   sensen(rainforest92@126.com)
 */
var scrollIntoViewFn = __webpack_require__(484);

var Component = __webpack_require__(1);
var searchableMixin = __webpack_require__(485);
var template = __webpack_require__(486);

/**
 * @class KLSidebar
 * @extend Component
 * @param {object}        [options.data]                          => 绑定属性
 * @param {string}        [options.data.class]                    => 补充class
 * @param {array}         [options.data.menus]                    => 菜单数组
 * @param {string}        [options.data.top=60px]                 => 菜单style top的值
 * @param {boolean}       [options.data.uniqueOpened=true]        => 是否只保持打开一个菜单
 * @param {string}        [options.data.titleKey=title]           => 一级菜单的字段key名
 * @param {string}        [options.data.urlKey=url]               => 菜单结构中的链接key名
 * @param {string}        [options.data.routeKey=route]           => 单页spa应用时,使用
 * @param {string}        [options.data.pageKey=title]            => 二级菜单的字段key名
 * @param {string}        [options.data.childrenKey=children]     => 一级菜单对象下二级菜单数组的key名
 * @param {string}        [options.data.todoKey=todos]            => 需要显示待办数量时,需要指定key值
 * @param {object}        [options.data.router]                   => 单页应用时, 请将regular-state的manager实例传入
 * @param {string}        [options.data.width]                    => sidebar的宽度设置,默认181px
 * @param {string}        [options.data.theme]                    => sidebar的主题颜色，可选light/dark，默认light
 * @param {boolean}       [options.data.scrollIntoView=false]     => 是否需要scrollIntoView
 */
var KLSidebar = Component.extend({
  name: 'kl-sidebar',
  template: template,
  config: function config() {
    this.defaults({
      class: '',
      uniqueOpened: true,
      menus: [],
      titleKey: 'title',
      urlKey: 'url',
      routeKey: 'route',
      pageKey: 'title',
      childrenKey: 'children',
      todoKey: 'todos',
      top: '60px',
      width: '216px',
      theme: 'light'
    });

    this.supr();
  },
  init: function init() {
    var scrollIntoView = this.data.scrollIntoView;

    scrollIntoView && setTimeout(function () {
      scrollIntoViewFn(document.querySelector('.kl-sidebar .kl-sub-menu .kl-menu-item.is-active'), {
        validTarget: function validTarget(target, parentsScrolled) {
          return parentsScrolled < 2 && target !== window && target.matches('.kl-scroll-wrap');
        }
      });
    }, 50);
    this.supr();
  },

  /**
   * @event KLSidebar#menuitem-click 选择某一页时触发
   * @property {object} menuitem 点击的menuItem实例
   */
  onMenuItemClick: function onMenuItemClick(e) {
    this.$emit('menuitem-click', e);
  },
  getTitleTemplate: function getTitleTemplate(name, todos) {
    var title = this.highlight(name);
    if (todos && !isNaN(todos)) {
      var count = todos > 99 ? '99+' : todos;
      return '<span class="kl-sidebar-todowrap"><span class="kl-sidebar-todowrap__title">' + title + '</span><span class="kl-sidebar-todowrap__badge">' + count + '</span></span>';
    }
    return title;
  },
  getScrollMaxHeight: function getScrollMaxHeight() {
    var _$refs = this.$refs,
        menuWrap = _$refs.menuWrap,
        searchBox = _$refs.searchBox;

    if (menuWrap && searchBox) {
      return menuWrap.clientHeight - searchBox.clientHeight;
    } else if (menuWrap) {
      return menuWrap.clientHeight;
    }
  }
});

KLSidebar.use(searchableMixin);

module.exports = KLSidebar;

/***/ }),
/* 484 */
/***/ (function(module, exports) {

var COMPLETE = 'complete',
    CANCELED = 'canceled';

function raf(task){
    if('requestAnimationFrame' in window){
        return window.requestAnimationFrame(task);
    }

    setTimeout(task, 16);
}

function setElementScroll(element, x, y){
    if(element.self === element){
        element.scrollTo(x, y);
    }else{
        element.scrollLeft = x;
        element.scrollTop = y;
    }
}

function getTargetScrollLocation(target, parent, align){
    var targetPosition = target.getBoundingClientRect(),
        parentPosition,
        x,
        y,
        differenceX,
        differenceY,
        targetWidth,
        targetHeight,
        leftAlign = align && align.left != null ? align.left : 0.5,
        topAlign = align && align.top != null ? align.top : 0.5,
        leftOffset = align && align.leftOffset != null ? align.leftOffset : 0,
        topOffset = align && align.topOffset != null ? align.topOffset : 0,
        leftScalar = leftAlign,
        topScalar = topAlign;

    if(parent.self === parent){
        targetWidth = Math.min(targetPosition.width, parent.innerWidth);
        targetHeight = Math.min(targetPosition.height, parent.innerHeight);
        x = targetPosition.left + parent.pageXOffset - parent.innerWidth * leftScalar + targetWidth * leftScalar;
        y = targetPosition.top + parent.pageYOffset - parent.innerHeight * topScalar + targetHeight * topScalar;
        x -= leftOffset;
        y -= topOffset;
        differenceX = x - parent.pageXOffset;
        differenceY = y - parent.pageYOffset;
    }else{
        targetWidth = targetPosition.width;
        targetHeight = targetPosition.height;
        parentPosition = parent.getBoundingClientRect();
        var offsetLeft = targetPosition.left - (parentPosition.left - parent.scrollLeft);
        var offsetTop = targetPosition.top - (parentPosition.top - parent.scrollTop);
        x = offsetLeft + (targetWidth * leftScalar) - parent.clientWidth * leftScalar;
        y = offsetTop + (targetHeight * topScalar) - parent.clientHeight * topScalar;
        x = Math.max(Math.min(x, parent.scrollWidth - parent.clientWidth), 0);
        y = Math.max(Math.min(y, parent.scrollHeight - parent.clientHeight), 0);
        x -= leftOffset;
        y -= topOffset;
        differenceX = x - parent.scrollLeft;
        differenceY = y - parent.scrollTop;
    }

    return {
        x: x,
        y: y,
        differenceX: differenceX,
        differenceY: differenceY
    };
}

function animate(parent){
    raf(function(){
        var scrollSettings = parent._scrollSettings;
        if(!scrollSettings){
            return;
        }

        var location = getTargetScrollLocation(scrollSettings.target, parent, scrollSettings.align),
            time = Date.now() - scrollSettings.startTime,
            timeValue = Math.min(1 / scrollSettings.time * time, 1);

        if(
            time > scrollSettings.time + 20
        ){
            setElementScroll(parent, location.x, location.y);
            parent._scrollSettings = null;
            return scrollSettings.end(COMPLETE);
        }

        var easeValue = 1 - scrollSettings.ease(timeValue);

        setElementScroll(parent,
            location.x - location.differenceX * easeValue,
            location.y - location.differenceY * easeValue
        );

        animate(parent);
    });
}
function transitionScrollTo(target, parent, settings, callback){
    var idle = !parent._scrollSettings,
        lastSettings = parent._scrollSettings,
        now = Date.now(),
        endHandler;

    if(lastSettings){
        lastSettings.end(CANCELED);
    }

    function end(endType){
        parent._scrollSettings = null;
        if(parent.parentElement && parent.parentElement._scrollSettings){
            parent.parentElement._scrollSettings.end(endType);
        }
        callback(endType);
        parent.removeEventListener('touchstart', endHandler);
    }

    parent._scrollSettings = {
        startTime: lastSettings ? lastSettings.startTime : Date.now(),
        target: target,
        time: settings.time + (lastSettings ? now - lastSettings.startTime : 0),
        ease: settings.ease,
        align: settings.align,
        end: end
    };

    endHandler = end.bind(null, CANCELED);
    parent.addEventListener('touchstart', endHandler);

    if(idle){
        animate(parent);
    }
}

function defaultIsScrollable(element){
    return (
        'pageXOffset' in element ||
        (
            element.scrollHeight !== element.clientHeight ||
            element.scrollWidth !== element.clientWidth
        ) &&
        getComputedStyle(element).overflow !== 'hidden'
    );
}

function defaultValidTarget(){
    return true;
}

module.exports = function(target, settings, callback){
    if(!target){
        return;
    }

    if(typeof settings === 'function'){
        callback = settings;
        settings = null;
    }

    if(!settings){
        settings = {};
    }

    settings.time = isNaN(settings.time) ? 1000 : settings.time;
    settings.ease = settings.ease || function(v){return 1 - Math.pow(1 - v, v / 2);};

    var parent = target.parentElement,
        parents = 0;

    function done(endType){
        parents--;
        if(!parents){
            callback && callback(endType);
        }
    }

    var validTarget = settings.validTarget || defaultValidTarget;
    var isScrollable = settings.isScrollable;

    while(parent){
        if(validTarget(parent, parents) && (isScrollable ? isScrollable(parent, defaultIsScrollable) : defaultIsScrollable(parent))){
            parents++;
            transitionScrollTo(target, parent, settings, done);
        }

        parent = parent.parentElement;

        if(!parent){
            return;
        }

        if(parent.tagName === 'BODY'){
            parent = parent.ownerDocument;
            parent = parent.defaultView || parent.ownerWindow;
        }
    }
};


/***/ }),
/* 485 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function (Component) {
  Component.implement({
    filterMenu: function filterMenu(menu) {
      var _this = this;

      var _data = this.data,
          searchable = _data.searchable,
          searchValue = _data.searchValue,
          titleKey = _data.titleKey,
          childrenKey = _data.childrenKey;

      if (!searchable || !searchValue) {
        return true;
      }

      if (menu[titleKey].indexOf(searchValue) !== -1) {
        menu.open = true;
        return true;
      }

      if (menu[childrenKey] && menu[childrenKey].length) {
        var containsPage = menu[childrenKey].some(function (page) {
          return _this.filterMenuSub(page);
        });
        if (containsPage) {
          menu.open = true;
        }
        return containsPage;
      }
    },
    filterMenuSub: function filterMenuSub(page) {
      var _data2 = this.data,
          searchable = _data2.searchable,
          searchValue = _data2.searchValue,
          pageKey = _data2.pageKey;

      if (!searchable || !searchValue) {
        return true;
      }

      return page[pageKey].indexOf(searchValue) !== -1;
    },
    highlight: function highlight(name) {
      var _data3 = this.data,
          searchable = _data3.searchable,
          searchValue = _data3.searchValue;

      if (!searchable || !searchValue) {
        return name;
      }

      var regexp = new RegExp('(' + searchValue + ')', 'gim');
      return name.replace(regexp, '<span class="kl-sidebar__highlight">$1</span>');
    }
  });
};

/***/ }),
/* 486 */
/***/ (function(module, exports) {

module.exports = "<div class=\"kl-sidebar {class}\" r-class={ { 'is-dark': theme === 'dark' } } r-style={ {width: width, top: top} }>\n  <div class=\"kl-sidebar-menus-wrap\" ref=\"menuWrap\">\n    {#if searchable}\n    <div class=\"kl-sidebar-search-box\" ref=\"searchBox\">\n      <kl-input value={searchValue} clearable placeholder=\"\" />\n    </div>\n    {/if}\n    <kl-scroll wrapMaxHeight=\"{this.getScrollMaxHeight()}px\">\n      <kl-menu uniqueOpened=\"{uniqueOpened}\" on-menuitem-click=\"{this.onMenuItemClick($event)}\" router=\"{router}\">\n        {#list menus as menu}\n          {#if this.filterMenu(menu)}\n            {#if menu[childrenKey] && menu[childrenKey].length}\n            <kl-menu-sub titleTemplate=\"{this.getTitleTemplate(menu[titleKey], menu[todoKey])}\" defaultOpen=\"{menu.open}\" iconClass=\"{menu.iconClass}\">\n              {#list menu[childrenKey] as page}\n                {#if this.filterMenuSub(page)}\n                <kl-menu-item isCurrent=\"{page.open}\" url=\"{page[urlKey]}\" route=\"{page[routeKey]}\" target=\"{page.target}\">\n                  {#inc this.getTitleTemplate(page[pageKey], page[todoKey])}\n                </kl-menu-item>\n                {/if}\n              {/list}\n            </kl-menu-sub>\n            {#else}\n            <kl-menu-sub url=\"{menu[urlKey]}\" route=\"{menu[routeKey]}\" titleTemplate=\"{this.getTitleTemplate(menu[titleKey], menu[todoKey])}\" iconClass=\"{menu.iconClass}\" target=\"{menu.target}\"></kl-menu-sub>\n            {/if}\n          {/if}\n        {/list}\n      </kl-menu>\n    </kl-scroll>\n  </div>\n</div>\n"

/***/ }),
/* 487 */
/***/ (function(module, exports) {

module.exports = "<ul class=\"kl-menu {class}\">\n  {#inc this.$body}\n</ul>\n"

/***/ }),
/* 488 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * ------------------------------------------------------------
 * KLMenuItem
 * @author   sensen(rainforest92@126.com)
 * ------------------------------------------------------------
 */

var Component = __webpack_require__(1);
var template = __webpack_require__(489);
var RootMenuMixin = __webpack_require__(240);

/**
 * @class KLMenuItem
 * @extend Component
 * @param {object}        [options.data]                          = 绑定属性
 * @param {string}        [options.data.class]                    => 补充class
 * @param {string}        [options.data.title]                    => 标题文案
 * @param {string}        [options.data.url]                      => 跳转链接
 * @param {boolean}       [options.data.isCurrent]                => 是否是当前页
 * @param {boolean}       [options.data.target                    => a标签的target属性, 默认_self
 */
var KLMenuItem = Component.extend({
  name: 'kl-menu-item',
  template: template,
  /**
   * @protected
   */
  config: function config() {
    this.defaults({
      class: '',
      title: '',
      active: false,
      url: '',
      target: '_self'
    });

    this.supr();
  },

  computed: {
    active: function active() {
      if (!this.data.rootMenu) return;
      return this.data.rootMenu.currentItem === this;
    }
  },
  init: function init() {
    this.initRootMenu();

    if (this.data.isCurrent) {
      this.data.rootMenu.$emit('menuitem-click', this);
    }
  },
  goto: function goto(e) {
    e.stopPropagation();
    this.data.rootMenu.$emit('menuitem-click', this);
  }
});

KLMenuItem.use(RootMenuMixin);
module.exports = KLMenuItem;

/***/ }),
/* 489 */
/***/ (function(module, exports) {

module.exports = "<a class=\"kl-menu-item {class}\" r-class={ {'is-active': active} } on-click={this.goto($event)} r-route={url+route} target={target}>\n  {#if title}\n    {title}\n  {#else}\n    {#inc this.$body}\n  {/if}\n</a>\n"

/***/ }),
/* 490 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * ------------------------------------------------------------
 * KLSubMenu
 * @author   sensen(rainforest92@126.com)
 * ------------------------------------------------------------
 */

var Component = __webpack_require__(1);
var template = __webpack_require__(491);
var RootMenuMixin = __webpack_require__(240);

/**
 * @class KLSubMenu
 * @extend Component
 * @param {object}        [options.data]                          = 绑定属性
 * @param {string}        [options.data.class]                    => 补充class
 * @param {boolean}       [options.data.defaultOpen=false]        => 是否默认展开,如果需要默认展开,设置为true
 * @param {string}        [options.data.url]                   => 如果一级菜单需要链接,可配置url属性
 * @param {string}        [options.data.iconClass]             => 菜单文字前的icon
 * @param {string}        [options.data.title]                    => 标题文案
 * @param {string}        [options.data.titleTemplate]            => 标题文案模板
 * @param {string}        [options.data.target]                   => a标签的target属性, 默认_self
 */
var KLSubMenu = Component.extend({
  name: 'kl-menu-sub',
  template: template,
  /**
   * @protected
   */
  config: function config() {
    this.defaults({
      class: '',
      title: '',
      href: '',
      iconClass: '',
      titleTemplate: '',
      target: '_self'
    });
    this.supr();
  },

  computed: {
    active: function active() {
      if (!this.data.rootMenu) return;
      return this.data.rootMenu.openedMenus.indexOf(this) > -1;
    }
  },
  init: function init() {
    this.initRootMenu();

    if (this.data.defaultOpen) {
      this.data.rootMenu.openedMenus.push(this);
    }
  },
  toggle: function toggle() {
    this.data.rootMenu.$emit('submenu-click', this);
    this.$emit('click', this);
  }
});

KLSubMenu.use(RootMenuMixin);

module.exports = KLSubMenu;

/***/ }),
/* 491 */
/***/ (function(module, exports) {

module.exports = "{#if url || route}\n<a class=\"kl-sub-menu {class}\" r-class={ {'is-highlight': active} } r-route={url+route} target={target}>\n  <div class=\"kl-sub-menu-head\">\n    {#if iconClass}\n    <span class=\"kl-sub-menu-head__icon {iconClass}\"></span>\n    {/if}\n    <span class=\"kl-sub-menu-head__title\">\n      {#if title}\n        {title}\n      {#elseif titleTemplate}\n        {#inc titleTemplate}\n      {/if}\n    </span>\n  </div>\n</a>\n{#else}\n<li class=\"kl-sub-menu {class}\" r-class={ {'is-highlight': (!active && rootMenu.currentSubMenu === this)} } on-click={this.toggle($event)}>\n  <div class=\"kl-sub-menu-head\">\n    {#if iconClass}\n    <span class=\"kl-sub-menu-head__icon {iconClass}\"></span>\n    {/if}\n    <span class=\"kl-sub-menu-head__title\">\n      {#if title}\n        {title}\n      {#elseif titleTemplate}\n        {#inc titleTemplate}\n      {/if}\n    </span>\n    {#if this.$body}\n      <kl-icon type=\"arrow-down\" class=\"kl-sub-menu-head__arrow {active ? 'is-open' : ''}\" />\n    {/if}\n  </div>\n  {#if active}\n  <div class=\"kl-menu-item-wrap\" r-animation=\"on:enter;collapse:on;on:leave;collapse:off;\">\n    {#inc this.$body}\n  </div>\n  {/if}\n</li>\n{/if}\n"

/***/ }),
/* 492 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * @file KLPager     分页
 * @author   sensen(rainforest92@126.com)
 */

var Component = __webpack_require__(1);
var template = __webpack_require__(493);
var _ = __webpack_require__(2);

/**
 * @class KLPager
 * @extend Component
 * @param {object}        [options.data]                  = 绑定属性
 * @param {number}        [options.data.current=1]        <=> 当前页
 * @param {number}        [options.data.total=0]          => 总页数
 * @param {number}        [options.data.sumTotal=0]       => 总个数
 * @param {number}        [options.data.pageSize=20]      => 每页个数
 * @param {number}        [options.data.middle=5]         => 当页数较多时，中间显示的页数
 * @param {number}        [options.data.side=2]           => 当页数较多时，两端显示的页数
 * @param {number}        [options.data.step=5]           => 每页条数选择步长
 * @param {number}        [options.data.maxPageSize=50]   => 最大可设置的每页条数
 * @param {boolean}       [options.data.isEllipsis=false] => 是否展示位总条数+
 * @param {number}        [options.data.maxTotal]         => 总条数超过maxTotal条数时，展示为maxTotal+条数
 * @param {string}        [options.data.class]            => 补充class
 */
var KLPager = Component.extend({
  name: 'kl-pager',
  template: template,
  config: function config() {
    var _this = this;

    _.extend(this.data, {
      current: 1,
      total: '',
      sumTotal: '',
      pageSize: '',
      position: 'center',
      middle: 5,
      side: 2,
      _start: 1,
      _end: 5,
      step: 5,
      maxPageSize: 50,
      pageSizeList: [],
      isEllipsis: false
    });
    this.supr();

    this._setPageSizeList();

    this.$watch(['current', 'total'], function (_current, _total) {
      var current = +_current;
      var total = +_total;
      this.data.current = current;
      this.data.total = total;
      var show = Math.floor(this.data.middle / 2);
      var side = this.data.side;

      this.data._start = current - show;
      this.data._end = current + show;
      if (this.data._start < side + 1) this.data._start = side + 1;
      if (this.data._end > total - side) this.data._end = total - side;
      if (current - this.data._start < show) {
        this.data._end += this.data._start - current + show;
      }
      if (this.data._end - current < show) {
        this.data._start += this.data._end - current - show;
      }
    });

    this.$watch(['middle', 'side'], function (middle, side) {
      this.data.middle = +middle;
      this.data.side = +side;
    });

    this.$watch('pageSize', function (val, oldVal) {
      if (!oldVal) return;
      this.initTotal();
      this.select(1);
    });

    this.$watch('sumTotal', function () {
      _this.initTotal();
    });
  },
  initTotal: function initTotal() {
    if (this.data.pageSize) {
      this.data.total = Math.ceil(this.data.sumTotal / this.data.pageSize);
    }

    if ((!!this.data.sumTotal || this.data.sumTotal === 0) && !this.data.pageSize) {
      console.error('Pager组件需要传pageSize');
    }
  },
  _setPageSizeList: function _setPageSizeList() {
    var _data = this.data,
        step = _data.step,
        maxPageSize = _data.maxPageSize;

    for (var i = 1; i * step <= maxPageSize; i += 1) {
      this.data.pageSizeList.push({
        id: i * step,
        name: i * step + this.$trans('ITEM_PAGE')
      });
    }
  },
  select: function select(page) {
    if (this.data.readonly || this.data.disabled) return;

    if (page < 1) return;
    if (page > this.data.total) return;

    this.data.current = page;
    /**
     * @event KLPager#select 选择某一页时触发
     * @property {object} sender 事件发送对象
     * @property {object} current 当前选择页
     */
    this.$update();
    this.$emit('select', {
      sender: this,
      current: this.data.current
    });
  },
  enter: function enter(ev) {
    if (ev.which === 13) {
      // ENTER key
      ev.preventDefault();
      this.goto();
    }
  },
  goto: function goto() {
    var data = this.data;
    if (!data.pageNo && data.pageNo / 1 !== 0) return;
    if (data.pageNo > data.total) {
      data.pageNo = data.total;
    } else if (data.pageNo < 1) {
      data.pageNo = 1;
    }
    this.select(this.data.pageNo);
  }
});

module.exports = KLPager;

/***/ }),
/* 493 */
/***/ (function(module, exports) {

module.exports = "{#if total > 1}\n<div class=\"kl-pager kl-pager-{@(position)} {class}\" is-dis={disabled} r-hide={!visible}>\n    <div class=\"m-left-pager kl-pager-left\">\n        {#if !!pageSize || pageSize === 0}\n        <div class=\"page_size kl-pager__size\"><kl-select placeholder=\"\" value={pageSize} source={pageSizeList} size=\"sm\"></kl-select></div>\n        {/if}\n\n        {#if !!sumTotal || sumTotal === 0}\n            {#if !!maxTotal && sumTotal > maxTotal}\n            <div class=\"page_total kl-pager__total\">{this.$trans('TOTAL')} {maxTotal + '＋'} {this.$trans('ITEMS')}</div>\n            {#elseif isEllipsis}\n            <div class=\"page_total kl-pager__total\">{this.$trans('TOTAL')} {sumTotal + '＋'} {this.$trans('ITEMS')}</div>\n            {#else}\n            <div class=\"page_total kl-pager__total\">{this.$trans('TOTAL')} {sumTotal} {this.$trans('ITEMS')}</div>\n            {/if}\n        {/if}\n    </div>\n\n    <ul class=\"m-right-pager kl-pager-main\">\n        <li class=\"page_item page_prev kl-pager-main__item kl-pager-main__prev\" is-dis={current <= 1} on-click={this.select(current - 1)}>\n        <kl-icon type=\"arrow-left\" />\n        </li>\n\n        {#if total - middle > side * 2 + 1}\n        {#list 1..side as i}\n        <li class=\"page_item kl-pager-main__item\" is-crt={current == i} on-click={this.select(i)}>{i}</li>\n        {/list}\n        {#if _start > side + 1}<li class=\"page_item kl-pager-main__item\">...</li>{/if}\n        {#list _start.._end as i}\n        <li class=\"page_item kl-pager-main__item\" is-crt={current == i} on-click={this.select(i)}>{i}</li>\n        {/list}\n        {#if _end < total - side}<li class=\"page_item kl-pager-main__item\">...</li>{/if}\n        {#list (total - side + 1)..total as i}\n        <li class=\"page_item kl-pager-main__item\" is-crt={current == i} on-click={this.select(i)}>{i}</li>\n        {/list}\n        {#else}\n        {#list 1..total as i}\n        <li class=\"page_item kl-pager-main__item\" is-crt={current == i} on-click={this.select(i)}>{i}</li>\n        {/list}\n        {/if}\n\n        <li class=\"page_item pager_next kl-pager-main__item kl-pager-main__next\" is-dis={current >= total} on-click={this.select(current + 1)}><kl-icon type=\"arrow-right\" /></li>\n\n        <li class=\"page_goto kl-pager-main__goto\">\n            <span>{this.$trans('GOTO')}</span>\n            <kl-input type=\"int\" on-keyup={this.enter($event)} size=\"sm\" value={pageNo} />\n            <span>{this.$trans('PAGE')}</span>\n        </li>\n\n        <li class=\"page_confirm kl-pager-main__confirm\">\n            <kl-button class=\"kl-pager-main__confirm_btn\" on-click={this.goto()} title={this.$trans('CONFIRM')} size=\"sm\" />\n        </li>\n    </ul>\n\n</div>\n{/if}\n"

/***/ }),
/* 494 */
/***/ (function(module, exports) {

module.exports = "<div class=\"kl-tabs {class}\" is-dis={disabled} r-hide={!visible}>\n    <div class=\"kl-tabs__wrap\">\n      <div class=\"kl-tabs-scroll {scrollable ? 'is-scrollable' : ''}\">\n        {#if scrollable}\n        <span class=\"kl-tabs-scroll__nav kl-tabs-scroll__nav--prev\" is-dis={!scrollable.prev} on-click={this.prev()}>\n            <kl-icon type=\"arrow-left\" />\n        </span>\n        <span class=\"kl-tabs-scroll__nav kl-tabs-scroll__nav--next\" is-dis={!scrollable.next} on-click={this.next()}>\n            <kl-icon type=\"arrow-right\" />\n        </span>\n        {/if}\n        <div ref=\"wrap\" class=\"f-oh\">\n          <ul ref=\"nav\" class=\"kl-tabs__hd\" r-style={navStyle}>\n            {#if type == 'line'}\n            <li class=\"kl-tabs__active-bar\" active-bar></li>\n            {/if}\n            {#list tabs as item}\n            <li class=\"kl-tabs__tab kl-tabs__tab--{type}\" is-crt={item == selected} is-dis={item.data.disabled} on-click={this.select(item, $event)}>\n            {#if @(titleTemplate)}\n            {#inc @(titleTemplate)}\n            {#else}\n            {item.data.title}\n            {/if}\n            </li>\n            {/list}\n          </ul>\n        </div>\n      </div>\n    </div>\n    <div class=\"kl-tabs__bd\">\n        {#inc this.$body}\n    </div>\n</div>"

/***/ }),
/* 495 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * ------------------------------------------------------------
 * KLTab       子选项卡
 * ------------------------------------------------------------
 */

var Component = __webpack_require__(1);
var _ = __webpack_require__(2);
var template = __webpack_require__(496);
var KLTabs = __webpack_require__(241);

/**
 * @class KLTab
 * @extend Component
 * @param {object}        [options.data]                      = 绑定属性
 * @param {object}        [options.data.title='']             => 标题
 * @param {string}        [options.data.key=null]             => key 标识
 */
var KLTab = Component.extend({
  name: 'kl-tab',
  template: _.compressHtml(template),
  /**
     * @protected
     */
  config: function config() {
    _.extend(this.data, {
      title: ''
    });
    this.supr();

    if (this.$outer && this.$outer instanceof KLTabs) {
      this.$outer.data.tabs.push(this);
    }

    if (!this.$outer.data.selected) this.$outer.data.selected = this;

    this._setDefaultTab();

    this.$on('destroy', function () {
      var index = this.$outer.data.tabs.indexOf(this);
      if (index !== -1) {
        this.$outer.data.tabs.splice(index, 1);
      }
    });
  },
  _setDefaultTab: function _setDefaultTab() {
    var defaultKey = this.$outer.data.defaultKey;
    var key = this.data.key;

    if (!!defaultKey && !!key && '' + defaultKey === '' + key) {
      this.$outer.data.selected = this;
    }
  }
});

module.exports = KLTab;

/***/ }),
/* 496 */
/***/ (function(module, exports) {

module.exports = "{#if this.$outer.data.fresh}\n{#if this.$outer.data.selected === this}\n<div>{#inc this.$body}</div>\n{/if}\n{#else}\n<div r-hide={this.$outer.data.selected !== this}>{#inc this.$body}</div>\n{/if}"

/***/ }),
/* 497 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * @file KLSteps     步骤条
 * @author   ziane(zianecui@gmail.com)
 */

var Component = __webpack_require__(1);
var template = __webpack_require__(498);
var _ = __webpack_require__(2);

var KLSteps = Component.extend({
  name: 'kl-steps',
  template: template,
  config: function config() {
    _.extend(this.data, {
      $stepsNode: [],
      steps: [],
      current: 0,
      size: '',
      currentIndex: 0,
      currentStatus: '', // wait; process; finish; error
      direction: 'horizontal'
    });
    this.supr();
  },
  init: function init() {
    this.supr();
  }
});

module.exports = KLSteps;

/***/ }),
/* 498 */
/***/ (function(module, exports) {

module.exports = "<div\n    class=\"kl-steps kl-steps--{direction}\"\n    r-class={{'kl-steps--simple': simple}}\n    style=\"height: {height}px; width: {width}px\"\n    >\n    <!-- {#inc this.$body} -->\n    {#list steps as step}\n    <kl-step title=\"{step.title}\" description=\"{step.description}\" status=\"{step.status}\" key=\"{step.key}\" />\n    {/list}\n</div>\n"

/***/ }),
/* 499 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * @file KLStep    步骤条
 * @author   ziane(zianecui@gmail.com)
 */

var Component = __webpack_require__(1);
var template = __webpack_require__(500);
var _ = __webpack_require__(2);

var KLSteps = Component.extend({
  name: 'kl-step',
  template: template,
  config: function config() {
    var _this = this;

    _.extend(this.data, {
      currentStatus: 'finish',
      current: '',
      status: '',
      lineStyle: ''
    });
    this.supr();

    this.data.stepNumber = this.$parent.data.$stepsNode.length;
    this.$parent.data.$stepsNode.push(this);
    this.data.current = this.$parent.data.current;
    this.data.size = this.$parent.data.size;
    this.data.direction = this.$parent.data.direction; // vertical/horizontal

    var steps = this.$parent.data.steps;

    this.$watch('this.$parent.data.current', function (newValue) {
      _this.data.current = newValue;
      _this.getCurrentIndex(steps);
    });

    this.$watch('this.$parent.data.steps.length', function (len) {
      _this.getCurrentIndex(steps);
      _this.data.style = _this.setStyles(len);
    });
  },
  init: function init() {
    this.supr();
  },

  /**
   * 计算出step的宽度百分比，为了让每个step平分
   */
  setStyles: function setStyles(len) {
    var style = '';
    style += 'flex-basis:' + 100 / (len - (this.data.isCenter ? 0 : 1)) + '%;';
    if (this.isVertical) {
      this.data.style = style;
      return;
    }
    style += 'max-width:' + 100 / len + '%';

    return style;
  },

  /**
   * 获取当前到达的步骤
   */
  getCurrentIndex: function getCurrentIndex(steps) {
    var data = this.data;
    var current = data.current;
    if (!current && current !== 0 && current !== '0') return;
    if (!steps) return;

    steps.forEach(function (item, index) {
      if (typeof item.key !== 'function' && item.key / 1 === current / 1 || typeof item.key === 'function' && item.key(current)) {
        data.currentIndex = index;
      }
    });

    this.setStatus(steps);
  },

  /**
   * 设置每一步状态
   */
  setStatus: function setStatus(steps) {
    var data = this.data;
    var currentIndex = data.currentIndex;
    if (currentIndex === undefined) {
      this.data.currentStatus = 'finish';
    } else {
      steps.forEach(function (item, index) {
        if (index < currentIndex / 1) {
          item.status = 'finish';
        } else if (index > currentIndex / 1) {
          item.status = 'wait';
        } else if (index === currentIndex / 1) {
          item.status = 'success';
        }
      });
      this.data.currentStatus = steps[data.stepNumber].status;
    }
    this.calcProgress(this.data.currentStatus);
  },
  calcProgress: function calcProgress(status) {
    var step = 100;
    var style = '';
    style = 'transition-delay:' + 150 * (this.data.stepNumber / 1) + 'ms;';

    if (status === 'success') {
      step = 0;
    }

    if (this.data.size === 'small') {
      style += 'border-width: ' + (step ? '1px' : 0) + ';';
    } else {
      style += 'border-width: ' + (step ? '2px' : 0) + ';';
    }
    if (this.data.direction === 'vertical') {
      style += 'height: ' + step / 1 + '%;';
    } else {
      style += 'width: ' + step / 1 + '%;';
    }

    this.data.lineStyle = style;
    this.$update();
  }
});

module.exports = KLSteps;

/***/ }),
/* 500 */
/***/ (function(module, exports) {

module.exports = "<!--<div-->\n    <!--class=\"kl-step\"-->\n    <!--:style=\"style\"-->\n    <!--:class=\"[-->\n      <!--!isSimple && `is-${$parent.direction}`,-->\n      <!--isSimple && 'is-simple',-->\n      <!--isLast && !space && !isCenter && 'is-flex',-->\n      <!--isCenter && !isVertical && !isSimple && 'is-center'-->\n     <!--]\">-->\n<div\n    class=\"kl-step is-{direction} is-{size}\" style=\"{style}\">\n    <!-- icon & line -->\n    <div\n        class=\"kl-step__head is-{currentStatus}\">\n        <!--<div-->\n            <!--class=\"kl-step__line\"-->\n            <!--style=\"{isLast ? '' :  'marginRight:' parent.stepOffset + 'px' }\"-->\n        <!--&gt;-->\n        <div\n            class=\"kl-step__line\"\n        >\n            <i class=\"kl-step__line-inner\" style=\"{lineStyle}\"></i>\n        </div>\n\n        <div class=\"kl-step__icon {icon ? 'is-icon' : 'is-text'}\">\n            {#if currentStatus !== 'error'}\n                {#if size === 'small' && currentStatus === 'finish'}\n                    <kl-icon type=\"tick\" class=\"kl-step__icon-inner is-status\" />\n                {#else}\n                    {#if icon}\n                        <i class=\"kl-step__icon-inner {icon}\"></i>\n                    {/if}\n                    {#if !icon && !isSimple}\n                        <div class=\"kl-step__icon-inner\">{ stepNumber + 1 }</div>\n                    {/if}\n                {/if}\n            {#else}\n            <kl-icon type=\"cross\" class=\"kl-step__icon-inner is-status\" />\n            {/if}\n        </div>\n    </div>\n    <!-- title & description -->\n    <div class=\"kl-step__main\">\n        <div\n            class=\"kl-step__title is-{currentStatus}\"\n            ref=\"title\"\n            >\n            {#include title}\n        </div>\n        {#if isSimple}\n        <div class=\"kl-step__arrow\"></div>\n        {#else}\n        <div class=\"kl-step__description is-{currentStatus}\">\n            {#include description}\n        </div>\n        {/if}\n    </div>\n</div>\n"

/***/ }),
/* 501 */
/***/ (function(module, exports) {

module.exports = "<div class=\"kl-crumb f-cb {class}\">\n    {#inc this.$body}\n</div>"

/***/ }),
/* 502 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * ------------------------------------------------------------
 * KLCrumbItem     面包屑里的每一项
 * @author   zianecui@gmail.com
 * ------------------------------------------------------------
 */

var Component = __webpack_require__(1);
var template = __webpack_require__(503);
var _ = __webpack_require__(2);
var KLCrumb = __webpack_require__(242);

/**
 * @class KLCrumbItem
 * @extend Component
 * @param {object}          [options.data]                    = 绑定属性
 * @param {string}          [options.data.content]            => 内容模板
 * @param {string}          [options.data.class]              => 补充class
 * @param {string}          [options.data.href]                => 传入的链接
 */
var KLCrumbItem = Component.extend({
  name: 'kl-crumb-item',
  template: template,
  config: function config() {
    _.extend(this.data, {});
    this.supr();

    if (this.$outer && this.$outer instanceof KLCrumb) {
      this.$outer.data.crumbArr.push(this);
    }
  }
});

module.exports = KLCrumbItem;

/***/ }),
/* 503 */
/***/ (function(module, exports) {

module.exports = "<div class=\"kl-crumb-item f-cb {class}\">\n    {#if this != this.$outer.data.crumbArr[0]}\n    <span class=\"kl-crumb-item__separator\">{#inc this.$outer.data.separator}</span>\n    {/if}\n\n    <div class=\"kl-crumb-item__cnt\">\n        {#if href}\n            <a class=\"kl-crumb-item__link\" href=\"{href}\">{#inc content || this.$body}</a>\n        {#else}\n            {#inc content || this.$body}\n        {/if}\n    </div>\n</div>"

/***/ }),
/* 504 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Component = __webpack_require__(1);
var template = __webpack_require__(505);
var _ = __webpack_require__(2);

/**
 * @class KLNotify
 * @extend Component
 * @param {object}      [options.data]                      = 绑定属性
 * @param {string}      [options.data.position=topcenter]   => 通知的位置，可选参数：`topcenter`、`topleft`、`topright`、`bottomcenter`、`bottomleft`、`bottomright`、`static`
 * @param {number}      [options.data.duration=2000]        => 每条消息默认的停留毫秒数，如果为`0`，则表示消息常驻不消失，默认为`2秒`。
 * @param {boolean}     [options.data.single=false]         => 是否始终显示一条，`true`表示是，`false`表示否
 * @param {boolean}     [options.data.visible=true]         => 是否显示,`true`表示是、`false`表示否
 * @param {string}      [options.data.class]                => 补充`class`
 * @param {string}      [options.data.contentTemplate]      => 内容模板，用于支持复杂内容的自定义。
 */
var KLNotify = Component.extend({
  name: 'kl-notify',
  template: template,
  config: function config() {
    _.extend(this.data, {
      messages: [],
      position: 'topcenter',
      duration: 2000,
      single: false
    });
    this.supr();
  },
  init: function init() {
    this.supr();

    // 如果不是内嵌组件，则嵌入到document.body中
    if (this.$root === this) this.$inject(document.body);
  },
  show: function show(text, state, duration) {
    var self = this;
    var message = {
      text: text,
      state: state,
      duration: duration >= 0 ? +duration : +this.data.duration
      // duration: 0,
    };
    var messages = this.data.messages;

    if (this.data.single && messages[0]) {
      message = _.extend(messages[0], message, true);
      message.counter += 1;
    } else {
      messages.unshift(message);
      message.counter = 0;
    }

    this.$update();

    if (message.duration) {
      setTimeout(function () {
        if (!message.counter) self.close(message);else message.counter -= 1;
      }, message.duration);
    }

    /**
       * @event KLNotify#show 打开一条消息时触发
        * @property {object} sender 事件发送对象
        * @property {object} message 弹出的消息对象
        */
    this.$emit('show', {
      sender: this,
      message: message
    });
  },
  close: function close(message) {
    var index = this.data.messages.indexOf(message);
    if (index < 0) return;
    this.data.messages.splice(index, 1);
    this.$update();

    /**
         * @event KLNotify#close 关闭某条消息时触发
         * @property {object} sender 事件发送对象
         * @property {object} message 关闭了的消息对象
         */
    this.$emit('close', {
      sender: this,
      message: message
    });
  },
  closeAll: function closeAll() {
    this.data.messages = [];
    this.$update();
  }
});

var STATES = ['success', 'warning', 'notice', 'error'];

STATES.forEach(function (state) {
  KLNotify.prototype[state] = function (text, duration) {
    this.show(text, state, duration);
  };
});

var notify = new KLNotify();
KLNotify.notify = notify;

var METHODS = ['show', 'close', 'closeAll', 'success', 'warning', 'notice', 'error'];
KLNotify.METHODS = METHODS;

/**
 * @static
 * @param  {string} text 消息内容
 * @param  {string} state 消息状态，可选参数：`notice`、`success`、`warning`、`error`
 * @param  {number} duration=2000 该条消息的停留毫秒数。如果为0，则表示消息常驻不消失。如果不填，则使用notify默认的duration。
 */
KLNotify.show = function () {};
/**
 * @static
 * @param  {object} message 需要关闭的消息对象
 */
KLNotify.close = function () {};
/**
 * @static
 */
KLNotify.closeAll = function () {};
/**
 * @static
 * @param  {string} text 消息内容
 * @param  {number} duration=2000 该条消息的停留毫秒数。如果为0，则表示消息常驻不消失。如果不填，则使用notify默认的duration。
 */
KLNotify.success = function () {};
/**
 * @static
 * @param  {string} text 消息内容
 * @param  {number} duration=2000 该条消息的停留毫秒数。如果为0，则表示消息常驻不消失。如果不填，则使用notify默认的duration。
 */
KLNotify.warning = function () {};
/**
 * @static
 * @param  {string} text 消息内容
 * @param  {number} duration=2000 该条消息的停留毫秒数。如果为0，则表示消息常驻不消失。如果不填，则使用notify默认的duration。
 */
KLNotify.notice = function () {};
/**
 * @static
 * @param  {string} text 消息内容
 * @param  {number} duration=2000 该条消息的停留毫秒数。如果为0，则表示消息常驻不消失。如果不填，则使用notify默认的duration。
 */
KLNotify.error = function () {};
METHODS.forEach(function (method) {
  KLNotify[method] = notify[method].bind(notify);
});

module.exports = KLNotify;

/***/ }),
/* 505 */
/***/ (function(module, exports) {

module.exports = "<div class=\"kl-notify kl-notify--{position} {class}\" r-hide={!visible}>\n    {#list messages as message}\n    <div class=\"kl-notify-message kl-notify-message--{message.state}\" r-animation=\"on: enter; class: animated fadeIn fast; on: leave; class: animated fadeOut fast;\">\n        <a class=\"kl-notify-message__close\" on-click={this.close(message)}><kl-icon type=\"cross\" /></a>\n        <kl-icon type=\"{message.state}\" class=\"kl-message__icon {!message.state ? 'kl-notify-message__icon' : ''}\" />\n        <span class=\"kl-notify-message__content\">\n            {#if contentTemplate}{#inc @(contentTemplate)}{#else}{message.text}{/if}\n        </span>\n    </div>\n    {/list}\n</div>\n"

/***/ }),
/* 506 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * @file KLPopConfirm 气泡弹框
 * @author   ziane(zianecui@gmail.com)
 */

var dom = __webpack_require__(11).dom;

var Component = __webpack_require__(1);
var template = __webpack_require__(507);
__webpack_require__(243);

var PopUp = Component.extend({
  template: template,
  config: function config(data) {
    this.defaults({
      isShow: true,
      content: '',
      contentTemplate: ''
    });
    this.supr(data);
  },
  init: function init() {
    if (this.$root === this) {
      this.$inject(document.body);
    }
    this.data.element = dom.element(this);
    dom.on(this.data.element, 'click', function (e) {
      e.stopPropagation();
    });
  },
  getElement: function getElement() {
    return this.data.element;
  },
  ok: function ok() {
    var $validation = this.$refs.validation;
    if (!$validation || $validation.validate().success) {
      /**
       * @event KLPopConfirm#ok 确定时触发
       * @property {object} sender 事件发送对象
       * @property {object} data popConfirm组件的数据
       */
      this.$emit('ok', {
        sender: this,
        data: this.data
      });
    }
  },
  cancel: function cancel() {
    /**
     * @event KLPopConfirm#cancel 取消时触发
     * @property {object} sender 事件发送对象
     * @property {object} data popConfirm组件的数据
     */
    this.$emit('cancel', {
      sender: this,
      data: this.data
    });
  }
});

/**
 * @class KLPopConfirm
 * @extend Component
 * @param {object}        [options.data]                        = 绑定属性
 * @param {string}        [options.data.content]                => 弹窗中的文本内容
 * @param {string}        [options.data.contentTemplate]        => 弹窗中的模板内容,回调中会将PopConfirm的data返回;
 * @param {string}        [options.data.placement=top]          => tips展示出的位置：`top`、 `left`、 `right`、 `bottom`、 `topLeft`、 `topRight`、 `bottomLeft`、 `bottomRight`、 `leftTop`、 `leftBottom`、 `rightTop`、 `rightBottom`
 * @param {string}        [options.data.okText=确定]             => ok按钮文案
 * @param {string}        [options.data.cancelText=取消]         => 取消按钮文案
 * @param {boolean}       [options.data.hideWhenScroll=false]   => window滚动时,是否隐藏`popover`
 */
var KLPopConfirm = Component.extend({
  name: 'kl-pop-confirm',
  template: '<trigger ref="trigger" action="click" placement={placement} getInstance={@(this.getInstance.bind(this))} destroyOnHide=true hideWhenScroll={hideWhenScroll}>{#inc this.$body}</trigger>',
  config: function config(data) {
    this.defaults({
      placement: 'top'
    });

    this.supr(data);
  },
  destroy: function destroy() {
    if (this.data.instance) {
      this.data.instance.destroy();
    }
    this.supr();
  },
  getInstance: function getInstance() {
    var self = this;
    if (!this.data.instance) {
      var instance = new PopUp({ data: this.data });

      instance.$on('ok', function (data) {
        if (self.events && self.events.ok) {
          self.$emit('ok', data);
        } else {
          self.data.instance.destroy();
        }
      });

      instance.$on('cancel', function (data) {
        if (self.events && self.events.cancel) {
          self.$emit('cancel', data);
        } else {
          self.data.instance.destroy();
        }
      });

      instance.$on('destroy', function () {
        self.$refs.trigger.data.isShow = false;
        self.data.instance = null;
      });

      this.data.instance = instance;
    }
    return this.data.instance;
  }
});

module.exports = KLPopConfirm;

/***/ }),
/* 507 */
/***/ (function(module, exports) {

module.exports = "<div class=\"kl-popconfirm kl-popconfirm--{placement}\">\n\t<div class=\"kl-popconfirm__arrow\"></div>\n\t<div class=\"kl-popconfirm__inner\">\n\t\t<div class=\"kl-popconfirm__body\">\n\t\t\t{#if contentTemplate}\n\t\t\t{#inc @(contentTemplate)}\n\t\t\t{#else}\n\t\t\t<kl-icon type=\"info-circle\" class=\"kl-text kl-text--warning\"/>\n\t\t\t{content}\n\t\t\t{/if}\n\t\t</div>\n\t\t<div class=\"kl-popconfirm__foot\">\n          \t<kl-button size=\"sm\" on-click={this.cancel()} title={cancelText ? cancelText : this.$trans('CANCEL')} />\n          \t<kl-button size=\"sm\" type=\"primary\" on-click={this.ok()} r-autofocus title={okText ? okText : this.$trans('CONFIRM')} />\n\t\t</div>\n\t</div>\n</div>"

/***/ }),
/* 508 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
/**
 * ------------------------------------------------------------
 * Alignment tooltip, popconfirm使用的定位
 * ------------------------------------------------------------
 */

var dom = __webpack_require__(11).dom;
var domAlign = __webpack_require__(509).default;

var Component = __webpack_require__(1);
var _ = __webpack_require__(2);
var placement = __webpack_require__(515);

/**
 * @class Alignment
 * @extend Component
 * @param {object}            [options.data]                        = 绑定属性
 * @param {string}            [options.data.placement=top]          => tips展示出的位置：top left right bottom topLeft topRight bottomLeft bottomRight leftTop leftBottom rightTop rightBottom
 */
var Alignment = Component.extend({
  name: 'alignment',
  template: '{#inc this.$body}',
  config: function config(data) {
    this.defaults({
      placement: 'top'
    });

    this.supr(data);
  },
  init: function init() {
    this.data.target = dom.element(this);
    var self = this;

    dom.on(window, 'resize', _.debounce(function () {
      self.reAlign();
    }, 50));
  },
  reAlign: function reAlign(_src) {
    var target = this.data.target;
    var src = _src || this.data.src;
    var align = placement[this.data.placement];

    if (src) {
      this.data.src = src;
    }
    if (!src || !target) {
      return;
    }

    if (src.style.display === 'none') {
      return;
    }

    domAlign(src, target, {
      points: align.points,
      offset: align.offset,
      targetOffset: align.targetOffset,
      overflow: align.overflow
    });
  }
});

module.exports = Alignment;

/***/ }),
/* 509 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils__ = __webpack_require__(36);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__getOffsetParent__ = __webpack_require__(244);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__getVisibleRectForElement__ = __webpack_require__(511);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__adjustForViewport__ = __webpack_require__(512);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__getRegion__ = __webpack_require__(513);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__getElFuturePos__ = __webpack_require__(514);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__getAlignOffset__ = __webpack_require__(245);
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * align dom node flexibly
 * @author yiminghe@gmail.com
 */









// http://yiminghe.iteye.com/blog/1124720

function isFailX(elFuturePos, elRegion, visibleRect) {
  return elFuturePos.left < visibleRect.left || elFuturePos.left + elRegion.width > visibleRect.right;
}

function isFailY(elFuturePos, elRegion, visibleRect) {
  return elFuturePos.top < visibleRect.top || elFuturePos.top + elRegion.height > visibleRect.bottom;
}

function isCompleteFailX(elFuturePos, elRegion, visibleRect) {
  return elFuturePos.left > visibleRect.right || elFuturePos.left + elRegion.width < visibleRect.left;
}

function isCompleteFailY(elFuturePos, elRegion, visibleRect) {
  return elFuturePos.top > visibleRect.bottom || elFuturePos.top + elRegion.height < visibleRect.top;
}

function isOutOfVisibleRect(target) {
  var visibleRect = Object(__WEBPACK_IMPORTED_MODULE_2__getVisibleRectForElement__["a" /* default */])(target);
  var targetRegion = Object(__WEBPACK_IMPORTED_MODULE_4__getRegion__["a" /* default */])(target);

  return !visibleRect || targetRegion.left + targetRegion.width <= visibleRect.left || targetRegion.top + targetRegion.height <= visibleRect.top || targetRegion.left >= visibleRect.right || targetRegion.top >= visibleRect.bottom;
}

function flip(points, reg, map) {
  var ret = [];
  __WEBPACK_IMPORTED_MODULE_0__utils__["a" /* default */].each(points, function (p) {
    ret.push(p.replace(reg, function (m) {
      return map[m];
    }));
  });
  return ret;
}

function flipOffset(offset, index) {
  offset[index] = -offset[index];
  return offset;
}

function convertOffset(str, offsetLen) {
  var n = void 0;
  if (/%$/.test(str)) {
    n = parseInt(str.substring(0, str.length - 1), 10) / 100 * offsetLen;
  } else {
    n = parseInt(str, 10);
  }
  return n || 0;
}

function ySize(region) {
  return region.bottom - region.top;
}

function xSize(region) {
  return region.right - region.left;
}

function normalizeOffset(offset, el) {
  offset[0] = convertOffset(offset[0], el.width);
  offset[1] = convertOffset(offset[1], el.height);
}

function domAlign(el, refNode, align) {
  var points = align.points;
  var offset = align.offset || [0, 0];
  var targetOffset = align.targetOffset || [0, 0];
  var overflow = align.overflow;
  var target = align.target || refNode;
  var source = align.source || el;
  offset = [].concat(offset);
  targetOffset = [].concat(targetOffset);
  overflow = overflow || {};
  var newOverflowCfg = {};
  var fail = 0;
  // 当前节点可以被放置的显示区域
  var visibleRect = Object(__WEBPACK_IMPORTED_MODULE_2__getVisibleRectForElement__["a" /* default */])(source);
  // 当前节点所占的区域, left/top/width/height
  var elRegion = Object(__WEBPACK_IMPORTED_MODULE_4__getRegion__["a" /* default */])(source);
  // 参照节点所占的区域, left/top/width/height
  var refNodeRegion = Object(__WEBPACK_IMPORTED_MODULE_4__getRegion__["a" /* default */])(target);
  // 将 offset 转换成数值，支持百分比
  normalizeOffset(offset, elRegion);
  normalizeOffset(targetOffset, refNodeRegion);
  // 当前节点将要被放置的位置
  var elFuturePos = Object(__WEBPACK_IMPORTED_MODULE_5__getElFuturePos__["a" /* default */])(elRegion, refNodeRegion, points, offset, targetOffset);
  // 当前节点将要所处的区域
  var newElRegion = __WEBPACK_IMPORTED_MODULE_0__utils__["a" /* default */].merge(elRegion, elFuturePos);

  var isTargetNotOutOfVisible = !isOutOfVisibleRect(target);
  var refNodeOffset = __WEBPACK_IMPORTED_MODULE_0__utils__["a" /* default */].merge(refNodeRegion, Object(__WEBPACK_IMPORTED_MODULE_6__getAlignOffset__["a" /* default */])(refNodeRegion, points[1]));

  var Xregion = void 0;
  var YRegion = void 0;
  var xRefPoint = points[0].charAt(1);
  // TODO if visibleRect.xx < refNodeOffset.left ??
  if (xRefPoint === 'c') {
    Xregion = __WEBPACK_IMPORTED_MODULE_0__utils__["a" /* default */].merge(visibleRect, {
      left: refNodeOffset.left - elRegion.width / 2
    });
  } else {
    Xregion = __WEBPACK_IMPORTED_MODULE_0__utils__["a" /* default */].merge(visibleRect, _defineProperty({}, xRefPoint === 'l' ? 'left' : 'right', refNodeOffset.left + offset[0]));
  }

  var yRefPoint = points[0].charAt(0);
  if (yRefPoint === 'c') {
    YRegion = __WEBPACK_IMPORTED_MODULE_0__utils__["a" /* default */].merge(visibleRect, {
      top: refNodeOffset.top - elRegion.height / 2
    });
  } else {
    YRegion = __WEBPACK_IMPORTED_MODULE_0__utils__["a" /* default */].merge(visibleRect, _defineProperty({}, yRefPoint === 't' ? 'top' : 'bottom', refNodeOffset.top + offset[1]));
  }

  var realXRegion = Xregion;
  var realYRegion = YRegion;
  // 如果可视区域不能完全放置当前节点时允许调整
  if (visibleRect && (overflow.adjustX || overflow.adjustY) && isTargetNotOutOfVisible) {
    if (overflow.adjustX) {
      // 如果横向不能放下
      if (isFailX(elFuturePos, elRegion, visibleRect)) {
        // 对齐位置反下
        var newPoints = flip(points, /[lr]/ig, {
          l: 'r',
          r: 'l'
        });
        // 偏移量也反下
        var newOffset = flipOffset(offset, 0);
        var newTargetOffset = flipOffset(targetOffset, 0);
        var newElFuturePos = Object(__WEBPACK_IMPORTED_MODULE_5__getElFuturePos__["a" /* default */])(elRegion, refNodeRegion, newPoints, newOffset, newTargetOffset);

        var XregionReversal = __WEBPACK_IMPORTED_MODULE_0__utils__["a" /* default */].merge(visibleRect, _defineProperty({}, newPoints[0].charAt(1) === 'l' ? 'left' : 'right', Object(__WEBPACK_IMPORTED_MODULE_6__getAlignOffset__["a" /* default */])(refNodeRegion, newPoints[1]).left));
        var canXFlip = xSize(XregionReversal) > xSize(Xregion);
        if (canXFlip && !isCompleteFailX(newElFuturePos, elRegion, visibleRect)) {
          fail = 1;
          points = newPoints;
          offset = newOffset;
          targetOffset = newTargetOffset;
          realXRegion = XregionReversal;
        }
      }
    }

    if (overflow.adjustY) {
      // 如果纵向不能放下
      if (isFailY(elFuturePos, elRegion, visibleRect)) {
        // 对齐位置反下
        var _newPoints = flip(points, /[tb]/ig, {
          t: 'b',
          b: 't'
        });
        // 偏移量也反下
        var _newOffset = flipOffset(offset, 1);
        var _newTargetOffset = flipOffset(targetOffset, 1);
        var _newElFuturePos = Object(__WEBPACK_IMPORTED_MODULE_5__getElFuturePos__["a" /* default */])(elRegion, refNodeRegion, _newPoints, _newOffset, _newTargetOffset);

        var YRegionReversal = __WEBPACK_IMPORTED_MODULE_0__utils__["a" /* default */].merge(visibleRect, _defineProperty({}, _newPoints[0].charAt(0) === 't' ? 'top' : 'bottom', Object(__WEBPACK_IMPORTED_MODULE_6__getAlignOffset__["a" /* default */])(refNodeRegion, _newPoints[1]).top));
        var canYFlip = ySize(YRegionReversal) > ySize(YRegion);

        if (canYFlip && !isCompleteFailY(_newElFuturePos, elRegion, visibleRect)) {
          fail = 1;
          points = _newPoints;
          offset = _newOffset;
          targetOffset = _newTargetOffset;
          realYRegion = YRegionReversal;
        }
      }
    }

    // 如果失败，重新计算当前节点将要被放置的位置
    if (fail) {
      elFuturePos = Object(__WEBPACK_IMPORTED_MODULE_5__getElFuturePos__["a" /* default */])(elRegion, refNodeRegion, points, offset, targetOffset);
      __WEBPACK_IMPORTED_MODULE_0__utils__["a" /* default */].mix(newElRegion, elFuturePos);
    }

    newOverflowCfg.resizeHeight = overflow.resizeHeight;
    newOverflowCfg.resizeWidth = overflow.resizeWidth;
    // 检查反下后的位置是否可以放下了
    // 如果仍然放不下只有指定了可以调整当前方向才调整
    newOverflowCfg.adjustX = overflow.adjustX && isFailX(elFuturePos, elRegion, realXRegion);

    newOverflowCfg.adjustY = overflow.adjustY && isFailY(elFuturePos, elRegion, realYRegion);

    // 确实要调整，甚至可能会调整高度宽度
    if (newOverflowCfg.adjustX || newOverflowCfg.adjustY) {
      newElRegion = Object(__WEBPACK_IMPORTED_MODULE_3__adjustForViewport__["a" /* default */])(elFuturePos, elRegion, realXRegion, realYRegion, newOverflowCfg);
    }
  }

  // need judge to in case set fixed with in css on height auto element
  if (newElRegion.width !== elRegion.width) {
    __WEBPACK_IMPORTED_MODULE_0__utils__["a" /* default */].css(source, 'width', __WEBPACK_IMPORTED_MODULE_0__utils__["a" /* default */].width(source) + newElRegion.width - elRegion.width);
  }

  if (newElRegion.height !== elRegion.height) {
    __WEBPACK_IMPORTED_MODULE_0__utils__["a" /* default */].css(source, 'height', __WEBPACK_IMPORTED_MODULE_0__utils__["a" /* default */].height(source) + newElRegion.height - elRegion.height);
  }

  // https://github.com/kissyteam/kissy/issues/190
  // 相对于屏幕位置没变，而 left/top 变了
  // 例如 <div 'relative'><el absolute></div>
  __WEBPACK_IMPORTED_MODULE_0__utils__["a" /* default */].offset(source, {
    left: newElRegion.left,
    top: newElRegion.top
  }, {
    useCssRight: align.useCssRight,
    useCssBottom: align.useCssBottom,
    useCssTransform: align.useCssTransform
  });

  return {
    points: points,
    offset: offset,
    targetOffset: targetOffset,
    overflow: newOverflowCfg
  };
}

domAlign.__getOffsetParent = __WEBPACK_IMPORTED_MODULE_1__getOffsetParent__["a" /* default */];

domAlign.__getVisibleRectForElement = __WEBPACK_IMPORTED_MODULE_2__getVisibleRectForElement__["a" /* default */];

/* harmony default export */ __webpack_exports__["default"] = (domAlign);
/**
 *  2012-04-26 yiminghe@gmail.com
 *   - 优化智能对齐算法
 *   - 慎用 resizeXX
 *
 *  2011-07-13 yiminghe@gmail.com note:
 *   - 增加智能对齐，以及大小调整选项
 **/

/***/ }),
/* 510 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = getTransformName;
/* harmony export (immutable) */ __webpack_exports__["e"] = setTransitionProperty;
/* harmony export (immutable) */ __webpack_exports__["c"] = getTransitionProperty;
/* harmony export (immutable) */ __webpack_exports__["b"] = getTransformXY;
/* harmony export (immutable) */ __webpack_exports__["d"] = setTransformXY;
var vendorPrefix = void 0;

var jsCssMap = {
  Webkit: '-webkit-',
  Moz: '-moz-',
  // IE did it wrong again ...
  ms: '-ms-',
  O: '-o-'
};

function getVendorPrefix() {
  if (vendorPrefix !== undefined) {
    return vendorPrefix;
  }
  vendorPrefix = '';
  var style = document.createElement('p').style;
  var testProp = 'Transform';
  for (var key in jsCssMap) {
    if (key + testProp in style) {
      vendorPrefix = key;
    }
  }
  return vendorPrefix;
}

function getTransitionName() {
  return getVendorPrefix() ? getVendorPrefix() + 'TransitionProperty' : 'transitionProperty';
}

function getTransformName() {
  return getVendorPrefix() ? getVendorPrefix() + 'Transform' : 'transform';
}

function setTransitionProperty(node, value) {
  var name = getTransitionName();
  if (name) {
    node.style[name] = value;
    if (name !== 'transitionProperty') {
      node.style.transitionProperty = value;
    }
  }
}

function setTransform(node, value) {
  var name = getTransformName();
  if (name) {
    node.style[name] = value;
    if (name !== 'transform') {
      node.style.transform = value;
    }
  }
}

function getTransitionProperty(node) {
  return node.style.transitionProperty || node.style[getTransitionName()];
}

function getTransformXY(node) {
  var style = window.getComputedStyle(node, null);
  var transform = style.getPropertyValue('transform') || style.getPropertyValue(getTransformName());
  if (transform && transform !== 'none') {
    var matrix = transform.replace(/[^0-9\-.,]/g, '').split(',');
    return { x: parseFloat(matrix[12] || matrix[4], 0), y: parseFloat(matrix[13] || matrix[5], 0) };
  }
  return {
    x: 0,
    y: 0
  };
}

var matrix2d = /matrix\((.*)\)/;
var matrix3d = /matrix3d\((.*)\)/;

function setTransformXY(node, xy) {
  var style = window.getComputedStyle(node, null);
  var transform = style.getPropertyValue('transform') || style.getPropertyValue(getTransformName());
  if (transform && transform !== 'none') {
    var arr = void 0;
    var match2d = transform.match(matrix2d);
    if (match2d) {
      match2d = match2d[1];
      arr = match2d.split(',').map(function (item) {
        return parseFloat(item, 10);
      });
      arr[4] = xy.x;
      arr[5] = xy.y;
      setTransform(node, 'matrix(' + arr.join(',') + ')');
    } else {
      var match3d = transform.match(matrix3d)[1];
      arr = match3d.split(',').map(function (item) {
        return parseFloat(item, 10);
      });
      arr[12] = xy.x;
      arr[13] = xy.y;
      setTransform(node, 'matrix3d(' + arr.join(',') + ')');
    }
  } else {
    setTransform(node, 'translateX(' + xy.x + 'px) translateY(' + xy.y + 'px) translateZ(0)');
  }
}

/***/ }),
/* 511 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils__ = __webpack_require__(36);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__getOffsetParent__ = __webpack_require__(244);



/**
 * 获得元素的显示部分的区域
 */
function getVisibleRectForElement(element) {
  var visibleRect = {
    left: 0,
    right: Infinity,
    top: 0,
    bottom: Infinity
  };
  var el = Object(__WEBPACK_IMPORTED_MODULE_1__getOffsetParent__["a" /* default */])(element);
  var scrollX = void 0;
  var scrollY = void 0;
  var winSize = void 0;
  var doc = __WEBPACK_IMPORTED_MODULE_0__utils__["a" /* default */].getDocument(element);
  var win = doc.defaultView || doc.parentWindow;
  var body = doc.body;
  var documentElement = doc.documentElement;

  // Determine the size of the visible rect by climbing the dom accounting for
  // all scrollable containers.
  while (el) {
    // clientWidth is zero for inline block elements in ie.
    if ((navigator.userAgent.indexOf('MSIE') === -1 || el.clientWidth !== 0) &&
    // body may have overflow set on it, yet we still get the entire
    // viewport. In some browsers, el.offsetParent may be
    // document.documentElement, so check for that too.
    el !== body && el !== documentElement && __WEBPACK_IMPORTED_MODULE_0__utils__["a" /* default */].css(el, 'overflow') !== 'visible') {
      var pos = __WEBPACK_IMPORTED_MODULE_0__utils__["a" /* default */].offset(el);
      // add border
      pos.left += el.clientLeft;
      pos.top += el.clientTop;
      visibleRect.top = Math.max(visibleRect.top, pos.top);
      visibleRect.right = Math.min(visibleRect.right,
      // consider area without scrollBar
      pos.left + el.clientWidth);
      visibleRect.bottom = Math.min(visibleRect.bottom, pos.top + el.clientHeight);
      visibleRect.left = Math.max(visibleRect.left, pos.left);
    } else if (el === body || el === documentElement) {
      break;
    }
    el = Object(__WEBPACK_IMPORTED_MODULE_1__getOffsetParent__["a" /* default */])(el);
  }

  // Clip by window's viewport.
  scrollX = __WEBPACK_IMPORTED_MODULE_0__utils__["a" /* default */].getWindowScrollLeft(win);
  scrollY = __WEBPACK_IMPORTED_MODULE_0__utils__["a" /* default */].getWindowScrollTop(win);
  visibleRect.left = Math.max(visibleRect.left, scrollX);
  visibleRect.top = Math.max(visibleRect.top, scrollY);
  winSize = {
    width: __WEBPACK_IMPORTED_MODULE_0__utils__["a" /* default */].viewportWidth(win),
    height: __WEBPACK_IMPORTED_MODULE_0__utils__["a" /* default */].viewportHeight(win)
  };
  visibleRect.right = Math.min(visibleRect.right, scrollX + winSize.width);
  visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + winSize.height);
  return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null;
}

/* harmony default export */ __webpack_exports__["a"] = (getVisibleRectForElement);

/***/ }),
/* 512 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils__ = __webpack_require__(36);


function adjustForViewport(elFuturePos, elRegion, xRect, yRect, overflow) {
  var pos = __WEBPACK_IMPORTED_MODULE_0__utils__["a" /* default */].clone(elFuturePos);
  var size = {
    width: elRegion.width,
    height: elRegion.height
  };

  if (overflow.adjustX && pos.left < xRect.left) {
    pos.left = xRect.left;
  }

  // Left edge inside and right edge outside viewport, try to resize it.
  if (overflow.resizeWidth && pos.left >= xRect.left && pos.left + size.width > xRect.right) {
    size.width -= pos.left + size.width - xRect.right;
  }

  // Right edge outside viewport, try to move it.
  if (overflow.adjustX && pos.left + size.width > xRect.right) {
    // 保证左边界和可视区域左边界对齐
    pos.left = Math.max(xRect.right - size.width, xRect.left);
  }

  // Top edge outside viewport, try to move it.
  if (overflow.adjustY && pos.top < yRect.top) {
    pos.top = yRect.top;
  }

  // Top edge inside and bottom edge outside viewport, try to resize it.
  if (overflow.resizeHeight && pos.top >= yRect.top && pos.top + size.height > yRect.bottom) {
    size.height -= pos.top + size.height - yRect.bottom;
  }

  // Bottom edge outside viewport, try to move it.
  if (overflow.adjustY && pos.top + size.height > yRect.bottom) {
    // 保证上边界和可视区域上边界对齐
    pos.top = Math.max(yRect.bottom - size.height, yRect.top);
  }

  return __WEBPACK_IMPORTED_MODULE_0__utils__["a" /* default */].mix(pos, size);
}

/* harmony default export */ __webpack_exports__["a"] = (adjustForViewport);

/***/ }),
/* 513 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils__ = __webpack_require__(36);


function getRegion(node) {
  var offset = void 0;
  var w = void 0;
  var h = void 0;
  if (!__WEBPACK_IMPORTED_MODULE_0__utils__["a" /* default */].isWindow(node) && node.nodeType !== 9) {
    offset = __WEBPACK_IMPORTED_MODULE_0__utils__["a" /* default */].offset(node);
    w = __WEBPACK_IMPORTED_MODULE_0__utils__["a" /* default */].outerWidth(node);
    h = __WEBPACK_IMPORTED_MODULE_0__utils__["a" /* default */].outerHeight(node);
  } else {
    var win = __WEBPACK_IMPORTED_MODULE_0__utils__["a" /* default */].getWindow(node);
    offset = {
      left: __WEBPACK_IMPORTED_MODULE_0__utils__["a" /* default */].getWindowScrollLeft(win),
      top: __WEBPACK_IMPORTED_MODULE_0__utils__["a" /* default */].getWindowScrollTop(win)
    };
    w = __WEBPACK_IMPORTED_MODULE_0__utils__["a" /* default */].viewportWidth(win);
    h = __WEBPACK_IMPORTED_MODULE_0__utils__["a" /* default */].viewportHeight(win);
  }
  offset.width = w;
  offset.height = h;
  return offset;
}

/* harmony default export */ __webpack_exports__["a"] = (getRegion);

/***/ }),
/* 514 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__getAlignOffset__ = __webpack_require__(245);


function getElFuturePos(elRegion, refNodeRegion, points, offset, targetOffset) {
  var xy = void 0;
  var diff = void 0;
  var p1 = void 0;
  var p2 = void 0;

  xy = {
    left: elRegion.left,
    top: elRegion.top
  };

  p1 = Object(__WEBPACK_IMPORTED_MODULE_0__getAlignOffset__["a" /* default */])(refNodeRegion, points[1]);
  p2 = Object(__WEBPACK_IMPORTED_MODULE_0__getAlignOffset__["a" /* default */])(elRegion, points[0]);

  diff = [p2.left - p1.left, p2.top - p1.top];

  return {
    left: xy.left - diff[0] + offset[0] - targetOffset[0],
    top: xy.top - diff[1] + offset[1] - targetOffset[1]
  };
}

/* harmony default export */ __webpack_exports__["a"] = (getElFuturePos);

/***/ }),
/* 515 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var autoAdjustOverflow = {
  adjustX: 0,
  adjustY: 0
};

module.exports = {
  left: {
    points: ['cr', 'cl'],
    overflow: autoAdjustOverflow,
    offset: [-4, 0],
    targetOffset: [0, 0]
  },
  right: {
    points: ['cl', 'cr'],
    overflow: autoAdjustOverflow,
    offset: [4, 0],
    targetOffset: [0, 0]
  },
  top: {
    points: ['bc', 'tc'],
    overflow: autoAdjustOverflow,
    offset: [0, -4],
    targetOffset: [0, 0]
  },
  bottom: {
    points: ['tc', 'bc'],
    overflow: autoAdjustOverflow,
    offset: [0, 4],
    targetOffset: [0, 0]
  },
  topLeft: {
    points: ['bl', 'tl'],
    overflow: autoAdjustOverflow,
    offset: [0, -4],
    targetOffset: [0, 0]
  },
  leftTop: {
    points: ['tr', 'tl'],
    overflow: autoAdjustOverflow,
    offset: [-4, 0],
    targetOffset: [0, 0]
  },
  topRight: {
    points: ['br', 'tr'],
    overflow: autoAdjustOverflow,
    offset: [0, -4],
    targetOffset: [0, 0]
  },
  rightTop: {
    points: ['tl', 'tr'],
    overflow: autoAdjustOverflow,
    offset: [4, 0],
    targetOffset: [0, 0]
  },
  bottomRight: {
    points: ['tr', 'br'],
    overflow: autoAdjustOverflow,
    offset: [0, 4],
    targetOffset: [0, 0]
  },
  rightBottom: {
    points: ['bl', 'br'],
    overflow: autoAdjustOverflow,
    offset: [4, 0],
    targetOffset: [0, 0]
  },
  bottomLeft: {
    points: ['tl', 'bl'],
    overflow: autoAdjustOverflow,
    offset: [0, 4],
    targetOffset: [0, 0]
  },
  leftBottom: {
    points: ['br', 'bl'],
    overflow: autoAdjustOverflow,
    offset: [-4, 0],
    targetOffset: [0, 0]
  }
};

/***/ }),
/* 516 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Component = __webpack_require__(1);
var template = __webpack_require__(517);
var _ = __webpack_require__(2);

/**
 * @class KLMessage
 * @extend Component
 * @param {object}      [options.data]                      = 绑定属性
 * @param {string}      [options.data.type]                 => 消息类型，可选参数：`success`、`warning`、`notice`、`error`
 * @param {string}      [options.data.class]                => 补充`class`
 * @param {string}      [options.data.title]                => 补充`title`
 * @param {string}      [options.data.addClose]                => 补充`addClose`  添加了该字段, 为message添加了关闭按钮
 */

var KLMessage = Component.extend({
  name: 'kl-message',
  template: template,
  config: function config() {
    _.extend(this.data, {
      type: '',
      addClose: false,
      title: '',
      visible: true
    });
    this.supr();
  },
  init: function init() {
    this.supr();
  },
  close: function close(result) {
    this.data.visible = Boolean(result);
    this.$emit('close');
    this.$update();
  }
});
module.exports = KLMessage;

/***/ }),
/* 517 */
/***/ (function(module, exports) {

module.exports = "<div class=\"kl-message kl-message--{type} {class}\" r-hide={!visible} r-animation=\"on: enter; class: animated fadeIn fast; on: leave; class: animated fadeOut fast;\">\n    <kl-icon type={type} class=\"kl-message__icon {!!title ? 'kl-message__icon--large' : ''}\" />\n    <div class=\"{!!title ? 'kl-message__box' : ''}\" >\n        <p class=\"kl-message__title\" r-hide={!title} >{title}</p>\n        <span class=\"kl-message__content {!!addClose ? 'kl-message__operation': ''}\">\n            {#inc this.$body}\n        </span>\n    </div>\n    <a r-hide={!addClose} class=\"kl-message__remove {!!title ? 'kl-message__remove--large' : ''}\" on-click={this.close(false)}><kl-icon type=\"cross\" /></a>\n</div>"

/***/ }),
/* 518 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * @file KLBadge  文本
 * @author   Cody Chan<int64ago@gmail.com>
 * ------------------------------------------------------------
 */

var Component = __webpack_require__(1);
var template = __webpack_require__(519);
var _ = __webpack_require__(2);

/**
 * @class KLBadge
 * @extend Component
 * @param {object}      [options.data]                = 绑定属性
 * @param {string}      [options.data.text=--]        <=> 内容
 * @param {boolean}     [options.data.circle=false]   => 是否圆角
 * @param {string}      [options.data.type=default]   => 文本样式
 */
var KLBadge = Component.extend({
  name: 'kl-badge',
  template: template,
  config: function config() {
    _.extend(this.data, {
      text: '--',
      // default/primary/info/success/warning/error
      type: 'default',
      circle: false
    });
    this.supr();
  },
  onClick: function onClick(e) {
    this.$emit('click', e);
  }
});

module.exports = KLBadge;

/***/ }),
/* 519 */
/***/ (function(module, exports) {

module.exports = "<span class=\"kl-badge kl-badge--{type} kl-badge--{circle ? 'number' : ''}\">{text}</span>"

/***/ }),
/* 520 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * @file KLProgress  进度条
 * @author   sensen(rainforest92@126.com)
 * ------------------------------------------------------------
 */

var Component = __webpack_require__(1);
var template = __webpack_require__(521);
var _ = __webpack_require__(2);

/**
 * @class KLProgress
 * @extend Component
 * @param {object}              [options.data]                    = 绑定属性
 * @param {string}              [options.data.class]              => 补充class
 * @param {number}              [options.data.percent=36]         => 百分比
 * @param {string}              [options.data.size=null]          => 进度条的尺寸, 可选值sm/lg
 * @param {boolean}             [options.data.visible=true]       => 是否显示
 * @param {boolean}             [options.data.insideText=true]    => 进度是否在进度条上显示,size=lg时才生效;
 * @param {string}             [options.data.color]               => 进度条的颜色
 */
var KLProgress = Component.extend({
  name: 'kl-progress',
  template: template,
  config: function config() {
    _.extend(this.data, {
      percent: 36,
      size: ''
    });
    this.supr();
  }
});

module.exports = KLProgress;

/***/ }),
/* 521 */
/***/ (function(module, exports) {

module.exports = "<div class=\"kl-progress {class}\" r-hide={!visible}>\n  <div class=\"kl-progress-wrap kl-progress-wrap--{@(size)}\" >\n    <div class=\"kl-progress-wrap__bar\" style=\"width: {percent}%; background-color: {color};\">\n      {#if insideText && size == 'lg'}{percent}%{/if}\n    </div>\n  </div>\n  {#if this.$body}\n  <div class=\"kl-progress-slot\">\n    {#inc this.$body}\n  </div>\n  {/if}\n</div>"

/***/ }),
/* 522 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * @file KLLoading  加载中
 * @author   sensen(rainforest92@126.com)
 */

var Component = __webpack_require__(1);
var template = __webpack_require__(523);
var _ = __webpack_require__(2);

/**
 * @class KLLoading
 * @param {object}        [options.data]                    = 绑定属性
 * @param {boolean}       [options.data.static=false]       => 是否嵌入文档流
 * @param {boolean}       [options.data.disabled=false]     => 是否禁用, 禁用后调用show和hide则无效
 * @param {boolean}       [options.data.visible=false]      => 是否显示
 * @param {string}        [options.data.class]              => 补充class
 * @param {string}        [options.data.el]                 => 设置对话框要嵌入的父级元素，默认为document.body
 */
var KLLoading = Component.extend({
  name: 'kl-loading',
  template: template,
  config: function config() {
    _.extend(this.data, {
      static: false,
      visible: false
    });
    this.supr();
  },
  init: function init() {
    this.supr();

    // 如果不是内嵌组件，则嵌入到data.el或document.body中
    if (this.$root === this) {
      this.$inject(this.data.el || document.body);
    }
  },

  /**
     * @method KLLoading#show() 显示组件
     * @return {void}
     */
  show: function show() {
    if (this.data.disabled) return;

    this.data.visible = true;
    this.$update();
  },

  /**
     * @method KLLoading#hide() 隐藏组件
     * @return {void}
     */
  hide: function hide() {
    if (this.data.disabled) return;

    this.data.visible = false;
    this.$update();
  }
});

var loading = new KLLoading();
/**
 * @param loading 内部静态实例, 使用NEKUI.KLLoading的静态方法时,内部使用的是这个实例
 * @static
 */
KLLoading.loading = loading;

/**
 * @static
 */
KLLoading.show = function () {
  loading.show();
};

/**
 * @static
 */
KLLoading.hide = function () {
  loading.hide();
};

module.exports = KLLoading;

/***/ }),
/* 523 */
/***/ (function(module, exports) {

module.exports = "<div class=\"kl-loading {class}\" r-class={ {'kl-loading--static': static, 'kl-loading--fixed': !static} } r-hide={!visible}\n  r-animation=\"on:enter;class:animated fadeIn; on:leave;class:animated fadeOut\">\n    <svg class=\"kl-loading__circular\" viewBox=\"25 25 50 50\">\n      <circle class=\"kl-loading__path\" cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" stroke-width=\"2\" stroke-miterlimit=\"10\"/>\n    </svg>\n    {#if this.$body}\n      {#inc this.$body}\n    {/if}\n</div>"

/***/ }),
/* 524 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _assign = __webpack_require__(32);

var _assign2 = _interopRequireDefault(_assign);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @file KLTooltip     提示
 * @author   ziane(zianecui@gmail.com)
 * ------------------------------------------------------------
 */

var dom = __webpack_require__(11).dom;

var Component = __webpack_require__(1);
var template = __webpack_require__(525);
__webpack_require__(243);

var TipPopUp = Component.extend({
  template: template,
  config: function config(data) {
    this.defaults({
      isShow: true
    });
    this.supr(data);
  },
  init: function init() {
    if (this.$root === this) {
      this.$inject(document.body);
    }
    this.data.element = dom.element(this);
  },
  getElement: function getElement() {
    return this.data.element;
  }
});

/**
 * @class KLTooltip
 * @extend Component
 * @param {object}          [options.data]                  = 绑定属性
 * @param {string}          [options.data.tip]              => 文字提示
 * @param {string}          [options.data.class]              => 增加class
 * @param {string}          [options.data.placement=top]    => tips展示出的位置：top left right bottom topLeft topRight bottomLeft bottomRight leftTop leftBottom rightTop rightBottom
 */
var KLTooltip = Component.extend({
  name: 'kl-tooltip',
  template: '<trigger ref="trigger" placement={placement} getInstance={@(this.getInstance.bind(this))} destroyOnHide>{#inc this.$body}</trigger>',
  config: function config(data) {
    this.defaults({
      tip: '',
      placement: 'top',
      class: ''
    });

    this.supr(data);
  },
  destroy: function destroy() {
    if (this.data.instance) {
      this.data.instance.destroy();
    }
    this.supr();
  },
  getInstance: function getInstance() {
    var self = this;
    var data = (0, _assign2.default)({}, this.data);
    delete data.instance;
    if (!this.data.instance) {
      var instance = new TipPopUp({
        data: data
      });

      instance.$on('destroy', function () {
        self.$refs.trigger.data.isShow = false;
        self.data.instance = null;
      });

      this.data.instance = instance;
    }
    return this.data.instance;
  }
});

module.exports = KLTooltip;

/***/ }),
/* 525 */
/***/ (function(module, exports) {

module.exports = "<div class=\"kl-tooltip kl-tooltip--{placement} animated {class}\" r-hide=\"{!isShow}\" r-animation=\"on:enter;class:fadeInY;on:leave;class:fadeOutY\">\n\t<div class=\"kl-tooltip__arrow\"></div>\n\t<p class=\"kl-tooltip__inner\">{#inc tip}</p>\n</div>\n"

/***/ }),
/* 526 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * @file KLIcon     图标
 * @author   zianecui@gmail.com
 */

var Component = __webpack_require__(1);
var template = __webpack_require__(527);
var _ = __webpack_require__(2);

/**
 * @class KLIcon
 * @extend Component
 * @param {object}          [options.data]                        = 绑定属性
 * @param {string}          [options.data.class]                  => 补充class
 * @param {string}          [options.data.type]                  => 补充class
 * @param {string}          [options.data.fontSize]                  => 设置图标大小
 * @param {string}          [options.data.color]                  => 设置图标颜色
 */
var KLIcon = Component.extend({
  name: 'kl-icon',
  template: template,
  config: function config() {
    _.extend(this.data, {
      type: '',
      fontSize: '',
      color: ''
    });
    this.supr();
  },
  onClick: function onClick(e) {
    this.$emit('click', e);
  }
});

module.exports = KLIcon;

/***/ }),
/* 527 */
/***/ (function(module, exports) {

module.exports = "<i class=\"kl-icon kl-icon--{type} {class}\" style=\"font-size: {fontSize}px;color: {color}\" on-click=\"{this.onClick($event)}\"></i>\n"

/***/ }),
/* 528 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _typeof2 = __webpack_require__(45);

var _typeof3 = _interopRequireDefault(_typeof2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @file KLLocaleProvider     国际化
 */
var Component = __webpack_require__(1);
var ajax = __webpack_require__(46);
var _ = __webpack_require__(2);

/**
 * @class KLLocaleProvider
 * @extend Component
 * @param {object}          [options.data]                       = 绑定属性
 * @param {string}          [options.data.lang]                  => 设置语言，默认“cn”
 * @param {string}          [options.data.api]                   => 设置获取语言包的url
 */
var KLLocaleProvider = Component.extend({
  name: 'kl-locale-provider',
  template: '{#if ready}{#inc this.$body}{/if}',
  config: function config() {
    this.defaults({
      lang: 'cn'
    });

    this._initLang();
  },
  _initLang: function _initLang() {
    var self = this;
    var _data = this.data,
        api = _data.api,
        lang = _data.lang;


    KLLocaleProvider.lang = lang;
    ajax.get(api + '?lang=' + lang, function (json) {
      KLLocaleProvider.locale[lang] = json[lang] || json;
      self.$update('ready', true);

      self.$emit('ready');
    });
  },

  /**
   * @method KLLocaleProvider#reload 切换语言，重新初始化
   * @param {string} lang 设置语言
   */
  reload: function reload(lang) {
    this.data.lang = lang;
    this._initLang();
  }
});
/**
* @param {string} lang 语言种类
* @static
*/
KLLocaleProvider.lang = 'cn';

/**
 * @param {object} locale 语言包
 * @static
 */

KLLocaleProvider.locale = {};

var RE_NARGS = /(%|)\{([0-9a-zA-Z_]+)\}/g;
KLLocaleProvider._format = function (str) {
  var args = {};
  if ((arguments.length <= 1 ? 0 : arguments.length - 1) === 1 && (0, _typeof3.default)(arguments.length <= 1 ? undefined : arguments[1]) === 'object') {
    args = arguments.length <= 1 ? undefined : arguments[1];
  } else {
    args = {};
  }

  if (!args || !args.hasOwnProperty) {
    args = {};
  }

  return str.replace(RE_NARGS, function (match, prefix, i, index) {
    if (str[index - 1] === '{' && str[index + match.length] === '}') {
      return i;
    }
    var result = _.hasOwn(args, i) ? args[i] : match;
    if (_.isNil(result)) {
      return '';
    }

    return result;
  });
};
KLLocaleProvider._interpolate = function (key, args) {
  var lang = KLLocaleProvider.lang;
  var map = KLLocaleProvider.locale[lang] || {};

  var val = map[key] || key;

  // Check for the existance of links within the translated string
  if (val.indexOf('@:') >= 0) {
    // Match all the links within the local
    // We are going to replace each of
    // them with its translation
    var matches = val.match(/(@:[\w|.]+)/g);
    for (var i = 0; i < matches.length; i += 1) {
      var link = matches[i];
      // Remove the leading @:
      var linkPlaceholder = link.substr(2);
      // Translate the link
      var translatedstring = KLLocaleProvider._interpolate(linkPlaceholder, args);
      // Replace the link with the translated string
      val = val.replace(link, translatedstring);
    }
  }
  return !args ? val : KLLocaleProvider._format(val, args);
};
/**
 * @param {string} key 翻译key值
 * @param {object} params 变量值
 * @static
 */
KLLocaleProvider.translate = function (key, params) {
  return KLLocaleProvider._interpolate(key, params);
};

module.exports = KLLocaleProvider;

/***/ }),
/* 529 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * ------------------------------------------------------------
 * @file KLDraggable  拖拽
 * @author   sensen(rainforest92@126.com)
 * ------------------------------------------------------------
 */

var Component = __webpack_require__(1);
var _ = __webpack_require__(2);
var dragdrop = __webpack_require__(530);

/**
 * @class KLDraggable
 * @extend Component
 * @param {object}                                   [options.data]                       =  绑定属性
 * @param {object}                                   [options.data.data]                  => 拖拽时需要传递的数据
 * @param {string/Dragable.Proxy/Element/function}   [options.data.proxy]                 @=> 拖拽代理，即拖拽时显示的元素。默认值为`clone`，拖拽时拖起自身的一个拷贝；当值为`self`，拖拽时直接拖起自身。也可以用`<draggable.proxy>`自定义代理，或直接传入一个元素或函数。其他值表示不使用拖拽代理。
 * @param {string}                                   [options.data.direction=all]         => 拖拽代理可以移动的方向，`all`为任意方向，`horizontal`为水平方向，`vertical`为垂直方向
 * @param {boolean}                                  [options.data.disabled=false]        => 是否禁用
 * @param {string}                                   [options.data.class=is-draggable]     => 可拖拽时（即disabled=false）给元素附加此class
 * @param {string}                                   [options.data.dragClass=is-drag]      => 拖拽该元素时给元素附加此class
 */
var KLDraggable = Component.extend({
  name: 'kl-draggable',
  template: '{#inc this.$body}',
  config: function config() {
    _.extend(this.data, {
      data: null,
      proxy: 'clone',
      direction: 'all',
      class: 'is-draggable',
      dragClass: 'is-drag'
    });
    this.supr();

    this._onMouseDown = this._onMouseDown.bind(this);
    this._onBodyMouseMove = this._onBodyMouseMove.bind(this);
    this._onBodyMouseUp = this._onBodyMouseUp.bind(this);
    this.cancel = this.cancel.bind(this);
  },
  init: function init() {
    var _this = this;

    var inner = _.dom.element(this);
    _.dom.on(inner, 'mousedown', this._onMouseDown);
    this.supr();

    this.$watch('disabled', function (newValue) {
      if (newValue) {
        _.dom.delClass(inner, _this.data.class);
      } else {
        _.dom.addClass(inner, _this.data.class);
      }
    });
  },
  _getProxy: function _getProxy() {
    if (typeof this.data.proxy === 'function') {
      return this.data.proxy();
    } else if (this.data.proxy instanceof window.Element) {
      return this.data.proxy;
    } else if (this.data.proxy instanceof KLDraggable.Proxy) {
      var proxy = _.dom.element(this.data.proxy);
      var dimension = _.dom.getDimension(_.dom.element(this));
      this._initProxy(proxy, dimension);
      document.body.appendChild(proxy);
      return proxy;
    } else if (this.data.proxy === 'clone') {
      var self = _.dom.element(this);
      var _dimension = _.dom.getDimension(self);
      var _proxy = self.cloneNode(true);
      this._initProxy(_proxy, _dimension);
      self.parentElement.appendChild(_proxy);
      return _proxy;
    } else if (this.data.proxy === 'self') {
      var _proxy2 = _.dom.element(this);
      var _dimension2 = _.dom.getDimension(_proxy2);
      this._initProxy(_proxy2, _dimension2);
      return _proxy2;
    }
  },
  _initProxy: function _initProxy(proxy, dimension) {
    proxy.style.left = dimension.left + 'px';
    proxy.style.top = dimension.top + 'px';
    proxy.style.zIndex = '2000';
    proxy.style.position = 'fixed';
    proxy.style.display = '';
  },
  _onMouseDown: function _onMouseDown($event) {
    if (this.data.disabled) {
      return;
    }
    $event.preventDefault();
    _.dom.on(document, 'mousemove', this._onBodyMouseMove);
    _.dom.on(document, 'mouseup', this._onBodyMouseUp);
  },
  _onBodyMouseMove: function _onBodyMouseMove($event) {
    var e = $event.event;
    $event.preventDefault();
    if (dragdrop.dragging === false) {
      _.extend(dragdrop, {
        dragging: true,
        data: this.data.data,
        proxy: this._getProxy(),
        screenX: e.screenX,
        screenY: e.screenY,
        clientX: e.clientX,
        clientY: e.clientY,
        pageX: e.pageX,
        pageY: e.pageY,
        movementX: 0,
        movementY: 0,
        droppable: undefined
      }, true);

      this._dragStart();
    } else {
      _.extend(dragdrop, {
        screenX: e.screenX,
        screenY: e.screenY,
        clientX: e.clientX,
        clientY: e.clientY,
        pageX: e.pageX,
        pageY: e.pageY,
        movementX: e.screenX - dragdrop.screenX,
        movementY: e.screenY - dragdrop.screenY
      }, true);

      if (dragdrop.proxy) {
        if (this.data.direction === 'all' || this.data.direction === 'horizontal') {
          dragdrop.proxy.style.left = dragdrop.proxy.offsetLeft + dragdrop.movementX + 'px';
        }
        if (this.data.direction === 'all' || this.data.direction === 'vertical') {
          dragdrop.proxy.style.top = dragdrop.proxy.offsetTop + dragdrop.movementY + 'px';
        }
      }

      this._drag();
      if (!dragdrop.dragging) {
        return;
      }

      // Drop
      var pointElement = null;
      if (dragdrop.proxy) {
        dragdrop.proxy.style.display = 'none';
        pointElement = document.elementFromPoint(e.clientX, e.clientY);
        dragdrop.proxy.style.display = '';
      } else {
        pointElement = document.elementFromPoint(e.clientX, e.clientY);
      }

      var pointDroppable = dragdrop.droppables.find(function (droppable) {
        // eslint-disable-line array-callback-return
        var element = pointElement;
        var target = _.dom.element(droppable);
        while (element) {
          if (element === target) {
            return true;
          }
          element = element.parentElement;
        }
      });

      if (dragdrop.droppable !== pointDroppable) {
        dragdrop.droppable && dragdrop.droppable._dragLeave(this);
        if (!dragdrop.dragging) {
          return;
        }
        pointDroppable && pointDroppable._dragEnter(this);
        if (!dragdrop.dragging) {
          return;
        }
        dragdrop.droppable = pointDroppable;
      } else {
        pointDroppable && pointDroppable._dragOver(this);
      }
    }
  },
  _onBodyMouseUp: function _onBodyMouseUp($event) {
    $event.preventDefault();

    dragdrop.droppable && dragdrop.droppable._drop(this);
    this.cancel();
  },
  cancel: function cancel() {
    this._dragEnd();

    _.extend(dragdrop, {
      dragging: false,
      data: null,
      proxy: null,
      screenX: 0,
      screenY: 0,
      clientX: 0,
      clientY: 0,
      pageX: 0,
      pageY: 0,
      movementX: 0,
      movementY: 0,
      droppable: undefined
    }, true);

    _.dom.off(document, 'mousemove', this._onBodyMouseMove);
    _.dom.off(document, 'mouseup', this._onBodyMouseUp);
  },
  _dragStart: function _dragStart() {
    if (dragdrop.proxy) {
      _.dom.addClass(dragdrop.proxy, this.data.dragClass);
    }

    /**
     * @event KLDraggable#dragstart 拖拽开始时触发
     * @property {object} sender 事件发送对象，为当前draggable
     * @property {object} origin 拖拽源，为当前draggable
     * @property {object} source 拖拽起始元素
     * @property {object} proxy 拖拽代理元素
     * @property {object} data 拖拽时需要传递的数据
     * @property {number} screenX 鼠标指针相对于屏幕的水平位置
     * @property {number} screenY 鼠标指针相对于屏幕的垂直位置
     * @property {number} clientX 鼠标指针相对于浏览器的水平位置
     * @property {number} clientY 鼠标指针相对于浏览器的垂直位置
     * @property {number} pageX 鼠标指针相对于页面的水平位置
     * @property {number} pageY 鼠标指针相对于页面的垂直位置
     * @property {number} movementX 鼠标指针水平位置相对于上次操作的偏移量
     * @property {number} movementY 鼠标指针垂直位置相对于上次操作的偏移量
     * @property {function} cancel 取消拖拽操作
     */
    this.$emit('dragstart', _.extend({
      sender: this,
      origin: this,
      source: _.dom.element(this),
      proxy: dragdrop.proxy,
      cancel: this.cancel
    }, dragdrop));
  },
  _drag: function _drag() {
    /**
     * @event KLDraggable#drag 正在拖拽时触发
     * @property {object} sender 事件发送对象，为当前draggable
     * @property {object} origin 拖拽源，为当前draggable
     * @property {object} source 拖拽起始元素
     * @property {object} proxy 拖拽代理元素
     * @property {object} data 拖拽时需要传递的数据
     * @property {number} screenX 鼠标指针相对于屏幕的水平位置
     * @property {number} screenY 鼠标指针相对于屏幕的垂直位置
     * @property {number} clientX 鼠标指针相对于浏览器的水平位置
     * @property {number} clientY 鼠标指针相对于浏览器的垂直位置
     * @property {number} pageX 鼠标指针相对于页面的水平位置
     * @property {number} pageY 鼠标指针相对于页面的垂直位置
     * @property {number} movementX 鼠标指针水平位置相对于上次操作的偏移量
     * @property {number} movementY 鼠标指针垂直位置相对于上次操作的偏移量
     * @property {function} cancel 取消拖拽操作
     */
    this.$emit('drag', _.extend({
      sender: this,
      origin: this,
      source: _.dom.element(this),
      proxy: dragdrop.proxy,
      cancel: this.cancel
    }, dragdrop));
  },

  /**
   * @private
   */
  _dragEnd: function _dragEnd() {
    /**
     * @event KLDraggable#dragend 拖拽结束时触发
     * @property {object} sender 事件发送对象，为当前draggable
     * @property {object} origin 拖拽源，为当前draggable
     * @property {object} source 拖拽起始元素
     * @property {object} proxy 拖拽代理元素
     */
    this.$emit('dragend', {
      sender: this,
      origin: this,
      source: _.dom.element(this),
      proxy: dragdrop.proxy
    });

    if (dragdrop.proxy) {
      if (this.data.proxy instanceof KLDraggable.Proxy || this.data.proxy === 'clone') {
        dragdrop.proxy.parentElement.removeChild(dragdrop.proxy);
      }
      _.dom.delClass(dragdrop.proxy, this.data.dragClass);
    }
  }
});

KLDraggable.Proxy = Component.extend({
  name: 'kl-draggable-proxy',
  template: '{#inc this.$body}',
  init: function init() {
    if (this.$outer instanceof KLDraggable) {
      _.dom.element(this).style.display = 'none';
      this.$outer.data.proxy = this;
    }
  }
}
// node: _.noop
);

module.exports = KLDraggable;

/***/ }),
/* 530 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var dragdrop = {
  dragging: false,
  data: null,
  proxy: null,
  screenX: 0,
  screenY: 0,
  clientX: 0,
  clientY: 0,
  pageX: 0,
  pageY: 0,
  movementX: 0,
  movementY: 0,
  droppable: null,
  droppables: []
};

module.exports = dragdrop;

/***/ }),
/* 531 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _KLScrollBar = __webpack_require__(532);

var _KLScrollBar2 = _interopRequireDefault(_KLScrollBar);

var _resize = __webpack_require__(534);

var _resize2 = _interopRequireDefault(_resize);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @file KLScroll  进度条
 * @author   sensen(rainforest92@126.com)
 * ------------------------------------------------------------
 */

var Component = __webpack_require__(1);
var template = __webpack_require__(536);

/**
 * @class KLScroll
 * @extend Component
 * @param {object}              [options.data]                    = 绑定属性
 * @param {string}              [options.data.class]              => 补充class
 * @param {string}              [options.data.wrapClass]          => 补充wrap的class
 * @param {string}              [options.data.wrapMaxHeight]      => 滚动区域的最大高
 */
var KLScroll = Component.extend({
  name: 'kl-scroll',
  template: template,
  config: function config() {
    this.defaults({
      class: '',
      wrapClass: '',
      wrapMaxHeight: ''
    });
    this.supr();
  },
  init: function init() {
    var _this = this;

    this.addResizeListener(this.$refs.resize, this.update);

    this.$watch('wrapMaxHeight', function (val) {
      if (!val) {
        return;
      }
      _this.update();
    });

    this.$on('destroy', function () {
      _this.removeResizeListener(_this.$refs.resize);
    });

    setTimeout(function () {
      _this.update();
    }, 100);
    this.supr();
  },
  onScroll: function onScroll() {
    var wrap = this.$refs.wrap;

    this.data.moveY = wrap.scrollTop * 100 / wrap.clientHeight;
    this.data.moveX = wrap.scrollLeft * 100 / wrap.clientWidth;
  },
  update: function update() {
    var wrap = this.$refs.wrap;
    if (!wrap) return;

    var heightPercentage = wrap.clientHeight * 100 / wrap.scrollHeight;
    var widthPercentage = wrap.clientWidth * 100 / wrap.scrollWidth;

    this.data.sizeHeight = heightPercentage < 100 ? heightPercentage + '%' : '';
    this.data.sizeWidth = widthPercentage < 100 ? widthPercentage + '%' : '';
    this.$update();
  }
}).use(_resize2.default).component('kl-scroll-bar', _KLScrollBar2.default);

module.exports = KLScroll;

/***/ }),
/* 532 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/**
 * @file KLScrollBar  进度条
 * @author   sensen(rainforest92@126.com)
 * ------------------------------------------------------------
 */

var dom = __webpack_require__(11).dom;
var Component = __webpack_require__(1);
var template = __webpack_require__(533);

var BAR_MAP = exports.BAR_MAP = {
  vertical: {
    offset: 'offsetHeight',
    scroll: 'scrollTop',
    scrollSize: 'scrollHeight',
    size: 'height',
    axis: 'Y',
    client: 'clientY',
    direction: 'top'
  },
  horizontal: {
    offset: 'offsetWidth',
    scroll: 'scrollLeft',
    scrollSize: 'scrollWidth',
    size: 'width',
    axis: 'X',
    client: 'clientX',
    direction: 'left'
  }
};

/**
 * @class KLScrollBar
 * @extend Component
 * @param {object}              [options.data]                    = 绑定属性
 */
var KLScrollBar = Component.extend({
  name: 'kl-scroll-bar',
  template: template,
  config: function config() {
    var _this = this;

    this.defaults({
      direction: 'vertical',
      size: '',
      move: ''
    });
    this.data.bar = BAR_MAP[this.data.direction];

    this.$on('destroy', function () {
      document.removeEventListener('mouseup', _this.onMouseUpDocument);
    });

    this.onMouseMoveDocument = this.mouseMoveDocumentHandler.bind(this);
    this.onMouseUpDocument = this.mouseUpDocumentHandler.bind(this);

    this.supr();
  },
  clickTrackHandler: function clickTrackHandler(e) {
    var $el = dom.element(this);

    var bar = this.data.bar;

    var wrap = this.$parent.$refs.wrap;

    var offset = Math.abs(e.target.getBoundingClientRect()[bar.direction] - e.event[bar.client]);
    var thumbHalf = this.$refs.thumb[bar.offset] / 2;
    var thumbPositionPercentage = (offset - thumbHalf) * 100 / $el[bar.offset];

    wrap[bar.scroll] = thumbPositionPercentage * wrap[bar.scrollSize] / 100;
  },
  clickThumbHandler: function clickThumbHandler(e) {
    var bar = this.data.bar;


    this.startDrag(e);
    this.data[bar.axis] = e.target[bar.offset] - (e.event[bar.client] - e.target.getBoundingClientRect()[bar.direction]);
  },
  startDrag: function startDrag(e) {
    e.stopImmediatePropagation();
    this.data.cursorDown = true;

    document.addEventListener('mousemove', this.onMouseMoveDocument);
    document.addEventListener('mouseup', this.onMouseUpDocument);

    document.onselectstart = function () {
      return false;
    };
  },
  mouseMoveDocumentHandler: function mouseMoveDocumentHandler(e) {
    var $el = dom.element(this);
    var bar = this.data.bar;

    var wrap = this.$parent.$refs.wrap;

    if (this.data.cursorDown === false) return;
    var prevPage = this.data[bar.axis];

    if (!prevPage) return;

    var offset = ($el.getBoundingClientRect()[bar.direction] - e[bar.client]) * -1;
    var thumbClickPosition = this.$refs.thumb[bar.offset] - prevPage;
    var thumbPositionPercentage = (offset - thumbClickPosition) * 100 / $el[bar.offset];

    wrap[bar.scroll] = thumbPositionPercentage * wrap[bar.scrollSize] / 100;
  },
  mouseUpDocumentHandler: function mouseUpDocumentHandler() {
    var bar = this.data.bar;


    this.data.cursorDown = false;
    this.data[bar.axis] = 0;
    document.removeEventListener('mousemove', this.onMouseMoveDocument);
    document.onselectstart = null;
  }
});

KLScrollBar.directive('thumbStyle', function (ele) {
  this.$watch(['move', 'size'], function () {
    var move = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
    var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
    var bar = this.data.bar;

    if (bar) {
      ele.style[bar.size] = size;
      ele.style.transform = 'translate' + bar.axis + '(' + move + '%)';
    }
  });
});

exports.default = KLScrollBar;

/***/ }),
/* 533 */
/***/ (function(module, exports) {

module.exports = "<div class=\"kl-scroll-bar is-{direction}\" on-mousedown={this.clickTrackHandler($event)}>\n  <div class=\"kl-scroll-bar__thumb\" ref=\"thumb\"\n       thumbStyle\n       on-mousedown={this.clickThumbHandler($event)}></div>\n</div>"

/***/ }),
/* 534 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _resizeObserverPolyfill = __webpack_require__(535);

var _resizeObserverPolyfill2 = _interopRequireDefault(_resizeObserverPolyfill);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (Component) {
  Component.implement({
    addResizeListener: function addResizeListener(element, fn) {
      var callback = fn.bind(this);
      element.__ro__ = new _resizeObserverPolyfill2.default(function () {
        callback();
      });
      element.__ro__.observe(element);
    },
    removeResizeListener: function removeResizeListener(element) {
      element.__ro__.disconnect();
    }
  });
};

/***/ }),
/* 535 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* WEBPACK VAR INJECTION */(function(global) {/**
 * A collection of shims that provide minimal functionality of the ES6 collections.
 *
 * These implementations are not meant to be used outside of the ResizeObserver
 * modules as they cover only a limited range of use cases.
 */
/* eslint-disable require-jsdoc, valid-jsdoc */
var MapShim = (function () {
    if (typeof Map !== 'undefined') {
        return Map;
    }

    /**
     * Returns index in provided array that matches the specified key.
     *
     * @param {Array<Array>} arr
     * @param {*} key
     * @returns {number}
     */
    function getIndex(arr, key) {
        var result = -1;

        arr.some(function (entry, index) {
            if (entry[0] === key) {
                result = index;

                return true;
            }

            return false;
        });

        return result;
    }

    return (function () {
        function anonymous() {
            this.__entries__ = [];
        }

        var prototypeAccessors = { size: { configurable: true } };

        /**
         * @returns {boolean}
         */
        prototypeAccessors.size.get = function () {
            return this.__entries__.length;
        };

        /**
         * @param {*} key
         * @returns {*}
         */
        anonymous.prototype.get = function (key) {
            var index = getIndex(this.__entries__, key);
            var entry = this.__entries__[index];

            return entry && entry[1];
        };

        /**
         * @param {*} key
         * @param {*} value
         * @returns {void}
         */
        anonymous.prototype.set = function (key, value) {
            var index = getIndex(this.__entries__, key);

            if (~index) {
                this.__entries__[index][1] = value;
            } else {
                this.__entries__.push([key, value]);
            }
        };

        /**
         * @param {*} key
         * @returns {void}
         */
        anonymous.prototype.delete = function (key) {
            var entries = this.__entries__;
            var index = getIndex(entries, key);

            if (~index) {
                entries.splice(index, 1);
            }
        };

        /**
         * @param {*} key
         * @returns {void}
         */
        anonymous.prototype.has = function (key) {
            return !!~getIndex(this.__entries__, key);
        };

        /**
         * @returns {void}
         */
        anonymous.prototype.clear = function () {
            this.__entries__.splice(0);
        };

        /**
         * @param {Function} callback
         * @param {*} [ctx=null]
         * @returns {void}
         */
        anonymous.prototype.forEach = function (callback, ctx) {
            var this$1 = this;
            if ( ctx === void 0 ) ctx = null;

            for (var i = 0, list = this$1.__entries__; i < list.length; i += 1) {
                var entry = list[i];

                callback.call(ctx, entry[1], entry[0]);
            }
        };

        Object.defineProperties( anonymous.prototype, prototypeAccessors );

        return anonymous;
    }());
})();

/**
 * Detects whether window and document objects are available in current environment.
 */
var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;

// Returns global object of a current environment.
var global$1 = (function () {
    if (typeof global !== 'undefined' && global.Math === Math) {
        return global;
    }

    if (typeof self !== 'undefined' && self.Math === Math) {
        return self;
    }

    if (typeof window !== 'undefined' && window.Math === Math) {
        return window;
    }

    // eslint-disable-next-line no-new-func
    return Function('return this')();
})();

/**
 * A shim for the requestAnimationFrame which falls back to the setTimeout if
 * first one is not supported.
 *
 * @returns {number} Requests' identifier.
 */
var requestAnimationFrame$1 = (function () {
    if (typeof requestAnimationFrame === 'function') {
        // It's required to use a bounded function because IE sometimes throws
        // an "Invalid calling object" error if rAF is invoked without the global
        // object on the left hand side.
        return requestAnimationFrame.bind(global$1);
    }

    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };
})();

// Defines minimum timeout before adding a trailing call.
var trailingTimeout = 2;

/**
 * Creates a wrapper function which ensures that provided callback will be
 * invoked only once during the specified delay period.
 *
 * @param {Function} callback - Function to be invoked after the delay period.
 * @param {number} delay - Delay after which to invoke callback.
 * @returns {Function}
 */
var throttle = function (callback, delay) {
    var leadingCall = false,
        trailingCall = false,
        lastCallTime = 0;

    /**
     * Invokes the original callback function and schedules new invocation if
     * the "proxy" was called during current request.
     *
     * @returns {void}
     */
    function resolvePending() {
        if (leadingCall) {
            leadingCall = false;

            callback();
        }

        if (trailingCall) {
            proxy();
        }
    }

    /**
     * Callback invoked after the specified delay. It will further postpone
     * invocation of the original function delegating it to the
     * requestAnimationFrame.
     *
     * @returns {void}
     */
    function timeoutCallback() {
        requestAnimationFrame$1(resolvePending);
    }

    /**
     * Schedules invocation of the original function.
     *
     * @returns {void}
     */
    function proxy() {
        var timeStamp = Date.now();

        if (leadingCall) {
            // Reject immediately following calls.
            if (timeStamp - lastCallTime < trailingTimeout) {
                return;
            }

            // Schedule new call to be in invoked when the pending one is resolved.
            // This is important for "transitions" which never actually start
            // immediately so there is a chance that we might miss one if change
            // happens amids the pending invocation.
            trailingCall = true;
        } else {
            leadingCall = true;
            trailingCall = false;

            setTimeout(timeoutCallback, delay);
        }

        lastCallTime = timeStamp;
    }

    return proxy;
};

// Minimum delay before invoking the update of observers.
var REFRESH_DELAY = 20;

// A list of substrings of CSS properties used to find transition events that
// might affect dimensions of observed elements.
var transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];

// Check if MutationObserver is available.
var mutationObserverSupported = typeof MutationObserver !== 'undefined';

/**
 * Singleton controller class which handles updates of ResizeObserver instances.
 */
var ResizeObserverController = function() {
    this.connected_ = false;
    this.mutationEventsAdded_ = false;
    this.mutationsObserver_ = null;
    this.observers_ = [];

    this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);
    this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);
};

/**
 * Adds observer to observers list.
 *
 * @param {ResizeObserverSPI} observer - Observer to be added.
 * @returns {void}
 */


/**
 * Holds reference to the controller's instance.
 *
 * @private {ResizeObserverController}
 */


/**
 * Keeps reference to the instance of MutationObserver.
 *
 * @private {MutationObserver}
 */

/**
 * Indicates whether DOM listeners have been added.
 *
 * @private {boolean}
 */
ResizeObserverController.prototype.addObserver = function (observer) {
    if (!~this.observers_.indexOf(observer)) {
        this.observers_.push(observer);
    }

    // Add listeners if they haven't been added yet.
    if (!this.connected_) {
        this.connect_();
    }
};

/**
 * Removes observer from observers list.
 *
 * @param {ResizeObserverSPI} observer - Observer to be removed.
 * @returns {void}
 */
ResizeObserverController.prototype.removeObserver = function (observer) {
    var observers = this.observers_;
    var index = observers.indexOf(observer);

    // Remove observer if it's present in registry.
    if (~index) {
        observers.splice(index, 1);
    }

    // Remove listeners if controller has no connected observers.
    if (!observers.length && this.connected_) {
        this.disconnect_();
    }
};

/**
 * Invokes the update of observers. It will continue running updates insofar
 * it detects changes.
 *
 * @returns {void}
 */
ResizeObserverController.prototype.refresh = function () {
    var changesDetected = this.updateObservers_();

    // Continue running updates if changes have been detected as there might
    // be future ones caused by CSS transitions.
    if (changesDetected) {
        this.refresh();
    }
};

/**
 * Updates every observer from observers list and notifies them of queued
 * entries.
 *
 * @private
 * @returns {boolean} Returns "true" if any observer has detected changes in
 *  dimensions of it's elements.
 */
ResizeObserverController.prototype.updateObservers_ = function () {
    // Collect observers that have active observations.
    var activeObservers = this.observers_.filter(function (observer) {
        return observer.gatherActive(), observer.hasActive();
    });

    // Deliver notifications in a separate cycle in order to avoid any
    // collisions between observers, e.g. when multiple instances of
    // ResizeObserver are tracking the same element and the callback of one
    // of them changes content dimensions of the observed target. Sometimes
    // this may result in notifications being blocked for the rest of observers.
    activeObservers.forEach(function (observer) { return observer.broadcastActive(); });

    return activeObservers.length > 0;
};

/**
 * Initializes DOM listeners.
 *
 * @private
 * @returns {void}
 */
ResizeObserverController.prototype.connect_ = function () {
    // Do nothing if running in a non-browser environment or if listeners
    // have been already added.
    if (!isBrowser || this.connected_) {
        return;
    }

    // Subscription to the "Transitionend" event is used as a workaround for
    // delayed transitions. This way it's possible to capture at least the
    // final state of an element.
    document.addEventListener('transitionend', this.onTransitionEnd_);

    window.addEventListener('resize', this.refresh);

    if (mutationObserverSupported) {
        this.mutationsObserver_ = new MutationObserver(this.refresh);

        this.mutationsObserver_.observe(document, {
            attributes: true,
            childList: true,
            characterData: true,
            subtree: true
        });
    } else {
        document.addEventListener('DOMSubtreeModified', this.refresh);

        this.mutationEventsAdded_ = true;
    }

    this.connected_ = true;
};

/**
 * Removes DOM listeners.
 *
 * @private
 * @returns {void}
 */
ResizeObserverController.prototype.disconnect_ = function () {
    // Do nothing if running in a non-browser environment or if listeners
    // have been already removed.
    if (!isBrowser || !this.connected_) {
        return;
    }

    document.removeEventListener('transitionend', this.onTransitionEnd_);
    window.removeEventListener('resize', this.refresh);

    if (this.mutationsObserver_) {
        this.mutationsObserver_.disconnect();
    }

    if (this.mutationEventsAdded_) {
        document.removeEventListener('DOMSubtreeModified', this.refresh);
    }

    this.mutationsObserver_ = null;
    this.mutationEventsAdded_ = false;
    this.connected_ = false;
};

/**
 * "Transitionend" event handler.
 *
 * @private
 * @param {TransitionEvent} event
 * @returns {void}
 */
ResizeObserverController.prototype.onTransitionEnd_ = function (ref) {
        var propertyName = ref.propertyName; if ( propertyName === void 0 ) propertyName = '';

    // Detect whether transition may affect dimensions of an element.
    var isReflowProperty = transitionKeys.some(function (key) {
        return !!~propertyName.indexOf(key);
    });

    if (isReflowProperty) {
        this.refresh();
    }
};

/**
 * Returns instance of the ResizeObserverController.
 *
 * @returns {ResizeObserverController}
 */
ResizeObserverController.getInstance = function () {
    if (!this.instance_) {
        this.instance_ = new ResizeObserverController();
    }

    return this.instance_;
};

ResizeObserverController.instance_ = null;

/**
 * Defines non-writable/enumerable properties of the provided target object.
 *
 * @param {Object} target - Object for which to define properties.
 * @param {Object} props - Properties to be defined.
 * @returns {Object} Target object.
 */
var defineConfigurable = (function (target, props) {
    for (var i = 0, list = Object.keys(props); i < list.length; i += 1) {
        var key = list[i];

        Object.defineProperty(target, key, {
            value: props[key],
            enumerable: false,
            writable: false,
            configurable: true
        });
    }

    return target;
});

/**
 * Returns the global object associated with provided element.
 *
 * @param {Object} target
 * @returns {Object}
 */
var getWindowOf = (function (target) {
    // Assume that the element is an instance of Node, which means that it
    // has the "ownerDocument" property from which we can retrieve a
    // corresponding global object.
    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;

    // Return the local global object if it's not possible extract one from
    // provided element.
    return ownerGlobal || global$1;
});

// Placeholder of an empty content rectangle.
var emptyRect = createRectInit(0, 0, 0, 0);

/**
 * Converts provided string to a number.
 *
 * @param {number|string} value
 * @returns {number}
 */
function toFloat(value) {
    return parseFloat(value) || 0;
}

/**
 * Extracts borders size from provided styles.
 *
 * @param {CSSStyleDeclaration} styles
 * @param {...string} positions - Borders positions (top, right, ...)
 * @returns {number}
 */
function getBordersSize(styles) {
    var positions = [], len = arguments.length - 1;
    while ( len-- > 0 ) positions[ len ] = arguments[ len + 1 ];

    return positions.reduce(function (size, position) {
        var value = styles['border-' + position + '-width'];

        return size + toFloat(value);
    }, 0);
}

/**
 * Extracts paddings sizes from provided styles.
 *
 * @param {CSSStyleDeclaration} styles
 * @returns {Object} Paddings box.
 */
function getPaddings(styles) {
    var positions = ['top', 'right', 'bottom', 'left'];
    var paddings = {};

    for (var i = 0, list = positions; i < list.length; i += 1) {
        var position = list[i];

        var value = styles['padding-' + position];

        paddings[position] = toFloat(value);
    }

    return paddings;
}

/**
 * Calculates content rectangle of provided SVG element.
 *
 * @param {SVGGraphicsElement} target - Element content rectangle of which needs
 *      to be calculated.
 * @returns {DOMRectInit}
 */
function getSVGContentRect(target) {
    var bbox = target.getBBox();

    return createRectInit(0, 0, bbox.width, bbox.height);
}

/**
 * Calculates content rectangle of provided HTMLElement.
 *
 * @param {HTMLElement} target - Element for which to calculate the content rectangle.
 * @returns {DOMRectInit}
 */
function getHTMLElementContentRect(target) {
    // Client width & height properties can't be
    // used exclusively as they provide rounded values.
    var clientWidth = target.clientWidth;
    var clientHeight = target.clientHeight;

    // By this condition we can catch all non-replaced inline, hidden and
    // detached elements. Though elements with width & height properties less
    // than 0.5 will be discarded as well.
    //
    // Without it we would need to implement separate methods for each of
    // those cases and it's not possible to perform a precise and performance
    // effective test for hidden elements. E.g. even jQuery's ':visible' filter
    // gives wrong results for elements with width & height less than 0.5.
    if (!clientWidth && !clientHeight) {
        return emptyRect;
    }

    var styles = getWindowOf(target).getComputedStyle(target);
    var paddings = getPaddings(styles);
    var horizPad = paddings.left + paddings.right;
    var vertPad = paddings.top + paddings.bottom;

    // Computed styles of width & height are being used because they are the
    // only dimensions available to JS that contain non-rounded values. It could
    // be possible to utilize the getBoundingClientRect if only it's data wasn't
    // affected by CSS transformations let alone paddings, borders and scroll bars.
    var width = toFloat(styles.width),
        height = toFloat(styles.height);

    // Width & height include paddings and borders when the 'border-box' box
    // model is applied (except for IE).
    if (styles.boxSizing === 'border-box') {
        // Following conditions are required to handle Internet Explorer which
        // doesn't include paddings and borders to computed CSS dimensions.
        //
        // We can say that if CSS dimensions + paddings are equal to the "client"
        // properties then it's either IE, and thus we don't need to subtract
        // anything, or an element merely doesn't have paddings/borders styles.
        if (Math.round(width + horizPad) !== clientWidth) {
            width -= getBordersSize(styles, 'left', 'right') + horizPad;
        }

        if (Math.round(height + vertPad) !== clientHeight) {
            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;
        }
    }

    // Following steps can't be applied to the document's root element as its
    // client[Width/Height] properties represent viewport area of the window.
    // Besides, it's as well not necessary as the <html> itself neither has
    // rendered scroll bars nor it can be clipped.
    if (!isDocumentElement(target)) {
        // In some browsers (only in Firefox, actually) CSS width & height
        // include scroll bars size which can be removed at this step as scroll
        // bars are the only difference between rounded dimensions + paddings
        // and "client" properties, though that is not always true in Chrome.
        var vertScrollbar = Math.round(width + horizPad) - clientWidth;
        var horizScrollbar = Math.round(height + vertPad) - clientHeight;

        // Chrome has a rather weird rounding of "client" properties.
        // E.g. for an element with content width of 314.2px it sometimes gives
        // the client width of 315px and for the width of 314.7px it may give
        // 314px. And it doesn't happen all the time. So just ignore this delta
        // as a non-relevant.
        if (Math.abs(vertScrollbar) !== 1) {
            width -= vertScrollbar;
        }

        if (Math.abs(horizScrollbar) !== 1) {
            height -= horizScrollbar;
        }
    }

    return createRectInit(paddings.left, paddings.top, width, height);
}

/**
 * Checks whether provided element is an instance of the SVGGraphicsElement.
 *
 * @param {Element} target - Element to be checked.
 * @returns {boolean}
 */
var isSVGGraphicsElement = (function () {
    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement
    // interface.
    if (typeof SVGGraphicsElement !== 'undefined') {
        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };
    }

    // If it's so, then check that element is at least an instance of the
    // SVGElement and that it has the "getBBox" method.
    // eslint-disable-next-line no-extra-parens
    return function (target) { return target instanceof getWindowOf(target).SVGElement && typeof target.getBBox === 'function'; };
})();

/**
 * Checks whether provided element is a document element (<html>).
 *
 * @param {Element} target - Element to be checked.
 * @returns {boolean}
 */
function isDocumentElement(target) {
    return target === getWindowOf(target).document.documentElement;
}

/**
 * Calculates an appropriate content rectangle for provided html or svg element.
 *
 * @param {Element} target - Element content rectangle of which needs to be calculated.
 * @returns {DOMRectInit}
 */
function getContentRect(target) {
    if (!isBrowser) {
        return emptyRect;
    }

    if (isSVGGraphicsElement(target)) {
        return getSVGContentRect(target);
    }

    return getHTMLElementContentRect(target);
}

/**
 * Creates rectangle with an interface of the DOMRectReadOnly.
 * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly
 *
 * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.
 * @returns {DOMRectReadOnly}
 */
function createReadOnlyRect(ref) {
    var x = ref.x;
    var y = ref.y;
    var width = ref.width;
    var height = ref.height;

    // If DOMRectReadOnly is available use it as a prototype for the rectangle.
    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;
    var rect = Object.create(Constr.prototype);

    // Rectangle's properties are not writable and non-enumerable.
    defineConfigurable(rect, {
        x: x, y: y, width: width, height: height,
        top: y,
        right: x + width,
        bottom: height + y,
        left: x
    });

    return rect;
}

/**
 * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.
 * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit
 *
 * @param {number} x - X coordinate.
 * @param {number} y - Y coordinate.
 * @param {number} width - Rectangle's width.
 * @param {number} height - Rectangle's height.
 * @returns {DOMRectInit}
 */
function createRectInit(x, y, width, height) {
    return { x: x, y: y, width: width, height: height };
}

/**
 * Class that is responsible for computations of the content rectangle of
 * provided DOM element and for keeping track of it's changes.
 */
var ResizeObservation = function(target) {
    this.broadcastWidth = 0;
    this.broadcastHeight = 0;
    this.contentRect_ = createRectInit(0, 0, 0, 0);

    this.target = target;
};

/**
 * Updates content rectangle and tells whether it's width or height properties
 * have changed since the last broadcast.
 *
 * @returns {boolean}
 */


/**
 * Reference to the last observed content rectangle.
 *
 * @private {DOMRectInit}
 */


/**
 * Broadcasted width of content rectangle.
 *
 * @type {number}
 */
ResizeObservation.prototype.isActive = function () {
    var rect = getContentRect(this.target);

    this.contentRect_ = rect;

    return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;
};

/**
 * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data
 * from the corresponding properties of the last observed content rectangle.
 *
 * @returns {DOMRectInit} Last observed content rectangle.
 */
ResizeObservation.prototype.broadcastRect = function () {
    var rect = this.contentRect_;

    this.broadcastWidth = rect.width;
    this.broadcastHeight = rect.height;

    return rect;
};

var ResizeObserverEntry = function(target, rectInit) {
    var contentRect = createReadOnlyRect(rectInit);

    // According to the specification following properties are not writable
    // and are also not enumerable in the native implementation.
    //
    // Property accessors are not being used as they'd require to define a
    // private WeakMap storage which may cause memory leaks in browsers that
    // don't support this type of collections.
    defineConfigurable(this, { target: target, contentRect: contentRect });
};

var ResizeObserverSPI = function(callback, controller, callbackCtx) {
    this.activeObservations_ = [];
    this.observations_ = new MapShim();

    if (typeof callback !== 'function') {
        throw new TypeError('The callback provided as parameter 1 is not a function.');
    }

    this.callback_ = callback;
    this.controller_ = controller;
    this.callbackCtx_ = callbackCtx;
};

/**
 * Starts observing provided element.
 *
 * @param {Element} target - Element to be observed.
 * @returns {void}
 */


/**
 * Registry of the ResizeObservation instances.
 *
 * @private {Map<Element, ResizeObservation>}
 */


/**
 * Public ResizeObserver instance which will be passed to the callback
 * function and used as a value of it's "this" binding.
 *
 * @private {ResizeObserver}
 */

/**
 * Collection of resize observations that have detected changes in dimensions
 * of elements.
 *
 * @private {Array<ResizeObservation>}
 */
ResizeObserverSPI.prototype.observe = function (target) {
    if (!arguments.length) {
        throw new TypeError('1 argument required, but only 0 present.');
    }

    // Do nothing if current environment doesn't have the Element interface.
    if (typeof Element === 'undefined' || !(Element instanceof Object)) {
        return;
    }

    if (!(target instanceof getWindowOf(target).Element)) {
        throw new TypeError('parameter 1 is not of type "Element".');
    }

    var observations = this.observations_;

    // Do nothing if element is already being observed.
    if (observations.has(target)) {
        return;
    }

    observations.set(target, new ResizeObservation(target));

    this.controller_.addObserver(this);

    // Force the update of observations.
    this.controller_.refresh();
};

/**
 * Stops observing provided element.
 *
 * @param {Element} target - Element to stop observing.
 * @returns {void}
 */
ResizeObserverSPI.prototype.unobserve = function (target) {
    if (!arguments.length) {
        throw new TypeError('1 argument required, but only 0 present.');
    }

    // Do nothing if current environment doesn't have the Element interface.
    if (typeof Element === 'undefined' || !(Element instanceof Object)) {
        return;
    }

    if (!(target instanceof getWindowOf(target).Element)) {
        throw new TypeError('parameter 1 is not of type "Element".');
    }

    var observations = this.observations_;

    // Do nothing if element is not being observed.
    if (!observations.has(target)) {
        return;
    }

    observations.delete(target);

    if (!observations.size) {
        this.controller_.removeObserver(this);
    }
};

/**
 * Stops observing all elements.
 *
 * @returns {void}
 */
ResizeObserverSPI.prototype.disconnect = function () {
    this.clearActive();
    this.observations_.clear();
    this.controller_.removeObserver(this);
};

/**
 * Collects observation instances the associated element of which has changed
 * it's content rectangle.
 *
 * @returns {void}
 */
ResizeObserverSPI.prototype.gatherActive = function () {
        var this$1 = this;

    this.clearActive();

    this.observations_.forEach(function (observation) {
        if (observation.isActive()) {
            this$1.activeObservations_.push(observation);
        }
    });
};

/**
 * Invokes initial callback function with a list of ResizeObserverEntry
 * instances collected from active resize observations.
 *
 * @returns {void}
 */
ResizeObserverSPI.prototype.broadcastActive = function () {
    // Do nothing if observer doesn't have active observations.
    if (!this.hasActive()) {
        return;
    }

    var ctx = this.callbackCtx_;

    // Create ResizeObserverEntry instance for every active observation.
    var entries = this.activeObservations_.map(function (observation) {
        return new ResizeObserverEntry(observation.target, observation.broadcastRect());
    });

    this.callback_.call(ctx, entries, ctx);
    this.clearActive();
};

/**
 * Clears the collection of active observations.
 *
 * @returns {void}
 */
ResizeObserverSPI.prototype.clearActive = function () {
    this.activeObservations_.splice(0);
};

/**
 * Tells whether observer has active observations.
 *
 * @returns {boolean}
 */
ResizeObserverSPI.prototype.hasActive = function () {
    return this.activeObservations_.length > 0;
};

// Registry of internal observers. If WeakMap is not available use current shim
// for the Map collection as it has all required methods and because WeakMap
// can't be fully polyfilled anyway.
var observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();

/**
 * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation
 * exposing only those methods and properties that are defined in the spec.
 */
var ResizeObserver = function(callback) {
    if (!(this instanceof ResizeObserver)) {
        throw new TypeError('Cannot call a class as a function.');
    }
    if (!arguments.length) {
        throw new TypeError('1 argument required, but only 0 present.');
    }

    var controller = ResizeObserverController.getInstance();
    var observer = new ResizeObserverSPI(callback, controller, this);

    observers.set(this, observer);
};

// Expose public methods of ResizeObserver.
['observe', 'unobserve', 'disconnect'].forEach(function (method) {
    ResizeObserver.prototype[method] = function () {
        return (ref = observers.get(this))[method].apply(ref, arguments);
        var ref;
    };
});

var index = (function () {
    // Export existing implementation if available.
    if (typeof global$1.ResizeObserver !== 'undefined') {
        return global$1.ResizeObserver;
    }

    return ResizeObserver;
})();

/* harmony default export */ __webpack_exports__["default"] = (index);

/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(222)))

/***/ }),
/* 536 */
/***/ (function(module, exports) {

module.exports = "<div class=\"kl-scroll {class}\">\n  <div class=\"kl-scroll-wrap {wrapClass}\"\n       r-style=\"{{'max-height': wrapMaxHeight || 'auto'}}\"\n       ref=\"wrap\" on-scroll={this.onScroll($event)}>\n    <div class=\"kl-scroll-wrap__view\" ref=\"resize\">\n      {#inc this.$body}\n    </div>\n  </div>\n  <kl-scroll-bar move={moveX} size={sizeWidth} direction=\"horizontal\" />\n  <kl-scroll-bar move={moveY} size={sizeHeight} direction=\"vertical\" />\n</div>"

/***/ }),
/* 537 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Component = __webpack_require__(1);
var tpl = __webpack_require__(538);

var HEADER_MIN_WIDTH = 30;
var SHOULD_ENABLE_RESIZE_THRESHOLD = 12;

var hasChildren = function hasChildren(column) {
  return column.children && column.children.length > 0;
};

var setColumnWidth = function setColumnWidth(column, width) {
  var children = column.children;
  if (hasChildren(column)) {
    setColumnWidth(children[children.length - 1], width);
    return;
  }
  column.width = Math.max(width, HEADER_MIN_WIDTH);
  column._width = column.width;
};

var getColumnWidth = function getColumnWidth(column) {
  var ret = {
    width: 0,
    lastLeafWidth: 0
  };
  if (hasChildren(column)) {
    column.children.forEach(function (item, index) {
      var tmp = getColumnWidth(item);
      if (index === column.children.length - 1) {
        ret.lastLeafWidth = tmp.width;
      }
      ret.width += tmp.width;
    });
  } else {
    return {
      width: column._width,
      lastLeafWidth: column._width
    };
  }
  return ret;
};

var getLeftLeavesWidth = function getLeftLeavesWidth(column) {
  var info = getColumnWidth(column);
  return info.width - info.lastLeafWidth;
};

var _parseFormat = function _parseFormat(str) {
  return str.replace(/</g, '&lt;').replace(/>/g, '&gt;');
};

var TableHeader = Component.extend({
  template: tpl,
  config: function config(data) {
    this.defaults({
      type: '',
      show: true,
      columns: [],
      sorting: {},
      config: {}
    });
    this.supr(data);
    this.$table = this.$parent;
    this.$tableData = this.$parent.data;
    this.data.$table = this.$table;
    this.data.$tableData = this.$tableData;
  },
  _onHeaderClick: function _onHeaderClick(header, headerIndex) {
    if (!header.sortable) {
      return;
    }
    this._onSort(header, headerIndex);
  },
  _onSort: function _onSort(header, headerIndex) {
    if (header._isDragging) {
      return;
    }
    var sorting = this.data.sorting;

    if (sorting.key === header.key) {
      sorting.isAsc = !sorting.isAsc;
    } else {
      sorting.isAsc = header.isDefaultAsc || false;
    }

    sorting.columnIndex = headerIndex;
    sorting.key = header.key;

    this.$emit('sort', {
      sender: this,
      sorting: sorting,
      column: header,
      columnIndex: headerIndex,
      key: header.key,
      asc: sorting.isAsc
    });
  },
  _onMouseDown: function _onMouseDown(e, header, headerIndex, headerTrIndex) {
    var data = this.data;
    if (!data._ok2ResizeCol) {
      return;
    }
    header._isDragging = true;
    this._startResizing(e, header, headerIndex, headerTrIndex);
  },
  _startResizing: function _startResizing(e, header, headerIndex, headerTrIndex) {
    var self = this;
    var tableLeft = self.$parent.$refs.table.getBoundingClientRect().left;
    var mouseLeft = e.pageX;
    var headerEle = self.$refs['table_th_' + headerTrIndex + '_' + headerIndex];
    var headerLeft = headerEle.getBoundingClientRect().left;

    header._resizeParam = {
      tableLeft: tableLeft,
      mouseLeft: mouseLeft,
      headerLeft: headerLeft
    };

    var resizeProxy = self.$parent.$refs.resizeProxy;
    resizeProxy.style.visibility = 'visible';

    var onMouseMove = function onMouseMove(_e) {
      _e.preventDefault();

      var proxyLeft = _e.pageX - tableLeft;
      var headerWidth = _e.pageX - headerLeft;

      if (headerWidth > HEADER_MIN_WIDTH) {
        resizeProxy.style.left = proxyLeft + 'px';
      }
    };

    var onMouseUp = function onMouseUp(_e) {
      _e.preventDefault();
      resizeProxy.style.visibility = 'hidden';

      var headerWidth = _e.pageX - headerLeft;
      var leftLeavesWidth = getLeftLeavesWidth(header);
      setColumnWidth(header, headerWidth - leftLeavesWidth);

      self.$emit('columnresize', {
        sender: self
      });

      document.removeEventListener('mousemove', onMouseMove);
      document.removeEventListener('mouseup', onMouseUp);

      header._isDragging = false;
      self._disableResize();
    };

    document.addEventListener('mousemove', onMouseMove);
    document.addEventListener('mouseup', onMouseUp);
  },
  _onMouseOut: function _onMouseOut(e, header) {
    if (!header._isDragging) {
      this._disableResize();
    }
  },
  _onMouseMove: function _onMouseMove(e, header) {
    if (!header._isDragging && this._shouldEnableResize(e)) {
      this._enableResize();
    } else {
      this._disableResize();
    }
  },
  _shouldEnableResize: function _shouldEnableResize(e) {
    var target = e.target;
    while (target && target.tagName !== 'TH') {
      target = target.parentNode;
    }
    var rect = target.getBoundingClientRect();
    return rect.width > 12 && rect.right - e.event.pageX < SHOULD_ENABLE_RESIZE_THRESHOLD;
  },
  _enableResize: function _enableResize() {
    document.body.style.cursor = 'col-resize';
    this.data._ok2ResizeCol = true;
  },
  _disableResize: function _disableResize() {
    document.body.style.cursor = '';
    this.data._ok2ResizeCol = false;
  },
  _getFormatter: function _getFormatter(header, headers) {
    return header.headerFormatter.call(this, header, headers) || '';
  },
  _getFormat: function _getFormat(header) {
    return _parseFormat(header.headerFormat);
  },
  emitEvent: function emitEvent(type) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    this.$emit('customevent', {
      type: type,
      sender: this,
      args: {
        param: args
      }
    });
  },
  emit: function emit() {
    var _$parent$$emit;

    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }

    (_$parent$$emit = this.$parent.$emit).call.apply(_$parent$$emit, [this.$parent].concat(args));
  }
}).filter('sortingClass', function (header) {
  var data = this.data;
  var sorting = data.sorting;
  if (sorting) {
    if (sorting.key === header.key) {
      return sorting.isAsc ? 'kl-icon--top-arrow-up' : 'kl-icon--bottom-arrow-down';
    }
    return '';
  }
});

module.exports = TableHeader;

/***/ }),
/* 538 */
/***/ (function(module, exports) {

module.exports = "<table\n    class=\"kl-table-tbody\"\n    r-style={{\n        'width': width == undefined ? 'auto' : width + 'px',\n        'text-align': config.textAlign || 'center',\n        'margin-left': fixedCol === 'right' ? '-'+marginLeft + 'px' : ''\n    }}>\n    <colgroup>\n        {#list _dataColumns as _dataColumn by _dataColumn_index}\n            <col width={_dataColumn._width}>\n        {/list}\n        <!-- 当固定表头时，内容区出现垂直滚动条则需要占位 -->\n        {#if scrollYBarWidth}\n            <col name=\"gutter\" width={scrollYBarWidth}>\n        {/if}\n    </colgroup>\n\n    <thead class=\"kl-table-tbody-head\">\n        {#list headers as headerRow by headerRow_index}\n            <tr class=\"kl-table-tbody-head__tr\">\n                {#list headerRow as header by header_index}\n                    <th ref=\"table_th_{headerRow_index}_{header_index}\"\n                        class=\"kl-table-tbody-head__th {header.thClass}\"\n                        colspan={header._headerColSpan}\n                        rowspan={header._headerRowSpan}\n                        on-mousedown={this._onMouseDown($event, header, header_index, headerRow_index)}\n                        on-mousemove={this._onMouseMove($event, header, header_index, headerRow_index)}\n                        on-mouseout={this._onMouseOut($event, header, header_index, headerRow_index)}\n                        >\n                        <div class=\"kl-table-tbody-head-th f-flex-{header.align || align || 'center'}\"\n                            title={header.name}\n                            on-click={this._onHeaderClick(header, header_index)}>\n                            {#if header.headerTemplate}\n                                {#include @(header.headerTemplate)}\n                            {#elseif header.headerFormatter}\n                                {#include this._getFormatter(header, headers)}\n                            {#elseif header.headerFormat}\n                                {#include this._getFormat(header)}\n                            {#else}\n                                <span class=\"kl-table-tbody-head-th__headerText\"\n                                    r-class={{\n                                        'f-cursor-pointer': !!(header.sortable && header.key),\n                                    }}>{header.name}</span>\n                                <span>\n                                    {#if header.tip}\n                                        <span class=\"kl-table-tbody-head-th__tip\">\n                                            <kl-tooltip tip={header.tip} placement={header.tipPos || 'top'}>\n                                                <kl-icon type=\"notice\" />\n                                            </kl-tooltip>\n                                        </span>\n                                    {/if}\n                                    {#if header.sortable && header.key}\n                                        <i class=\"kl-icon kl-icon--arrow-order kl-icon-1 kl-table-tbody-head-th-unsortedIcon\">\n                                            <i class=\"kl-icon kl-table-tbody-head-th-unsortedIcon__icon2 {header | sortingClass}\"/>\n                                        </i>\n                                    {/if}\n                                    {#if header.type === 'check' && header.enableCheckAll}\n                                        <kl-check name={header.name} checked={checkAll} />\n                                    {/if}\n                                </span>\n                            {/if}\n                        </div>\n                    </th>\n                {/list}\n\n                {#if scrollYBarWidth && !fixedCol}\n                    <th class=\"kl-table-theader-head__gutter\" />\n                {/if}\n            </tr>\n        {/list}\n    </thead>\n    {#if scrollYBarWidth && !fixedCol}\n        <div class=\"kl-table-patch\"\n            r-style={{\n                height: height + 'px',\n                top: 0,\n                right: 0,\n                width: scrollYBarWidth + 'px',\n            }}\n        ></div>\n    {/if}\n</table>\n"

/***/ }),
/* 539 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Component = __webpack_require__(1);
var tpl = __webpack_require__(540);
var templates = __webpack_require__(541);
var _ = __webpack_require__(69);

var _parseFormat = function _parseFormat(str) {
  return str.replace(/</g, '&lt;').replace(/>/g, '&gt;');
};

var TableBody = Component.extend({
  template: tpl,
  config: function config(data) {
    var _this = this;

    this.defaults({
      type: '',
      enableHover: true,
      show: true,
      columns: [],
      config: {}
    });
    this.supr(data);
    this.$table = this.$parent;
    this.$tableData = this.$parent.data;
    this.data.$table = this.$table;
    this.data.$tableData = this.$tableData;
    if (!this.data.fixedCol) {
      this.data.timer = setInterval(function () {
        _this._updateItemHeight();
      }, 200);
    }
  },
  _updateItemHeight: function _updateItemHeight() {
    var _this2 = this;

    if (!this.data.source) {
      return;
    }
    this.data.source.forEach(function (row, index) {
      var rowElement = _this2.$refs['row' + index];
      if (rowElement) {
        row._rowHeight = _.getElementHeight(rowElement);
      }
    });
  },
  _onExpand: function _onExpand(item, itemIndex, column) {
    if (!this.data.fixedCol) {
      this._expandTr(item, itemIndex, column);
    }

    this.$emit('expand', {
      sender: this,
      expand: item.expand,
      column: column,
      item: item,
      index: itemIndex
    });
  },
  _onItemCheckChange: function _onItemCheckChange(item, e) {
    if (this.data.fixedCol) {
      return;
    }
    this.$emit('checkchange', {
      item: item,
      checked: e.checked,
      event: e
    });
  },
  _expandTr: function _expandTr(item, itemIndex, column) {
    item._expanddingColumn = column;
    item.expand = !item.expand;
  },
  _onSubEvent: function _onSubEvent(type, table, e) {
    this.$emit('subevent', {
      sender: table,
      type: type,
      event: e
    });
  },
  _getTypeTemplate: function _getTypeTemplate(column) {
    return templates.get(column.type);
  },
  _getFormatter: function _getFormatter(column, item) {
    var formatter = column.formatter;
    return formatter.call(this, column, item) || '';
  },
  _getFormat: function _getFormat(column) {
    var format = column.format;
    return _parseFormat(format);
  },
  _filter: function _filter(column, val) {
    if (column.filter && typeof column.filter === 'function') {
      var _column$filter;

      for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
        args[_key - 2] = arguments[_key];
      }

      return (_column$filter = column.filter).call.apply(_column$filter, [this, val].concat(args));
    }
    return val;
  },
  emitEvent: function emitEvent(type) {
    for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
      args[_key2 - 1] = arguments[_key2];
    }

    this.$emit('customevent', {
      type: type,
      sender: this,
      args: {
        param: args
      }
    });
  },
  emit: function emit() {
    var _$parent$$emit;

    for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      args[_key3] = arguments[_key3];
    }

    (_$parent$$emit = this.$parent.$emit).call.apply(_$parent$$emit, [this.$parent].concat(args));
  },
  _onRowHover: function _onRowHover(e, item) {
    item._hover = true;
  },
  _onRowBlur: function _onRowBlur(e, item) {
    item._hover = false;
  },
  _onRowClick: function _onRowClick(e, item, itemIndex) {
    this.emit('rowclick', {
      sender: this.$parent,
      item: item,
      itemIndex: itemIndex
    });
  },
  _onUnitClick: function _onUnitClick(e, item, itemIndex, column, columnIndex) {
    this.emit('unitclick', {
      sender: this.$parent,
      item: item,
      itemIndex: itemIndex,
      key: column.key,
      column: column,
      columnIndex: columnIndex
    });
  },
  destroy: function destroy() {
    if (this.data.timer) {
      clearInterval(this.data.timer);
    }
    this.supr();
  }
}).filter('placeholder', function (val, column, self) {
  if (val === null || val === undefined) {
    if (column && column.placeholder !== undefined) {
      return column.placeholder;
    }
    return self.data.placeholder;
  }
  return val;
}).filter('expandSign', function (item) {
  return item.expand ? '-' : '+';
});

module.exports = TableBody;

/***/ }),
/* 540 */
/***/ (function(module, exports) {

module.exports = "<table class=\"kl-table-tbody\"\n    r-style={{\n        'width': width == undefined ? 'auto' : width - scrollYBarWidth + 'px',\n        'text-align': config.textAlign || 'center',\n        'margin-left': fixedCol === 'right' ? '-'+marginLeft+'px' : ''\n    }}>\n    <colgroup>\n        {#list _dataColumns as _dataColumn by _dataColumn_index}\n            <col width={_dataColumn._width}>\n        {/list}\n    </colgroup>\n\n    <tbody class=\"kl-table-tbody-body\">\n        <!-- 加载中 -->\n        {#if loading}\n        <tr class=\"kl-table-tbody-body__tr\">\n            <td class=\"kl-table-tbody-body__td\" colspan={_dataColumns.length}>\n                <kl-loading visible={loading} static>\n                  <p>{this.$trans('LOADING')}</p>\n                </kl-loading>\n            </td>\n        </tr>\n\n        <!-- 内容 -->\n        {#elseif source.length > 0}\n        {#list source as item by item_index}\n        <tr ref=\"row{item_index}\"\n            class=\"kl-table-tbody-body__tr {item.rowClass || item.trClass}\"\n            style=\"{item.rowStyle || item.trStyle}\"\n            r-class={{\n                'is-hover': item._hover\n            }}\n            on-click={this._onRowClick($event, item, item_index)}\n            on-mouseover={this._onRowHover($event, item)}\n            on-mouseout={this._onRowBlur($event, item)} >\n            {#list _dataColumns as column by column_index}\n            <td class=\"kl-table-tbody-body-td kl-table-tbody-body__td {item.unitClass && item.unitStyle[item_index] || column.columnClass || column.tdClass}\"\n                style=\"{(item.unitStyle && item.unitStyle[item_index]) || column.columnStyle || column.tdStyle}\"\n                on-click={this._onUnitClick($event, item, item_index, column, column_index)}\n                r-style={{\n                    'text-align': column.align || align\n                }}\n            >\n                <div class=\"kl-table-tbody-body-td__div\">\n                    {#if column.template}\n                        {#include column.template}\n                    {#elseif column.formatter}\n                        {#include this._getFormatter(column, item)}\n                    {#elseif column.format}\n                        {#include this._getFormat(column)}\n                    {#elseif column.type}\n                        {#include this._getTypeTemplate(column)}\n                    {#else}\n                    <!-- deafult template -->\n                        <span class=\"f-ellipsis {column.lineClamp || lineClamp ? 'f-line-clamp-' + (column.lineClamp || lineClamp) : 'f-line-clamp-3'}\" title={this._filter(column, item[column.key], item, item_index)}>{this._filter(column, item[column.key], item, item_index) | placeholder: column, this}</span>\n                    {/if}\n                    {#if column.expandable}\n                    <span class=\"u-expand-sign f-cursor-pointer\"\n                        on-click={this._onExpand(item, item_index, column)}>\n                        {item | expandSign}\n                    </span>\n                    {/if}\n                </div>\n            </td>\n            {/list}\n        </tr>\n\n        <!-- 下钻内容 -->\n        {#if item.expand}\n        <tr class=\"kl-table-tbody-body__tr kl-table-tbody-body--trExpand\"\n            r-style={{\n                height: item._expandHeight + 'px'\n            }}\n        >\n            <td\n                class=\"{column.tdClass}\"\n                colspan={_dataColumns.length}>\n                <!-- {#if !fixedCol} -->\n                    <!-- {#include item._expanddingColumn.expandTemplate} -->\n                <!-- {/if} -->\n            </td>\n        </tr>\n        {/if}\n        {/list}\n\n        <!-- 空内容 -->\n        {#else}\n        <tr class=\"kl-table-tbody-body__tr\">\n            <td class=\"kl-table-tbody-body__td\" colspan={_dataColumns.length}>\n                <span class=\"kl-table-tbody-body__td--empty\">{this.$trans('NO_DATA')}</span>\n            </td>\n        </tr>\n        {/if}\n    </tbody>\n</table>\n"

/***/ }),
/* 541 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _ = __webpack_require__(69);

var tplMap = {
  progress: __webpack_require__(542),
  check: __webpack_require__(543)
};

exports.get = function getTemplate(type) {
  return _.convertBeginEnd(tplMap[type] || '');
};

/***/ }),
/* 542 */
/***/ (function(module, exports) {

module.exports = "{#if this._isArray(item[column.key])}\n    {#list item[column.key] as value by value_index}\n        <div class=\"u-progress-wrap\">\n            <kl-progress percent={value} />\n            {#if !column.hideProressValue}<span>{value}</span>{/if}\n        </div>\n    {/list}\n{#else}\n    <div class=\"u-progress-wrap\">\n        <kl-progress percent={item[column.key]} />\n        {#if !column.hideProressValue}<span>{item[column.key]}</span>{/if}\n    </div>\n{/if}\n"

/***/ }),
/* 543 */
/***/ (function(module, exports) {

module.exports = "<kl-check\n    name={item && item[column.key] | placeholder : column, this}\n    checked={item._checked}\n    on-change={this._onItemCheckChange(item, $event)}/>"

/***/ }),
/* 544 */
/***/ (function(module, exports) {

module.exports = "<div class=\"kl-table-wrap\"\n    ref=\"tableWrap\"\n    r-hide={!show}>\n    <!-- 列表拖动标尺 -->\n    <div ref=\"resizeProxy\" class=\"kl-table-wrap__resizeProxy\" />\n\n    <!-- 表格主体 -->\n    <div ref=\"table\"\n        class=\"kl-table\"\n        r-class={{\n            'kl-table--fixedHeader': fixedHeader,\n            'kl-table--strip': strip\n        }}\n        r-style={{\n            height: fixedHeader ? 'auto' : height + 'px',\n            width: width == undefined ? 'auto' :\n                  ((tableWidth > width ? width : width + scrollYBarWidth) + 'px'),\n        }}\n        on-scroll={this._onBodyScroll(this.$refs.table, $event)} >\n\n        <div ref=\"headerWrap\"\n            class=\"kl_table_header kl-table__header\"\n            r-class={{\n                'kl-table__header--sticky': stickyHeader && stickyHeaderActive,\n                'f-overflow-hidden': stickyFooter\n            }}\n            r-style={{\n                width: stickyHeader && stickyHeaderActive ? parentWidth + 'px' : 'auto',\n                top: stickyHeader && stickyHeaderActive ? stickyHeaderOffset + 'px' : 0\n            }}>\n            <table-header\n                ref=\"tableHeader\"\n                stickyHeader={stickyHeader}\n                _dataColumns={_dataColumns}\n                headers={headers}\n                resizePorxy={this.$refs.resizeProxy}\n                fixedHeader={fixedHeader}\n                height={headerHeight}\n                width={tableWidth}\n                columns={columns}\n                source={source}\n                sorting={sorting}\n                scrollYBarWidth={scrollYBarWidth}\n                checkAll={checkAll}\n                align={align}\n                placeholder={placeholder}\n                on-customevent={this._onCustomEvent($event)}\n                on-columnresize={this._onColumnResize($event)}\n                on-sort={this._onSort($event)}/>\n        </div>\n\n        <div class=\"kl-table__header--placeholder\"\n            r-style={{\n                height: stickyHeader && stickyHeaderActive ? headerHeight + 'px' : 0\n            }}/>\n\n        <div ref=\"bodyWrap\"\n            class=\"kl-table__body\"\n            r-class={{\n                'kl-table__body--fixedHeader': fixedHeader,\n                'f-overflow-hidden': !isMobile && stickyFooter\n            }}\n            r-style={{\n                'max-height': !fixedHeader || bodyHeight == undefined ? 'auto' : bodyHeight + 'px',\n            }}\n            on-scroll={this._onBodyScroll(this.$refs.bodyWrap, $event)} >\n            <table-body\n                ref=\"tableBody\"\n                _dataColumns={_dataColumns}\n                loading={loading}\n                fixedHeader={fixedHeader}\n                height={bodyHeight}\n                width={tableWidth}\n                lineClamp={lineClamp}\n                columns={columns}\n                sorting={sorting}\n                source={source}\n                scrollYBarWidth={scrollYBarWidth}\n                align={align}\n                placeholder={placeholder}\n                on-checkchange={this._onItemCheckChange($event)}\n                on-customevent={this._onCustomEvent($event)}\n                on-expand={this._onExpand($event)}/>\n        </div>\n    </div>\n\n    <!-- 左固定列 -->\n    {#if fixedColLeft }\n    <div ref=\"tableFixedLeft\"\n        class=\"kl-table kl-table-fixed\"\n        r-class={{\n            'kl-table--hover': enableHover,\n            'kl-table--strip': strip\n        }}\n        r-style={{\n            bottom: scrollXBarWidth + 'px',\n            width: fixedTableWidth + 'px'\n        }}>\n        <div ref=\"headerWrapFixedLeft\"\n            class=\"kl-table__header\"\n            r-class={{\n                'kl-table__header--sticky': stickyHeader && stickyHeaderActive\n            }}\n            r-style={{\n                width: fixedTableWidth + 'px',\n                top: stickyHeader && stickyHeaderActive ? stickyHeaderOffset + 'px' : 0\n            }} >\n            <table-header\n                ref=\"tableHeaderFixedLeft\"\n                _dataColumns={_dataColumns}\n                headers={headers}\n                fixedCol\n                fixedHeader={fixedHeader}\n                height={headerHeight}\n                width={tableWidth}\n                columns={columns}\n                sorting={sorting}\n                source={source}\n                scrollYBarWidth={scrollYBarWidth}\n                checkAll={checkAll}\n                align={align}\n                placeholder={placeholder}\n                on-customevent={this._onCustomEvent($event)}\n                on-columnresize={this._onColumnResize($event)}\n                on-sort={this._onSort($event)}/>\n        </div>\n\n        <div class=\"kl-table__header--placeholder\"\n            r-style={{\n                height: stickyHeader && stickyHeaderActive ? headerHeight + 'px' : 0\n            }} />\n\n        <div ref=\"bodyWrapFixedLeft\"\n            class=\"kl-table__body\"\n            r-style={{\n                width: fixedTableWidth + 'px',\n                'max-height': bodyHeight == undefined ? 'auto' : bodyHeight - scrollXBarWidth + 'px'\n            }}>\n            <table-body\n                ref=\"tableBodyFixed\"\n                _dataColumns={_dataColumns}\n                loading={loading}\n                fixedCol\n                fixedHeader={fixedHeader}\n                height={bodyHeight}\n                width={tableWidth}\n                lineClamp={lineClamp}\n                columns={columns}\n                sorting={sorting}\n                source={source}\n                scrollYBarWidth={scrollYBarWidth}\n                align={align}\n                placeholder={placeholder}\n                on-checkchange={this._onItemCheckChange($event)}\n                on-customevent={this._onCustomEvent($event)}\n                on-expand={this._onFixedExpand($event)}/>\n        </div>\n    </div>\n    {/if}\n\n\n    <!-- 右固定列 -->\n    {#if fixedColRight }\n    <div ref=\"tableFixedRight\"\n        class=\"kl-table kl-table-fixed kl-table-fixedRight\"\n        r-class={{\n            'kl-table--hover': enableHover,\n            'kl-table--stript': strip\n        }}\n        r-style={{\n            bottom: scrollXBarWidth + 'px',\n            right: fixedTablePosRight + 'px',\n            width: fixedTableWidthRight + 'px',\n        }}>\n        <div ref=\"headerWrapfixedTablePosRight\"\n            class=\"kl-table__header kl-table-fixed__header\"\n            r-class={{\n                'kl-table__header--sticky': stickyHeader && stickyHeaderActive\n            }}\n            r-style={{\n                width: fixedTableWidthRight + 'px',\n                top: stickyHeader && stickyHeaderActive ? stickyHeaderOffset + 'px' : 0\n            }}\n            >\n            <table-header ref=\"tableHeaderFixedRight\"\n                _dataColumns={_dataColumns}\n                headers={headers}\n                fixedCol=\"right\"\n                fixedHeader={fixedHeader}\n                height={headerHeight}\n                width={tableWidth}\n                columns={columns}\n                sorting={sorting}\n                source={source}\n                scrollYBarWidth={scrollYBarWidth}\n                align={align}\n                checkAll={checkAll}\n                placeholder={placeholder}\n                marginLeft={tableWidth - fixedTableWidthRight}\n                on-customevent={this._onCustomEvent($event)}\n                on-columnresize={this._onColumnResize($event)}\n                on-sort={this._onSort($event)}/>\n        </div>\n\n        <div class=\"kl-table__header--placeholder\"\n            r-style={{\n                height: stickyHeader && stickyHeaderActive ? headerHeight + 'px' : 0\n            }} />\n\n        <div ref=\"bodyWrapFixedRight\"\n            class=\"kl-table__body kl-table-fixed__body\"\n            r-style={{\n                width: fixedTableWidthRight,\n                'max-height': bodyHeight == undefined ? 'auto' : bodyHeight - scrollXBarWidth + 'px'\n            }}>\n            <table-body ref=\"tableBodyFixedRight\"\n                _dataColumns={_dataColumns}\n                loading={loading}\n                fixedCol=\"right\"\n                fixedHeader={fixedHeader}\n                marginLeft={tableWidth - fixedTableWidthRight}\n                height={bodyHeight}\n                width={tableWidth}\n                lineClamp={lineClamp}\n                columns={columns}\n                sorting={sorting}\n                source={source}\n                scrollYBarWidth={scrollYBarWidth}\n                align={align}\n                placeholder={placeholder}\n                on-checkchange={this._onItemCheckChange($event)}\n                on-customevent={this._onCustomEvent($event)}\n                on-expand={this._onFixedExpand($event)}/>\n        </div>\n    </div>\n    <div class=\"kl-table-header-gutter-fixedRight\"\n        r-style={{\n            width: scrollYBarWidth + 'px',\n            height: headerHeight + 'px',\n            right: fixedTablePosRight - scrollYBarWidth + 'px',\n            top: 0\n        }}/>\n    {/if}\n\n    {#list source as item by item_index}\n        {#if item.expand && item._expanddingColumn}\n            <div ref='expand{item_index}'\n              class=\"kl-table-header-gutter-fixedRight--expand\"\n              r-style={{\n                top: this._getExpandRowTop(item_index) + 'px',\n              }}\n            >\n                {#include item._expanddingColumn.expandTemplate}\n            </div>\n        {/if}\n    {/list}\n\n</div>\n\n<div class=\"kl-table-footer-placeholder\"\n    r-style={{\n        height: stickyFooter && stickyFooterActive ? footerHeight + 'px' : 0\n    }}\n/>\n<div class=\"kl-table-ft\"\n    ref=\"footerWrap\"\n    r-class={{\n        'kl-table-ft--sticky': stickyFooter && stickyFooterActive\n    }}\n    r-style={{\n        bottom: stickyFooter && stickyFooterActive ? stickyFooterOffset + 'px' : 0\n    }}\n>\n    {#if !isMobile && stickyFooter}\n    <div ref=\"scrollBar\"\n        class=\"kl-table-ft__scrollBar\"\n        r-style={{\n            width: width + 'px'\n        }}\n        on-scroll={this._onBodyScroll(this.$refs.scrollBar, $event)} >\n        <div r-style={{ width: tableWidth + 'px' }} />\n    </div>\n    {/if}\n\n    <!-- 读取内嵌模版, 非KLTable组件会直接显示在footer上 -->\n    {#include this.$body}\n\n    {#if paging}\n    <kl-pager\n        position={paging.position || 'right'}\n        pageSize={paging.pageSize}\n        step={paging.step}\n        maxPageSize={paging.maxPageSize}\n        disabled={paging.disabled}\n        middle={paging.middle}\n        side={paging.side}\n        current={paging.current}\n        sumTotal={paging.sumTotal}\n        total={paging.total}\n        on-select={this._onPaging($event)}/>\n    {/if}\n</div>\n"

/***/ }),
/* 545 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Component = __webpack_require__(1);
var _ = __webpack_require__(2);
var KLTableTemplate = __webpack_require__(247);
var KLTable = __webpack_require__(246);

/**
 * @class KLTableCol
 * @extend Component
 * @param {object}      [options.data]                  = 绑定属性
 * @param {string}      [options.data.name]             => 表头名称
 * @param {string}      [options.data.key]              => 列属性字段
 * @param {string}      [options.data.tip]              => 提示信息
 * @param {string}      [options.data.type]             => 列内容的预设类型
 * @param {string}      [options.data.width]            => 列宽
 * @param {number}      [optiosn.data.minWidth]         => 最小列宽，不设置时取全局值 minColWidth，拖动改变列宽后会被设置
 * @param {string}      [options.data.columnClass]      => 列内容样式
 * @param {string}      [options.data.headerClass]      => 表头样式
 * @param {boolean}     [options.data.sortable]         => 可排序
 * @param {string}      [options.data.children]         => 子表头
 * @param {boolean|string} [options.data.fixed]         => 列固定开关，默认left为做固定，right为右固定
 * @param {string}      [optiosn.data.align='']         => 列文字对齐
 * @param {string}      [optiosn.data.placeholder='-']  => 列文字对齐

 * @param {string}      [options.data.template]         => 列内容模版
 * @param {string}      [options.data.headerTemplate]   => 列表头模版
 * @param {string}      [options.data.expandTemplate]   => 下钻展开内容模版
 */
var KLTableCol = Component.extend({
  name: 'kl-table-col',
  template: '<div ref="bodyContainer" style="display:none">{#include this.$body}</div>',
  config: function config(data) {
    this.defaults({
      _innerColumns: [],
      colSpan: 1,
      custom: data,
      columnData: {},
      outerColumns: []
    });
  },
  init: function init() {
    this._register();
  },
  _register: function _register() {
    var outer = this.$outer;
    if (outer instanceof KLTable) {
      this._register2Table();
    } else if (outer instanceof KLTableCol) {
      this._register2TableCol();
    }
  },
  _register2Table: function _register2Table() {
    var _outer = this.$outer;
    this.data.outerColumns = _outer.data.columns;
    this._push2Columns(_outer.data.columns);
  },
  _register2TableCol: function _register2TableCol() {
    var _outer = this.$outer;
    this.data.outerColumns = _outer.data._innerColumns;
    this._push2Columns(_outer.data._innerColumns);
  },
  _push2Columns: function _push2Columns(columns) {
    var data = this.data;
    var index = +data.index;

    data.columnData = this.createColumnData(data);

    if (columns) {
      var insertIndex = -1;
      columns.some(function (item, i) {
        if (index < item.index) {
          insertIndex = i;
          return true;
        }
        return false;
      });
      if (insertIndex !== -1) {
        columns.splice(insertIndex, 0, data.columnData);
      } else {
        columns && columns.push(data.columnData);
      }
    }
  },
  createColumnData: function createColumnData(data) {
    return _.extend({
      name: data.name,
      key: data.key,
      index: +data.index,
      type: data.type,
      width: +data.width,
      minWidth: +data.minWidth,
      tip: data.tip,
      tdClass: data.tdClass,
      thClass: data.thClass,
      sortable: data.sortable,
      expandable: data.expandable,
      children: data._innerColumns,
      align: data.align,
      fixed: data.fixed,

      filter: data.filter,
      template: data._template || data.template,
      formatter: data.formatter,
      format: data.format,
      headerTemplate: data._headerTemplate || data.headerTemplate,
      headerFormatter: data.headerFormatter,
      headerFormat: data.headerFormat,
      expandTemplate: data._expandTemplate
    }, data.custom);
  },
  destroy: function destroy() {
    var data = this.data;
    var index = data.outerColumns.indexOf(data.columnData);
    data.outerColumns.splice(index, 1);
    this.supr();
  }
}).component('kl-table-tempalte', KLTableTemplate);

module.exports = KLTableCol;

/***/ }),
/* 546 */
/***/ (function(module, exports) {

module.exports = "{#if type === 'flex'}\n<div class=\"kl-row kl-row--flex is-justify-{justify} is-align-{align} is-flex-{wrap} {class}\" gutter=\"{gutter}\">\n  {#inc this.$body}\n</div>\n{#else}\n<div class=\"kl-row {class}\" gutter=\"{gutter}\">\n  {#inc this.$body}\n</div>\n{/if}"

/***/ }),
/* 547 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _keys = __webpack_require__(20);

var _keys2 = _interopRequireDefault(_keys);

var _typeof2 = __webpack_require__(45);

var _typeof3 = _interopRequireDefault(_typeof2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * ------------------------------------------------------------
 * KLCol 栅格布局-列
 * ------------------------------------------------------------
 */

var Component = __webpack_require__(1);
var template = __webpack_require__(548);
var KLRow = __webpack_require__(248);

/**
 * @class KLCol
 * @extend Component
 * @param {object}          [options.data]                        => 绑定数据
 * @param {string}          [options.data.class]                  => 补充class
 * @param {number}          [options.data.span='']              => 栅格占据的列数
 * @param {number}          [options.data.offset='']            => 栅格左侧的间隔格数
 * @param {number/object}   [options.data.xs='']                => <768px 响应式栅格数或者栅格属性对象, number/object (例如： {span: 4, offset: 4})
 * @param {number/object}   [options.data.sm='']                => ≥768px 响应式栅格数或者栅格属性对象, number/object (例如： {span: 4, offset: 4})
 * @param {number/object}   [options.data.md='']                => ≥992 响应式栅格数或者栅格属性对象, number/object (例如： {span: 4, offset: 4})
 * @param {number/object}   [options.data.lg='']                => ≥1200 响应式栅格数或者栅格属性对象, number/object (例如： {span: 4, offset: 4})
 */
var KLCol = Component.extend({
  name: 'kl-col',
  template: template,
  config: function config(data) {
    this.defaults({
      span: '',
      offset: '',
      xs: '',
      sm: '',
      md: '',
      lg: ''
    });

    var $outer = this;
    do {
      if ($outer.$outer) {
        $outer = $outer.$outer;
      } else if ($outer.$parent) {
        $outer = $outer.$parent;
      }
    } while (!($outer instanceof KLRow) && ($outer.$outer || $outer.$parent));

    if ($outer && $outer instanceof KLRow) {
      var outerGutter = $outer.data.gutter;
      if (!this.data.gutter && this.data.gutter !== 0) {
        this.data.gutter = outerGutter;
      }
    }

    this.supr(data);
  }
});

KLCol.directive('gutter', function (ele, value) {
  this.$watch(value, function (gutter) {
    if (gutter || gutter === 0) {
      var padding = gutter / 2 + 'px';
      ele.style.paddingLeft = padding;
      ele.style.paddingRight = padding;
    }
  });
});

KLCol.directive('mediaSize', function (ele) {
  var self = this;
  ['xs', 'sm', 'md', 'lg'].forEach(function (size) {
    if (parseInt(self.data[size])) {
      ele.classList.add('kl-col-' + size + '-' + self.data[size]);
    } else if ((0, _typeof3.default)(self.data[size]) === 'object') {
      var props = self.data[size];
      (0, _keys2.default)(props).forEach(function (prop) {
        ele.classList.add(prop !== 'span' ? 'kl-col-' + size + '-' + prop + '-' + props[prop] : 'kl-col-' + size + '-' + props[prop]);
      });
    }
  });
});

module.exports = KLCol;

/***/ }),
/* 548 */
/***/ (function(module, exports) {

module.exports = "<div class=\"kl-col kl-col-{span} kl-col-offset-{offset} {class}\" gutter=\"{gutter}\" mediaSize>\n  {#inc this.$body}\n</div>\n"

/***/ }),
/* 549 */
/***/ (function(module, exports) {

module.exports = "<div class=\"kl-card {class}\" r-class=\"{{'m-card--indent' : isIndent === true,'kl-card--show-border': bordered == true,'kl-card--dishover': disHover == true}}\">\n    {#if title || this.$tools}\n        <div class=\"kl-card-header\">\n            <!--{#if isShowLine}-->\n            <!--<span class=\"kl-card-header__line\"></span>-->\n            <!--{/if}-->\n            <span class=\"kl-card-header__title\">{#inc title}</span>\n            {#if this.$tools}\n            <div class=\"kl-card-header__operate\">\n                {#inc this.$tools.$body}\n            </div>\n            {/if}\n        </div>\n        {#if isShowBtLine}\n        <div class=\"kl-card__btLine\"></div>\n        {/if}\n    {/if}\n    <div class=\"kl-card__body\">\n        {#inc this.$body}\n    </div>\n</div>\n"

/***/ }),
/* 550 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * ------------------------------------------------------------
 * KLCardTools     卡片组件上的操作区域
 * @author   zianecui@gmail.com
 * ------------------------------------------------------------
 */

var Component = __webpack_require__(1);
var _ = __webpack_require__(2);
var KLCard = __webpack_require__(249);

/**
 * @class KLCardTools
 * @extend Component
 * @param {object}          [options.data]                    = 绑定属性
 * @param {string}          [options.data.class]              => 补充class
 */
var KLCardTools = Component.extend({
  name: 'kl-card-tools',
  /**
     * @protected
     */
  config: function config() {
    _.extend(this.data, {});
    this.supr();

    if (this.$outer && this.$outer instanceof KLCard) {
      this.$outer.$tools = this;
    }
  }
});

module.exports = KLCardTools;

/***/ }),
/* 551 */
/***/ (function(module, exports) {

module.exports = "<div class=\"{class}\">\n    {#inc this.$body}\n    {#if this.$more && isShowMore}\n        <!--添加一层div，防止两个g-row样式并列导致marginTop-->\n        <div>\n            {#inc this.$more.$body}\n        </div>\n    {/if}\n    {#if isShowFooter}\n    <div class=\"kl-search-ft\">\n        <div class=\"kl-search-ft__wrap\">\n            <kl-button type=\"primary\" title={searchText} on-click={this.search()} class=\"kl-search-ft__wrap-btn\"></kl-button>\n            <kl-button title={resetText} on-click={this.reset()}></kl-button>\n            <span class=\"kl-search-ft__wrap-tips\">{#inc tip}</span>\n        </div>\n        {#if this.$more && isShowToggle}\n            <a href=\"javascript: void(0);\" on-click={this.toggle()} class=\"f-ml10\">\n                {toggleText}<kl-icon type=\"arrow-{isShowMore ? 'up' : 'down'}\"  />\n            </a>\n        {/if}\n    </div>\n    {/if}\n</div>\n"

/***/ }),
/* 552 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * ------------------------------------------------------------
 * KLSearchMore     筛选区的更多区域
 * ------------------------------------------------------------
 */

var Component = __webpack_require__(1);
var _ = __webpack_require__(2);
var KLSearch = __webpack_require__(250);

/**
 * @class KLSearchMore
 * @extend Component
 * @param {object}          [options.data]                    = 绑定属性
 * @param {string}          [options.data.class]              => 补充class
 */
var KLSearchMore = Component.extend({
  name: 'kl-search-more',
  /**
     * @protected
     */
  config: function config() {
    _.extend(this.data, {});
    this.supr();

    if (this.$outer && this.$outer instanceof KLSearch) {
      this.$outer.$more = this;
    }
  }
});

module.exports = KLSearchMore;

/***/ }),
/* 553 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * ------------------------------------------------------------
 * @file KLLayout 布局
 * @author mingmingcn.yang@gmail.com
 * ------------------------------------------------------------
 */

var Component = __webpack_require__(1);
var template = __webpack_require__(554);

/**
 * @class KLLayout
 * @extend Component
 * @param {string}           [options.direction]                        => 子元素排列方向，可选为horizontal/vertical
 * @param {boolean}          [options.isMaster]                         => 是否为主内容页面，与KLAside的showFold配合使用
 * @param {string}           [options.class]                        => class样式
 */

/**
 * @class KLHeader
 * @extend Component
 * @param {string}           [options.height]                           => 头部高度
 * @param {string}           [options.class]                        => class样式
 */

/**
 * @class KLFooter
 * @extend Component
 * @param {string}           [options.height]                           => 底部高度
 * @param {string}           [options.class]                        => class样式
 */

/**
 * @class KLAside
 * @extend Component
 * @param {string}           [options.width]                            => 侧栏宽度
 * @param {boolean}          [options.showFold]                         => 是否开启折叠功能，默认true
 * @param {boolean}          [options.active]                           => 若开启折叠功能，初始展开状态，默认true
 * @param {string}           [options.class]                        => class样式
 */

/**
 * @class KLMain
 * @extend Component
 * @param {boolean}          [options.isMaster]                         => 是否为主内容页面，与KLAside的showFold配合使用
 * @param {string}           [options.class]                        => class样式
 */

var KLLayout = Component.extend({
  name: 'kl-layout',
  template: template,
  config: function config() {
    this.defaults({
      direction: 'horizontal',
      isMaster: false,
      class: ''
    });

    this.supr();

    this.$outer && this.data.isMaster && (this.$outer.bodyEl = this);
  },

  computed: {
    isVertical: function isVertical() {
      var direction = this.data.direction;


      if (this.header || this.footer) {
        return true;
      }

      return direction === 'vertical';
    }
  }
});

module.exports = KLLayout;

/***/ }),
/* 554 */
/***/ (function(module, exports) {

module.exports = "<div class=\"kl-layout {class}\" r-class=\"{ { 'is-vertical': isVertical, 'is-master': isMaster } }\">\n    {#inc this.$body}\n</div>\n"

/***/ }),
/* 555 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * ------------------------------------------------------------
 * @file KLHeader 头部
 * @author mingmingcn.yang@gmail.com
 * ------------------------------------------------------------
 */

var Component = __webpack_require__(1);
var template = __webpack_require__(556);

/**
 * @class KLHeader
 * @extend Component
 * @param {string}           [options.height]                        => 头部高度
 * @param {string}           [options.class]                        => class样式

 */
var KLHeader = Component.extend({
  name: 'kl-header',
  template: template,
  config: function config() {
    this.defaults({
      class: '',
      height: '60px'
    });
    this.supr();

    this.$outer && (this.$outer.header = this);
  }
});

module.exports = KLHeader;

/***/ }),
/* 556 */
/***/ (function(module, exports) {

module.exports = "<header class=\"kl-header {class}\" r-style={ {height: height} }>\n    {#inc this.$body}\n</header>\n"

/***/ }),
/* 557 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * ------------------------------------------------------------
 * @file KLFooter 尾部
 * @author mingmingcn.yang@gmail.com
 * ------------------------------------------------------------
 */

var Component = __webpack_require__(1);
var template = __webpack_require__(558);

/**
 * @class KLFooter
 * @extend Component
 * @param {string}           [options.height]                        => 尾部高度
 * @param {string}           [options.class]                        => class样式
 */
var KLFooter = Component.extend({
  name: 'kl-footer',
  template: template,
  config: function config() {
    this.defaults({
      height: '60px',
      class: ''
    });

    this.supr();

    this.$outer && (this.$outer.header = this);
  }
});

module.exports = KLFooter;

/***/ }),
/* 558 */
/***/ (function(module, exports) {

module.exports = "<footer class=\"kl-footer {class}\" r-style={ {height: height} }>\n    {#inc this.$body}\n</footer>\n"

/***/ }),
/* 559 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * ------------------------------------------------------------
 * @file KLMain 内容区
 * @author mingmingcn.yang@gmail.com
 * ------------------------------------------------------------
 */

var Component = __webpack_require__(1);
var template = __webpack_require__(560);

/**
 * @class KLMain
 * @extend Component
 * @param {boolean}          [options.isMaster]                      => 是否为主内容页面，与KLAside的showFold配合使用
 * @param {boolean}          [options.left]                      => isMaster时, 定位left的距离设置
 * @param {boolean}          [options.class]                      => class属性
 */
var KLMain = Component.extend({
  name: 'kl-main',
  template: template,
  config: function config() {
    this.defaults({
      isMaster: false,
      left: '200px',
      class: ''
    });

    this.supr();

    this.$outer && this.data.isMaster && (this.$outer.bodyEl = this);
  }
});

module.exports = KLMain;

/***/ }),
/* 560 */
/***/ (function(module, exports) {

module.exports = "<main class=\"kl-main {class}\" r-class=\"{ { 'is-master': isMaster  } }\" r-style={{'left': left}}>\n    {#inc this.$body}\n</main>\n"

/***/ }),
/* 561 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * ------------------------------------------------------------
 * @file KLAside 侧边栏
 * @author mingmingcn.yang@gmail.com
 * ------------------------------------------------------------
 */

var Component = __webpack_require__(1);
var template = __webpack_require__(562);
var _ = __webpack_require__(2);

/**
 * @class KLAside
 * @extend Component
 * @param {string}           [options.width]                        => 侧栏宽度
 * @param {boolean}          [options.showFold]                     => 是否开启折叠功能，默认true
 * @param {boolean}          [options.active]                       => 若开启折叠功能，初始展开状态，默认他true

 */
var KLAside = Component.extend({
  name: 'kl-aside',
  template: template,
  config: function config() {
    this.defaults({
      width: '200px',
      showFold: true,
      active: true
    });
    this.supr();
  },
  initBodyEl: function initBodyEl() {
    if (this.data.showFold) {
      this.data.$bodyEl = _.dom.element(this.$outer.bodyEl);
      if (this.data.$bodyEl) {
        this.data.$bodyEl.style.transition = 'left .3s';
      }
    }
  },
  toggle: function toggle() {
    this.initBodyEl();

    this.data.active = !this.data.active;
    var width = this.data.width;

    if (this.data.$bodyEl) {
      this.data.$bodyEl.style.left = this.data.active ? width : '0';
    }

    /**
     * @event KLSidebar#toggle 收缩菜单时触发
     * @property {boolean} active 展开还是收缩
     */
    this.$emit('toggle', this.data.active);
  }
});

module.exports = KLAside;

/***/ }),
/* 562 */
/***/ (function(module, exports) {

module.exports = "<aside class=\"kl-aside\" r-style={ { width: width } } r-class={ {'is-active': active } }>\n    {#inc this.$body}\n\n  {#if showFold}\n  <div class=\"kl-sidebar-btn-wrap\" on-click=\"{this.toggle($event)}\" r-style={{ left: width }}>\n    {#if active}\n    <i class=\"kl-icon kl-icon-chevron_left\"></i>\n    <kl-icon fontSize=12 type=\"arrow-left\" />\n    {#else}\n    <kl-icon fontSize=12 type=\"arrow-right\" />\n    {/if}\n  </div>\n  {/if}\n</aside>\n"

/***/ }),
/* 563 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Component = __webpack_require__(1);
var _ = __webpack_require__(2);
var template = __webpack_require__(564);
var KLDrop = __webpack_require__(24);
var KLDropHeader = __webpack_require__(35);

var KLDropItem = Component.extend({
  name: 'kl-drop-item',
  template: template,
  config: function config() {
    _.extend(this.data, {});
    this.supr();
  },
  onClick: function onClick() {
    if (this.$outer && this.$outer instanceof KLDropHeader) {
      return;
    }

    // 找到kl-drop，设置他是否隐藏下拉；
    var $outer = this;
    do {
      if ($outer.$outer) {
        $outer = $outer.$outer;
      } else if ($outer.$parent) {
        $outer = $outer.$parent;
      }
    } while (!($outer instanceof KLDrop) && ($outer.$outer || $outer.$parent));
    $outer.$emit('on-item-click', this.id);

    $outer.data.isShow = false;
    // if (this.$outer && this.$outer.$outer && this.$outer.$outer instanceof KLDrop) {
    //   $outer = this.$outer.$tools;
    // }
    // console.log(this.$outer.$outer);
  }
});

module.exports = KLDropItem;

/***/ }),
/* 564 */
/***/ (function(module, exports) {

module.exports = "<li class=\"kl-dropdown-item\"\n    r-class=\"{{'kl-dropdown-item--disabled': disabled,'kl-dropdown-item--selected': selected,'kl-dropdown-item--divided': divided}}\"\n    on-click=\"{this.onClick()}\">\n    {#inc this.$body}\n</li>"

/***/ })
/******/ ]);
});
//# sourceMappingURL=nek-ui.js.map